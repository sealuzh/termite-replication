/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 20:52:26 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("#T n'<h9W");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getValueLabels();
      derivedVariable0.getForm();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("#T n'<h9W", derivedVariable0.getYear());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("5L`Lnn3w@|vm-CY=>r");
      supportingDocument1.setIdentifier(1312);
      derivedVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setColumnEnd((String) null);
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertNull(string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("oR<Js>v=|");
      derivedVariable1.setName("k");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("k", derivedVariable1.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("k");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("k");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("k", derivedVariable0.getName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("k");
      derivedVariable1.setYear("k");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("k", derivedVariable1.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4892387670604843
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.7541894537440816
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("`6R");
      rawVariable0.setLabel(";/7sD.<I)2Z!_Nt ");
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      rawVariable0.clone();
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) rawVariable0);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getSupportingDocuments();
      assertEquals("`6R", rawVariable0.getCleaningDescription());
      
      User user0 = new User("`6R", "");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Mh");
      derivedVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      derivedVariable0.setAvailability("");
      Variable.validateFields(derivedVariable0);
      assertEquals("Mh", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("k");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("k", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("k");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("k", derivedVariable1.getDisplayName());
      assertEquals("k", derivedVariable1.getName());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.notes.label";
      derivedVariable1.setName("k");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("k", derivedVariable1.getDisplayName());
      assertEquals("variable.notes.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.949646107185661
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("MD2;vGGjxtRr]");
      derivedVariable0.notes = "DUPLICATE_SUPPORTING_DOCUMENT";
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("fCe~OIi", "c^$v{er]o6");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.notes = "";
      derivedVariable0.getYear();
      derivedVariable0.getNotes();
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Mh");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Mh", "Mh");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Mh", derivedVariable0.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("variable.alternativeVariable.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.getName();
      assertEquals("variable.alternativeVariable.label", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      User user0 = new User();
      User user1 = new User("k", "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isCoded());
      
      derivedVariable0.getDisplayItemIdentifier();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Mh");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("Mh", derivedVariable0.getLabel());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.90401348012034
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.codeBookNumber = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setStatus((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      derivedVariable0.setCoded(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getFilePath();
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user1 = new User("w:s,~0Lt;xT0duP?b-", (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.9279631080996045
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnEnd = "U;)lzPN#2{,k39K";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("U;)lzPN#2{,k39K");
      ontologyTerm1.setIdentifier(95);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.getAlias();
      derivedVariable0.getColumnStart();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getAvailability();
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setCodeBookNumber("");
      derivedVariable0.getNotes();
      assertEquals("U;)lzPN#2{,k39K", derivedVariable0.getColumnEnd());
      
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", "variable.isCleaned.saveChanges.changedToNotClean");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.sort((Comparator<? super Variable>) null);
      rawVariable0.setCoded(true);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.isCoded();
      derivedVariable0.getIdentifier();
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
      
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCoded());
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.setQuestionNumber("");
      String string0 = rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCoded());
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("S-y6vIPjj+k!)^");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setLabel("S-y6vIPjj+k!)^");
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.7849864210925745
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setIdentifier((-560));
      derivedVariable0.createVariableSummary();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.getColumnStart();
      derivedVariable0.getForm();
      assertEquals((-560), derivedVariable0.getIdentifier());
      
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4696072829762055
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("variable.columnEnd.label", "variable.columnEnd.label");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setAlias("?9_I)W-R");
      derivedVariable0.getOntologyTerms();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlias();
      assertEquals("?9_I)W-R", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-248));
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setName("!WN^Gfh#I");
      Variable.validateFields(rawVariable0);
      rawVariable0.getDisplayName();
      assertEquals("!WN^Gfh#I", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.setName("0");
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      derivedVariable1.getName();
      derivedVariable0.getCategory();
      assertEquals("0", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.7015046708135313
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("Mh");
      rawVariable0.setColumnStart("}M<]D2$8>wG&Ml");
      rawVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.form = ",kv$@|PxAnX3^bi;7";
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("}M<]D2$8>wG&Ml", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.63481242673971
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setLabel("rq~r+2=ez");
      ontologyTerm0.setOntologyName("UNABLE_TO_ASSOCIATE_DOCUMENT");
      rawVariable0.questionNumber = "UNABLE_TO_GET_SOURCE_VARIABLES";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.notes = "variable.cleaningDescription.label";
      rawVariable0.getNotes();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable1.setLabel("variable.cleaningDescription.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.9851669310097333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.questionNumber = null;
      rawVariable0.getSupportingDocuments();
      rawVariable0.getForm();
      rawVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(45);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getIdentifier();
      String string0 = rawVariable0.getQuestionNumber();
      assertNull(string0);
      
      String string1 = rawVariable0.getLabel();
      assertNotNull(string1);
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      
      rawVariable0.getColumnStart();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getOntologyTerms();
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("k");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("k", derivedVariable0.getDisplayName());
      assertEquals("k", derivedVariable0.getName());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.663781123309887
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.211667659113366
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setIdentifier(815);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("815", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setIdentifier(815);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("815", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.getLabel();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "k";
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("k", derivedVariable1.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getForm();
      rawVariable0.setCleaned(false);
      rawVariable0.setForm("'BL\"-@Hyv#D%cs}K");
      rawVariable0.getCleaningStatus();
      rawVariable0.getColumnStart();
      rawVariable0.getCleaningStatus();
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("'BL\"-@Hyv#D%cs}K", rawVariable0.getForm());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnStart((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlias();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCleaned());
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Unknown");
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4977701847354576
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("UNABLE_TO_CHECK_DATABASE_EXISTS");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier((-2147483646));
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("-2147483646", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(3670);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getOntologyTerms();
      assertEquals("3670", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.604459368868876
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("variable.category.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("variable.category.label", "variable.category.label");
      User user1 = new User();
      derivedVariable0.getLabel();
      assertEquals("variable.category.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setCodeBookNumber("5&R");
      derivedVariable0.notes = "5&R";
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getCodeBookNumber();
      assertEquals("5&R", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.6283705736265013
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.columnStart.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getAlias();
      rawVariable0.clone();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("variable.columnStart.label", derivedVariable0.getYear());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = null;
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8821103874851657
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "user.postCode.saveChanges";
      rawVariable0.clone();
      rawVariable0.setFilePath("user.postCode.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getFilePath();
      assertEquals("user.postCode.saveChanges", rawVariable0.getFilePath());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      derivedVariable0.questionNumber = "!|@= tn3P";
      derivedVariable0.getFilePath();
      assertEquals("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("variable.name.label");
      rawVariable0.getFilePath();
      assertEquals("variable.name.label", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "[>5k bypY1$LjEMq<Q";
      derivedVariable0.setCodeBookNumber("[>5k bypY1$LjEMq<Q");
      derivedVariable0.getFilePath();
      derivedVariable0.getAlias();
      assertEquals("[>5k bypY1$LjEMq<Q", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCleaned();
      String string0 = "`LVl_C[*VC)";
      rawVariable0.setCleaningStatus("`LVl_C[*VC)");
      ArrayList<SupportingDocument> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Mh");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Mh", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("k");
      derivedVariable1.questionNumber = "k";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("k", derivedVariable1.getQuestionNumber());
      assertEquals("k", derivedVariable1.getName());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("fc*4~9Yp]K", "fc*4~9Yp]K");
      derivedVariable0.setAvailability("fc*4~9Yp]K");
      user0.setAddressLine2("fc*4~9Yp]K");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("fc*4~9Yp]K", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.6223850771891493
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "=&SIfu^g!c";
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "+m@{F";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setForm("d8$R");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getFilePath();
      assertEquals("d8$R", derivedVariable0.getForm());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("Mh");
      derivedVariable0.setLabel("Mh");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Mh", derivedVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.clone();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.setFilePath("");
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = null;
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(1, arrayList1.size());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      boolean boolean1 = derivedVariable0.containsSourceVariable(derivedVariable1);
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.2946911718967824
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2833);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable1.setColumnEnd("");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setIsNewRecord(true);
      User user0 = new User("ir]B2oD]Dx&@", "");
      rawVariable1.questionNumber = "";
      user0.setCity("valueLabel.value.saveChanges");
      user0.setAddressLine2("");
      user0.setAddressLine2("");
      rawVariable1.createVariableSummary();
      user0.setCity("");
      rawVariable1.setNotes("a\")$<(Bw:++iGgyqX");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      rawVariable1.getSupportingDocuments();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.isCoded();
      rawVariable0.getAlternativeVariable();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      derivedVariable0.containsSourceVariable(variable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setYear("NON_EXISTENT_ALIAS_FILE_PATH");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("NON_EXISTENT_ALIAS_FILE_PATH", derivedVariable0.getYear());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getName();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("blank");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("blank", derivedVariable0.getName());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("Mh");
      rawVariable0.getDisplayName();
      assertEquals("Mh", rawVariable0.getNotes());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("#tty18wj3");
      derivedVariable0.getNotes();
      assertEquals("#tty18wj3", derivedVariable0.getForm());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("}c(}%o(+$Oy2ja/[");
      rawVariable0.getNotes();
      assertEquals("}c(}%o(+$Oy2ja/[", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("supportingDocument.documentCode.saveChanges");
      rawVariable0.getColumnStart();
      assertEquals("supportingDocument.documentCode.saveChanges", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("4'7Yd/15N-)");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("4'7Yd/15N-)", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("UNABLE_TO_CREATE_CLEANING_STATE");
      rawVariable0.getYear();
      assertEquals("UNABLE_TO_CREATE_CLEANING_STATE", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertTrue(arrayList0.isEmpty());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("WLvqV&57^]~T@BX");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("WLvqV&57^]~T@BX", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("W\"");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("W\"", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.726634037681537
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("Z4nYxCvSSeD");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("_D[");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("_D[", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.9654211895134472
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("vBTr~m");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("vBTr~m", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("user.status.label");
      Variable.validateFields(rawVariable0);
      rawVariable0.getColumnStart();
      assertEquals("user.status.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("UNABLE_TO_GET_CATEGORY_NAME");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_GET_CATEGORY_NAME", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Mh");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Mh", derivedVariable0.getLabel());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("\"?5SDQ2");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("\"?5SDQ2", rawVariable0.getForm());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getForm();
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("3S:g,lU*Frc*-g;xq7");
      rawVariable0.clone();
      assertEquals("3S:g,lU*Frc*-g;xq7", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("D");
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("D", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("UNABLE_TO_DELETE_CATEGORY");
      derivedVariable0.clone();
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_DELETE_CATEGORY", derivedVariable0.getForm());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("UNABLE_TO_CLEAR_TABLE");
      derivedVariable0.getOntologyTerms();
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_CLEAR_TABLE", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "3RReRT&ibeh~";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("3RReRT&ibeh~", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getFilePath());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getForm());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("UNABLE_TO_VALIDATE_ADMINISTRATOR");
      rawVariable0.clone();
      assertEquals("UNABLE_TO_VALIDATE_ADMINISTRATOR", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("tM^x!p2;efjV%");
      Variable.validateFields(rawVariable0);
      assertEquals("tM^x!p2;efjV%", rawVariable0.getAlias());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("fc*4~9Yp]K");
      rawVariable0.getColumnStart();
      assertEquals("fc*4~9Yp]K", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("Unknown");
      rawVariable0.setFilePath("Unknown");
      rawVariable0.getLabel();
      assertEquals("Unknown", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }
}
