/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 20:25:50 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4001443355569787
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      archiveScanner0.scan();
      archiveScanner0.haveSlowResults = true;
      archiveScanner0.processDirectory(improvedFile0, "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", false);
      assertEquals("CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", improvedFile0.getName());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ";
      stringArray0[1] = "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ";
      stringArray0[2] = "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ";
      stringArray0[3] = "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ";
      stringArray0[4] = "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ";
      stringArray0[5] = "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", false);
      assertEquals("/home/ubuntu/termite/projects/78_caloriecount/CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", improvedFile0.getParent());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("iO&:ou,L", "iO&:ou,L");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "iO&:ou,L";
      stringArray0[1] = "iO&:ou,L";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[2] = "iO&:ou,L";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.processArchive(improvedFile0, "iO&:ou,L");
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("iO&:ou,L", "iO&:ou,L");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "iO&:ou,L";
      stringArray0[1] = "iO&:ou,L";
      stringArray0[2] = "iO&:ou,L";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<String> vector0 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "iO&:ou,L");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ", "oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      MockFile.createTempFile("oNJ", "oNJ");
      archiveScanner0.scan();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "oNJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ", "oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "oNJ", false);
      try { 
        archiveScanner0.processArchive(improvedFile0, "oNJ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/oNJ/oNJ
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("iO&:ou,L", "iO&:ou,L");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String string0 = ".war";
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("iO&:ou,zL");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = true;
      improvedFile0.setExecutable(boolean0, boolean0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[22];
      String string0 = ".jar";
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "iO&:ou,L";
      ImprovedFile improvedFile0 = new ImprovedFile("iO&:ou,L", "iO&:ou,L");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String string1 = ".war";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string1, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ", "oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "oNJ", true);
      assertEquals(0L, improvedFile0.getFreeSpace());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "USA<'Xj}ftOz+57Fm$";
      ImprovedFile improvedFile0 = new ImprovedFile("USA<'Xj}ftOz+57Fm$", "USA<'Xj}ftOz+57Fm$");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.getAbsoluteFile();
      improvedFile0.makeDirectories();
      boolean boolean0 = true;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.scandir(improvedFile0, "USA<'Xj}ftOz+57Fm$", true);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
      assertEquals(0L, improvedFile0.getFreeSpace());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4187591973137939
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      archiveScanner0.scan();
      File file0 = MockFile.createTempFile("USA<'Xj}ftOz+57Fm$", "USA<'Xj}ftOz+57Fm$");
      try { 
        archiveScanner0.processDirectory(file0, "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /tmp/USA<'Xj}ftOz+57Fm$0USA<'Xj}ftOz+57Fm$
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("iO&:ou,zL");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "iO&:ou,zL";
      stringArray0[1] = "iO&:ou,zL";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = "ror.";
      stringArray0[3] = "iO&:ou,zL";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray1 = new String[22];
      stringArray1[0] = "iO&:ou,zL";
      archiveScanner0.includes = stringArray1;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("iO&:ou,zL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4223665577792008
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      archiveScanner0.scan();
      improvedFile0.createTempDir();
      archiveScanner0.processDirectory(improvedFile0, "CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", false);
      assertEquals("/home/ubuntu/termite/projects/78_caloriecount/CTUe{#Y*R\"y~S_4Error trying to create temp file for entry ", improvedFile0.getParent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("iO&:ou,zL");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<MockFileInputStream> vector0 = new Vector<MockFileInputStream>(0);
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("iO&:ou,zL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0910596228402674
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("o=J", "o=J");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.processFile("o=J");
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ", "oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile0.basicMakeDirectories(archiveScanner0.basedir);
      archiveScanner0.scan();
      archiveScanner0.processFile("oNJ");
      int int0 = ArchiveScanner.DIRECTORY;
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ", "oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.addDefaultExcludes();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".ZIP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("^g&V");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile("^g&V", "^g&V", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "^g&V", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ", "oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      MockFile.createTempFile("oNJ", "oNJ");
      String string0 = "1.rV.}.jar";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.setBasedir("1.rV.}.jar");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      int int0 = ArchiveScanner.ARCHIVE;
      archiveScanner0.processArchive(improvedFile0, "1.rV.}.jar");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "USA<'XRzj}ftOz+57Fm$";
      ImprovedFile improvedFile0 = new ImprovedFile("USA<'XRzj}ftOz+57Fm$", "USA<'XRzj}ftOz+57Fm$");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.getAbsoluteFile();
      improvedFile0.makeDirectories();
      boolean boolean0 = false;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
      assertTrue(improvedFile0.isDirectory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("U_<Xjhf+R,!");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile("U_<Xjhf+R,!", "U_<Xjhf+R,!", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "U_<Xjhf+R,!", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7552281225441584
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ", "oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.basedir = (File) improvedFile0;
      MockFile.createTempFile("oNJ", "oNJ");
      String string0 = "1.rV.}.jar";
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.toFileType(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("*9m:`J/=PE?ja6CT#", "*9m:`J/=PE?ja6CT#");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "*9m:`J/=PE?ja6CT#", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("oNJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("a|Y)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("=O");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "a|Y)";
      ImprovedFile improvedFile0 = new ImprovedFile("a|Y)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, string0, boolean0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/a|Y)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "U_A<3Xj}f&Oz+57F,$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("U_A<3Xj}f&Oz+M7F,$");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "U_A<3Xj}f&Oz+M7F,$");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, U_A<3Xj}f&Oz+M7F,$
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
