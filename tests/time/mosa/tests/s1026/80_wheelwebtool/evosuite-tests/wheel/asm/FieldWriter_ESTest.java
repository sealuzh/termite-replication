/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 09:49:27 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5223297919936516
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      String string0 = "$Ab)<hH0BI3X#Y2m";
      String string1 = "qLg*";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5162, "$Ab)<hH0BI3X#Y2m", "$Ab)<hH0BI3X#Y2m", "$Ab)<hH0BI3X#Y2m", "qLg*");
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "HZBBUe4vv*jI", "qLg*", "wheel.asm.ClassAdapter", "qLg*");
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector1 = classWriter0.pool;
      fieldWriter1.put(byteVector1);
      ByteVector byteVector2 = byteVector0.put11(2, (-2641));
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector0);
      fieldWriter1.getSize();
      fieldWriter1.put(byteVector1);
      byteVector2.putByteArray((byte[]) null, 24, (-747));
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter1.visitAnnotation("", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.405592894292571
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5162, "$Ab)<hH0BI3X#Y2m", "$Ab)<hH0BI3X#Y2m", "$Ab)<hH0BI3X#Y2m", "qLg*");
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "HZBBUe4vv*jI", "qLg*", "wheel.asm.ClassAdapter", "qLg*");
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector1 = classWriter0.pool;
      fieldWriter1.put(byteVector1);
      ByteVector byteVector2 = byteVector0.put11(2, (-2641));
      fieldWriter0.put(byteVector2);
      fieldWriter1.getSize();
      byteVector2.putByteArray((byte[]) null, 24, (-747));
      fieldWriter0.getSize();
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter0, 1, "(~TD%iAj:", "qLg*", "$Ab)<hH0BI3X#Y2m", byteVector2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.lastMethod = null;
      classWriter0.visit(5162, 5162, "", "", "%untimeVisibleAnnotati>n&", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5162, "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3287760798752508
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5183);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5183, "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(5183, 5183, "`>9T{=t3oKb>Y=7p4", "%untimeVisibleAnnotati>n&", "", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimevisibleAnnotatons", "RuntimevisibleAnnotatons", "}TO{djJK^n, YfS", "RuntimevisibleAnnotatons");
      Attribute attribute0 = new Attribute("}TO{djJK^n, YfS");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5162, "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-429);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "ExceptiN7ons", "ExceptiN7ons", "ExceptiN7ons", "ExceptiN7ons");
      Attribute attribute0 = new Attribute("ExceptiN7ons");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131073);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131073, "@3", "@3", "@3", "@3");
      fieldWriter0.visitAnnotation("@3", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "}sQHimWN7SK9AZ=6#", "}sQHimWN7SK9AZ=6#", "}sQHimWN7SK9AZ=6#", "}sQHimWN7SK9AZ=6#");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(171);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Signature", "Signature", "Signature", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5145);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "cpS[", "cpS[", "cpS[", "cpS[");
      fieldWriter0.visitAnnotation("cpS[", true);
      ByteVector byteVector0 = new ByteVector(5145);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3590669121050878
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Item item0 = new Item();
      classWriter0.newFloat((-1));
      classWriter0.index = (-2355);
      item0.set(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.addUninitializedType("8Kbz&X|6w~:WL;MJgFX", 2);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putShort(2);
      byteVector0.putInt(4);
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector2);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131073);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131073, "@", "@", (String) null, "@");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", "%untimeVisibleAnnotati>n&", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131073);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "$@3,5", "$@3,5", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@7d0a0988
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131073);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131073, "Run)AmevisibleAnnmtatons", "Run)AmevisibleAnnmtatons", "Run)AmevisibleAnnmtatons", "Run)AmevisibleAnnmtatons");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131059);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131059, "Synthetic", "Synthetic", "Synthetic", "Synthetic");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5162, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 5162, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.055308746499338
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131092);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131092, "Run)AmevisibleAnnotatons", "Run)AmevisibleAnnotatons", "Run)AmevisibleAnnotatons", "Run)AmevisibleAnnotatons");
      fieldWriter0.visitAnnotation("Run)AmevisibleAnnotatons", false);
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Exceptions", "Exceptions", "Exceptions", "Exceptions");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0145240468749794
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5162, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "RuntimeVisibleAnnotatons", "RuntimeVisibleAnnotatons", "RuntimeVisibleAnnotatons", "RuntimeVisibleAnnotatons");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5162);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5162, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "h", "h", "", "h");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      FieldWriter fieldWriter1 = classWriter0.lastField;
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.visitEnd();
      assertSame(fieldWriter2, fieldWriter1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131052);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131052, "m", "m", "m", "m");
      Attribute attribute0 = new Attribute("m");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 50331648, "K-/G\"ph", "K-/G\"ph", "K-/G\"ph", "K-/G\"ph");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
