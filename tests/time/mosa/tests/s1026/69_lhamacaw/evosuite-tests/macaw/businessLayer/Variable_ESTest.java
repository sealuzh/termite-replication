/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 10:10:04 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isCoded());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8989230896597427
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      rawVariable0.setCleaningStatus((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm2.setIdentifier(2745);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm3);
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.getSupportingDocuments();
      Variable.validateFields(rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("Q8}|N)mj6aKAT2sA\"");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getAvailability();
      assertEquals("Q8}|N)mj6aKAT2sA\"", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4668805135504925
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6624649539257144
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(123);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setCleaned(true);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.stream();
      arrayList0.listIterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.setNotes("_XLz%wQ ~t4S^9");
      derivedVariable0.setForm("3k`?5(DJOEV@`");
      arrayList0.remove((Object) derivedVariable0);
      derivedVariable0.getNotes();
      derivedVariable0.getColumnStart();
      derivedVariable0.getDisplayName();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.setCleaningDescription((String) null);
      derivedVariable1.setCleaned(false);
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList1.size());
      
      String string0 = derivedVariable1.getCleaningDescription();
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertNull(string0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.9027056661756405
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "@/5ZC^5n]>@B";
      rawVariable0.clone();
      rawVariable0.columnStart = "|J";
      rawVariable0.getValueLabels();
      rawVariable0.getIdentifier();
      rawVariable0.setIdentifier(283);
      Variable.validateFields(rawVariable0);
      rawVariable0.getForm();
      rawVariable0.getCategory();
      rawVariable0.getSupportingDocuments();
      rawVariable0.columnEnd = "";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.columnEnd = "|J";
      derivedVariable0.getAvailability();
      rawVariable0.clone();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.getIdentifier();
      derivedVariable1.removeSourceVariable(rawVariable0);
      System.setCurrentTimeMillis(283);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable1.getCleaningDescription();
      derivedVariable1.clone();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("|J", derivedVariable1.getColumnEnd());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1952257859));
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9721956207160196
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.questionNumber = "VALUE_LABEL";
      rawVariable0.setName("GY");
      derivedVariable0.notes = "VALUE_LABEL";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaningStatus("VALUE_LABEL");
      rawVariable0.setYear((String) null);
      rawVariable0.form = "UNABLE_TO_GET_ONTOLOGY_TERMS";
      derivedVariable0.addSourceVariable(rawVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.isNewRecord();
      rawVariable0.getYear();
      User user1 = new User();
      user1.setFirstName("");
      user1.setCounty("macaw.system.MacawException");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("VALUE_LABEL", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getForm();
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.78544177211529
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      User user0 = new User("variable.label.label", "variable.label.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.isCoded();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isCoded());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-1717986916));
      arrayList1.add(integer0);
      arrayList1.retainAll(arrayList0);
      arrayList0.containsAll(arrayList1);
      String string0 = null;
      derivedVariable0.setAlias((String) null);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.getSourceVariables();
      derivedVariable0.questionNumber = null;
      derivedVariable0.setCategory((String) null);
      derivedVariable0.getCategory();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getDisplayName();
      derivedVariable0.isCleaned();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1640849163));
      rawVariable0.createVariableSummary();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals((-1640849163), rawVariable0.getIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      valueLabel0.getDisplayName();
      User user0 = new User();
      derivedVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("ucF`@FZ_*h/S&g ");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("-", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setAvailability("jr`b");
      derivedVariable0.setYear("6");
      derivedVariable0.getColumnStart();
      derivedVariable0.getLabel();
      derivedVariable0.getYear();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getAlternativeVariable();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.isCleaned.saveChange.changedoNotClean");
      User user0 = new User("variable.isCleaned.saveChange.changedoNotClean", "variable.isCleaned.saveChange.changedoNotClean");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.isCleaned.saveChange.changedoNotClean", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2082408383));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      variable0.getLabel();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertEquals("0", variable0.getDisplayItemIdentifier());
      assertNotSame(variable0, rawVariable0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAvailability("`hL;O");
      derivedVariable0.columnEnd = null;
      derivedVariable0.columnStart = null;
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.getIdentifier();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.9254211910146055
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.setLabel("Unknown");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      derivedVariable1.setColumnEnd("Unknown");
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.clone();
      rawVariable0.setFilePath("UNABLE_TO_UPDATE_USER");
      rawVariable0.getFilePath();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getCategory();
      rawVariable0.getForm();
      derivedVariable1.getColumnEnd();
      assertEquals("Unknown", derivedVariable1.getColumnEnd());
      
      derivedVariable0.getQuestionNumber();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      derivedVariable0.setYear("UNABLE_TO_CHECK_CATEGORY_EXISTS");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.8927127395463
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      System.setCurrentTimeMillis(1265L);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlias("[");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.stream();
      rawVariable0.setColumnEnd("[");
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getIdentifier();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getNotes();
      rawVariable0.getAvailability();
      derivedVariable0.getLabel();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      rawVariable0.getValueLabels();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.clone();
      assertEquals("[", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      rawVariable0.setAlias("f-~_sH+{2ZS");
      rawVariable0.columnStart = "variable.cleaningDescription.label";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setCoded(false);
      rawVariable0.setAlias("variable.columnEnd.label");
      rawVariable0.setIdentifier((-2401));
      rawVariable0.getIdentifier();
      rawVariable0.getAlias();
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("-2401", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      User user0 = new User();
      derivedVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.createVariableSummary();
      assertEquals("-", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.819853186285054
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "user.firstName.saveChanges";
      rawVariable0.columnStart = "{AJAH`qnZer{@%U?r*";
      rawVariable0.setCleaned(true);
      rawVariable0.getColumnStart();
      rawVariable0.setCategory("user.firstName.saveChanges");
      rawVariable0.setCleaned(true);
      rawVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(":0+-i1,0@o");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setNotes(":0+-i1,0@o");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(":0+-i1,0@o", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.911477799894758
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(121);
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("121", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      derivedVariable0.setLabel("-");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getLabel();
      assertEquals("-", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setAvailability("75ph,^!Is#gI}4B-/9");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("75ph,^!Is#gI}4B-/9", derivedVariable0.getAvailability());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("(^DU~^m_r,Vl:2/sDx");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("(^DU~^m_r,Vl:2/sDx");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("(^DU~^m_r,Vl:2/sDx", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setNotes(";kJ-x");
      rawVariable0.getFilePath();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      rawVariable0.setForm((String) null);
      rawVariable0.setNotes((String) null);
      String string0 = rawVariable0.getLabel();
      assertNotNull(string0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("'>I1Ly");
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      assertEquals("'>I1Ly", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8205719259467044
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.067461933429295
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(",|50SJ&_/!^p5");
      rawVariable0.getLabel();
      rawVariable0.createVariableSummary();
      rawVariable0.getYear();
      assertEquals(",|50SJ&_/!^p5", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setName("macaw.businessLayer.Variable");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      assertEquals("macaw.businessLayer.Variable", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.846679723973604
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      rawVariable0.setCleaningStatus((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.getSupportingDocuments();
      Variable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5803725724750626
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.isCleaned.saveChanges.changedToNotClean");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", derivedVariable0.getName());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getForm());
      assertEquals(3, arrayList0.size());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      User user0 = new User();
      derivedVariable0.setCoded(true);
      derivedVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("-", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      User user0 = new User();
      derivedVariable0.setName("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("UNABLE_TO_GET_ORIGINAL_VARIABLE");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("UNABLE_TO_GET_ORIGINAL_VARIABLE", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "O0";
      rawVariable0.setIdentifier(798);
      rawVariable0.getLabel();
      rawVariable0.createVariableSummary();
      assertEquals(798, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("`kK$7}KO9^JO1?w]");
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      assertEquals("`kK$7}KO9^JO1?w]", rawVariable0.getYear());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setLabel("G7B1Y=cAy7\"$");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("G7B1Y=cAy7\"$", derivedVariable0.getLabel());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      User user0 = new User("LHA", "variable.form.label");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, arrayList0.size());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.isCleaned.saveChange.changedoNotClean");
      User user0 = new User("variable.isCleaned.saveChange.changedoNotClean", "variable.isCleaned.saveChange.changedoNotClean");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.isCleaned.saveChange.changedoNotClean", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("/I1sQ");
      rawVariable0.columnEnd = "/I1sQ";
      rawVariable0.getLabel();
      assertEquals("/I1sQ", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("*zf=P");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("*zf=P", "*zf=P");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("*zf=P", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "7<+MY\"2+NtT,aIW9n0";
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "Z(E%dyxX+T<q$";
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setIdentifier((-1860));
      derivedVariable0.setQuestionNumber("Z(E%dyxX+T<q$");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      arrayList0.add(supportingDocument0);
      arrayList0.iterator();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList2);
      assertEquals((-1860), derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.747864135916147
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("general.fieldValue.blank", ")9mhQ>");
      User user1 = new User();
      User.detectFieldChanges(user0, user0, user1);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user1.setPhone(")9mhQ>");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user1, rawVariable0, valueLabel0, valueLabel1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName((String) null);
      derivedVariable1.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getName();
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.5822632023047225
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.getForm();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("DUPLICATE_SOURCE_VARIABLE_EXISTS");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("DUPLICATE_SOURCE_VARIABLE_EXISTS", derivedVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "NON_EXISTENT_AVAILABILITY_STATE";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("NON_EXISTENT_AVAILABILITY_STATE", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      rawVariable0.setColumnStart("}6jO?6Sb-=");
      rawVariable0.createVariableSummary();
      rawVariable0.getForm();
      assertEquals("}6jO?6Sb-=", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "zr4YI";
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = rawVariable0.getColumnStart();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("kDZZcS;xI LSJ");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("kDZZcS;xI LSJ", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      valueLabel0.getDisplayName();
      User user0 = new User();
      derivedVariable0.setName("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = null;
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("-", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.5412966312718086
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("K");
      rawVariable0.setAvailability("");
      rawVariable0.getDisplayName();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      user0.setAddressLine2((String) null);
      user0.setAddressLine1("K");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("K", rawVariable0.getQuestionNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.4672529738591487
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.setIdentifier(0);
      rawVariable0.getCategory();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getFilePath();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("INVALID_ADMINISTRATOR");
      rawVariable0.setCleaningDescription("5`x");
      rawVariable0.clone();
      rawVariable0.getFilePath();
      assertEquals("INVALID_ADMINISTRATOR", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("x");
      rawVariable0.setYear("general.fi7ldValue.unknown");
      rawVariable0.getFilePath();
      rawVariable0.clone();
      assertEquals("x", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE";
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("general.fieldValue.unknown");
      rawVariable1.setColumnEnd(":|mz_E");
      rawVariable1.getCodeBookNumber();
      assertEquals(":|mz_E", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = ";x";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.632045940067081
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5909928649421685
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("fNM");
      rawVariable0.getLabel();
      rawVariable0.createVariableSummary();
      assertEquals("fNM", rawVariable0.getCategory());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getFilePath();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.668619868083795
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.895579404134064
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.setAlias((String) null);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getLabel();
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getSourceVariables();
      rawVariable0.getColumnStart();
      rawVariable0.setIdentifier(4);
      rawVariable0.setColumnStart("");
      rawVariable0.clone();
      derivedVariable0.getCategory();
      rawVariable0.setAvailability("Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setName("");
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getYear();
      derivedVariable0.setCoded(true);
      rawVariable0.setFilePath("");
      derivedVariable0.setLabel("&-1j+(M:pBHQ9Puvw[");
      derivedVariable0.getValueLabels();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("dKxb*X;O!D7oCn/)");
      derivedVariable0.setName("variable.isCleaned.saveChange.changedoNotClean");
      User user0 = new User("variable.isCleaned.saveChange.changedoNotClean", "variable.isCleaned.saveChange.changedoNotClean");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.isCleaned.saveChange.changedoNotClean", derivedVariable0.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.599957686803094
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setColumnStart("W=msC#^H*%/z'@!E");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("W=msC#^H*%/z'@!E", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("Hw1}MqB=");
      derivedVariable0.setCodeBookNumber("Hw1}MqB=");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Hw1}MqB=", derivedVariable0.getCodeBookNumber());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("UNABLE_TO_CHECK_VALUE_LABEL_DUPLICATES");
      User user0 = new User();
      user0.setPassword("\"PNqC|/2NYc=FjzF%");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_CHECK_VALUE_LABEL_DUPLICATES", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.5173540953639257
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "6_0$]6HOh+}|Q0r";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("6_0$]6HOh+}|Q0r", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getForm());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.getColumnEnd();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getFilePath();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getName();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getForm());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("DUPLICATE_USER");
      rawVariable0.clone();
      rawVariable0.getLabel();
      rawVariable0.createVariableSummary();
      assertEquals("DUPLICATE_USER", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      valueLabel0.getDisplayName();
      derivedVariable0.setLabel("-");
      derivedVariable0.setName("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("-", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      rawVariable0.getLabel();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("gcKMd?!uT]w:@NM>R");
      rawVariable0.getFilePath();
      rawVariable0.clone();
      assertEquals("gcKMd?!uT]w:@NM>R", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("|wKiYeHU");
      rawVariable0.getOntologyTerms();
      assertEquals("|wKiYeHU", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("@");
      Variable.validateFields(derivedVariable0);
      assertEquals("@", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.8821103874851657
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("variable.category.label");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "bg7T0NPjI3N`:o(kJ>";
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("bg7T0NPjI3N`:o(kJ>", rawVariable1.getForm());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.getForm();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Hw1}4qB=");
      Variable.validateFields(derivedVariable0);
      assertEquals("Hw1}4qB=", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("$BbxplyHh+UC<q4?'f");
      supportingDocument0.setTitle("$BbxplyHh+UC<q4?'f");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCoded(false);
      derivedVariable0.getYear();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.notes = "$BbxplyHh+UC<q4?'f";
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      arrayList0.add(supportingDocument1);
      arrayList0.iterator();
      arrayList0.sort(comparator0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      User user0 = new User();
      rawVariable0.createVariableSummary();
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }
}
