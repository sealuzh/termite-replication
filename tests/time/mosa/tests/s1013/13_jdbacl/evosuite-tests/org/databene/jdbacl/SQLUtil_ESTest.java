/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 00:22:34 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("SELECT * FROM ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SELECT * FROM ", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("SELECT * FROM ", defaultDBTable0, (-2053), "SELECT * FROM ");
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "SELECT * FROM ", false, "SELECT * FROM ");
      defaultDBColumn0.setNotNullConstraint(dBNotNullConstraint0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("SELECT * FROM  SELECT * FROM  NOT NULL", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "eP/t7/*";
      // Undeclared exception!
      SQLUtil.isProcedureCall("eP/t7/*");
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4445288251522692
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = SQLUtil.normalize("e* /ebo*\"&hz%f8-@Wuo", false);
      assertEquals("e */ ebo * \"&hz%f8-@Wuo\"", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("e* /ebo*\"&hz%f8-@Wuo");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("", string0);
      
      SQLUtil.parseColumnTypeAndSize("");
      String string1 = SQLUtil.typeAndName(dBPrimaryKeyConstraint0);
      assertEquals("unique constraint constraint", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.361726113878468
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure(",7tNF,,'k8/pkbL~S>");
      // Undeclared exception!
      SQLUtil.mutatesStructure("eP/t7/*");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("g2u]@[KSg88W|{.F5", defaultDBTable0, 3442, "g2u]@[KSg88W|{.F5");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("g2u]@[KSg88W|{.F5, g2u]@[KSg88W|{.F5", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7474008408851454
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 550, "");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("41");
      assertNull(boolean0);
      
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("  NULL", string1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8194833693061807
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SQLUtil.normalize("%[KtOz2lPp/+YNywM", true);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable("% [ KtOz2lPp / + YNywM", false);
      DBDataType dBDataType0 = DBDataType.getInstance((-1971364153), "=3w%_\u0007%v;5U");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", (DBTable) null, dBDataType0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("=3W%_\u0007%V;5U(1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance(266, "7#Td");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = new Integer(266);
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7#Td";
      stringArray0[1] = null;
      stringArray0[2] = "7#Td";
      stringArray0[3] = "7#Td";
      stringArray0[4] = null;
      stringArray0[5] = "select intostorageid:";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      dBPrimaryKeyConstraint0.setOwner(compositeDBObject0);
      StringBuilder stringBuilder1 = new StringBuilder();
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("Cannot call updateRow() when on the insert row.");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String[] stringArray0 = new String[12];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("truncate");
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertSame(stringBuilder0, stringBuilder1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`]Z[i +U!~C");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter table", true, stringArray0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      SQLUtil.substituteMarkers("alter table", "alter table", "alter table");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockFile mockFile0 = new MockFile("93Y");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.format("", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderValue(stringBuilder0);
      stringBuilder0.append((CharSequence) "");
      SQLUtil.addOptionalCondition("0*q)1):9", stringBuilder0);
      assertEquals("0*q)1):9", stringBuilder0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = SQLUtil.normalize("IRERT INTO IFORMATION_SCHMA.LOBS(ID, BTE_OUNT, TABLE) VALUES(?, , ?)", true);
      assertEquals("IRERT INTO IFORMATION_SCHMA.LOBS (ID, BTE_OUNT, TABLE) VALUES (?,, ?)", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~", defaultDBTable0, 550, "");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~";
      stringArray0[1] = "";
      stringArray0[2] = "";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "CN/esT0";
      stringArray0[1] = "creute uniqu";
      stringArray0[2] = "%[KtOz2lPp/+YNyxwM";
      stringArray0[3] = "%[KtOz2lPp/+YNyxwM";
      stringArray0[4] = "CN/esT0";
      stringArray0[5] = "CN/esT0";
      SQLUtil.join("creute uniqu", "%[KtOz2lPp/+YNyxwM", stringArray0, "CN/esT0", "create tabledeleteconstraint", stringArray0);
      StringBuilder stringBuilder1 = new StringBuilder();
      SQLUtil.addOptionalCondition(")", stringBuilder1);
      assertEquals(")", stringBuilder1.toString());
      
      Character character0 = new Character('`');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'`'", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 39, "~");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DBDataType dBDataType0 = DBDataType.getInstance((-4405), "alter index");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("I", defaultDBTable0, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder("(");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("(ALTER INDEX(3,3)", stringBuilder0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.isQuery("create table ");
      // Undeclared exception!
      SQLUtil.isQuery("XZI/**?d|+K}N:");
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("execl+z}w2ya[^^s1ph!}6");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(/0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (/0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("INSERT INTO INFORMATION_SCHEMA.LOBS(ID, BYTE_COUNT, TABLE) VALUES(?, ?, ?)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"ID\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(46, "DATE");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder("");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("DATE", stringBuilder0.toString());
      
      String string0 = SQLUtil.substituteMarkers("", "`n-wx.n[M*", (Object) null);
      assertEquals("", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition(")lf<,9Ehh$X~$E", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("");
      boolean boolean1 = SQLUtil.isQuery("select into");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("oHeL_", defaultDBTable0, 2062, "oHeL_");
      StringBuilder stringBuilder0 = new StringBuilder("80000022-00d0-fd77-3ed8-000a0a0b1900");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("80000022-00d0-fd77-3ed8-000a0a0b1900OHEL_", stringBuilder0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("U]0$}E!");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("oHeL_", defaultDBTable0, 2062, "oHeL_");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = SQLUtil.normalize("^2Pf~!Wx; )E*y", false);
      assertEquals("^ 2Pf ~ ! Wx ;) E * y", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1179956497762942
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SELECT * FROMk ");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("create unique indexs^lect(* friom");
      assertFalse(boolean1);
      
      Character character0 = new Character('l');
      String string0 = SQLUtil.substituteMarkers("create unique indexs^lect(* friom", "create unique indexs^lect(* friom", character0);
      assertEquals("'l'", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "alter materialized view";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter materialized view", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT \"alter materialized view\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "deleteconstraint", true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder("deleteconstraint");
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("deleteconstraint", stringBuilder1.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessionselect * from null where null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null and null = null");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "k~r|.";
      stringArray0[1] = "k~r|.";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "ly$F@@-";
      // Undeclared exception!
      try { 
        SQLUtil.join("file ", "k~r|.", stringArray0, "file ", "ly$F@@-", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.325342919442848
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("execunique");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("execunique", false, "selectexecunique", "execunique");
      StringBuilder stringBuilder0 = new StringBuilder(7);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT execunique ", stringBuilder0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("78q<y", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      ColumnDescriptorList columnDescriptorList1 = new ColumnDescriptorList();
      columnDescriptorList1.add((Object) defaultDBTable0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.databene.jdbacl.model.DefaultDBTable cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = SQLUtil.normalize("*y (mo$de=", false);
      assertEquals("* y (mo $ de =", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7754337976947765
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callselect * from null where null = null and null = null and null = null and null = null and null = null and null = null");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("callz[a@/h}jnp|f\"q_wix");
      assertNull(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("oHeL_", defaultDBTable0, 2062, "oHeL_");
      defaultDBColumn0.setDefaultValue("oHeL_");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("oHeL_ OHEL_ DEFAULT oHeL_ NULL", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Random.setNextRandom((-404032096));
      boolean boolean0 = SQLUtil.isDML("delete");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6145591551764051
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema(" -->\n");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" -->\n", dBSchema0);
      DBDataType.getInstance((-209), " -->\n");
      Integer integer0 = RawTransaction.COMMIT;
      SQLUtil.normalize(" -->\n", false);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("//", defaultDBTable0, 1653, "//");
      defaultDBColumn0.toString();
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("// // NULL", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      stringArray0[1] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      stringArray0[2] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      stringArray0[3] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("CVVd/{Y~r6i A+y)z", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.derby.impl.sql.compile.CreateSchemaNode");
      PrintWriter printWriter0 = mockPrintWriter0.append('x');
      boolean boolean0 = false;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      mockPrintWriter1.print(true);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec1, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("*y (mode=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: *y (mode=
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("0%;vw", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SQLUtil.isProcedureCall("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter table", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"alter table\" PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("like");
      assertNull(boolean0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("like");
      assertFalse(boolean1);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("like");
      MockPrintStream mockPrintStream0 = new MockPrintStream("0w(0-013dJ");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "+nmOm+1");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0, integer1);
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.leftJoin("like", stringArray0, "lDKKL)c", "+nmOm+1", stringArray0);
      assertEquals("left join lDKKL)c as +nmOm+1 on like.null = +nmOm+1.null and like.null = +nmOm+1.null and like.null = +nmOm+1.null and like.null = +nmOm+1.null and like.null = +nmOm+1.null and like.null = +nmOm+1.null", string0);
      
      PipedReader pipedReader0 = new PipedReader(8);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = (double) 8;
      String string1 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("8", string1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" WHERE ", false, "", "w");
      SQLUtil.constraintName(dBCheckConstraint0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("m]HCo");
      assertEquals("m]HCo", defaultDBTable0.getName());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("UD");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "42809";
      stringArray0[1] = "42809";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("42809", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT 42809 FOREIGN KEY (42809, 42809) REFERENCES UD(42809, 42809)", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.execute.SortResultSet");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.apache.derby.impl.sql.execute.SortResultSet", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = SQLUtil.normalize("e3Ls|'/E399Iy", false);
      assertEquals("e3Ls | '/E399Iy'", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.128183350293198
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[5];
      SQLUtil.innerJoin("[,+KdQD ", stringArray0, "[,+KdQD ", "st2", stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "st2";
      stringArray1[1] = "[,+KdQD ";
      stringArray1[2] = "U>bd9K9exE3f8^A.o";
      stringArray1[3] = "qtt%41$sx3<:K+c";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("[,+KdQD ", stringArray0, "[,+KdQD ", "U>bd9K9exE3f8^A.o", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("ater tableorg.apache.derby.impl.sql.execute.constantactionactivation", "ater tableorg.apache.derby.impl.sql.execute.constantactionactivation", (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~", defaultDBTable0, 550, "");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      assertEquals(3, (int)integer0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = SQLUtil.normalize("%[KtOz2lPp/+YNyxwM", false);
      assertEquals("% [ KtOz2lPp / + YNyxwM", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.674165857345069
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("like");
      SQLUtil.isProcedureCall("like");
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("like");
      MockPrintStream mockPrintStream0 = new MockPrintStream("like");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "po$p>wN<eU^fR/_", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      assertEquals("CONSTRAINT po$p>wN<eU^fR/_ ", stringBuilder1.toString());
      assertEquals("CONSTRAINT po$p>wN<eU^fR/_ ", stringBuilder0.toString());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.4168185977125947
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("kele^t constr1int");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "inner";
      stringArray0[1] = "inner";
      stringArray0[2] = "kele^t constr1int";
      String string0 = SQLUtil.join("inner", "kele^t constr1int", stringArray0, "FNGiN", "inner", stringArray0);
      assertEquals("FNGiN as inner on kele^t constr1int.inner = inner.inner and kele^t constr1int.inner = inner.inner and kele^t constr1int.kele^t constr1int = inner.kele^t constr1int", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("K", (String[]) null, "9GT1=X4q", "renamedate", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.leftJoin("5602", stringArray0, "alter ", ";0/\"5X8o)i%!", stringArray1);
      assertEquals("left join alter  as ;0/\"5X8o)i%! on ", string0);
      
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = SQLUtil.normalize("UN!&%4#NS[!tf-/3", false);
      assertEquals("UN ! & % 4 # NS [ ! tf - / 3", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = SQLUtil.normalize("g:{\"frSUlvBSOq:", true);
      assertEquals("g : { \"frSUlvBSOq:\"", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      String string0 = SQLUtil.join(stringArray0[1], stringArray0[1], stringArray0, "select into?5{\"eu&{4!i+d", stringArray0[0], stringArray0);
      assertEquals("select into?5{\"eu&{4!i+d as null on null.null = null.null and null.null = null.null and null.null = null.null and null.null = null.null and null.null = null.null", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
      
      boolean boolean0 = SQLUtil.isQuery("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "=Qc";
      String string0 = SQLUtil.join("=Qc", "=Qc", stringArray0, "=Qc", "=Qc", stringArray0);
      assertEquals("=Qc join =Qc as =Qc on =Qc.=Qc = =Qc.=Qc and =Qc.null = =Qc.null and =Qc.null = =Qc.null", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("create table null (\n)", stringWriter0.toString());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "";
      stringArray0[2] = "B3r@m;;vBfKwG?kV11";
      stringArray0[3] = "";
      stringArray0[4] = "X9y\"&cCx'H{}";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(">V+e;bEK>AMcK", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ">V+e;bEK>AMcK", true, stringArray0);
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0);
      PrintWriter printWriter0 = mockPrintWriter0.format("X9y\"&cCx'H{}", (Object[]) stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      assertEquals(">V+e;bEK>AMcK", defaultDBTable0.getName());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.null", string0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[0], false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "wooNz.cx5zJT", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[2] = null;
      stringArray0[5] = null;
      stringArray0[1] = null;
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance((-367), "[r");
      Integer integer0 = new Integer((-367));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("[r", (DBTable) null, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("[R(-367)", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0869615765973233
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String[] stringArray0 = new String[14];
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.join("G7!>1}5C#`SH}|(j", "", stringArray0, ".null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null, .null", "G7!>1}5C#`SH}|(j", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin((String) null, stringArray0, stringArray0[1], (String) null, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = SQLUtil.normalize("p*mc5u", true);
      assertEquals("p * mc5u", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = SQLUtil.renderValue("");
      assertEquals("''", string0);
      
      boolean boolean0 = SQLUtil.isQuery("Routine Privilege on ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      boolean boolean0 = SQLUtil.isQuery("java.lang.Object@7788b006");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String[] stringArray0 = new String[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("delete", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , , , , ) REFERENCES delete(, , , , , , , , )", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.864555230685108
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      stringArray0[1] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      stringArray0[3] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      stringArray0[4] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      stringArray0[5] = "org.apache.derby.impl.sql.compile.CreateSchemaNode";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("org.apache.derby.impl.sql.compile.CreateSchemaNode", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.derby.impl.sql.compile.CreateSchemaNode");
      PrintWriter printWriter0 = mockPrintWriter0.append('x');
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      SQLUtil.renderValue("org.apache.derby.impl.sql.compile.CreateSchemaNode");
      SQLUtil.normalize("org.apache.derby.impl.sql.compile.CreateSchemaNode", false);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.toArray((Object[]) stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("'k*F~0^");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("'k*F~0^", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("$NL}2", defaultDBTable0, 2062, "^bVr]XPh%1ZXvc");
      String string0 = SQLUtil.typeAndName(defaultDBColumn0);
      assertEquals("column $NL}2", string0);
      assertNotNull(string0);
      
      String string1 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("null.$NL}2", string1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("rename");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[19];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter mat2rialized view", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("alter mat2rialized view");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("alter mat2rialized viewCONSTRAINT \"alter mat2rialized view\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition(":<", stringBuilder0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder1, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6733000564792677
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("executeexec");
      assertNull(boolean0);
      
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("E;C?f0-\"z", true, "executeexec", "executeexec");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT E;C?f0-\"z CHECK executeexec", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.execute.SortResultSet");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.apache.derby.impl.sql.execute.SortResultSet", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "HROp{4V6e*Stoy$", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", true, "SELECT * FROM ", "SELECT * FROM ");
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "CREATEVI");
      SQLUtil.addOptionalCondition("CREATEVI", stringBuilder0);
      assertEquals("CREATEVI or CREATEVI", stringBuilder0.toString());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("PRESERVE");
      SQLUtil.addRequiredCondition("PRESERVE", stringBuilder0);
      assertEquals("PRESERVE and PRESERVE", stringBuilder0.toString());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "*y (mode=";
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~", defaultDBTable0, 577, "~");
      DBColumn[] dBColumnArray0 = new DBColumn[13];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~", defaultDBTable0, 577, "~");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("~", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML(" 2?d`MVh");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance("DATE");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("DATE", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("DATE", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(39, "callselect *7from nll where null = null and null = null andnull = nul ad null = null and null = null an% null = null");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("callselect *7from nll where null = null and null = null andnull = nul ad null = null and null = null an% null = null", (DBTable) null, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("CALLSELECT *7FROM NLL WHERE NULL = NULL AND NULL = NULL ANDNULL = NUL AD NULL = NULL AND NULL = NULL AN% NULL = NULL(2,2)", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.countProviders();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("&t{HKd$[=L6!+Q&V", defaultDBTable0, (-2), "&t{HKd$[=L6!+Q&V");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("&T{HKD$[=L6!+Q&V", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("Mwf^-P", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("delete69}mckdm\"");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers(";(4", "alter materialized view", ";(4");
      assertEquals(";(4", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      SQLUtil.removeComments("select");
      DBSchema dBSchema0 = new DBSchema("select");
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertNotNull(string0);
      assertEquals("schema select", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("creUte unique index");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("drop materialized viewdele^teconstraint");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("drop tablecreute uniqzue index");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("dele^teconstraint");
      assertNull(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.innerJoin("drop materialized view};y~;.l/8etrxdq]", stringArray0, stringArray0[0], stringArray0[0], stringArray0);
      assertEquals("null as null on drop materialized view};y~;.l/8etrxdq].null = null.null", string0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("insertr_", (String[]) null, "insertr_", "insertr_", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("X(gS24yR;");
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
