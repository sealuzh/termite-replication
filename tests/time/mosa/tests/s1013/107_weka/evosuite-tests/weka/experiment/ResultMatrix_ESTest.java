/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 27 21:31:47 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.8905428744193977
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      resultMatrixPlainText1.toArray();
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      stringArray0[4] = ")";
      resultMatrixPlainText1.setOptions(stringArray0);
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.getStdDev((-1), 1371);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3370421104115655
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      resultMatrixPlainText0.m_ColHidden = booleanArray0;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.getAverage(1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 6);
      resultMatrixCSV0.globalInfo();
      String[][] stringArray0 = new String[9][0];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4478569465015725
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[3];
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = "$\bullet$";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixLatex0.m_RemoveFilterName = false;
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.TIE_STRING = "\tThe width of the counts (0 = optimal).\n\t(default: ";
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.printRowNamesTipText();
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getColCount();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 1);
      resultMatrixHTML0.assign(resultMatrixCSV1);
      resultMatrixHTML0.removeFilterName("=");
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RowNames = null;
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRowOrder(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.8933941363543325
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[4];
      resultMatrixPlainText0.getColName(55);
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = "";
      resultMatrixPlainText0.setEnumerateRowNames(true);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getOptions();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 422);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.5790530085397885
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.m_RowOrder = intArray0;
      stringArray0[1] = "(";
      stringArray0[2] = "v";
      stringArray0[3] = " ";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getSignificance(0, (-1));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.getDisplayRow((-3929));
      resultMatrixPlainText0.getSignificanceWidth();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.154849162536457
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultMatrixPlainText0.m_ColHidden = booleanArray0;
      resultMatrixPlainText0.m_ShowAverage = true;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3114155519107094
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = "*";
      stringArray0[2] = "v";
      stringArray0[3] = "*";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixSignificance0.getPrintColNames();
      resultMatrixPlainText0.toStringRanking();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3718382125292514
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificanceWidth(4);
      resultMatrixPlainText0.m_RemoveFilterName = false;
      resultMatrixPlainText0.m_MeanPrec = (-474);
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.316379479061607
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.padString("", (-561));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.61190469238897
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      String[][] stringArray0 = new String[8][5];
      String[] stringArray1 = new String[4];
      stringArray1[0] = ")";
      stringArray1[1] = "jz2PtwD,MT?,Q*zQ\";";
      stringArray1[2] = "v";
      stringArray1[3] = "-row-name-width <int>";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[4];
      stringArray2[0] = "*";
      stringArray2[1] = "(";
      stringArray2[2] = "-row-name-width <int>";
      stringArray2[3] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[5];
      stringArray3[0] = "Only outputs the significance indicators. Can be used for spotting patterns.";
      stringArray3[1] = ",:s9m~UaJzNJeK|23";
      stringArray3[2] = "";
      stringArray3[3] = "v";
      stringArray3[4] = "-ranking data not set-";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[6];
      stringArray4[0] = "*";
      stringArray4[1] = "v7By5)ZeB\"oQ+<:";
      stringArray4[2] = "v";
      stringArray4[3] = "-ranking data not set-";
      stringArray4[4] = "[";
      stringArray4[5] = "]";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[4];
      stringArray5[0] = "*";
      stringArray5[1] = "*";
      stringArray5[2] = ")";
      stringArray5[3] = "]";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[6];
      stringArray6[0] = "";
      stringArray6[1] = "";
      stringArray6[2] = " ";
      stringArray6[3] = "Only outputs the significance indicators. Can be used for spotting patterns.";
      stringArray6[4] = "v";
      stringArray6[5] = "-ranking data not set-";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[6];
      stringArray7[0] = "";
      stringArray7[1] = "-row-name-width <int>";
      stringArray7[2] = "v";
      stringArray7[3] = "*";
      stringArray7[4] = ",:s9m~UaJzNJeK|23";
      stringArray7[5] = " ";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[0];
      stringArray0[7] = stringArray8;
      resultMatrixSignificance0.getColSize(stringArray0, 1, true, true);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_HeaderKeys = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.361908713646982
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "(";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.RIGHT_PARENTHESES = "$circ$";
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getStdDevWidth();
      resultMatrixLatex0.toStringKey();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.toStringKey();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 0;
      resultMatrixHTML0.removeFilterName(" ");
      intArray0[6] = 1;
      intArray0[7] = 1;
      intArray0[8] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixHTML0.setRowName(0, (String) null);
      resultMatrixHTML0.getDefaultColNameWidth();
      resultMatrixHTML0.getStdDevPrec();
      resultMatrixHTML0.countWidthTipText();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.getRowHidden(0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7603439605572
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      int[] intArray0 = new int[19];
      intArray0[0] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      String[][] stringArray0 = new String[7][5];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "*";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[3] = "__4bWQHK2$;)b";
      stringArray1[4] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "Median (ints): ";
      stringArray2[1] = " ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[5];
      stringArray3[0] = "(";
      stringArray3[1] = "*";
      stringArray3[2] = "v";
      stringArray3[3] = "Median (ints): ";
      stringArray3[4] = ")";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[0];
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "Median (ints): ";
      stringArray5[1] = "v";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[5];
      stringArray6[0] = "(";
      stringArray6[1] = ")";
      stringArray6[2] = " ";
      stringArray6[3] = "v";
      stringArray6[4] = "(";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[9];
      stringArray7[0] = "__4bWQHK2$;)b";
      stringArray7[1] = "\tThe width of the significance indicator (0 = optimal).\n\t(default: ";
      stringArray7[2] = "*";
      stringArray7[3] = "&GEiIE'{";
      stringArray7[4] = "*";
      stringArray7[5] = "*";
      stringArray7[6] = "(";
      stringArray7[7] = " ";
      stringArray7[8] = "X|yupoC";
      stringArray0[6] = stringArray7;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.019969315903152
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.headerKeys();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixSignificance0.getMean(0, 110);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setColName(1, ")");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2127420325498597
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.setOptions((String[]) null);
      resultMatrixPlainText0.getColHidden(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.setSize((-646), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 466);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.addHeader((String) null, ")");
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("", (-6), false);
      resultMatrixPlainText0.m_ShowStdDev = true;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0752205480543715
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setRowOrder(intArray0);
      resultMatrixSignificance1.setColName(0, " ");
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.headerKeys();
      resultMatrixSignificance0.setColName((-1), "");
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(69, ",X/KY~.BT[BG3y");
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.getDisplayCol(41);
      resultMatrixSignificance0.setColName((-1), "muL_Lea%,C\"iZT");
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0904599236161974
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.m_CountWidth = 650;
      resultMatrixSignificance0.setShowStdDev(false);
      resultMatrixPlainText0.getSignificance(0, 2);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[6];
      intArray0[0] = (-921);
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[5] = 2;
      resultMatrixSignificance0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setCountWidth(2);
      resultMatrixCSV0.toStringRanking();
      resultMatrixSignificance0.isAverage(0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.4459875553002175
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(37, 37);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      String[][] stringArray1 = new String[9][1];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "*";
      stringArray2[1] = " ";
      stringArray2[2] = " ";
      stringArray2[3] = "*";
      stringArray2[4] = " ";
      stringArray1[4] = stringArray2;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      stringArray1[8] = stringArray0;
      resultMatrixHTML0.getColSize(stringArray1, 0);
      ResultMatrixLatex.main(stringArray0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.345323121060387
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 3526);
      // Undeclared exception!
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      resultMatrixSignificance0.setSize(3056, 3056);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.padString((String) null, 1584);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5526605536948246
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "cC4<+oAq_> B@Q";
      stringArray0[1] = "Problem reading local properties: ";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.m_ColNameWidth = 1;
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      resultMatrixCSV0.m_RowNameWidth = 0;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixCSV0.toStringSummary();
      intArray0[7] = 2;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixCSV0.getSignificance(2, (-3228));
      resultMatrixLatex0.getAverage(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringKey();
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.stdDevPrecTipText();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3555913805961937
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getMean((-197), 1118);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixSignificance0.getColName(0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.setColOrder(intArray0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName((-1));
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4323983243905194
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 2;
      resultMatrixPlainText0.m_RowOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColHidden((-3289));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColHidden(47);
      resultMatrixPlainText0.doubleToString(1.0, 47);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8373289105382637
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RowOrder = intArray0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.getVisibleColCount();
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.761953899810961
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getColCount();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColOrder();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toStringSummary();
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.trimString("", (-1190));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.isAverage(26);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.356386261208737
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.isAverage((-3106));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int[][] intArray0 = new int[9][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.printColNamesTipText();
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.4942288589873125
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[5];
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      stringArray0[3] = "(";
      stringArray0[4] = "v";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getRowNameWidth();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.341350031110212
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("", 2);
      resultMatrixPlainText0.getOptions();
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.469821012050399
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString(" | ", 0);
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getSignificance(5, 0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getSignificance(6, 6);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.740402893816222
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String[] stringArray0 = new String[0];
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1616);
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[7];
      resultMatrixSignificance0.toStringRanking();
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.getRemoveFilterName();
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5362633012171685
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.padString("</b> = ", (-3666));
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.309443907283561
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.toStringSummary();
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.3544404309205857
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getRowCount();
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.220198971261519
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 571);
      String[] stringArray0 = resultMatrixPlainText1.getOptions();
      String[][] stringArray1 = new String[5][4];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      resultMatrixPlainText1.getColSize(stringArray1, 2);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.536263301217168
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[3];
      resultMatrixPlainText0.m_ShowStdDev = true;
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getOptions();
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.280487978974427
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.isSignificance(0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.9401437834560733
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_MeanWidth = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixPlainText0.isSignificance(82);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.4028416956383327
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixPlainText0.setSignificanceWidth(0);
      resultMatrixPlainText0.toStringKey();
      int[][] intArray0 = new int[7][4];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 47;
      intArray3[1] = 2285;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 2;
      intArray3[5] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 47;
      intArray4[3] = 2;
      intArray4[4] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 7;
      intArray5[1] = 2285;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 7;
      intArray7[1] = 2;
      intArray7[2] = 1;
      intArray7[3] = 102;
      intArray7[4] = 0;
      intArray7[5] = 0;
      intArray0[6] = intArray7;
      resultMatrixSignificance0.m_Significance = intArray0;
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixSignificance0.isSignificance(5101);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.setStdDevWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.7100549767379913
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      double[][] doubleArray0 = new double[8][7];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 2;
      doubleArray2[4] = (double) 2;
      doubleArray2[5] = (double) 1;
      doubleArray2[6] = (double) 0;
      doubleArray2[7] = (double) 1;
      doubleArray2[8] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = 4.8;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = 4.8;
      doubleArray5[1] = 4.8;
      doubleArray5[2] = (double) 2;
      doubleArray5[3] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (double) 0;
      doubleArray6[1] = (double) 2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[9];
      doubleArray7[0] = 4.8;
      doubleArray7[1] = (double) 2;
      doubleArray7[2] = (double) 1;
      doubleArray7[3] = (double) 0;
      doubleArray7[4] = 0.0;
      doubleArray7[5] = (double) 0;
      doubleArray7[6] = (double) 0;
      doubleArray7[7] = (double) 0;
      doubleArray7[8] = (double) 1;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[0];
      doubleArray0[7] = doubleArray8;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      resultMatrixPlainText0.setMeanWidth(0);
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultCountWidth();
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.5099770813007045
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot.main((String[]) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixCSV0.getColName(1);
      ResultMatrixSignificance.main((String[]) null);
      resultMatrixCSV0.getDisplayCol(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      String string0 = resultMatrixGnuPlot0.globalInfo();
      assertEquals("Generates output for a data and script file for GnuPlot.", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.665394159983388
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      int[] intArray0 = new int[6];
      intArray0[0] = 15;
      intArray0[1] = 1;
      intArray0[2] = 31;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.setColHidden(0, true);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.6496358433315903
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixPlainText0.m_StdDevPrec = (-2191);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.m_StdDevWidth = 1977;
      resultMatrixPlainText0.getCount((-1793));
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixPlainText0.m_HeaderKeys = vector0;
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.getRowOrder();
      resultMatrixPlainText0.getColHidden((-2191));
      resultMatrixLatex0.getColCount();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.addHeader("Plain Text", (String) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(1977, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5725293216729788
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.0404387273591684
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.isStdDev(0);
      resultMatrixPlainText0.setMeanWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.6964499994737094
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_RowNameWidth = 18;
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixHTML.main((String[]) null);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=4.007333185232473
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixHTML0.assign(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toStringMatrix();
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      
      resultMatrixSignificance0.getMean((-1), (-1));
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=4.043051267834554
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterNameTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                                     (1) \n------------------------------------------------\nrow0                                    (0)    |\n------------------------------------------------\n(v/ /*)                                        |\n", string0);
      
      resultMatrixPlainText0.enumerateRowNamesTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance1);
      resultMatrixGnuPlot0.toStringRanking();
      double double0 = resultMatrixGnuPlot0.getMean(1, (-2999));
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.showAverageTipText();
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString(0.0, (-2541));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.3961385206433987
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 50);
      String[] stringArray0 = new String[0];
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.setRowNameWidth(2);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getStdDevWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixHTML0.setRowName(625, ")");
      assertEquals(2, resultMatrixHTML0.getRowNameWidth());
      
      double double0 = resultMatrixPlainText0.getMean(0, 0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.336040305554313
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.printRowNamesTipText();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.removeFilterNameTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.isRowName((-3435));
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.8720312139206605
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowAverage(true);
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.setRowHidden((-1), true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.countWidthTipText();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getShowAverage());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.7485462919025654
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("", 757, false);
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEqualsstring0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.456498755616308
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringMatrix();
      double[][] doubleArray0 = new double[6][6];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[3];
      doubleArray3[0] = 4.6;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = (double) 2;
      doubleArray4[1] = 4.6;
      doubleArray4[2] = (double) 2;
      doubleArray4[3] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = 1847.994154506326;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (-1741.6);
      doubleArray5[3] = (double) 1;
      doubleArray5[4] = (double) 2;
      doubleArray5[5] = (double) 1;
      doubleArray5[6] = (-837.0);
      doubleArray5[7] = (double) 2;
      doubleArray5[8] = 4.6;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[0];
      doubleArray0[5] = doubleArray6;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      resultMatrixPlainText0.setRemoveFilterName(false);
      int[] intArray0 = new int[7];
      resultMatrixPlainText0.setMeanWidth(1);
      intArray0[0] = 2;
      resultMatrixPlainText0.setCountWidth(17);
      intArray0[1] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.doubleToString(1, 2);
      resultMatrixPlainText0.setStdDevWidth(26);
      resultMatrixCSV0.getDisplayCol(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.642229973171509
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.setStdDev((-1), 0, 0);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDevWidth(95);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(95, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixSignificance0.removeFilterNameTipText();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.isRowName(0);
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
      
      resultMatrixHTML1.stdDevWidthTipText();
      assertFalse(resultMatrixHTML1.getShowStdDev());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.044404464687264
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(true);
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      resultMatrixGnuPlot0.setRowHidden(41, true);
      resultMatrixPlainText0.countWidthTipText();
      resultMatrixGnuPlot0.isRowName(1);
      resultMatrixPlainText0.getColCount();
      assertTrue(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.918646951132736
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.toStringMatrix();
      int int0 = resultMatrixPlainText0.getRowNameWidth();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      int int0 = resultMatrixPlainText0.getMeanWidth();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth((-902));
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.713572066704311
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_EnumerateColNames = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 2);
      resultMatrixHTML0.setOptions((String[]) null);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      resultMatrixHTML0.getStdDevWidth();
      resultMatrixHTML0.setRowName(0, "v");
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      resultMatrixPlainText0.showStdDevTipText();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName((-2));
      resultMatrixPlainText0.setShowStdDev(true);
      boolean boolean0 = resultMatrixPlainText0.getDefaultEnumerateColNames();
      assertTrue(resultMatrixPlainText0.getShowStdDev());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5112673013452853
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSize(0, 0);
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.782355920889567
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.getAverage(1795);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.3114155519107094
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      resultMatrixPlainText0.doubleToString(0.0, 1995);
      resultMatrixPlainText0.getAverage((-1755));
      assertFalse(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.873163554594965
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      Vector<String> vector0 = new Vector<String>();
      vector0.add(" ");
      String[] stringArray0 = new String[3];
      String string0 = resultMatrixHTML0.padString("The width of the significance indicator (0 = optimal).", 410, true);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals("                                                                                                                                                                                                                                                                                                                                                                    The width of the significance indicator (0 = optimal).", string0);
      
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = ")";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 6);
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex0.setCount((-3638), (-1886.657732));
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(6, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.setMeanWidth(0);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 0);
      resultMatrixGnuPlot0.setColHidden(800, true);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(3, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.824364840923503
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.removeFilterName("");
      assertEquals("", string0);
      
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setStdDev((-2259), (-2259), (-2259));
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.463586494166734
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(110, 1);
      resultMatrixPlainText0.m_Wins = null;
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 110;
      intArray0[5] = 5;
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.setPrintColNames(true);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixPlainText0.clearHeader();
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixSignificance0.setStdDev(0, 818, (-3734.325096007));
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, int0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.123841515493994
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.padString("Min index (doubles): ", (-1401), false);
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      resultMatrixGnuPlot0.removeFilterName(")");
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixGnuPlot0.setMeanPrec(1);
      resultMatrixGnuPlot0.setStdDev(1, 2, 2552.6950798927);
      assertEquals(1, resultMatrixGnuPlot0.getMeanPrec());
      
      resultMatrixHTML0.colNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[0][7];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.rowNameWidthTipText();
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[0][7];
      resultMatrixPlainText0.setRanking(intArray0);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.setColHidden((-7), false);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.setColHidden(1, true);
      resultMatrixGnuPlot0.globalInfo();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[9];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.setColHidden(1, false);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      String string0 = resultMatrixGnuPlot0.removeFilterName(")");
      assertEquals(")", string0);
      
      resultMatrixGnuPlot0.setPrintRowNames(true);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.setRowName((-9), "");
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.4463608607169536
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.m_RowOrder = null;
      resultMatrixSignificance0.getStdDevWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.setCount(0, (-0.9109572869475648));
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex1.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.globalInfo();
      int int0 = resultMatrixLatex0.getRowNameWidth();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(40, int0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.883962738256666
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray0[1] = intArray1;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 992);
      resultMatrixLatex0.setCount(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("v", "");
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.973971854832384
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.setRowHidden(0, true);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.countWidthTipText();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixSignificance0.getEnumerateColNames();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertTrue(boolean0);
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.788626037967038
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "(";
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.setCount(1, 1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=4.007333185232473
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.getShowAverage();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.9346996885585903
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth((-1211));
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setSignificance(910, (-1211), 2467);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV.main(stringArray0);
      boolean boolean0 = resultMatrixSignificance0.getShowAverage();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RankingLosses = null;
      resultMatrixSignificance0.getDefaultShowAverage();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.0788949237114283
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.6635616461296423
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getStdDevWidth();
      resultMatrixHTML0.setRowName(2126, "*");
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.713572066704311
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[] stringArray0 = new String[0];
      resultMatrixHTML0.setOptions(stringArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(2, 26);
      resultMatrixHTML2.getStdDevWidth();
      resultMatrixHTML1.setRowName(1, " ");
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.5888648573452726
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificanceCount(0, 0);
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setCountWidth(976);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toArray();
      ResultMatrixSignificance resultMatrixSignificance1 = null;
      try {
        resultMatrixSignificance1 = new ResultMatrixSignificance((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      int int0 = resultMatrixPlainText0.getCountWidth();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.6542220950859425
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_SignificanceWidth = 1389;
      resultMatrixPlainText0.setOptions((String[]) null);
      resultMatrixPlainText0.setMean(648, 648, 648);
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1389, 2);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=4.1991210233949285
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(1, 694, 1);
      resultMatrixHTML0.getSignificanceCount(26, (-1722));
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[0][2];
      resultMatrixHTML0.m_NonSigWins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getSummaryTitle(38);
      resultMatrixPlainText0.setStdDevPrec(805);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      ResultMatrixHTML resultMatrixHTML1 = null;
      try {
        resultMatrixHTML1 = new ResultMatrixHTML((-3037), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.8332133440562166
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int[][] intArray0 = new int[9][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.setMean(921, (-1563), 921);
      resultMatrixPlainText0.getColCount();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.9083826809913753
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      boolean boolean0 = resultMatrixSignificance0.isMean(0);
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.470112847439553
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.setSignificance(47, (-3399), 0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.showStdDevTipText();
      int int0 = resultMatrixPlainText0.getSignificanceCount((-1268), 3009);
      assertEquals(0, int0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.357232104876815
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.m_ColNameWidth = 3;
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1)            \n-----------------------------------------\nrow0                       (0)          |\n-----------------------------------------\nAverage                          NaN.00 |\n-----------------------------------------\n(v/ /*)                                 |\n", string0);
      
      int int0 = resultMatrixPlainText0.getRowNameWidth();
      assertEquals(25, int0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=4.033111364397894
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_EnumerateColNames = true;
      resultMatrixPlainText0.m_ShowAverage = true;
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      resultMatrixPlainText0.setMeanWidth(921);
      resultMatrixPlainText0.isStdDev(2467);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.isMean(910);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getRowName(910);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.trimString(" ", 1);
      resultMatrixGnuPlot0.getRowHidden(2);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.5062288927187963
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(1);
      resultMatrixPlainText0.isStdDev(2);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setSignificance(2467, 0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2467);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=4.07025739561966
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setSignificance(1, 910, 2);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getMeanPrec();
      assertEquals(2, int0);
      
      resultMatrixHTML0.trimString("invalid CVS revision - not enough parts separated by dots!", 403);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.3892680315457953
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      int int0 = resultMatrixHTML0.getCountWidth();
      assertEquals(0, int0);
      
      resultMatrixHTML0.getStdDevPrec();
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.getColCount();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      String string0 = resultMatrixSignificance0.trimString("(", 2);
      assertEquals("(", string0);
      
      resultMatrixGnuPlot0.getRowHidden(1);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.padString((String) null, (-165), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.trimString("", 8);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowHidden((-1183));
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.2847560449660964
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      resultMatrixPlainText0.getRowHidden(2942);
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowName((-1));
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.1975679747319874
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) col0\n----------------\n----------------\n(v/ /*)        |\n", string0);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.9365044396669813
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.addHeader("v", "v");
      int[][] intArray0 = new int[3][3];
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterNameTipText();
      String string0 = resultMatrixSignificance1.doubleToString(0, 0);
      assertEquals("0.", string0);
      
      int[] intArray1 = new int[0];
      resultMatrixSignificance1.setColOrder(intArray1);
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.782355920889567
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.doubleToString((-34.75325), 1);
      assertEquals("-34.8", string0);
      
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.stdDevWidthTipText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.isStdDev((-2163));
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.setSignificance((-713), (-6), (-6));
      resultMatrixPlainText0.getColHidden(61);
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth(0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.3269983979131057
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      resultMatrixPlainText0.m_StdDevWidth = 1;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.833213344056217
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      boolean boolean0 = resultMatrixPlainText0.isMean((-2218));
      assertFalse(boolean0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.864788835729176
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.getSignificanceCount(805, (-1722));
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(3);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(3, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixHTML0.getStdDev(3, 0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.8592321198097737
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getStdDev(2278, 662);
      resultMatrixGnuPlot0.setSignificance(662, 2278, 2278);
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.8615696093361764
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName(0);
      assertEquals("row0", string0);
      
      resultMatrixSignificance0.setSignificance(0, 322, 329);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.4061774521134605
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      resultMatrixPlainText0.m_ShowAverage = true;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(20, stringArray0.length);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.897826869479377
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(18, stringArray0.length);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      resultMatrixSignificance0.setSignificance(512, 512, 2);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=4.103945754059685
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixSignificance0.m_RowOrder = null;
      resultMatrixSignificance0.getStdDevWidth();
      resultMatrixSignificance0.m_ColOrder = null;
      resultMatrixSignificance0.m_StdDevWidth = 0;
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.removeFilterNameTipText();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.isStdDev(2);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      resultMatrixPlainText0.getDefaultMeanWidth();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.3449419191941265
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(4364);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(4364, resultMatrixSignificance0.getMeanPrec());
      assertEquals("Dataset                                     (1) \n------------------------------------------------\nrow0                                    (0)    |\n------------------------------------------------\n(v/ /*)                                        |\n", string0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.getDefaultMeanPrec();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.9154793492940048
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.m_ShowAverage = false;
      int[][] intArray0 = new int[3][6];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = (-5338);
      intArray2[7] = 2;
      intArray0[2] = intArray2;
      resultMatrixPlainText0.m_Wins = intArray0;
      resultMatrixSignificance0.m_MeanWidth = 0;
      resultMatrixPlainText0.setMeanPrec((-1912));
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixSignificance0.setColNameWidth(3284);
      resultMatrixPlainText0.m_PrintRowNames = false;
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.meanWidthTipText();
      resultMatrixPlainText1.getDisplayRow(1);
      resultMatrixLatex0.getDefaultMeanPrec();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(3284, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.309443907283561
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.9963067983056155
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_EnumerateColNames = true;
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      assertEquals(0, resultMatrixHTML0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.7725887222397803
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.setRanking(intArray0);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.236571964404091
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.setEnumerateRowNames(false);
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string0);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.setRowNameWidth((-2598));
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.3147172633648605
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(50, 50);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.m_ColNameWidth = 50;
      resultMatrixPlainText0.WIN_STRING = "weka.experiment.ResultMatrixHTML";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      resultMatrixSignificance0.toString();
  }

  /**
  //Test case number: 169
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.32830307452232
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSize(1, 1);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.6280156368701584
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText1.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixPlainText1.getDisplayCol(22);
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertEquals(5, resultMatrixPlainText1.getCountWidth());
      assertEquals(2, resultMatrixPlainText1.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertEquals(1, resultMatrixPlainText1.getRowCount());
      assertEquals(0, resultMatrixPlainText1.getColNameWidth());
      assertEquals(1, resultMatrixPlainText1.getColCount());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.7497218606402334
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setColNameWidth(1);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixPlainText0.getRevision();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixSignificance0.getDisplayCol((-971));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(3, (-1985));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.1633275625011605
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.getStdDevPrec();
      resultMatrixCSV0.clearHeader();
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getCount(0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.319492576154752
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.getStdDevPrec();
      resultMatrixCSV0.clearHeader();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.m_HeaderValues = vector0;
      resultMatrixSignificance0.toStringRanking();
      double double0 = resultMatrixSignificance0.getCount(0);
      assertEquals(0.0, double0, 0.01);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[9];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getCount((-1));
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.6011047291705998
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(2, 9);
      String[] stringArray0 = new String[0];
      resultMatrixPlainText2.setOptions(stringArray0);
      assertEquals(5, resultMatrixPlainText2.getStdDevPrec());
      
      double double0 = resultMatrixPlainText0.getCount(1516);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.5355532049037066
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(true);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.padString(" 1M$x};+jC>", (-1081));
      resultMatrixLatex1.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals("Dataset (1)   \n--------------\nrow0(0)      |\n--------------\n($\\circ$/ /$ |\n", string0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.707069640327332
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.setColNameWidth((-933));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      
      resultMatrixPlainText1.setMeanWidth(581);
      resultMatrixPlainText1.getMean(2, 2);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.4681407496032315
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.setEnumerateColNames(false);
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=4.011624363878944
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setStdDevPrec((-1593));
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText.main(stringArray0);
      String[] stringArray1 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray1.length);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getMeanPrec();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(2, int0);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=2.8332133440562166
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("kNk", (-2187), true);
      assertEquals("kNk", string0);
      
      resultMatrixPlainText0.setRanking(intArray0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.1020874583978
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      int[] intArray1 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray1);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.338553017492444
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixPlainText0.getSignificance((-381), (-381));
      boolean boolean0 = resultMatrixPlainText0.getPrintColNames();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 187
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=4.343805421853679
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.globalInfo();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getSummaryTitle((-908));
      resultMatrixLatex0.padString("Generates the matrix output as HTML.", 2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.LOSS_STRING = "";
      resultMatrixHTML1.clear();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML2.getDefaultRowNameWidth();
      resultMatrixLatex0.getColName(2);
      resultMatrixHTML0.getSummaryTitle(0);
      resultMatrixHTML2.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setRowNameWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 189
  /*Coverage entropy=3.2713277224488513
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = "sig-width";
      resultMatrixLatex0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 190
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getColName(1740);
      assertNull(string0);
      
      resultMatrixSignificance0.getDisplayName();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.setRowNameWidth(1755);
      assertEquals(1755, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.3377793138578506
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 604);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCount(2, 0.0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(50, 1);
      resultMatrixHTML0.toStringMatrix();
      // Undeclared exception!
      resultMatrixGnuPlot0.toArray();
  }

  /**
  //Test case number: 193
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth((-690));
      resultMatrixPlainText0.toStringSummary();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearRanking();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.341350031110212
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      resultMatrixPlainText0.padString("t4", 3619);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=4.025351690735147
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(0);
      resultMatrixCSV0.setShowStdDev(false);
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 604);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1) col0\n----------------\nrow0            \n", string0);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 199
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      String string0 = resultMatrixSignificance0.enumerateColNamesTipText();
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", string0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize((String[][]) null, 2, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.6542220950859425
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getStdDevWidth();
      assertFalse(resultMatrixHTML0.getPrintColNames());
      
      String[][] stringArray1 = new String[9][8];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      stringArray1[8] = stringArray0;
      int int0 = resultMatrixCSV0.getColSize(stringArray1, 25, true, true);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.3544404309205857
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixPlainText0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize((String[][]) null, 0, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 203
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      int[][] intArray0 = new int[9][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      String[][] stringArray0 = new String[6][7];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "*";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = "(";
      stringArray2[1] = "*";
      stringArray2[2] = "(";
      stringArray2[3] = " ";
      stringArray2[4] = "*";
      stringArray2[5] = "*";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[5];
      stringArray3[0] = "*";
      stringArray3[1] = ")";
      stringArray3[2] = "(";
      stringArray3[3] = ")";
      stringArray3[4] = "*";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "*";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[9];
      stringArray5[0] = "(";
      stringArray5[1] = ")";
      stringArray5[2] = "*";
      stringArray5[3] = ")";
      stringArray5[4] = "(";
      stringArray5[5] = "v";
      stringArray5[6] = " ";
      stringArray5[7] = "*";
      stringArray5[8] = ")";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[3];
      stringArray6[0] = " ";
      stringArray6[1] = "v";
      stringArray6[2] = ")";
      stringArray0[5] = stringArray6;
      resultMatrixPlainText0.getColSize(stringArray0, (-1), true, false);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=2.720887314357132
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_EnumerateColNames = true;
      resultMatrixPlainText0.getDefaultCountWidth();
      String[][] stringArray0 = new String[1][3];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-show-avg";
      stringArray1[1] = ")";
      stringArray1[2] = ")";
      stringArray1[3] = "v";
      stringArray1[4] = ")";
      stringArray1[5] = "+Ej=YsP3}oKB";
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 5, true, false);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, int0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[][] stringArray0 = new String[0][7];
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, (-940));
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getColNameWidth();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.0401135828399966
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(9, 13);
      resultMatrixHTML0.m_StdDevPrec = (-1);
      resultMatrixHTML0.setSignificanceWidth(9);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.LEFT_PARENTHESES = "";
      resultMatrixHTML0.m_ColNameWidth = 22;
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.getColName(9);
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.getRowCount();
      resultMatrixHTML0.getColNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-1), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      resultMatrixPlainText0.getSummaryTitle((-3278));
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.6807326343786704
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      resultMatrixPlainText0.getOptions();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.980796493508936
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.setMeanWidth(1);
      resultMatrixPlainText0.getOptions();
      assertEquals(1, resultMatrixPlainText0.getMeanWidth());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 211
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[1];
      try { 
        resultMatrixPlainText0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 212
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      String string0 = resultMatrixLatex0.padString("U3>W", 0, false);
      assertEquals("U3>W", string0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.3108951317961743
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      String string0 = resultMatrixPlainText0.padString("\tWhether to show the row with averages.\n\t(default: no)", 350, false);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals("\tWhether to show the row with averages.\n\t(default: no)                                                                                                                                                                                                                                                                                                        ", string0);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 214
  /*Coverage entropy=3.3732504467984272
  */
  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColNameWidth(52);
      resultMatrixPlainText0.getColName(52);
      resultMatrixPlainText0.getOptions();
      assertEquals(52, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 215
  /*Coverage entropy=3.6532085198194557
  */
  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec((-336));
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 216
  /*Coverage entropy=3.982127833212111
  */
  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowName(0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixSignificance0.getMean(1076, 2);
      assertFalse(resultMatrixSignificance0.getPrintColNames());
  }

  /**
  //Test case number: 217
  /*Coverage entropy=3.367637005030384
  */
  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.doubleToString(1, 2);
      assertEquals("1.00", string0);
      
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(19, stringArray0.length);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 218
  /*Coverage entropy=3.120291565301284
  */
  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRowName(39);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 219
  /*Coverage entropy=2.9808777308924803
  */
  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      boolean boolean0 = resultMatrixHTML0.getPrintRowNames();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertTrue(boolean0);
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 220
  /*Coverage entropy=3.32830307452232
  */
  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\nrow1                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 221
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.doubleToString(0.0, 3943);
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 222
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDev(1796, 1796, 1796);
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 223
  /*Coverage entropy=3.6500840324831114
  */
  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(51, 1);
      resultMatrixPlainText0.toStringMatrix();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 224
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.m_StdDevPrec = 0;
      String string0 = resultMatrixCSV0.significanceWidthTipText();
      assertEquals("The width of the significance indicator (0 = optimal).", string0);
  }

  /**
  //Test case number: 225
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      boolean boolean0 = resultMatrixPlainText0.getEnumerateRowNames();
      assertFalse(boolean0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 226
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRemoveFilterName(true);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertTrue(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 227
  /*Coverage entropy=3.201463525756347
  */
  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(1);
      resultMatrixPlainText0.isStdDev(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setShowAverage(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setColOrder((int[]) null);
      resultMatrixGnuPlot1.setRowHidden(0, false);
      resultMatrixPlainText0.countWidthTipText();
      assertEquals(1, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 228
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getRowOrder();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 229
  /*Coverage entropy=3.7666891240096962
  */
  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixPlainText1.clearHeader();
      assertFalse(resultMatrixPlainText1.getRemoveFilterName());
      
      resultMatrixGnuPlot0.setRowHidden(1, true);
      resultMatrixPlainText0.countWidthTipText();
      assertTrue(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 230
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden(2, true);
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixPlainText0.countWidthTipText();
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 231
  /*Coverage entropy=4.018473973867401
  */
  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.toArray();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 232
  /*Coverage entropy=3.7693810015302773
  */
  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 233
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName((String) null);
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 234
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 235
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.getDefaultPrintRowNames();
      assertTrue(boolean0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 236
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.addHeader("", "aU#3'$-X}(1");
      resultMatrixPlainText0.setRanking(intArray0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 237
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.removeFilterName("count-width");
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 238
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(false);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 239
  /*Coverage entropy=4.127134385045088
  */
  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.setMeanWidth((-1211));
      resultMatrixPlainText0.getOptions();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 240
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      int[][] intArray0 = new int[37][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.addHeader("(", "(");
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 241
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getDisplayRow(9);
      assertEquals((-1), int0);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 242
  /*Coverage entropy=3.3718382125292514
  */
  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.toStringMatrix();
      assertTrue(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 243
  /*Coverage entropy=3.2432462150240804
  */
  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[] stringArray0 = new String[0];
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      resultMatrixHTML0.setOptions(stringArray0);
      int int0 = resultMatrixHTML0.getDisplayRow(0);
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 244
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.setSize(5, 5);
      resultMatrixPlainText0.setOptions((String[]) null);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 245
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.meanPrecTipText();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals("The number of decimals after the decimal point for the mean.", string0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 246
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1821);
      resultMatrixLatex0.toStringRanking();
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(1821, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 247
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(11, 11);
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      String string0 = resultMatrixGnuPlot0.getSummaryTitle(13);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(11, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals("n", string0);
      assertEquals(11, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 248
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2380, 1);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2380;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (double) 0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 2380;
      doubleArray0[7] = (double) 0;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixSignificance0.enumerateRowNamesTipText();
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 249
  /*Coverage entropy=4.1893472858138665
  */
  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setOptions((String[]) null);
      ResultMatrixGnuPlot.main((String[]) null);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 250
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      int[] intArray1 = resultMatrixSignificance0.getRowOrder();
      assertNotNull(intArray1);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 251
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintColNames(false);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 252
  /*Coverage entropy=3.3718382125292514
  */
  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificanceWidth(19);
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.toStringMatrix();
      assertEquals(19, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 253
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setStdDevPrec(123);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setRowOrder(intArray0);
      assertEquals(123, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 254
  /*Coverage entropy=3.309443907283561
  */
  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toArray();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 255
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      int[] intArray0 = new int[10];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 256
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[13];
      intArray0[0] = 0;
      resultMatrixSignificance0.setRowOrder((int[]) null);
      String string0 = resultMatrixSignificance0.getSummaryTitle(0);
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals("a", string0);
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 257
  /*Coverage entropy=2.8804181726230462
  */
  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      int int0 = 25;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(25, 22);
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      resultMatrixSignificance0.m_ColNameWidth = 22;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      resultMatrixSignificance0.m_StdDevPrec = 22;
      int int1 = (-1494);
      resultMatrixSignificance0.getSignificanceCount(25, (-1494));
      resultMatrixSignificance0.setPrintColNames(false);
      resultMatrixSignificance0.getDefaultPrintColNames();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 258
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.setMean((-2959), (-1), 0.0);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(26, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 259
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.setMean((-1858), (-1970), 6.7);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 260
  /*Coverage entropy=2.9079575486106544
  */
  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.setColOrder((int[]) null);
      resultMatrixPlainText0.setMean(0, 0, 860.0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 261
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 262
  /*Coverage entropy=2.8615696093361764
  */
  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 263
  /*Coverage entropy=2.833213344056217
  */
  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      int[][] intArray0 = new int[3][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixPlainText0.getSignificanceCount(9, 28);
      assertEquals(0, int0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 264
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(0);
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-217), (-787));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 265
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixPlainText0.setOptions((String[]) null);
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 266
  /*Coverage entropy=2.9066635494413338
  */
  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getVisibleRowCount();
      assertEquals(1, int0);
      
      int int1 = resultMatrixLatex0.getSignificanceCount(1, 1);
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, int1);
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
  }

  /**
  //Test case number: 267
  /*Coverage entropy=3.3994069441780477
  */
  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSignificanceWidth((-1));
      resultMatrixPlainText0.setCountWidth((-1));
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(19, stringArray0.length);
      
      String string0 = resultMatrixPlainText0.showStdDevTipText();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals("Whether to display the standard deviation column.", string0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 268
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth(95);
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setColOrder(intArray0);
      assertEquals(95, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 269
  /*Coverage entropy=3.332204510175204
  */
  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.getSignificanceCount(805, (-1722));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setColNameWidth((-183));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.meanWidthTipText();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 270
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.getSummaryTitle(25);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      assertEquals("z", string0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 271
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 272
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 273
  /*Coverage entropy=2.6644896195281933
  */
  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getDisplayName();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 274
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(1);
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixPlainText0.isStdDev(2);
      resultMatrixPlainText0.setMeanWidth(2);
      resultMatrixPlainText0.globalInfo();
      assertEquals(2, resultMatrixPlainText0.getMeanWidth());
      
      boolean boolean0 = resultMatrixHTML0.getShowStdDev();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 275
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(1);
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixPlainText0.isStdDev(2);
      resultMatrixPlainText0.setMeanWidth(2);
      resultMatrixPlainText0.globalInfo();
      assertEquals(2, resultMatrixPlainText0.getMeanWidth());
      
      boolean boolean0 = resultMatrixHTML0.getShowStdDev();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 276
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 277
  /*Coverage entropy=4.007333185232473
  */
  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) \n------------\nrow0(0)    |\n------------\n($\\circ$/  |\n", string0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 278
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearHeader();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("Gm1|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 279
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(false);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 280
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      int[][] intArray0 = new int[4][3];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText0.setRanking(intArray0);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 281
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.printRowNamesTipText();
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 282
  /*Coverage entropy=4.043051267834554
  */
  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ShowAverage = true;
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0       \n-----------------------------------------\nrow0                       (0)          |\n-----------------------------------------\nAverage                          NaN.00 |\n-----------------------------------------\n(v/ /*)                                 |\n", string0);
      
      resultMatrixPlainText0.removeFilterNameTipText();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }
}
