/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 05:20:15 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.rowio.RowOutputTextQuoted;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("LTs3PuT[aEI7<X^b2C");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("LTs3PuT[aEI7<X^b2C", defaultDBTable0, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.reset();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) "LTs3PuT[aEI7<X^b2C", 10, 10);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter1);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("T");
      StringBuilder stringBuilder1 = stringBuilder0.append("T");
      SQLUtil.addRequiredCondition("T", stringBuilder1);
      assertEquals("TT and T", stringBuilder1.toString());
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("T");
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("/'?P'T=hhx;&TUIX", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT /'?P'T=hhx;&TUIX FOREIGN KEY () REFERENCES T()", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("m}^/\"%-%uA");
      DBDataType dBDataType0 = DBDataType.getInstance(23000, "m}^/\"%-%uA");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("m}^/\"%-%uA", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.setDefaultValue("m}^/\"%-%uA");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("m}^/\"%-%uA M}^/\"%-%UA(2,2) DEFAULT m}^/\"%-%uA NULL", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("FORIGN KEY ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("FORIGN KEY ", defaultDBTable0, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      defaultDBColumn0.setName("");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("FOREIGN KEY ", true, defaultDBTable0, "EE");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      RowOutputTextQuoted rowOutputTextQuoted0 = new RowOutputTextQuoted("EE", "EE", "orderedColumns", false, "insert");
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputTextQuoted0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      Locale locale0 = new Locale("8");
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "8", (Object[]) dBColumnArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec1, printWriter0);
      assertEquals(58, rowOutputTextQuoted0.size());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
      
      String string1 = SQLUtil.substituteMarkers("", "()", stringArray0[0]);
      assertEquals("", string1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = 3757.6546414728;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("3757.6546414728", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SQLUtil.isQuery("select into");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      DataDescriptorGenerator dataDescriptorGenerator0 = dataDictionaryImpl0.dataDescriptorGenerator;
      String string0 = "alter tablexu*ufmu)xhl";
      FromVTI fromVTI0 = new FromVTI();
      // Undeclared exception!
      try { 
        fromVTI0.getSchemaDescriptor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.compile.FromTable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, (String) null, "SELECT * FROM ");
      String string0 = SQLUtil.typeAndName(dBCheckConstraint0);
      assertEquals("check constraint constraint", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8937277100473913
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null);
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition(" on ", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("GVsDy", false, "GVsDy", "GVsDy");
      SQLUtil.constraintName(dBCheckConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "GVsDy");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("GVsDyCONSTRAINT GVsDy ", stringBuilder0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("#UA_d`[]Y.,n9");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ow'", dBSchema0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "CASEWHEN";
      stringArray0[1] = "CASEWHEN";
      stringArray0[2] = "CASEWHEN";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "CASEWHEN", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("ow'", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("uatecrat");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "CASEWHEN");
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, printWriter0);
      assertNull(dBTable0.getDoc());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SQLUtil.removeComments("\n/* gru @ed /");
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("\n/* gru @ed /");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder("b0 {");
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("b0 { or null", stringBuilder0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = SQLUtil.normalize("\n/* gru @ted */", false);
      assertEquals("/* gru @ ted */", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessionts0o2?]=noh");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("left");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "left", true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
      
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("renamea");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SQLUtil.renderColumnListWithTableName("#fw5gf#CKud'e", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "#fw5gf#CKud'e";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("#fw5gf#CKud'e", stringArray0, "#fw5gf#CKud'e", "xulED[pa[Qd*)F/", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SQLUtil.renderColumnListWithTableName("^<CXb.O!K", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "^<CXb.O!K";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("^<CXb.O!K", stringArray0, "^<CXb.O!K", "inner", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select ");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("NCLOB", defaultDBTable0, 9, "NCLOB");
      defaultDBColumn0.getForeignKeyConstraint();
      defaultDBColumn0.toString();
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("NCLOB NCLOB NULL", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.164400258041059
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create materialized xiew");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("dbB(w@`K", stringArray0, "_JENS!c,oGN/PqTKO^", "_JENS!c,oGN/PqTKO^", (String[]) null);
      assertEquals("left join _JENS!c,oGN/PqTKO^ as _JENS!c,oGN/PqTKO^ on ", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create table ");
      DBDataType dBDataType0 = DBDataType.getInstance(445, "updatecbxsrnbl?h\"");
      Integer integer0 = Integer.valueOf(445);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("updatecbxsrnbl?h\"", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.isIdentical(defaultDBTable0);
      StringBuilder stringBuilder0 = new StringBuilder(445);
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(29);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("\u001DUPDATECBXSRNBL?H\"(445,445)", stringBuilder1.toString());
      assertEquals("\u001DUPDATECBXSRNBL?H\"(445,445)", stringBuilder0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(500);
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(3697);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-372630816), "Otc>1Oj2");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("66", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("\u0E71OTC>1OJ2(1)", stringBuilder1.toString());
      assertEquals("\u0E71OTC>1OJ2(1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SQLUtil.removeComments("\n/* gru @ted */");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("\n", (DBTable) null, (-1704), "bT0/3'kz7");
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder(stringBuilder0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      Random.setNextRandom((-1704));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("%J");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized viewn");
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("tNtV", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      MockFile mockFile0 = new MockFile("alter materialized viewn");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.format("alter materialized viewn", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      DBUniqueIndex dBUniqueIndex0 = null;
      try {
        dBUniqueIndex0 = new DBUniqueIndex("alter materialized viewn", false, (DBUniqueConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBUniqueIndex", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("execcreate materialized xiew");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0439464578101347
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SQLUtil.isDDL("");
      SQLUtil.normalize("-&|i", false);
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.437465328065844
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("internal");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-14506066), "internal");
      dBDataType0.isAlpha();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("internal", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("INTERNAL(2)", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("m}^/\"%-%uA");
      DBDataType dBDataType0 = DBDataType.getInstance(23000, "m}^/\"%-%uA");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("m}^/\"%-%uA", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("m}^/\"%-%uA M}^/\"%-%UA(2,2) NULL", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[5];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("GVsDy", defaultDBTable0, 1, "GVsDy");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("GVSDY", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, (String) null, "updHte");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("getNCharacterStream(int)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"int\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4359838465843624
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("bP0%gr'0 D3~b1");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("update", defaultDBTable0, (DBDataType) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SQLUtil.isProcedureCall("call");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("call");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("execcreate table");
      assertNull(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("3xW|w\"yDC4pP", stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("\n/* group sorted */");
      assertNull(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "=?;5w<(LSg?", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("=?;5w<(LSg?", stringBuilder0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("=?;5w<(LSg?CONSTRAINT =?;5w<(LSg? ", stringBuilder0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select intocreate materialized xiew", defaultDBTable0, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Character character0 = new Character('Q');
      columnDescriptorList0.add((Object) character0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Character cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = SQLUtil.renderColumnListWithTableName(")-RaFrQ.9<RV>LY", stringArray0);
      assertEquals(")-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ")-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null, )-RaFrQ.9<RV>LY.null", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , )", string1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = SQLUtil.normalize("=m}^/\"%-%uA", false);
      assertEquals("= m } ^ / \"%-%uA\"", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("42X51");
      assertFalse(boolean0);
      
      DBCatalog dBCatalog0 = new DBCatalog("42X51");
      DBSchema dBSchema0 = new DBSchema("42X51", dBCatalog0);
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("42X51.42X51", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.011454046064456
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = SQLUtil.normalize("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", true);
      assertEquals("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", string0);
      
      SQLUtil.removeComments("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit";
      stringArray0[1] = "alter index";
      stringArray0[2] = "org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit";
      stringArray0[3] = "|7az+BNQj1";
      String string1 = SQLUtil.join("Concurrent update", "|7az+BNQj1", stringArray0, "|7az+BNQj1", "drop tableorg.apache.derby.impl.", stringArray0);
      assertEquals("Concurrent update join |7az+BNQj1 as drop tableorg.apache.derby.impl. on |7az+BNQj1.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit = drop tableorg.apache.derby.impl..org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit and |7az+BNQj1.alter index = drop tableorg.apache.derby.impl..alter index and |7az+BNQj1.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit = drop tableorg.apache.derby.impl..org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit and |7az+BNQj1.|7az+BNQj1 = drop tableorg.apache.derby.impl..|7az+BNQj1", string1);
      
      boolean boolean0 = SQLUtil.isDML("drop materialized view");
      assertFalse(boolean0);
      
      StringWriter stringWriter0 = new StringWriter();
      Object object0 = new Object();
      String string2 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string2);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("r/eDzma\"1");
      System.setCurrentTimeMillis((-1L));
      String string3 = SQLUtil.innerJoin("LTRIM", stringArray0, ".9vkKiF`GOkdeu5g", "org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", stringArray0);
      assertEquals(".9vkKiF`GOkdeu5g as org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit on LTRIM.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit = org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit and LTRIM.alter index = org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.alter index and LTRIM.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit = org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit and LTRIM.|7az+BNQj1 = org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.|7az+BNQj1", string3);
      
      String string4 = SQLUtil.renderColumnListWithTableName("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit", stringArray0);
      assertEquals("org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit, org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.alter index, org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit, org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit.|7az+BNQj1", string4);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = SQLUtil.normalize("o/pPR7'f&GEPrW", false);
      assertEquals("o / pPR7 'f&GEPrW'", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = SQLUtil.normalize("`-lWkP7nv&?{l", true);
      assertEquals("` - lWkP7nv & ? { l", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("wPVOPD", true, "wPVOPD", "wPVOPD");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      SQLUtil.addRequiredCondition("wPVOPD", stringBuilder0);
      assertEquals("wPVOPD", stringBuilder0.toString());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object object0 = new Object();
      SQLUtil.renderValue(stringBuffer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4001443355569787
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[9];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) defaultDBTable0;
      objectArray0[1] = (Object) defaultDBTable0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8786753718922282
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("org.apache.derby.iapi.sql.dictionary.SubChekConstraintDescriptor");
      String[] stringArray0 = new String[8];
      stringArray0[1] = "org.apache.derby.impl.store.raw.data.ContainerHandleActionOnCommit";
      stringArray0[2] = "";
      stringArray0[3] = "ResultSetMetaData";
      stringArray0[4] = "y#+J$Mw3$:M;W|]x?Ph";
      stringArray0[5] = "org.apache.derby.iapi.sql.dictionary.SubChekConstraintDescriptor";
      stringArray0[6] = "%b:mCwFu";
      stringArray0[7] = "";
      SQLUtil.join("", "y#+J$Mw3$:M;W|]x?Ph", stringArray0, "(&Xp*P2.\"", "Illegal column type format: ", stringArray0);
      SQLUtil.isDML("ResultSetMetaData");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.getBuffer();
      Object object0 = new Object();
      Character character0 = Character.valueOf('\"');
      SQLUtil.renderValue(character0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(stringArray0[0]);
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("|g.OvuNmukEe$ocW=t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.5669499167988556
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("uatecrRte table");
      assertNull(boolean0);
      
      Character character0 = Character.valueOf('K');
      String string0 = SQLUtil.substituteMarkers("select intocreate materialized xiew", "#8cdsgJ|o%o{1", character0);
      assertEquals("select intocreate materialized xiew", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = SQLUtil.normalize("position(Clob,start)", true);
      assertEquals("position (Clob, start)", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.006961364732055
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.53204967566463
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "alter indexa", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT \"alter indexa\" CONSTRAINT \"alter indexa\" ", stringBuilder0.toString());
      
      SQLUtil.isQuery("SELECT * FROM null WHERE null = null AND null = null AND null = null");
      String string0 = SQLUtil.renderColumnListWithTableName("drop m", stringArray0);
      assertEquals("drop m.null, drop m.null, drop m.null", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("=?;5w<(LVSg?");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "=?;5w<(LVSg?", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("GVsD", false, "GVsD", "GVsD");
      StringBuilder stringBuilder0 = new StringBuilder("GVsD");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.addOptionalCondition("GVsD", stringBuilder1);
      assertEquals("GVsD or GVsD", stringBuilder1.toString());
      assertEquals("GVsD or GVsD", stringBuilder0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" NOT NULL", false, "k|{LI+kP}.glV:KMNQ", " NOT NULL");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \" NOT NULL\" ", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", true, "SELECT * FROM ", "SELECT * FROM ");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"SELECT * FROM \" ", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("FBLog4j", true, "", "FBLog4j");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT FBLog4j CHECK FBLog4j", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("PW(W#a.GG(C!1%t");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "PW(W#a.GG(C!1%t", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT PW(W#a.GG(C!1%t UNIQUE (, , , , , )", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("update#w?m3e7d_60[g");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("drop tablecreate materialized xiew");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("=?;5w<(LSg?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: =?;5w<(LSg?
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SQLUtil.join("GVsDy", "GVsDy", stringArray0, "GVsDy", "GVsDy", stringArray0);
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join("GVsDy", "GVsDy join GVsDy as GVsDy on GVsDy.null = GVsDy.null and GVsDy.null = GVsDy.null and GVsDy.null = GVsDy.null", stringArray0, "GVsDy", "GVsDy join GVsDy as GVsDy on GVsDy.null = GVsDy.null and GVsDy.null = GVsDy.null and GVsDy.null = GVsDy.null", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.568155382556487
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("uatecrRte table");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.innerJoin("uatecrRte table", stringArray0, "uatecrRte table", "uatecrRte table", stringArray1);
      assertEquals("uatecrRte table as uatecrRte table on ", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("create tableselect * fromx");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("exec");
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("exec", (String[]) null, "exec", "exec", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = SQLUtil.normalize("drop index\bxsrnb*?h\"", false);
      assertEquals("drop index \b xsrnb * ? h \"\"", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[6];
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.4359838465843624
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("atecrate table");
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("renameselect * from");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create table ");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("6qBg7", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("internal", stringArray0, "RF6O1b~a:%2", "exec", stringArray0);
      assertEquals("left join RF6O1b~a:%2 as exec on ", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.3510867606865529
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("X&vK.t;");
      boolean boolean1 = SQLUtil.isDDL("X&vK.t;");
      assertTrue(boolean1 == boolean0);
      
      String string0 = SQLUtil.normalize("X&vK.t;", false);
      assertEquals("X & vK .t ;", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = new Boolean((String) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES null()", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("MAX_MEMORY_ROWS");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("PW(W#a.GG(C!1%t");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "PW(W#a.GG(C!1%t", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , , , )", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("wP8OPD", true, "wP8OPD", "wP8OPD");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT wP8OPD ", string0);
      
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT wP8OPD ", stringBuilder0.toString());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("wPVOPD", true, "wPVOPD", "wPVOPD");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK wPVOPD", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.083122122960416
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null AND null = null AND null = null", string0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "SELECT * FROM null WHERE null = null AND null = null AND null = null", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , )", string1);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "oPXA6Y5h|s";
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "{", "{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("atecrate table", "atecrate table", (String[]) null, "atecrate table", "atecrate table", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("\n/* group sorted */", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("1xL|7MF");
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertNotNull(string0);
      assertEquals("catalog 1xL|7MF", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = SQLUtil.normalize("drop index\bxsrnb*?h\"", true);
      assertEquals("drop index \b xsrnb * ? h \"\"", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertEquals("catalog null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      String string0 = SQLUtil.innerJoin("", stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("null as null on . = null. and . = null. and .null = null.null and . = null. and . = null. and . = null. and . = null. and . = null.", string0);
      
      String string1 = SQLUtil.renderValue("");
      assertEquals("''", string1);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select into%2ix");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      constraintDescriptorList0.clone();
      String string0 = SQLUtil.renderValue(constraintDescriptorList0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5311106441766205
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[8];
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".null, .null, .null, .null, .null, .null, .null, .null", string0);
      
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", string1);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("297&CrNS_-1ho.1\"BP", "297&CrNS_-1ho.1\"BP", "297&CrNS_-1ho.1\"BP");
      assertEquals("'297&CrNS_-1ho.1\"BP'", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("EbNo6a! i8y;n");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("r45_Ruks|DMfzE=");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.3238614379613667
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("internl");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sesionmzvy");
      assertNull(boolean0);
      
      DBCatalog dBCatalog0 = new DBCatalog();
      String string0 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("EXTERNAL");
      assertNull(boolean0);
      
      String string0 = SQLUtil.leftJoin("]\n", stringArray0, "]\n", "EXTERNAL", stringArray0);
      assertEquals("left join ]\n as EXTERNAL on ]\n.null = EXTERNAL.null and ]\n.null = EXTERNAL.null and ]\n.null = EXTERNAL.null and ]\n.null = EXTERNAL.null", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("position(Clob,start)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Clob\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("mVQ$i@bu P@JAoF*U", "mVQ$i@bu P@JAoF*U", (String[]) null, "mVQ$i@bu P@JAoF*U", "qEXV)[0Zx*zh", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin((String) null, (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
