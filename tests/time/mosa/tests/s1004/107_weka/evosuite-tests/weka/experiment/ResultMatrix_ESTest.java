/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 17:55:58 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.5378746247950663
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.WIN_STRING = "";
      resultMatrixPlainText0.setSize(0, 1);
      resultMatrixPlainText0.setCount((-1730), (-1730));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1357, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3578068525491287
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(false);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setRowHidden(0, false);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.861954607480479
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(938, 1);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.isRowName((-1682));
      int[][] intArray0 = new int[0][3];
      resultMatrixCSV0.m_Wins = intArray0;
      // Undeclared exception!
      resultMatrixCSV0.toArray();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1095368272963615
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCount(16, 2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.630907059965847
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.setCount(0, (-1.322486266418372));
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.489065606887324
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setCount(0, 2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5845489468648077
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[3];
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixLatex0.setRanking(intArray1);
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.meanWidthTipText();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.078568443406605
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixPlainText0.setColName((-189), "Qjh[7");
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.5400976589623596
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName(2, ")");
      resultMatrixHTML0.getVisibleColCount();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.838094933029097
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getSignificance(0, 1);
      resultMatrixHTML0.getVisibleColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_PrintColNames = true;
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.8967431924819866
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(45, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificance(0, 45);
      resultMatrixHTML0.getVisibleColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.838094933029097
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixPlainText0.m_MeanWidth = (-3492);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getSignificance(0, 0);
      resultMatrixHTML0.getVisibleColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.3925952244510262
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.getVisibleRowCount();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.538028931229915
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getSignificance((-1), 84);
      resultMatrixHTML0.getVisibleColCount();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=4.082233591412409
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixPlainText0.getSignificance(0, (-1));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=4.136457491554829
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double[][] doubleArray0 = new double[1][1];
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getAverage(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getOptions();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.491227769049486
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixGnuPlot0.countWidthTipText();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=4.21042741261626
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[3];
      resultMatrixLatex0.setOptions(stringArray0);
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 1;
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex(501, (-2241));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2412315313712234
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.getDisplayName();
      resultMatrixHTML0.globalInfo();
      resultMatrixSignificance0.setSignificance(1, 3188, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      resultMatrixSignificance0.clearSummary();
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixCSV0.getRevision();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.144277720024872
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColHidden(0, false);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.314771011606007
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int[][] intArray0 = new int[0][8];
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.setColHidden(1, true);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=4.082319897688725
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.clearRanking();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setRemoveFilterName(true);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.setRowHidden((-995), true);
      resultMatrixPlainText0.toStringMatrix();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4478136061490523
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.clearRanking();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.m_PrintRowNames = false;
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.assign(resultMatrixPlainText1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=4.007076222505061
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1382, 2);
      resultMatrixLatex0.getColName(622);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.9032376158319897
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificanceCount(0, 1);
      resultMatrixPlainText0.getColName(0);
      resultMatrixHTML0.toStringRanking();
      resultMatrixPlainText0.toStringSummary();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3926842320166695
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth((-3328));
      resultMatrixLatex0.setMeanWidth(2);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.585547947863809
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 1;
      resultMatrixLatex0.m_ColOrder = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      
      resultMatrixLatex0.getDisplayCol(0);
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3445136687330694
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 2);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(2, int0);
      
      resultMatrixLatex0.getRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.683502410675995
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixPlainText0.m_RowNames = null;
      resultMatrixGnuPlot0.setRowNameWidth(3);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "?[m@>m-0Sy)-a{,I:";
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.getRowNameWidth();
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.9963856994143225
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(7, 7);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setRowNameWidth(7);
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(7, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.342254858453136
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      resultMatrixHTML0.LEFT_PARENTHESES = ")";
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.906569297037939
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.removeFilterName((String) null);
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificanceCount(0, 1);
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.8792824054414043
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixHTML0);
      resultMatrixHTML0.toStringKey();
      resultMatrixLatex0.getDisplayCol(16);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (-876.2167631937);
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (-1549.99088526967);
      doubleArray1[4] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) (-3943);
      doubleArray2[2] = 599.6713;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      resultMatrixHTML0.m_Mean = doubleArray0;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixHTML0.getPrintRowNames();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.715226189831702
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixGnuPlot0.significanceWidthTipText();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=4.082347978268757
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML1.getVisibleColCount());
      
      resultMatrixHTML1.toArray();
      resultMatrixHTML0.getVisibleColCount();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      resultMatrixHTML2.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getMean((-1607), 5);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.263816792415219
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(35, 35);
      assertEquals(35, resultMatrixPlainText0.getRowCount());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = ")";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.getMean(25, 35);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.342344542384537
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixCSV0.getStdDev(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.673784095965898
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      resultMatrixGnuPlot0.rowNameWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      resultMatrixHTML0.m_Significance = intArray0;
      resultMatrixHTML0.clear();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.toArray();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixSignificance0.setShowStdDev(false);
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3430627332615153
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.removeFilterName("");
      int[][] intArray0 = new int[0][8];
      resultMatrixPlainText0.setRanking(intArray0);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearRanking();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.541121077179204
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.toStringRanking();
      resultMatrixPlainText0.getSignificance(1, 2);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertTrue(resultMatrixPlainText1.getPrintColNames());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText1.getCountWidth());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertFalse(resultMatrixPlainText1.getEnumerateColNames());
      assertFalse(resultMatrixPlainText1.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      assertEquals(50, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=4.083404443379399
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 11);
      int[] intArray0 = new int[3];
      resultMatrixPlainText0.toStringKey();
      intArray0[0] = 0;
      intArray0[1] = 2;
      resultMatrixPlainText0.setPrintColNames(true);
      int[][] intArray1 = new int[6][8];
      int[] intArray2 = new int[2];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray3 = new int[3];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray1[1] = intArray3;
      resultMatrixPlainText0.m_Wins = intArray1;
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.m_StdDevPrec = 920;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.m_NonSigWins = null;
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4270023892320745
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 11);
      resultMatrixPlainText0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getDisplayCol(1);
      assertEquals(11, resultMatrixLatex0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.8569092599710553
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixCSV0.assign(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.getStdDev(0, 2);
      resultMatrixPlainText0.getColName((-956));
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.238390843606944
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      Integer integer0 = new Integer(0);
      resultMatrixGnuPlot0.setColHidden(2048, false);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.625507498045963
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(28, 28);
      Vector<Vector<Object>> vector0 = new Vector<Vector<Object>>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixGnuPlot0.setMeanPrec(28);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      String[][] stringArray0 = new String[8][9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      String[] stringArray1 = new String[4];
      stringArray1[0] = " ";
      stringArray1[1] = "v";
      stringArray1[2] = "v";
      stringArray1[3] = " ";
      stringArray0[5] = stringArray1;
      stringArray0[6] = null;
      stringArray0[7] = null;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray0, 28, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.631557208055134
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      int int0 = resultMatrixLatex0.getDisplayCol((-830));
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6750598183718983
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowName((-656));
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-656));
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.20735279339242
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixHTML0.setSignificance(26, 26, 1);
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.0198268431492625
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int[] intArray0 = new int[13];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int int0 = resultMatrixHTML0.getSignificanceWidth();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.1913662210863785
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setColOrder(intArray0);
      int int0 = resultMatrixPlainText0.getColNameWidth();
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, int0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=4.1095774300705
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      
      resultMatrixHTML0.m_RemoveFilterName = true;
      resultMatrixHTML0.toString();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getVisibleColCount();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(11, 1);
      resultMatrixCSV0.getDisplayName();
      int int0 = resultMatrixHTML0.getMeanPrec();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.6734666743846436
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_PrintColNames = true;
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.getMeanWidth();
      String[][] stringArray0 = new String[7][4];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "";
      stringArray1[1] = " ";
      stringArray1[2] = " ";
      stringArray1[3] = "v";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[0];
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[1];
      stringArray5[0] = "*";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[8];
      stringArray6[0] = "v";
      stringArray6[1] = "[";
      stringArray6[2] = "[";
      stringArray6[3] = "v";
      stringArray6[4] = " ";
      stringArray6[5] = "]";
      stringArray6[6] = " ";
      stringArray6[7] = "v";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[2];
      stringArray7[0] = "*";
      stringArray7[1] = "v";
      stringArray0[6] = stringArray7;
      int int0 = resultMatrixCSV0.getColSize(stringArray0, (-1560));
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.9465381487848608
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getOptions();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) \n------------\nrow0(0)    |\n------------\n($\\circ$/  |\n", string0);
      
      resultMatrixPlainText0.getOptions();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      resultMatrixLatex0.getDefaultPrintRowNames();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=4.078208655517241
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 11);
      int[] intArray0 = new int[3];
      resultMatrixPlainText0.toStringKey();
      intArray0[0] = 0;
      intArray0[1] = 1239;
      resultMatrixPlainText0.setPrintColNames(true);
      int[][] intArray1 = new int[6][8];
      int[] intArray2 = new int[2];
      intArray2[0] = 1239;
      intArray2[1] = 1239;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray3 = new int[3];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 2;
      intArray1[1] = intArray3;
      resultMatrixPlainText0.m_Wins = intArray1;
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(11, resultMatrixPlainText0.getVisibleRowCount());
      
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.m_StdDevPrec = 920;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.m_NonSigWins = null;
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col | null    \n--------------------------------------------\nrow0                       (0)    |   0.00  \nrow1                       (0)    |   0.00  \nrow2                       (0)    |   0.00  \nrow3                       (0)    |   0.00  \nrow4                       (0)    |   0.00  \nrow5                       (0)    |   0.00  \nrow6                       (0)    |   0.00  \nrow7                       (0)    |   0.00  \nrow8                       (0)    |   0.00  \nrow9                       (0)    |   0.00  \nrow10                      (0)    |   0.00  \n--------------------------------------------\n                          (v/ /*) |  (0/0/0)\n", string0);
      
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.TIE_STRING = null;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getMean(0, (-12));
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.99513015099816
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setRowNameWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixLatex0.setRowHidden(2, false);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.34282544890863
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.m_PrintColNames = true;
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.setRowHidden(1, true);
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=4.142297971676148
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixPlainText0.toArray();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getMean(1, 920);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2887062889563237
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.5099391537108495
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(28, 28);
      resultMatrixGnuPlot0.setColNameWidth(16);
      int[] intArray0 = new int[2];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      intArray0[0] = 16;
      intArray0[1] = 16;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setMeanPrec(28);
      resultMatrixGnuPlot0.setStdDevPrec((-1760));
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getAverage(28);
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.isMean(39);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(28, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.866582563224703
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(14, 14);
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixGnuPlot0.setColNameWidth(16);
      int[] intArray0 = new int[2];
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      intArray0[0] = 16;
      intArray0[1] = 16;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setMeanPrec(14);
      resultMatrixGnuPlot0.setStdDevPrec((-1760));
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getAverage(14);
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.isMean(14);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.746970847219173
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 4002);
      // Undeclared exception!
      resultMatrixHTML0.toArray();
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.78403692028593
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.stdDevPrecTipText();
      double double0 = resultMatrixGnuPlot0.getAverage(2);
      assertEquals(0.0, double0, 0.01);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertTrue(resultMatrixPlainText1.getPrintColNames());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertTrue(resultMatrixPlainText1.getEnumerateColNames());
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(19, stringArray0.length);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=4.083403810664262
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 11);
      int[] intArray0 = new int[3];
      resultMatrixPlainText0.toStringKey();
      intArray0[0] = 0;
      intArray0[1] = 1239;
      resultMatrixPlainText0.setPrintColNames(true);
      int[][] intArray1 = new int[6][8];
      int[] intArray2 = new int[2];
      intArray2[0] = 1239;
      intArray2[1] = 1239;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray3 = new int[3];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 2;
      intArray1[1] = intArray3;
      resultMatrixPlainText0.m_Wins = intArray1;
      resultMatrixPlainText0.toArray();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixPlainText0.m_StdDevPrec = 920;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.m_NonSigWins = null;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.TIE_STRING = null;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getDisplayName();
      double double0 = resultMatrixPlainText0.getMean(0, 6);
      assertEquals(11, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.994846431898373
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getMean(0, 1);
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=4.0540757968583705
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(26);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      assertEquals(2, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getPrintColNames());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.4896072249698613
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getAverage(1);
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=4.024688283813488
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot0.getAverage((-2795));
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.3930413059696725
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanPrec((-68));
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.globalInfo();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.6316774220360197
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      int int0 = resultMatrixLatex0.getDisplayCol(1);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.191366221086379
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      
      resultMatrixLatex0.getRowOrder();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.492603094601913
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(26);
      resultMatrixPlainText0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertEquals(26, resultMatrixPlainText1.getRowNameWidth());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      assertEquals(5, resultMatrixPlainText1.getCountWidth());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      assertTrue(resultMatrixPlainText1.getPrintColNames());
      
      int int0 = resultMatrixPlainText0.getSignificanceCount(1, 0);
      assertEquals(0, int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(432, 2);
      resultMatrixHTML0.toStringRanking();
      assertEquals(2, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.919024683156713
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getDisplayCol(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setMeanWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.setRowName(2, ")");
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot2.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(1, 2049);
      resultMatrixGnuPlot3.setOptions((String[]) null);
      int int0 = resultMatrixGnuPlot0.getCountWidth();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=4.060000862435546
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixPlainText0.toArray();
      resultMatrixGnuPlot0.getColName(2);
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1) col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      Integer integer0 = new Integer(0);
      resultMatrixGnuPlot0.setStdDev(1, 0, (-1.0));
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.375511579594818
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.setStdDev(3, (-181), 1);
      resultMatrixPlainText0.getRowCount();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.8873934557723757
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      int int0 = 0;
      resultMatrixHTML0.m_Mean = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.587445331056156
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.RIGHT_PARENTHESES = "";
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2, 0);
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixGnuPlot0.getRowHidden(2259);
      String string0 = resultMatrixPlainText0.printRowNamesTipText();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals("Whether to output row names or just numbers representing them.", string0);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.176517123771847
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int int0 = 102;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 102);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.padString((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.8081970244905436
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.clearRanking();
      assertEquals(1, resultMatrixPlainText1.getVisibleColCount());
      assertEquals(1, resultMatrixPlainText1.getVisibleRowCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText1.getVisibleRowCount();
      assertEquals(2, resultMatrixPlainText1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.235404558618093
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      resultMatrixHTML0.getColCount();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV0.clear();
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.9949101173770223
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
      
      resultMatrixSignificance0.getColHidden(94);
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      int int0 = resultMatrixGnuPlot0.getCountWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.963969118347428
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec((-3881));
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getColHidden(1672);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.1257298336542223
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=4.296975431875986
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(339);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "hl~r!I";
      stringArray0[1] = "\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)";
      stringArray0[2] = "col0";
      stringArray0[3] = ")";
      stringArray0[4] = "";
      stringArray0[5] = "v";
      stringArray0[6] = "col0";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      resultMatrixGnuPlot0.addHeader("v", "col0");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getRevision();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot1.setStdDev(0, 37, 1);
      resultMatrixSignificance0.showStdDevTipText();
      assertEquals(339, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0480893752114575
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[19][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.getRowCount();
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[4];
      intArray0[1] = 2;
      resultMatrixLatex0.stdDevWidthTipText();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.337078356062727
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-394));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.1779409732506165
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getDisplayName();
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=4.188807063785288
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string0);
      
      resultMatrixSignificance0.clear();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = ")";
      stringArray0[2] = "v";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixSignificance0.colNameWidthTipText();
      String[][] stringArray1 = new String[9][7];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      stringArray1[7] = stringArray0;
      stringArray1[8] = stringArray0;
      int int0 = resultMatrixSignificance0.getColSize(stringArray1, 97);
      assertEquals(0, int0);
      assertFalse(resultMatrixSignificance0.getShowStdDev());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.540320757051153
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      resultMatrixPlainText0.setRowOrder((int[]) null);
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.771138020377974
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getColHidden(1672);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.3155929110989417
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(26);
      resultMatrixPlainText0.LEFT_PARENTHESES = "wi";
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(26, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=4.172813853898977
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 97;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixPlainText0.getSignificanceCount(9, 1);
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixGnuPlot0.getEnumerateColNames();
      resultMatrixHTML0.toArray();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      resultMatrixHTML2.setSignificanceWidth(5);
      resultMatrixHTML0.getRowHidden(5);
      resultMatrixHTML1.getVisibleColCount();
      resultMatrixHTML1.toStringRanking();
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getPrintColNames());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(5, resultMatrixHTML1.getCountWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      
      resultMatrixHTML0.padString("", 325, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(0, 2);
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot1.setPrintColNames(true);
      assertFalse(resultMatrixGnuPlot1.getEnumerateColNames());
      
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixHTML2.getDefaultCountWidth();
      assertTrue(resultMatrixHTML2.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML2.getRowNameWidth());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.932314963682471
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setSignificanceWidth((-1934));
      resultMatrixHTML0.RIGHT_PARENTHESES = "Plain Text";
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      resultMatrixPlainText0.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.trimString((String) null, 191);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.1417762310433357
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[2];
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5873928183218178
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(648, 0);
      resultMatrixPlainText0.getRowHidden(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getStdDev(1, 97);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.4869603437294296
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColHidden((-2538));
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=4.082395342950493
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixPlainText0.getSummaryTitle(125);
      resultMatrixGnuPlot0.setMeanWidth(2);
      resultMatrixGnuPlot0.setRowName(0, ")");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.addHeader("*", "");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                      (1) \n---------------------------------\nrow0                     (0)    |\n---------------------------------\n(v/ /*)                         |\n", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.7163377538022084
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getCount(2);
      boolean boolean0 = resultMatrixGnuPlot0.isSignificance(2);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1072);
      resultMatrixSignificance0.getDisplayName();
      int int0 = resultMatrixHTML0.getMeanPrec();
      assertEquals(2, int0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = " ";
      stringArray0[5] = " ";
      stringArray0[6] = ")";
      stringArray0[7] = "v";
      stringArray0[8] = " ";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixPlainText0.clearRanking();
      resultMatrixPlainText0.setMean(3, (-953), 0.0);
      String[][] stringArray1 = new String[2][1];
      String[] stringArray2 = new String[7];
      stringArray2[0] = "*";
      stringArray2[1] = ")";
      stringArray2[2] = "";
      stringArray2[3] = " ";
      stringArray2[4] = ")";
      stringArray2[5] = "\n3. cols numbered\n";
      stringArray2[6] = "v";
      stringArray1[0] = stringArray2;
      String[] stringArray3 = new String[1];
      stringArray3[0] = " ";
      stringArray1[1] = stringArray3;
      resultMatrixSignificance0.getColSize(stringArray1, 2, true, true);
      assertEquals(0, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.572529972745377
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(26);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.isMean(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.doubleToString(26, 26);
      resultMatrixCSV0.getRevision();
      resultMatrixPlainText0.stdDevWidthTipText();
      assertEquals(26, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.9640857377832233
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getStdDev((-2255), 8);
      resultMatrixGnuPlot0.trimString("", 8);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-2255), 44);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.953386892252113
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth((-1));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.globalInfo();
      String string0 = resultMatrixGnuPlot1.toStringMatrix();
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.9473674696045027
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setRowNameWidth(0);
      resultMatrixPlainText1.clearRanking();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText1.getOptions();
      assertEquals(0, resultMatrixPlainText1.getRowNameWidth());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.7550662349911805
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth((-193));
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.setSize(2, 2645);
      resultMatrixLatex0.setPrintRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.addHeader(")", " ");
      resultMatrixLatex0.getDisplayName();
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
      
      resultMatrixGnuPlot0.listOptions();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.690114857313981
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getColName(1);
      resultMatrixGnuPlot0.toStringMatrix();
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.568242696698797
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=4.025531337219812
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixHTML0.getRowHidden((-665));
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.padString("", 0, false);
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.toStringMatrix();
      resultMatrixGnuPlot0.setPrintColNames(true);
      String string0 = resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=4.025041263402443
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRanking(intArray0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringKey();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.964197441261263
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getColName(0);
      assertNotNull(string0);
      
      resultMatrixGnuPlot0.setRowNameWidth(2);
      resultMatrixLatex0.getDisplayName();
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string1 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - ro\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string1);
      
      resultMatrixGnuPlot0.getStdDev(40, 40);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.2254135280582448
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 9;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(0, (-1645));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5883102129211557
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance1.getDefaultColNameWidth();
      assertEquals(0, resultMatrixSignificance1.getMeanWidth());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertEquals(40, resultMatrixSignificance1.getRowNameWidth());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
      assertEquals(1, resultMatrixSignificance1.getColCount());
      assertEquals(1, resultMatrixSignificance1.getRowCount());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.9338001487425354
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[4];
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(26, 0);
      assertEquals(26, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lrr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}cr@{\\hspace{0.1cm}}c}\n\\\\\n\\hline\nDataset & (1)& (2) & & (3) & & (4) & & (5) & & (6) & & (7) & & (8) & & (9) & & (10) & & (11) & & (12) & & (13) & & (14) & & (15) & & (16) & & (17) & & (18) & & (19) & & (20) & & (21) & & (22) & & (23) & & (24) & & (25) & & (26) & \\\\\n\\hline\n\\hline\n\\multicolumn{52}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.809010997680605
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearRanking();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getRowName(1);
      int[] intArray0 = new int[0];
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.350660548394866
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.getRowName(78);
      assertNull(string0);
      
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, int0);
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5866176745972522
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.setSize(0, 0);
      resultMatrixLatex0.setPrintRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.m_ColNameWidth = 3953;
      resultMatrixLatex0.m_PrintRowNames = true;
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixLatex0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.addHeader("(", ") - ignored!");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.listOptions();
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=4.108972387352397
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getSignificanceCount((-2501), 1);
      resultMatrixHTML0.toStringRanking();
      resultMatrixPlainText0.getSignificance(2546, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth(26);
      resultMatrixLatex0.getColName(0);
      assertEquals(26, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.3930836249394267
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.1925975586267823
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixLatex0.setEnumerateRowNames(false);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.8790889252926086
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      String string0 = resultMatrixPlainText0.toString();
      assertEquals("Dataset                      (1) \n---------------------------------\nrow0                     (0)    |\n---------------------------------\n(v/ /*)                         |\n", string0);
      
      resultMatrixPlainText0.getSignificanceCount(0, 1);
      resultMatrixPlainText0.headerKeys();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringSummary();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=4.188823103387016
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.stdDevPrecTipText();
      resultMatrixGnuPlot1.getAverage(3549);
      ResultMatrixHTML.main((String[]) null);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=4.054456795892266
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.setShowStdDev(false);
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.2397762803404206
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowName(1058, " ");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.addHeader(")", "HS4ksN-");
      resultMatrixGnuPlot0.getRevision();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=4.135098597537332
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 102);
      resultMatrixGnuPlot0.setRowName(102, "(");
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.70766433920318
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertFalse(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.674557326851443
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDev(0, 0, 0);
      resultMatrixLatex0.meanPrecTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.465145951301439
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDisplayCol(0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      resultMatrixPlainText0.isAverage(1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.176663269186535
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth(0);
      boolean boolean0 = resultMatrixHTML0.isMean(1);
      assertTrue(boolean0);
      
      resultMatrixLatex0.toStringRanking();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.441847180997983
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double[][] doubleArray0 = new double[0][0];
      resultMatrixPlainText0.m_StdDev = doubleArray0;
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixLatex0.getDefaultStdDevWidth();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.5802099386823363
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDev((-2072), 2, 2);
      resultMatrixLatex0.meanPrecTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5402489334499174
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML1);
      int[][] intArray0 = new int[1][2];
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.631292535256881
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[][] intArray0 = new int[0][8];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=4.021097366721427
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixHTML0.toStringRanking();
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = 4;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.padString((String) null, 4, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.0198268431492625
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getColOrder();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.4385677433691972
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(45, 45);
      resultMatrixPlainText0.getRowHidden(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML1.getDisplayName();
      resultMatrixHTML1.getDefaultPrintColNames();
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      
      String string0 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n(3) col2\n(4) col3\n(5) col4\n(6) col5\n(7) col6\n(8) col7\n(9) col8\n(10) col9\n(11) col10\n(12) col11\n(13) col12\n(14) col13\n(15) col14\n(16) col15\n(17) col16\n(18) col17\n(19) col18\n(20) col19\n(21) col20\n(22) col21\n(23) col22\n(24) col23\n(25) col24\n(26) col25\n(27) col26\n(28) col27\n(29) col28\n(30) col29\n(31) col30\n(32) col31\n(33) col32\n(34) col33\n(35) col34\n(36) col35\n(37) col36\n(38) col37\n(39) col38\n(40) col39\n(41) col40\n(42) col41\n(43) col42\n(44) col43\n(45) col44\n", string0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixLatex0.getRowHidden(1);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.1705151218112557
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixHTML0.RIGHT_PARENTHESES = "";
      int[][] intArray0 = new int[19][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      boolean boolean0 = resultMatrixPlainText0.getPrintColNames();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.8989552291957863
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.getColName(880);
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 178);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getColName((-3261));
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      resultMatrixLatex0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixLatex0.getRevision();
      resultMatrixGnuPlot1.meanPrecTipText();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      assertFalse(resultMatrixGnuPlot0.getPrintRowNames());
      
      boolean boolean0 = resultMatrixSignificance0.getPrintColNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.1435727978844925
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2233);
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean[] booleanArray0 = new boolean[0];
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixLatex0.getDefaultShowAverage();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.7696113911289517
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSize(2, 2);
      resultMatrixLatex0.toStringMatrix();
      assertEquals(2, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixPlainText0.toStringSummary();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      resultMatrixCSV0.setSize(2841, 2841);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.387853779438612
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_NonSigWins = null;
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText0.setShowAverage(false);
      int int0 = resultMatrixPlainText0.getSignificanceCount(0, 1);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.930264687575014
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.clearRanking();
      assertEquals(1, resultMatrixPlainText1.getVisibleRowCount());
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.getRowName(0);
      String[] stringArray0 = resultMatrixPlainText1.getOptions();
      assertEquals(19, stringArray0.length);
      
      int int0 = resultMatrixPlainText0.getStdDevPrec();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, int0);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.098032953845527
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      double[][] doubleArray0 = new double[1][1];
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixGnuPlot1.getEnumerateRowNames();
      assertEquals(0, resultMatrixGnuPlot1.getDefaultCountWidth());
      assertFalse(resultMatrixGnuPlot1.getDefaultShowStdDev());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.288890263051103
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      assertEquals(2, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.740055069629609
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[7] = 1;
      intArray0[8] = 480;
      resultMatrixLatex0.m_RankingWins = intArray0;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.doubleToString(0, 0);
      resultMatrixLatex0.getDefaultRemoveFilterName();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.setStdDevPrec(0);
      resultMatrixLatex0.getSummaryTitle(4539);
      resultMatrixLatex0.getStdDevPrec();
      resultMatrixLatex0.showStdDevTipText();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.getColName((-3583));
      resultMatrixLatex0.setSize(0, 234);
      assertEquals(234, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.919769629872869
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.setColName(2, ")");
      String string0 = resultMatrixHTML0.getColName((-2207));
      assertFalse(resultMatrixHTML0.getPrintColNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertNull(string0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string1 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset (1) col0 | (2) col1\n---------------------------\n---------------------------\n(v/ /*) | (0/0/0)\n", string1);
      
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(19, stringArray0.length);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.6569305439298967
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 0;
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getDefaultShowAverage();
      resultMatrixPlainText0.setStdDev(1, 13, 13);
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText0.m_PrintRowNames = false;
      resultMatrixPlainText0.showStdDevTipText();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=4.025459623715262
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toArray();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                                               col0\n----------------------------------------------------------\nrow0                                              (0)    |\n----------------------------------------------------------\nv/ /*                                                    |\n", string0);
      
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getMean(2, 5);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.6665104071561303
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=3.440014200405378
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setEnumerateColNames(true);
      resultMatrixGnuPlot0.getAverage(0);
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(0, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.3958871519281035
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.clearRanking();
      int int0 = resultMatrixPlainText0.getSignificanceCount(2, 58);
      assertEquals(0, int0);
      
      resultMatrixPlainText0.getDefaultPrintColNames();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=3.9643274520954996
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder((int[]) null);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String string1 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string1);
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=3.666422005059797
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth(2);
      assertEquals(2, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=3.496597167762589
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.setRowNameWidth(2);
      resultMatrixGnuPlot0.setMeanWidth(26);
      resultMatrixGnuPlot0.setRowName(2, "$\bullet$");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.addHeader("F]r[\"$z:g?Bm+FI@)S", "col0");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.538028931229915
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String string0 = resultMatrixPlainText0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, int0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=3.4367466714741326
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setColOrder((int[]) null);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=3.488690020032864
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setColOrder(intArray0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=3.1913662210863794
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixLatex0.printColNamesTipText();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=3.490877904621952
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.RIGHT_PARENTHESES = "";
      int[][] intArray0 = new int[1][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.setRanking(intArray0);
      String string0 = resultMatrixCSV0.doubleToString(120.98396955406, 1);
      assertEquals("121.0", string0);
      
      resultMatrixPlainText0.removeFilterNameTipText();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=3.392502760280892
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixHTML0.printColNamesTipText();
      assertTrue(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=3.4470358963273244
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(16);
      resultMatrixGnuPlot0.setMeanPrec(0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getColHidden(2);
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=3.258136040901145
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixLatex0.assign(resultMatrixPlainText0);
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 165
  /*Coverage entropy=3.2706925851583843
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1274));
      resultMatrixHTML0.listOptions();
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=3.391433911957216
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(26);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(26, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=3.3413555060760185
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString("m7;U0]QG3Q", 123);
      assertEquals("m7;U0]QG3Q                                                                                                                ", string0);
      
      String string1 = resultMatrixPlainText0.getSummaryTitle(20);
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals("u", string1);
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=3.4426075435235575
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.m_PrintRowNames = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 2);
      resultMatrixHTML0.setSignificanceWidth(168);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.toStringRanking();
      assertEquals(168, resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=3.754446902984987
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.setStdDevWidth(0);
      resultMatrixSignificance0.addHeader("", "o#8W+h/y_BG*N=O");
      resultMatrixSignificance0.m_CountWidth = 0;
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.getEnumerateColNames();
      resultMatrixSignificance0.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixCSV0.m_HeaderValues = vector0;
      resultMatrixCSV0.TIE_STRING = " | ";
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(40, 2);
      resultMatrixPlainText0.doubleToString(0, 0);
      resultMatrixPlainText0.RIGHT_PARENTHESES = "";
      resultMatrixPlainText0.getRevision();
      int int0 = 26;
      resultMatrixPlainText0.padString("o,f0PEX;b>", 2);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        vector0.insertElementAt(object0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2 > 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=3.4400911530794835
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanWidth(2);
      assertEquals(2, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixGnuPlot1.setRowName((-3934), "");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot1.addHeader(" ", "");
      resultMatrixGnuPlot1.getRevision();
      assertEquals(2, resultMatrixGnuPlot1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=3.391433911957215
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.setStdDevWidth(220);
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(220, resultMatrixHTML0.getStdDevWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=3.2568728830064084
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int[][] intArray0 = new int[0][8];
      resultMatrixPlainText0.setRanking(intArray0);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      String string0 = resultMatrixHTML0.doubleToString(1, 2);
      assertEquals("1.00", string0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=3.346071449689992
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(28, 28);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int int1 = (-1772);
      resultMatrixCSV0.getStdDev(0, (-1772));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getRevision();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=3.2106482965211542
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixPlainText0.getDefaultStdDevPrec();
      boolean boolean0 = resultMatrixPlainText0.isRowName(2940);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString(0.0, (-1268));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=3.4866413644630816
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getMeanPrec();
      assertEquals(2, int0);
      
      resultMatrixCSV0.getSignificance(2, 2);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=3.491384447467034
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSignificance((-408), 0, 1);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=3.538349598217249
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.getStdDev(1, 1);
      int int1 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, int1);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=3.4367466714741326
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.setColHidden((-3246), false);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=3.141379169300235
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(10);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 181
  /*Coverage entropy=3.4426075435235575
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth((-367));
      resultMatrixGnuPlot0.setMeanPrec(26);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.stdDevPrecTipText();
      resultMatrixGnuPlot1.getAverage((-1091));
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      assertEquals(26, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=3.70766433920318
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      int int0 = resultMatrixGnuPlot0.getStdDevWidth();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=3.6325356360474927
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.getColNameWidth();
      resultMatrixGnuPlot0.clear();
      resultMatrixPlainText0.setMean((-2783), 1, 2);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=3.144073801240875
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      resultMatrixPlainText0.getDisplayName();
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=3.5862805485964095
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      boolean boolean0 = resultMatrixSignificance0.isSignificance(1016);
      assertFalse(boolean0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.toStringKey();
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=3.4164526022496826
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      int int1 = resultMatrixPlainText0.getDefaultMeanPrec();
      assertEquals(2, int1);
      
      int int2 = resultMatrixPlainText0.getSignificanceCount(0, (-1354));
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, int2);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=3.829213884945042
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(339);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.getEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toArray();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(339, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.getRowHidden((-1479));
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML2.getVisibleColCount();
      resultMatrixHTML2.toStringRanking();
      resultMatrixHTML2.padString("show-stddev", 339, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(2, 339);
      resultMatrixGnuPlot1.toStringMatrix();
      resultMatrixGnuPlot1.setPrintColNames(false);
      resultMatrixGnuPlot2.enumerateColNamesTipText();
      assertTrue(resultMatrixGnuPlot2.getPrintRowNames());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=4.061768644670767
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      resultMatrixHTML0.setSignificanceWidth(0);
      String[] stringArray1 = new String[0];
      ResultMatrixPlainText.main(stringArray1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanWidth(1);
      resultMatrixGnuPlot0.setRowName(2, ")");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.addHeader((String) null, "v");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      int int0 = resultMatrixGnuPlot0.getColSize(stringArray0, 97, false, true);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 189
  /*Coverage entropy=4.087417834185834
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.listOptions();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixHTML0.setSignificanceWidth((-2278));
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.toStringRanking();
      assertEquals(5, resultMatrixHTML0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=4.0186767123281495
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      
      resultMatrixHTML0.m_PrintRowNames = false;
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.getRowHidden(0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.m_Wins = null;
      resultMatrixHTML0.padString("-ranking data not set-", 1, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getColSize(stringArray0, 2, true, false);
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 191
  /*Coverage entropy=3.237223235615914
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.m_Mean = null;
      resultMatrixHTML0.RIGHT_PARENTHESES = "";
      int[][] intArray0 = new int[19][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.setMean(0, (-571), 1);
      int int0 = resultMatrixPlainText0.getStdDevPrec();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, int0);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=3.5843757866916475
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixLatex0.m_CountWidth = 1;
      resultMatrixGnuPlot0.getCount(26);
      int int0 = resultMatrixGnuPlot0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 193
  /*Coverage entropy=3.649549131319843
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getColName(0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertNotNull(string0);
      
      String string1 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string1);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      resultMatrixLatex0.toArray();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=3.488690020032864
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      String string0 = resultMatrixHTML0.getColName(2);
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertNull(string0);
      
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=3.5374801842022947
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      resultMatrixSignificance0.getShowAverage();
      resultMatrixSignificance0.padString("\n3. cols numbered\n", (-1512), true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setStdDevPrec(1791);
      resultMatrixCSV0.globalInfo();
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=3.679372617547672
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevPrec((-1041));
      resultMatrixGnuPlot0.setOptions((String[]) null);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=3.450333347284541
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.padString(")", 2, true);
      assertEquals(" )", string0);
      
      int int0 = resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=3.3928769134002166
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getVisibleColCount();
      boolean boolean0 = resultMatrixHTML0.getShowAverage();
      assertFalse(boolean0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=4.053686931921307
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toString();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 200
  /*Coverage entropy=3.704966399441074
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.setRowNameWidth(2);
      resultMatrixLatex0.getDisplayName();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 1);
      resultMatrixSignificance0.globalInfo();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=3.701447158279773
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixGnuPlot0.setMeanPrec(1);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[0];
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.removeFilterName("weka.experiment.ResultMatrixCSV");
      resultMatrixHTML0.toStringRanking();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=3.2913621952206604
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearHeader();
      int int0 = resultMatrixHTML0.getVisibleColCount();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, int0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 204
  /*Coverage entropy=3.1699021172713064
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_PrintColNames = true;
      resultMatrixCSV0.getDefaultSignificanceWidth();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=4.053686931921307
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.isStdDev(1714);
      assertFalse(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=3.021495054456028
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.toStringRanking();
      boolean boolean0 = resultMatrixPlainText0.getShowStdDev();
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 207
  /*Coverage entropy=3.380167676263512
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      int int0 = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 208
  /*Coverage entropy=3.3655121313473804
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.getDisplayName();
      int[] intArray0 = new int[1];
      resultMatrixPlainText0.setRowOrder(intArray0);
      String string0 = resultMatrixPlainText0.trimString("Plain Text", 0);
      assertEquals("Plain Text", string0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 209
  /*Coverage entropy=3.66790900738125
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRemoveFilterName();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[][] intArray0 = new int[5][9];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 211
  /*Coverage entropy=3.487795765617483
  */
  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getDefaultShowStdDev();
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 212
  /*Coverage entropy=3.5841931382898213
  */
  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixHTML0.trimString(" ", 97);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.showAverageTipText();
      String string0 = resultMatrixPlainText0.stdDevWidthTipText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals("The width of the standard deviation (0 = optimal).", string0);
      
      int int0 = resultMatrixHTML0.getRowCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 213
  /*Coverage entropy=3.631734817432909
  */
  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      int[][] intArray0 = new int[34][0];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.rowNameWidthTipText();
      resultMatrixCSV0.enumerateColNamesTipText();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
  }
}
