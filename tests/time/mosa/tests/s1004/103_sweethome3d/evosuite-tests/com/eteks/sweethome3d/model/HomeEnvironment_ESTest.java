/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 18:11:28 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(13684944);
      assertEquals(13684944, homeEnvironment1.getSkyColor());
      
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("a>p;AaIV= ^;W7", (Content) null, 0.0F, 72.95514F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(570, homeTexture0, 570, 570, 570);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(570.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(570, homeEnvironment0.getSkyColor());
      assertEquals(570, homeEnvironment0.getLightColor());
      assertEquals(570, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertNotNull(homeTexture1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-62));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-62), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2503));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals((-1877), homeEnvironment0.getVideoHeight());
      assertEquals((-2503), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-80));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-80), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("Tr'byX^~b3il", (Content) null, 0.0F, 0.0F, false);
      TexturesCategory texturesCategory0 = new TexturesCategory("Tr'byX^~b3il");
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getPhotoAspectRatio();
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotNull(homeTexture1);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("b;n`QQs4}%]g", resourceURLContent0, 0, 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2904), homeTexture0, 0, (-707.745F));
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(0, int0);
      
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-707.745F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2904), homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-1214));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.getSkyTexture();
      assertEquals((-910), homeEnvironment0.getVideoHeight());
      assertEquals((-1214), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality((-1788));
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getVideoAspectRatio();
      assertEquals((-1788), homeEnvironment1.getVideoQuality());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("OBSERVER_CAMERA_ELEVATION_ADJUSTED", "", 14, "OBSERVER_CAMERA_ELEVATION_ADJUSTED", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 0.0F, (-1454.3086F), "OBSERVER_CAMERA_ELEVATION_ADJUSTED");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setSubpartSizeUnderLight((-134.9F));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-134.9F), float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8331547833861124
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("*e~q", propertyChangeListener0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(5723.9F, 0.0F, 0.0F, (-1738.5F), (-1738.5F), (-1738.5F), 0, camera_Lens0);
      linkedList0.add(camera0);
      linkedList0.add(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setPhotoHeight(0);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-4506));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-4506), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0.0F, 6);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, homeTexture0, (-2474), homeTexture0, (-1599), 6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.getSkyTexture();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(6.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(6, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals((-1599), homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals((-2474), homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1298));
      homeEnvironment0.clone();
      assertEquals((-1298), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("a|vM!", "xlKr+~Q\"", uRLContent0, (-511), 0.0F, "a|vM!");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-511), homeTexture0, 1219, homeTexture0, 18, (-511));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getGroundTexture();
      assertEquals((-511), homeEnvironment0.getGroundColor());
      assertEquals(18, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-511.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1219, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("3G9,~[dolOt1", resourceURLContent0, 5, (-569.038F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, homeTexture0, 5, 5, 5);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(5, homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(5, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(5, homeEnvironment0.getLightColor());
      assertEquals(5.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.TexturesCategory", (Content) null, (-1666), (-1095.94F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1666), homeTexture0, (-1), homeTexture0, (-1), (-1666));
      homeEnvironment0.getGroundTexture();
      System.setCurrentTimeMillis((-1666));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("a>p;AaIV= ^;W7", (Content) null, 570, 72.95514F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(570, homeTexture0, 570, 570, 570);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(570, homeEnvironment0.getGroundColor());
      assertEquals(570.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(570, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertNotNull(homeTexture1);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(570, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoQuality((-9));
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(537.1F);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment0.setVideoQuality(13684913);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.clone();
      homeEnvironment1.getPhotoQuality();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment1.setPhotoQuality(3);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(536.5271F);
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment0.setVideoQuality(13684913);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoQuality();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getPhotoAspectRatio();
      int int0 = homeEnvironment2.getVideoFrameRate();
      assertEquals(13684913, homeEnvironment0.getVideoQuality());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1538));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals((-1538), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1209));
      homeEnvironment0.clone();
      assertEquals((-1209), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-1244));
      homeEnvironment0.clone();
      assertEquals((-1244), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2261289670319746
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-569));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor((-569));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(49);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(49, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.943159814531569
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor(349);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth(2);
      homeEnvironment1.setSkyColor((-15));
      homeEnvironment0.setSkyColor(6);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.getVideoQuality();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment2.setSubpartSizeUnderLight(1.3333334F);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", ".KLl \"", temporaryURLContent0, (-1819.0F), 2, "E+0gnn{6", false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-62));
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-62), int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(2917);
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(2917, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 8192, 8192, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, homeTexture0, 1094, homeTexture0, 1094, 2.0F);
      homeEnvironment0.getSkyTexture();
      assertEquals(1094, homeEnvironment0.getLightColor());
      assertEquals(1094, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(8192, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 915.0F, (-78.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNotNull(homeTexture1);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, (Content) null, (-3318), (-3318), (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3318), homeTexture0, (-3318), homeTexture0, (-3318), (-3318));
      homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3318.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-3318), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-3318), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-3318), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setVideoWidth(13);
      homeEnvironment0.setPhotoWidth(2395);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth(2395);
      homeEnvironment0.setLightColor((-380));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoHeight(2395);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyTexture();
      assertEquals(2395, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.414222433546777
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoWidth();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.getDrawingMode();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment1.setPhotoQuality((-2135));
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setVideoWidth(300);
      homeEnvironment0.setWallsAlpha((-324.7F));
      homeEnvironment1.setCeillingLightColor(3297);
      homeEnvironment1.setSkyColor(866);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment.Property.values();
      homeEnvironment0.getSkyColor();
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(300, homeEnvironment1.getVideoWidth());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1819), (HomeTexture) null, (-1819), 4, 2481.6912F);
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.setPhotoHeight((-1819));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(12, (HomeTexture) null, 12, (-966), (-324.7F));
      homeEnvironment0.setPhotoWidth((-1819));
      homeEnvironment1.isObserverCameraElevationAdjusted();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.clone();
      assertEquals(25, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, int0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(3);
      homeEnvironment0.setVideoWidth(6);
      homeEnvironment0.setVideoWidth(6);
      homeEnvironment0.clone();
      assertEquals(6, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1229));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoQuality();
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals((-1229), int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2147141572);
      homeEnvironment0.clone();
      assertEquals(2147141572, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1010.5197F));
      homeEnvironment0.clone();
      assertEquals((-1010.5197F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-761));
      homeEnvironment0.clone();
      assertEquals((-571), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(3041);
      homeEnvironment0.clone();
      assertEquals(3041, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getDrawingMode();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1300));
      homeEnvironment0.clone();
      assertEquals((-1300), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.1218159503049137
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setWallsAlpha((-209.0F));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeEnvironment1.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals((-209.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-2651));
      homeEnvironment0.clone();
      assertEquals((-2651), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(2146450684);
      assertEquals(2146450684, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.79790993117846
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1819), (HomeTexture) null, (-1819), (-1819), (-1819));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundColor((-1819));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getPhotoHeight();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setVideoWidth(25);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, (-1819), 1294.2F);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(25);
      homeEnvironment1.setLightColor((-1819));
      homeEnvironment0.setVideoWidth((-1828));
      assertEquals((-1371), homeEnvironment0.getVideoHeight());
      
      homeEnvironment1.getVideoAspectRatio();
      assertEquals(25, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(512);
      assertEquals(512, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(9);
      homeEnvironment0.setWallsAlpha(9);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(240, 9, 0.0F, 1251.8F, 1251.8F, (-1.0F));
      Camera camera1 = camera0.clone();
      camera1.setZ(1251.8F);
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setCeillingLightColor(240);
      assertEquals(240, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1994091958);
      homeEnvironment0.clone();
      assertEquals(1994091958, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera camera0 = new Camera(77, 1535.3518F, 77, 1535.3518F, 2481.6912F, 77);
      camera0.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setLightColor(77);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(77, homeEnvironment0.getLightColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setVideoFrameRate(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.getVideoQuality();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_ASPECT_RATIO", temporaryURLContent0, 62, 0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2115.0F);
      homeEnvironment0.clone();
      assertEquals(2115.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-2252.7244F));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-2252.7244F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(240, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("PITCH", "", (Content) null, (-461), 206.31483F, "PITCH");
      TexturesCategory texturesCategory0 = new TexturesCategory("PITCH");
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-461), homeTexture0, (-461), 0, (-461));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PITCH", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(0, int0);
      
      int int1 = homeEnvironment0.getVideoWidth();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-461.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, int1);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-461), homeEnvironment0.getSkyColor());
      assertEquals((-461), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(400);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(400, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-1073741823));
      homeEnvironment0.clone();
      assertEquals((-1073741823), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("xITyN!00xn1Ev-g=v", uRLContent0, 0.0F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(7);
      homeEnvironment0.clone();
      assertEquals(7, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(6);
      homeEnvironment0.clone();
      assertEquals(6, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(836);
      homeEnvironment0.clone();
      assertEquals(836, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-1597.8506F));
      homeEnvironment0.clone();
      assertEquals((-1597.8506F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.clone();
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getVideoQuality());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundTexture();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1632);
      homeEnvironment0.clone();
      assertEquals(1632, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }
}
