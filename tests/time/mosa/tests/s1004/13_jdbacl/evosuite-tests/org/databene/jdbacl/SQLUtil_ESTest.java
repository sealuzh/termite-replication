/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 17:40:18 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.io.vfmem.DataStore;
import org.apache.derby.impl.io.vfmem.VirtualFile;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.rowio.RowOutputBinary;
import org.hsqldb.rowio.RowOutputTextLog;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6835958012740218
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "SELECT * FROM ";
      stringArray0[1] = "SELECT * FROM ";
      stringArray0[2] = "SELECT * FROM ";
      stringArray0[3] = "SELECT * FROM ";
      stringArray0[4] = "create tablesvac";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      SQLUtil.isDML("2qJo;i6oSWw?%/*dl");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("AD");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("AD", defaultDBTable0, (DBDataType) null, integer0, integer1);
      columnDescriptorList0.add((Object) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("a[<M\"!<&GOI|Nd8z");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "IWzRH8a";
      stringArray0[1] = "a[<M\"!<&GOI|Nd8z";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("a[<M\"!<&GOI|Nd8z", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
      char[] charArray0 = new char[0];
      Object object0 = new Object();
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      DataStore dataStore0 = new DataStore("\u0001\u00BD");
      VirtualFile virtualFile0 = new VirtualFile("\u0001\u00BD", dataStore0);
      OutputStream outputStream0 = virtualFile0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec1, mockPrintWriter0);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT a[<M\"!<&GOI|Nd8z ", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("43X16.U", stringBuilder0);
      assertEquals("43X16.U", stringBuilder0.toString());
      
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      String string0 = SQLUtil.substituteMarkers("", "updatesele]t:*", integer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("inner", "CLOB", (String[]) null, "CLOB", "inner", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-3685), "dxop tablej");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("z4 YS3tZB#+", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      defaultDBTable0.removeForeignKeyConstraint((DBForeignKeyConstraint) null);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("~V", defaultDBTable0, 4660, "~V");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.h2.command.ddl.CreateTableData");
      mockPrintWriter0.println("~V");
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.48942837572945
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(514L);
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("{8dG$*Q<]D", compositeDBObject0);
      String string0 = "n:_U$RH-hK[KjV?38";
      tableContainer0.getTable("n:_U$RH-hK[KjV?38");
      int int0 = (-178210847);
      DBDataType dBDataType0 = DBDataType.getInstance((-178210847), "{8dG$*Q<]D");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      dBDataType0.isAlpha();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{8dG$*Q<]D", (DBTable) null, dBDataType0, integer0, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.parseColumnTypeAndSize("{8dG$*Q<]D {8DG$*Q<]D(2,2) NULL");
      String string1 = "nVl8$P0VrRw*&K?T.";
      String string2 = "nbhvf.q";
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("nVl8$P0VrRw*&K?T.", false, (DBTable) null, "nbhvf.q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBCheckConstraint", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[6];
      SQLUtil.renderColumnListWithTableName("N50#kFz3`'_8(/z2m'M", stringArray0);
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      Object object0 = new Object();
      genericDescriptorList0.add(object0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.562195530038767
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance("NCLOB");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("insertnclob", defaultDBTable0, dBDataType0, integer0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("insertnclob : NCLOB", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("insertnclob : NCLOB");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~V", defaultDBTable0, 4672, "~V");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("~V");
      mockPrintWriter0.println("~V");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String string0 = "truncate";
      String string1 = "/*";
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9724360078545256
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("null = null");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "fV,W", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("null = null", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      File file0 = FileUtil.canonicalFile("alter indexdelfte");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, mockPrintWriter0);
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT fV,W ", stringBuilder0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9971762968966938
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "P>1*/sP";
      SQLUtil.normalize("P>1*/sP", false);
      String string1 = "9Vm(-ZgAa";
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "P>1*/sP";
      stringArray0[1] = "P > 1 */ sP";
      stringArray0[2] = "9Vm(-ZgAa";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(",.Q'bK}N3/yxvK%Ek5", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(3237, (CharSequence) "FOREIGN KEY (P>1*/sP, P > 1 */ sP, 9Vm(-ZgAa) REFERENCES null(P>1*/sP, P > 1 */ sP, 9Vm(-ZgAa)");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3237
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isDDL("x/*");
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SQLUtil.renderColumnNames((String[]) null);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("{plw(f)::5&y");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"f\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setClob(String, Reader)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "trunatetable null", true, stringArray0);
      DBSchema dBSchema0 = new DBSchema("trunatetable null");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("80000014-00d0-fd77-3ed8-000a0a0b1900", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("#A,I,}n$gFK2(_", true, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = SQLUtil.isDDL("trunatetable null");
      assertFalse(boolean0);
      
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint1 = new DBForeignKeyConstraint((String) null, true, dBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint1, stringBuilder0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = " \bMEJF86}oXom`";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ",drcp.KbIW\"", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(",drcp.KbIW\"", true, dBPrimaryKeyConstraint0);
      String[] stringArray1 = new String[1];
      SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray1);
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = stringBuilder1.append(0.0F);
      StringBuilder stringBuilder3 = stringBuilder2.appendCodePoint(4155);
      StringBuilder stringBuilder4 = SQLUtil.addOptionalCondition((String) null, stringBuilder3);
      SQLUtil.addRequiredCondition("NCLOB", stringBuilder4);
      assertEquals("0.0\u103B or null and NCLOB", stringBuilder4.toString());
      assertEquals("0.0\u103B or null and NCLOB", stringBuilder0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = " ADD ";
      String string1 = "inner";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("inner");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " ADD ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      TableContainer tableContainer0 = new TableContainer("");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("G#=&8#8%)hDx:0");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "G#=&8#8%)hDx:0", true, stringArray0);
      DBSchema dBSchema0 = new DBSchema("G#=&8#8%)hDx:0");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("G#=&8#8%)hDx:0", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("G#=&8#8%)hDx:0", true, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.isDDL("G#=&8#8%)hDx:0");
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT G#=&8#8%)hDx:0 ", stringBuilder0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.359005762630872
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("select into");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = SQLUtil.normalize("+ / - selec", true);
      assertEquals("+ / - selec", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "truncztetable null";
      stringArray1[1] = "SELECT * FROM ";
      stringArray1[2] = "m$N-krk/";
      stringArray1[3] = "SELECT * FROM ";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("m$N-krk/", stringArray0, "maxRowSize", "truncztetable null", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String string0 = SQLUtil.normalize("n>B'ds_BoH~!", false);
      assertEquals("n > B 'ds_BoH~!'", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.076104579100767
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/*", defaultDBTable0, 4648, "/*");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      SQLUtil.parseColumnTypeAndSize("/*");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/*";
      stringArray0[1] = "/*";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1291320055074654
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("executeconstraint", false, "executeconstraint", "executeconstraint");
      dBCheckConstraint0.setName((String) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK executeconstraint", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("CHECK executeconstraint");
      assertNull(boolean0);
      
      SQLUtil.parseColumnTypeAndSize("XSDF4.S");
      String string1 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.5732052067491771
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SQLUtil.normalize("!A`/?V", false);
      StringBuilder stringBuilder0 = new StringBuilder("!A`/?V");
      stringBuilder0.append((CharSequence) "!A`/?V");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create tableexecute");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[7];
      SQLUtil.renderColumnListWithTableName("alter sessionsel[ct *!f<om", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "alter sessionsel[ct *!f<om.null, alter sessionsel[ct *!f<om.null, alter sessionsel[ct *!f<om.null, alter sessionsel[ct *!f<om.null, alter sessionsel[ct *!f<om.null, alter sessionsel[ct *!f<om.null, alter sessionsel[ct *!f<om.null";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("alter sessionsel[ct *!f<om", stringArray0, "alter sessionsel[ct *!f<om", "alter sessionsel[ct *!f<om", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("NCLOB", "NCLOB", (String[]) null, "NCLOB", "NCLOB", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4642567260559776
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'EAd Y2B|,");
      defaultDBTable0.toString();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputTextLog0);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "'EAd Y2B|,", true, stringArray0);
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      PrintWriter printWriter0 = mockPrintWriter0.format("'EAd Y2B|,", (Object[]) null);
      Locale locale0 = Locale.UK;
      printWriter0.printf(locale0, "'EAd Y2B|,", (Object[]) null);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("execute");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = SQLUtil.normalize("$1GAp\"uZk:b:CD@8jr", true);
      assertNotNull(string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.459562444957137
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.addReferrer((DBTable) null);
      DBDataType dBDataType0 = DBDataType.getInstance((-1436418903), "@!o");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("R/o$~!\u0003L#K:", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.toString();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("Oek(-%ql");
      assertNull(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.459562444957137
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      DBDataType dBDataType0 = DBDataType.getInstance(45000, " WHERE ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" WHERE ", (DBTable) null, dBDataType0, integer0);
      defaultDBColumn0.toString();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(" WHERE  :  WHERE (1)");
      assertNull(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("callcreatZ uiqf");
      assertNull(boolean0);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character character0 = Character.valueOf('n');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'n'", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = SQLUtil.normalize("Gg[*A*(fWK", false);
      assertEquals("Gg [ * A * (fWK", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("execalter mateialized view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SQLUtil.isQuery("rename,.*i;dtr*)");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      SQLUtil.renderValue(integer0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ";D I>i`,-fw~i";
      stringArray0[1] = "2";
      stringArray0[2] = "rename,.*i;dtr*)";
      stringArray0[3] = "LU";
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.join(" ADD ", (String) null, stringArray0, " Wg^HVY5fM{\"2K>", "truncatetable null", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1179956497762942
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("Illegal column type format: ");
      assertNull(boolean0);
      
      Character character0 = Character.valueOf(']');
      String string0 = SQLUtil.substituteMarkers("Illegal column type format: ", "Illegal column type format: ", character0);
      assertEquals("']'", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.325342919442848
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("2i!]SO;");
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = SQLUtil.isDML("select into5*s<");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName(";SVAC", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6851287363978404
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      String[] stringArray1 = new String[1];
      stringArray1[0] = "null = null";
      String string1 = SQLUtil.leftJoin("9*-butX", stringArray0, "null = null", "null = null", stringArray1);
      assertEquals("left join null = null as null = null on 9*-butX.null = null = null.null = null", string1);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("execfileid");
      assertNull(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("G#=&8Q8%)hDx:0");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "TP.Id~jd>A-;W", true, stringArray0);
      DBSchema dBSchema0 = new DBSchema("G#=&8Q8%)hDx:0");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("TP.Id~jd>A-;W", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("TP.Id~jd>A-;W", true, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT TP.Id~jd>A-;W ", stringBuilder0.toString());
      
      String string0 = SQLUtil.ownerDotComponent(dBForeignKeyConstraint0);
      assertEquals("TP.Id~jd>A-;W.TP.Id~jd>A-;W", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBSchema dBSchema0 = new DBSchema("PROVIDERID");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("rfrencev", dBSchema0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "rfrencev";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "hfs0", true, stringArray0);
      dBSchema0.getTables(false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.addRequiredCondition("hfs0", stringBuilder0);
      assertEquals("hfs0", stringBuilder0.toString());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("national char", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("G#=&8Q8%)hDx:0");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "TP.Id~jd>A-;W", true, stringArray0);
      DBSchema dBSchema0 = new DBSchema("G#=&8Q8%)hDx:0");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("TP.Id~jd>A-;W", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("TP.Id~jd>A-;W", true, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
      
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("G#=&8Q8%)hDx:0", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.6764281154875817
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SQLUtil.substituteMarkers("rule fractionDigits", "rule fractionDigits", "rule fractionDigits");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("rule fractionDigits", false, defaultDBTable0, "'rule fractionDigits'");
      StringBuilder stringBuilder0 = new StringBuilder("rule fractionDigits");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.addRequiredCondition("'rule fractionDigits'", stringBuilder1);
      assertEquals("rule fractionDigits and 'rule fractionDigits'", stringBuilder1.toString());
      
      String string0 = SQLUtil.substituteMarkers("Vk6BxfN1p5zI\"5", "Vk6BxfN1p5zI\"5", dBCheckConstraint0);
      assertEquals("CONSTRAINT rule fractionDigitsCHECK 'rule fractionDigits'", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
      
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(4101, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Ygzf;*~F", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = SQLUtil.normalize("eq)CHEQPG_d", true);
      assertEquals("eq) CHEQPG  _d", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8247848456290647
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("dXop tablej j&d92(wwb1");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("dXop tablej j&d92(wwb1");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "dXop tablej j&d92(wwb1", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("PRIMARY KEY ()", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("altr mateialiedview", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint((String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder("qcrSRJck@qS");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("0n<r~oRg9tP^qmk,(eo");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: 0n<r~oRg9tP^qmk,(eo
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~Z", defaultDBTable0, (-2028763073), "~Z");
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.5419879996659676
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("sele]t:*");
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("selectf]zel99h");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/*", defaultDBTable0, 4646, "/*");
      String string0 = defaultDBColumn0.toString();
      assertEquals("/* : /*", string0);
      
      String string1 = SQLUtil.removeComments("/* : /*");
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      System.setCurrentTimeMillis(3716L);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select intocheck");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select intocheck", defaultDBTable0, (-2416), "select intocheck");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("SELECT INTOCHECK", stringBuilder0.toString());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        SQLUtil.join("&0J", "&0J", stringArray0, "&0J", "&0J", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      String string0 = "PhJPGo*ZgSv";
      DBCatalog dBCatalog0 = new DBCatalog();
      String string1 = "m$N-krk/";
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("PhJPGo*ZgSv", (String[]) null, "PhJPGo*ZgSv", "m$N-krk/", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter table~/8+\"#]g");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("drop indexalter mateialized view");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8833328721579656
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("executeconstraint", true, "executeconstraint", "executeconstraint");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT executeconstraint CHECK executeconstraint", string0);
      
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT executeconstraint ", stringBuilder0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[2] = "q";
      stringArray0[3] = "q";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("q", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(rowOutputBinary0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, false);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals(FKChangeRule.NO_ACTION, dBForeignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("G#=&8#8%)hDx:0");
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table G#=&8#8%)hDx:0", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("executeconstraint", false, "executeconstraint", "executeconstraint");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK executeconstraint", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.4001443355569787
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("executeconstraint", true, "executeconstraint", "executeconstraint");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
      
      dBCheckConstraint0.toString();
      StringBuilder stringBuilder1 = new StringBuilder();
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec1);
      assertEquals("CONSTRAINT executeconstraint ", stringBuilder0.toString());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      
      DBDataType dBDataType0 = DBDataType.getInstance(385, "deletedxop tablej j&{92(wwb1");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0, integer0);
      String string1 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("DELETEDXOP TABLEJ J&{92(WWB1(2,2)", string1);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("j[", defaultDBTable0, 4646, "j[");
      Integer integer0 = new Integer(4646);
      defaultDBColumn0.setSize(integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("j[ J[(4646) NULL", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("j[", defaultDBTable0, 4646, "j[");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("J[", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.mutatesDataOrStructure("alter session");
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("kaQZf&]?Y4D#W");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = SQLUtil.normalize("create unique indexalter materialized vieworg.databene.jdbacl.sqlutil", false);
      assertEquals("create unique indexalter materialized vieworg.databene.jdbacl.sqlutil", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = SQLUtil.normalize("|,wuDZ", true);
      assertEquals("|, wuDZ", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("updaten)f:rl*!");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("DATABASE_OPENING");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("execueconstraint", false, "execueconstraint", "execueconstraint");
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT execueconstraint ", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("create unique index", true, "create unique index", "d");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"create unique index\" CHECK d", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("+ / - selec");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "+ / - selec", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"+ / - selec\" UNIQUE ()", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.6851287363978404
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      String string1 = SQLUtil.leftJoin((String) null, stringArray0, (String) null, "null = null", stringArray0);
      assertEquals("left join null as null = null on null.null = null = null.null", string1);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.renderColumnListWithTableName(";SVAC", stringArray0);
      assertEquals(";SVAC.null, ;SVAC.null, ;SVAC.null, ;SVAC.null", string0);
      
      String string1 = SQLUtil.leftJoin(";SVAC.null, ;SVAC.null, ;SVAC.null, ;SVAC.null", stringArray0, ";SVAC", ";SVAC", stringArray0);
      assertEquals("left join ;SVAC as ;SVAC on ;SVAC.null, ;SVAC.null, ;SVAC.null, ;SVAC.null.null = ;SVAC.null and ;SVAC.null, ;SVAC.null, ;SVAC.null, ;SVAC.null.null = ;SVAC.null and ;SVAC.null, ;SVAC.null, ;SVAC.null, ;SVAC.null.null = ;SVAC.null and ;SVAC.null, ;SVAC.null, ;SVAC.null, ;SVAC.null.null = ;SVAC.null", string1);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("N?it&8nN7");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "N?it&8nN7";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("N?it&8nN7", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT N?it&8nN7 FOREIGN KEY (N?it&8nN7) REFERENCES N?it&8nN7(N?it&8nN7)", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("executeconstraint", true, "executeconstraint", "executeconstraint");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK executeconstraint", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("executeconstraint", false, "executeconstraint", "executeconstraint");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT executeconstraint CHECK executeconstraint", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[20];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("\u0001\u00EF", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \u0001\u00EF FOREIGN KEY (, , , , , , , , , , , , , , , , , , , ) REFERENCES null(, , , , , , , , , , , , , , , , , , , )", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("Boolean", stringArray0, "Boolean", "inner", stringArray0);
      assertEquals("Boolean as inner on ", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.innerJoin("trunatetable null", stringArray0, "SELECT * FROM ", "SELECT * FROM ", stringArray0);
      assertEquals("SELECT * FROM  as SELECT * FROM  on trunatetable null.null = SELECT * FROM .null and trunatetable null.null = SELECT * FROM .null and trunatetable null.null = SELECT * FROM .null and trunatetable null.null = SELECT * FROM .null and trunatetable null.null = SELECT * FROM .null and trunatetable null.null = SELECT * FROM .null", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.464527387429956
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select * from as select ");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null", string0);
      
      String string1 = SQLUtil.renderValue("null = null AND null = null AND null = null");
      assertEquals("'null = null AND null = null AND null = null'", string1);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("alter indexsele]t:*", "executeconstraint", "executeconstraint");
      assertEquals("alter indexsele]t:*", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/*", defaultDBTable0, 4646, "/*");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("/* /* NULL", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "create uiqu");
      SQLUtil.addRequiredCondition("create uiqu", stringBuilder0);
      assertEquals("create uiqu and create uiqu", stringBuilder0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("selectf]zel99h");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.6784775202211
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string1 = SQLUtil.innerJoin("null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join("java.sql.ResultSet", "java.sql.ResultSet", stringArray0, "truncatetable null", "truncatetable null", stringArray0);
      assertEquals("java.sql.ResultSet join truncatetable null as truncatetable null on java.sql.ResultSet.null = truncatetable null.null and java.sql.ResultSet.null = truncatetable null.null and java.sql.ResultSet.null = truncatetable null.null and java.sql.ResultSet.null = truncatetable null.null and java.sql.ResultSet.null = truncatetable null.null and java.sql.ResultSet.null = truncatetable null.null", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join(";SVAC", ";SVAC", stringArray0, "call", ";SVAC", stringArray0);
      assertEquals(";SVAC join call as ;SVAC on ;SVAC.null = ;SVAC.null and ;SVAC.null = ;SVAC.null and ;SVAC.null = ;SVAC.null and ;SVAC.null = ;SVAC.null and ;SVAC.null = ;SVAC.null and ;SVAC.null = ;SVAC.null", string0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("NCLO", (String[]) null, "NCLO", "NCLO", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("", "", (String[]) null, "", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("\"=b058zFUIVujQ:");
      assertFalse(boolean0);
  }
}
