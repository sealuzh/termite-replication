/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 18:03:39 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(4);
      player0.getZ();
      player0.setMoney(4);
      player0.setZ(879.871F);
      player0.getZ();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player0.setX(3845.7693F);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis((short)4919);
      player0.pack();
      player0.getZ();
      System.setCurrentTimeMillis(4);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setMoney((-1.0F));
      player0.getMoney();
      float float0 = player0.getZ();
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2308, (String) null, 70);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(0L, true);
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(70, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 1203;
      String string0 = "6;Iq";
      Player player0 = new Player(1203, "6;Iq", 1203);
      Player player1 = new Player((short)4919);
      Party party0 = new Party();
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-2710), "xMFm", (-2710));
      player0.setZ((-2710));
      float float0 = player0.getZ();
      assertEquals((-2710.0F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((long) (-1640));
      MockFile mockFile0 = new MockFile("x7v");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      PrintStream printStream0 = mockPrintStream0.append('m');
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      Player player1 = new Player((short)4919);
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1640L), long0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.323779381792065
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-541), "8$Q", "8$Q", 0, (-541));
      player1.setX(0);
      player0.add(player1);
      player0.setDead();
      player0.getStrength();
      player0.setConnected(true);
      player0.getPictureId();
      player1.setDead((long) (short)4919, false);
      player1.isJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      player0.setDead();
      player1.getPictureId();
      player0.setDead((long) 1, false);
      player0.setMoney(1.0F);
      player1.getStrength();
      player0.pack();
      float float0 = player1.getX();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-17942), "", "", (-17942), (-17942));
      player0.setY((-17942));
      player0.toString();
      assertEquals((-17942.0F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0995015447694865
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-1), "", (-1979));
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setDead((long) (-1979));
      player0.setX((-1987.7F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player((-3966));
      player1.setY((-1987.7F));
      player1.gangStrength();
      player0.remove(player1);
      player0.reset(false);
      player0.getX();
      player0.getMoney();
      player0.pack();
      System.setCurrentTimeMillis((-1979));
      player0.toString();
      int int0 = player0.type();
      assertEquals((-1987.7F), player0.getX(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setConnected(false);
      player0.gangStrength();
      player0.pack();
      player0.isConnected();
      player0.setMoney(1);
      player0.getStrength();
      Player player1 = new Player(1, "", 5);
      player0.isJoinOK(player1, false);
      player0.pack();
      assertEquals(1.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-410), (String) null, "", (-410));
      player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-410), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5363257164119464
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(0, "g HFo", "g HFo", 257, 0);
      player0.id = 0;
      player0.setZ(0);
      player0.setDead();
      Party party0 = player0.prev;
      player0.prev = null;
      player0.toString();
      player0.setX(0.0F);
      player0.isConnected();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(70, "g HFo", "g HFo", (-1336));
      player1.setDead((-3440L));
      player0.setJoinOK(player1, true);
      player0.pack();
      player0.getZ();
      player0.type();
      player0.getStrength();
      player0.getTimeOfDeath();
      byte[] byteArray1 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      float float0 = player0.getZ();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      String string0 = player0.toString();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(11);
      player0.setY(3678.0F);
      assertEquals(3678.0F, player0.getY(), 0.01F);
      
      Player player1 = new Player(70, "gui.ModuleBrowserDialog$ModuleFilter", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (byte) (-71), (byte) (-71));
      int int0 = player1.gangStrength();
      assertEquals((-71), int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(5, "", "", 5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 1532);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player((-541), "8$Q", "8$Q", 0, (-541));
      player0.setDead();
      player0.setConnected(true);
      player0.getPictureId();
      player1.setDead((long) (short)4919, false);
      player1.isJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      player0.setDead();
      player1.getPictureId();
      player1.boss = (Party) player0;
      player0.setDead((long) (short)4919, false);
      player0.setMoney(1.0F);
      int int0 = player1.getStrength();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertEquals((-541), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-2572), "N$c", "dFeqvEbGUg)", 4136, 562);
      player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((-1.0F));
      player0.pack();
      player0.getTimeOfDeath();
      player0.getName();
      player0.getStrength();
      player0.pack();
      assertEquals((-1.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1.0F);
      player0.setDead((-1L));
      player0.pack();
      player0.id = 1;
      player0.setY((-1L));
      player0.getY();
      player0.reset(false);
      player0.setY(1);
      player0.getY();
      player0.setDead((long) 1);
      player0.setMoney(0.0F);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(2268, (String) null, (String) null, 2268);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(12033, "o+s]eRM+pm", "o+s]eRM+pm", 12033);
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(12033, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setMoney(973.9F);
      player0.getMoney();
      int int0 = player0.type();
      assertEquals(973.9F, player0.getMoney(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0, (String) null, 0);
      player0.reset(true);
      player0.setDead((-464L), false);
      player0.getName();
      player0.id = 0;
      player0.setZ(477.54F);
      player0.getStrength();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-92);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte)92;
      player0.unpack(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-2129), "?3cmQ", (-2129));
      player0.setDead();
      player0.setConnected(true);
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, false);
      player0.getPictureId();
      player0.type();
      player0.getIP();
      player0.isDead();
      player0.toString();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(382, "", "", 0, 382);
      player0.pack();
      player0.boss = null;
      player0.setMoney(382);
      player0.setX(0);
      player0.setZ(0.0F);
      player0.reset(true);
      player0.setMoney((-2555.436F));
      player0.getSubparty();
      player0.getIP();
      player0.setX(0.0F);
      player0.setX(382);
      player0.getX();
      player0.pack();
      player0.setX(0.0F);
      player0.isConnected();
      assertEquals((-2555.436F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDead();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(4919, "zviA+'jqXno", "zviA+'jqXno", (-2572));
      player0.gangStrength();
      Player player1 = new Player((short)4919, "", "zviA+'jqXno", (-2572));
      player0.add(player1);
      player1.isJoinOK(player0, false);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      player1.getPictureId();
      Player player2 = new Player((-2572));
      assertEquals("0.0.0.0", player2.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      player0.getZ();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      player0.getZ();
      float float0 = player0.getZ();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(862, "", "s_*MUXL9>S++1Gs", 1445, 862);
      int int0 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals(862, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1445, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(4919, ")iE9H|K7m9zQ\"E<!", (-1));
      player0.setDead((long) 4919);
      player0.getTimeOfDeath();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4919L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals("Player-1", string0);
      
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, int0);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1385.22F);
      float float0 = player0.getMoney();
      assertEquals(1385.22F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-300), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 1, 0);
      int int0 = player0.gangStrength();
      assertEquals(1, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(2835, (String) null, "_T5e^XS{", 2835, (-239));
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-239), player0.getStrength());
      assertNull(string0);
      assertFalse(player0.isDead());
      assertEquals(2835, player0.getPictureId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      float float0 = player0.getZ();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals((-1), player0.getId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals("Player-1", player1.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player(136, (String) null, (String) null, (short)4919);
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.next;
      player0.prev = null;
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 10);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(8, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player((short)4919, "", "", 116, 116);
      assertTrue(player1.isConnected());
      assertEquals(116, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(116, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, "1)}", "1)}", (short)4919, 5);
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(5, player1.getStrength());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-1.0F));
      player0.pack();
      assertEquals((-1.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.setDead();
      player0.getY();
      player0.getIP();
      int int0 = player0.gangStrength();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      float float0 = player0.getMoney();
      assertFalse(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
