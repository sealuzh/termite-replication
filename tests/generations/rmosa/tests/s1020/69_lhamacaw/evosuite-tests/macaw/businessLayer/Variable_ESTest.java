/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 23:32:34 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      User user0 = new User();
      user0.setIdentifier(447);
      user0.setUserID("variable.cleaningDescription.label");
      RawVariable rawVariable0 = new RawVariable();
      user0.setAddressLine1("o%,s 0");
      rawVariable0.setColumnEnd("QxLS]h;P");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setFilePath("o%,s 0");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getSupportingDocuments();
      rawVariable0.columnEnd = "'Qn!FQ)xbeW{+5N";
      rawVariable0.getDisplayName();
      rawVariable0.getFilePath();
      derivedVariable0.getAvailability();
      derivedVariable0.setCleaningDescription("QLP_D*J`q~z8pi,gC");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("QLP_D*J`q~z8pi,gC", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.9301112354928986
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.getLabel();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList1);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCategory();
      derivedVariable0.clone();
      derivedVariable0.getIdentifier();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer1);
      derivedVariable0.addSourceVariables(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.iterator();
      derivedVariable0.getAlias();
      derivedVariable0.getCategory();
      User user0 = new User();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.clone();
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.8632307893360656
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.clone();
      derivedVariable0.setIdentifier((-1953));
      derivedVariable0.createVariableSummary();
      derivedVariable0.getLabel();
      User user0 = new User("variable.codeBookNumber.label", "==");
      user0.setEmail("9LaN8g=2`R^^?=");
      user0.clone();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.clone();
      assertEquals("-1953", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(3997);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.8632307893360656
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("variable.columnEnd.label", "variable.codeBookNumber.label");
      user0.setAddressLine2("variable.codeBookNumber.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.columnEnd.label");
      ontologyTerm0.getDisplayName();
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getValueLabels();
      derivedVariable0.clone();
      derivedVariable0.questionNumber = "variable.columnEnd.label";
      derivedVariable0.getFilePath();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("variable.columnEnd.label");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("variable.columnEnd.label", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        rawVariable0.removeValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.createVariableSummary();
      String string0 = "qc";
      ontologyTerm0.setOntologyName("qc");
      String string1 = "zZ;]6t}}K$";
      ontologyTerm0.setTerm("zZ;]6t}}K$");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      Variable variable0 = null;
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getForm();
      derivedVariable0.getIdentifier();
      User user0 = new User();
      ontologyTerm0.setTerm("zZ;]6t}}K$");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      User.detectFieldChanges(user1, user0, user1);
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.3256828166074355
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningDescription("*M8w&ek");
      derivedVariable0.getFilePath();
      derivedVariable0.getValueLabels();
      derivedVariable0.getCategory();
      derivedVariable0.setLabel("");
      System.setCurrentTimeMillis(0L);
      derivedVariable1.setIdentifier(1);
      derivedVariable0.setQuestionNumber("Unknown");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      User user0 = new User("6[Lpva;y>i5N", "variable.year.label");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.clone();
      derivedVariable1.getFilePath();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getCleaningStatus();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable0.getLabel();
      System.setCurrentTimeMillis(1);
      derivedVariable1.getCodeBookNumber();
      assertEquals(1, derivedVariable1.getIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8249581333636096
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("r1U>hIQj0=a: & 0W");
      User user0 = new User("", "");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setColumnStart("");
      derivedVariable0.columnEnd = "/U<)";
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User("/U<)", ",pt|>-\"@B?Ir5S");
      ontologyTerm0.setIdentifier((-700));
      ontologyTerm0.setNameSpace("variable.cleaningStatus.label");
      ontologyTerm0.clone();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCategory();
      derivedVariable0.getLabel();
      derivedVariable0.clone();
      derivedVariable0.getIdentifier();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("M");
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.633469924431174
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("%/ :0irXX");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.771234730464199
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("M");
      user0.setCounty("|83}~#");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      user0.setPassword("|83}~#");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis((-118L));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      rawVariable0.setQuestionNumber((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear((String) null);
      user0.setCounty("UNABLE_TO_GET_SUPPORTING_DOCUMENT_IDENTIFIER");
      user0.setPostCode("variable.isCoded.label");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_CREATE_CHANGE_EVENT");
      rawVariable0.setCodeBookNumber("M");
      rawVariable0.setLabel((String) null);
      User user0 = new User((String) null, "=N:au(oySS");
      User user1 = new User("Kg*oB/^XNFj>f", "M");
      user1.setCounty("F|sv_4>47b");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription((String) null);
      user0.setIdentifier(1770);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable2, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.771381740644654
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("M");
      user0.setCounty("|83}~#");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setQuestionNumber("UNABLE_TO_CHECK_CLEANING_STATE_EXISTS");
      supportingDocument0.setDescription("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      user0.setPassword("|83}~#");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("macaw.businessLayer.Variable");
      rawVariable0.setName("macaw.businessLayer.Variable");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      rawVariable0.setQuestionNumber((String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setYear((String) null);
      user0.setCounty("UNABLE_TO_GET_SUPPORTING_DOCUMENT_IDENTIFIER");
      user0.setPostCode("variable.isCoded.label");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7712728358637335
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("M");
      user0.setCounty("|83}~#");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      user0.setPassword("|83}~#");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("M");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.getNotes();
      assertEquals("M", rawVariable0.getLabel());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setFilePath("");
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.notes = "";
      derivedVariable0.setName("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariable(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = "*c57u";
      User user0 = new User("A3WO6ODlKku#8?", "xNcRj` Ma?nv[Zx");
      User.checkValidUserIDField("M");
      user0.setPassword("A3WO6ODlKku#8?");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("*c57u", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(39);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(39, rawVariable0.getIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("g|");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      User user1 = new User();
      user1.setIdentifier((-4));
      user1.setEmail("2hdKcER,W");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(1, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.490469115659254
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setYear("F|sv$_4>47b");
      derivedVariable0.setAvailability("F|sv$_4>47b");
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      User user2 = new User("F|sv$_4>47b", "F|sv$_4>47b");
      user2.setCounty("[:Ep*ts,eK&POf+HH*%");
      user0.setPassword("F|sv$_4>47b");
      User user3 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      assertEquals("F|sv$_4>47b", derivedVariable0.getAvailability());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.hasSameDisplayName(rawVariable2);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      user0.setFirstName("aQ");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add(0, (Variable) derivedVariable1);
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      rawVariable0.getAlternativeVariable();
      String string0 = derivedVariable1.getCategory();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.8293796514181415
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setYear(";NR~%*Tpc!\"OB_E7azn");
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.getColumnStart();
      derivedVariable0.notes = "hNc-tb4!)0u#;ye2$qz";
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.setNotes((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.createVariableSummary();
      rawVariable0.clone();
      rawVariable0.getName();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      supportingDocument0.setTitle("'tq");
      supportingDocument0.setFileName("");
      user0.setAddressLine2("hNc-tb4!)0u#;ye2$qz");
      supportingDocument0.clone();
      supportingDocument0.clone();
      rawVariable0.clone();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getForm();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.alternativeVariable.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals(";NR~%*Tpc!\"OB_E7azn", derivedVariable0.getYear());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(950);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      String string0 = derivedVariable1.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setIdentifier(595);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList0.add((-2594), (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2594, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(2147483645);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.712263745333607
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("M");
      user0.setCounty("|83}~#");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.columnEnd = "|83}~#";
      rawVariable0.removeSupportingDocument(supportingDocument0);
      user0.setPassword("|83}~#");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("|83}~#", rawVariable0.getColumnEnd());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList0.add((-2594), (Variable) derivedVariable1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2594, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("M");
      rawVariable0.setCodeBookNumber("H1%FhMpA^R'2Rw");
      rawVariable0.setLabel("M");
      User user0 = new User("htCK[7Z", "M");
      user0.setCounty("htCK[7Z");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      assertEquals("M", rawVariable0.getLabel());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      rawVariable1.setForm("variable.cleaningDescription.label");
      user0.setEmail((String) null);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("variable.cleaningDescription.label", rawVariable1.getForm());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "jmX`Brm$Y?%5h";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "";
      rawVariable0.setAvailability("");
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-2049870752));
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setName(".!/82");
      Variable.validateFields(rawVariable0);
      rawVariable0.getAvailability();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getNotes();
      System.setCurrentTimeMillis(1L);
      rawVariable0.createVariableSummary();
      User user0 = new User();
      try { 
        User.checkValidUserIDField(".!/82");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \".!/82\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("");
      String string0 = "variable.year.label";
      derivedVariable1.setCodeBookNumber("variable.year.label");
      derivedVariable1.setIsNewRecord(false);
      derivedVariable0.setIsNewRecord(false);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument(supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8266973280619294
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("M");
      rawVariable0.setCodeBookNumber("H1%FhMpA^R'2Rw");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(true);
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      user1.setCounty("H1%FhMpA^R'2Rw");
      user1.setPassword("<5");
      User user2 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getCleaningDescription();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      assertEquals("H1%FhMpA^R'2Rw", rawVariable0.getCodeBookNumber());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"M\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "^k>;E!e?Ze:dlxV(";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("DELETE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getLabel();
      assertEquals("DELETE", rawVariable0.getNotes());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setAlias("B,#A(rCKYERf");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.columnEnd = "B,#A(rCKYERf";
      derivedVariable0.getColumnEnd();
      assertEquals("B,#A(rCKYERf", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm((String) null);
      derivedVariable0.setCleaningStatus("f0GHLt>=*Y");
      derivedVariable0.questionNumber = "f0GHLt>=*Y";
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setYear((String) null);
      derivedVariable0.getNotes();
      derivedVariable0.getSourceVariables();
      derivedVariable0.isCleaned();
      derivedVariable0.getNotes();
      assertEquals("f0GHLt>=*Y", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear((String) null);
      String string0 = derivedVariable0.getYear();
      assertNull(string0);
      
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("UNABLE_TO_GET_ALIAS_FILE_PATH");
      derivedVariable0.setSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      boolean boolean0 = derivedVariable0.isCoded();
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean1 == boolean0);
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1128));
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.notes = "9bqydrW?)P";
      derivedVariable0.createVariableSummary();
      derivedVariable0.setNotes("9bqydrW?)P");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      assertEquals("9bqydrW?)P", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.columnEnd = "_p>N%C8/Ka'saTb{S1";
      User user1 = new User("", "yj<(UK-.&2H4#N{N");
      user1.setIdentifier(98);
      user1.setEmail("yj<(UK-.&2H4#N{N");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(1, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.questionNumber = "N";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "}";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string1);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.clear();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDescription());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.221751559072405
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1));
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1344));
      ontologyTerm1.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("Q");
      derivedVariable0.getQuestionNumber();
      assertEquals("Q", derivedVariable0.getForm());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("H1%FhMpA^R'2Rw");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("H1%FhMpA^R'2Rw", "M");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getForm();
      assertEquals("H1%FhMpA^R'2Rw", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      user1.setPostCode("");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.6258548894268166
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("M");
      user0.setCounty("|83}~#");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      user0.setPassword("|83}~#");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.setYear("|83}~#");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.addValueLabel(valueLabel0);
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable1.cloneAttributes(derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("M", rawVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("8Cwu@E%f{X2p^4HxtY");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.setForm("eeJjlWL'!t[]z{Z");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("M");
      rawVariable0.setCodeBookNumber("H1%FhMpA^R'2Rw");
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("H1%FhMpA^R'2Rw");
      User user0 = new User();
      user0.setCounty("lP8p!hK c9y:??C5LN0");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.add(1, (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("GBN_");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("GBN_", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setColumnEnd("\"9d&aOXk5\"_5.V4i8$B");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setCodeBookNumber((String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      user1.setCounty((String) null);
      user0.setPassword("<5");
      User user2 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user2, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      valueLabel0.setMissingValue(false);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setLabel("macaw.businessLayer.DerivedVariable");
      rawVariable0.getQuestionNumber();
      rawVariable0.getValueLabels();
      assertEquals("macaw.businessLayer.DerivedVariable", rawVariable0.getLabel());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7712728358637344
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setCategory("M");
      rawVariable0.setLabel("M");
      user0.setCounty("|83}~#");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      user0.setPassword("|83}~#");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("M", rawVariable0.getLabel());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "+o";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      String string0 = derivedVariable0.getLabel();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("5Yc/");
      rawVariable0.getLabel();
      assertEquals("5Yc/", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variable.codeBookNumber.label";
      rawVariable0.setLabel("variable.codeBookNumber.label");
      rawVariable0.notes = "variable.codeBookNumber.label";
      rawVariable0.setColumnEnd("variable.codeBookNumber.label");
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      rawVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.97547268752385
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User("BL^}#g~4YXL?)cLs(6", "BL^}#g~4YXL?)cLs(6");
      user0.clone();
      RawVariable rawVariable0 = new RawVariable();
      user0.setPostCode("{p9g_f9csYZ!YF@|v9]");
      rawVariable0.setAlias("z~bK[>~");
      rawVariable0.setYear("i.");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getAlias();
      Variable.validateFields(rawVariable0);
      rawVariable0.getCleaningStatus();
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("z~bK[>~");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("UNABLE_TO_GET_CATEGORY_IDENTIFIER");
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_GET_CATEGORY_IDENTIFIER", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("wM`");
      derivedVariable0.getNotes();
      assertEquals("wM`", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.673629051586884
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "";
      rawVariable0.getCleaningStatus();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.listIterator();
      arrayList1.clone();
      rawVariable1.setIdentifier(1);
      rawVariable1.setValueLabels(arrayList1);
      rawVariable0.setAvailability("Unknown");
      rawVariable0.getIdentifier();
      rawVariable1.getIdentifier();
      User user0 = new User("", "uBV7 lW|");
      rawVariable0.setColumnEnd("");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.setAvailability("");
      rawVariable1.setColumnEnd("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "U% B|";
      rawVariable0.notes = "U% B|";
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.getForm();
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "RIpWB3$1";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(false);
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("RIpWB3$1", rawVariable0.getForm());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clear();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.alternativeVariable.label";
      derivedVariable0.createVariableSummary();
      derivedVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "/q-6h?kG7";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      rawVariable0.setLabel("M");
      user1.setCounty("|83}~#");
      user0.setPostCode("M");
      user1.setPassword("|83}~#");
      User user2 = new User("M", "|83}~#");
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      assertEquals("M", rawVariable0.getLabel());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      derivedVariable0.setCleaningStatus("-LHA");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm2, ontologyTerm2);
      ontologyTerm0.setDescription("");
      ontologyTerm0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      assertEquals("-LHA", derivedVariable0.getCleaningStatus());
      
      Variable.validateFields(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.year.label");
      derivedVariable0.clone();
      assertEquals("variable.year.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.433327868055329
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.columnStart = "BUZ7G";
      derivedVariable0.columnStart = "";
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.3787438509194208
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setCleaningDescription("user.postCode.label");
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("jK");
      derivedVariable0.clone();
      assertEquals("jK", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.559263078837595
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("M");
      rawVariable0.setCodeBookNumber("H1%FhMpA^R'2Rw");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      user1.setCounty("H1%FhMpA^R'2Rw");
      user1.setPassword("<5");
      User user2 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      derivedVariable0.getCodeBookNumber();
      rawVariable0.clone();
      assertEquals("H1%FhMpA^R'2Rw", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "user.firstName.saveChanges";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setNewRecord(false);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable variable0 = null;
      rawVariable0.setAlternativeVariable((Variable) null);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.setYear("NON_EXISTENT_CLEANING_STATE");
      rawVariable0.isCleaned();
      // Undeclared exception!
      try { 
        arrayList0.add((-2443), (Variable) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2443, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("i0(>E}h");
      rawVariable0.getCleaningDescription();
      rawVariable0.getAlias();
      assertEquals("i0(>E}h", rawVariable0.getForm());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "9bqydrW?)P";
      derivedVariable0.createVariableSummary();
      derivedVariable0.setNotes("9bqydrW?)P");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.remove((Object) derivedVariable1);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getAlias();
      assertEquals("9bqydrW?)P", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "_w";
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "'/%5|PN(7";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      String string0 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = ",3shy3'0";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getLabel();
      assertEquals("", string1);
      
      String string2 = derivedVariable0.getCleaningDescription();
      assertEquals("", string2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("'*d=,+nS1_^^.><+Q ");
      rawVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      ontologyTerm0.setDescription("N|M9IWu");
      ontologyTerm0.setDescription("N|M9IWu");
      rawVariable0.setIdentifier(2888);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getCleaningStatus();
      rawVariable0.getForm();
      assertEquals(2888, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("6B3");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      String string0 = "w2.QKu\\";
      arrayList0.clear();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Object object0 = new Object();
      derivedVariable0.setColumnEnd("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getLabel();
      assertEquals("UNABLE_TO_UPDATE_AVAILABILITY_STATE", derivedVariable0.getColumnEnd());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable1.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.columnEnd = "NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION";
      rawVariable0.notes = "MdoM.238:UF[a";
      String string0 = rawVariable0.getName();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.8280546221604146
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("M");
      user0.setCounty("|83}~#");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      user0.setPassword("|83}~#");
      rawVariable0.setAlias("C4\"$Cm FH");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("C4\"$Cm FH", rawVariable0.getAlias());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable1.createVariableSummary();
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      System.setCurrentTimeMillis((-731L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      String string0 = "variable.cleaningDescription.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User("[F", "[F");
      user0.setPostCode("user.postCode.label");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "xPd`x<wN{^`0";
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals("xPd`x<wN{^`0", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "aTI|1z &Bs";
      String string0 = rawVariable0.getForm();
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("@Y]{E`CdNg}7g'|FU");
      rawVariable0.setColumnStart("@Y]{E`CdNg}7g'|FU");
      rawVariable0.getOntologyTerms();
      rawVariable0.getFilePath();
      rawVariable0.getAlias();
      assertEquals("@Y]{E`CdNg}7g'|FU", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "k:K2_DmUMwWJBW";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getFilePath();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      assertEquals("k:K2_DmUMwWJBW", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      rawVariable1.questionNumber = "}&XDaf_";
      user0.setStatus("}&XDaf_");
      user0.setCounty((String) null);
      rawVariable1.getCodeBookNumber();
      user0.setPostCode((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.notes = null;
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("macaw.businessLayer.ValueLabel$EditingOperationType");
      derivedVariable0.getCodeBookNumber();
      assertEquals("macaw.businessLayer.ValueLabel$EditingOperationType", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("lOGfus*(~E");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getValueLabels();
      assertEquals("lOGfus*(~E", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear(":665:ZFSlx=;}");
      rawVariable0.getYear();
      assertEquals(":665:ZFSlx=;}", rawVariable0.getYear());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.codeBookNumber = "UNABLE_TO_GET_AVAILABILITY_STATE_NAME";
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getLabel();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCategory((String) null);
      user1.setCounty("tw^xwd7o3f\"di");
      user0.setPassword((String) null);
      User user2 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable1, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_DELETE_RAW_VARIABLE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear((String) null);
      User user0 = new User((String) null, "UNABLE_TO_DELETE_RAW_VARIABLE");
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel((String) null);
      user0.setCounty("HP-SY7[");
      user0.setPostCode("Bzkt 7?");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      String string0 = derivedVariable0.getColumnEnd();
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.557902746889237
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User("", "yj<(UK-.&2H4#N{N");
      user1.setIdentifier(98);
      user1.setEmail("yj<(UK-.&2H4#N{N");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add(1, (Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("2hdKcER,W");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.clone();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.48462116244288
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.form = "MdUp;2Ugy?$";
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.9986330663747731
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList0.add((-2594), (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2594, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "S`0QiU?&\"T98t";
      rawVariable0.setFilePath(" }@=:N]E+atiKPn");
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setAlias("~{z3a)2LQb");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      linkedList0.containsAll(arrayList0);
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      boolean boolean0 = false;
      User user0 = new User("variable.name.label", "variable.name.label");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
