/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 23:42:47 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(786);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 21, "", "Dereaed", "Dereaed", (Object) null);
      fieldWriter0.getSize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      String string0 = "PT";
      Item item0 = classWriter0.key;
      Item item1 = new Item();
      Item item2 = classWriter0.key3;
      item0.set(16);
      Attribute attribute0 = new Attribute("Dereaed");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("PT");
      fieldWriter0.put(byteVector1);
      byteVector1.length = 2113;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 499, "QhYi0", (String) null, "Q {&V83|jqQX", byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(786);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      classWriter0.visitAnnotation("", false);
      stringArray0[2] = "Dereaed";
      classWriter0.visit(50, 49, "", "", "PT", stringArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1015), "", "^g[", "Synthetic", "Dereaed");
      Attribute attribute0 = new Attribute("^g[");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(45);
      ByteVector byteVector2 = byteVector1.putLong(786);
      classWriter0.visit(49, (-1263), "wheel.asm.Type", "", "AhWlEFW3+L]QdF", stringArray0);
      ByteVector byteVector3 = byteVector2.putInt((-1097));
      fieldWriter0.put(byteVector3);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1048575);
      classWriter0.index = (-2640);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "5PUp?";
      stringArray0[1] = "5PUp?";
      stringArray0[2] = "5PUp?";
      stringArray0[3] = "51";
      stringArray0[4] = "51";
      stringArray0[5] = "51";
      stringArray0[6] = "51";
      stringArray0[7] = "51";
      classWriter0.visit(10, 1048575, "51", "51", "5PUp?", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1048575, "ConstantValue", "ConstantValue", "6]]P_1\"S2Gd]c~D}", "ConstantValue");
      ByteVector byteVector0 = new ByteVector(10);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1048575);
      classWriter0.version = (-295);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1048575, "ConstantValue", "ConstantValue", "6]]P_1\"S2Gd]c~D}", "ConstantValue");
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.next = null;
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(749);
      classWriter0.visit(749, (-636), "6_\"2Gdc-D}", "6_\"2Gdc-D}", "6_\"2Gdc-D}", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-861), "", "", "", "6_\"2Gdc-D}");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(774);
      classWriter0.index = (-863);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, ",(kH/u,]D#RynUa%b&", ",(kH/u,]D#RynUa%b&", "6]]P_1\"S2Gd]c~D}", ",(kH/u,]D#RynUa%b&");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putShort(30);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte) (-15);
      // Undeclared exception!
      try { 
        byteVector2.putByteArray(byteArray0, (-2925), 30);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Attribute attribute0 = new Attribute("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "The FileFilter must not be null", "", (String) null, "");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.putInt(2);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(736);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 736, "m\"2d]'}", "m\"2d]'}", "m\"2d]'}", "m\"2d]'}");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 736;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(786);
      classWriter0.newUTF8("wheel.asm.Type");
      classWriter0.newFloat(786);
      classWriter0.index = (-863);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 786, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(749);
      classWriter0.newFloat(0.0F);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 749, "f($PtHZ:=]", "f($PtHZ:=]", "f($PtHZ:=]", "f($PtHZ:=]");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(774);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-14));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-14), "}8:hm", "}8:hm", "}8:hm", "}8:hm");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(749);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1048575);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1048575, "^", "^", "^", "^");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(749);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 749, "m\"2G]'D}", "m\"2G]'D}", "m\"2G]'D}", "m\"2G]'D}");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 21, "'", "'", "'", "'");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(751);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1906), "'sL:XMp=01dKGpn", "ConstantValue", "'sL:XMp=01dKGpn", "'sL:XMp=01dKGpn");
      Attribute attribute0 = new Attribute("'sL:XMp=01dKGpn");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(784);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 784, "c6/#(?1T}'Ac/}_:;'", "c6/#(?1T}'Ac/}_:;'", "c6/#(?1T}'Ac/}_:;'", "c6/#(?1T}'Ac/}_:;'");
      fieldWriter0.visitAnnotation("c6/#(?1T}'Ac/}_:;'", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(784);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 784, "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}");
      fieldWriter0.visitAnnotation("6]]P_1\"2Gd]c~D}", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2657));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2657), "RuntimeInvisibleAnnotations", "f#US^", "", "f#US^");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(784);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 784, "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}");
      Attribute attribute0 = new Attribute("6]]P_1\"2Gd]c~D}");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(774);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 774, "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(774);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 774, "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}", "6]]P_1\"2Gd]c~D}");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(736);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 736, "m\"2d]'D}", "m\"2d]'D}", "m\"2d]'D}", "m\"2d]'D}");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(736);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 736, "m\"2d]'D}", "m\"2d]'D}", "m\"2d]'D}", "m\"2d]'D}");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 736, "m\"2d]'D}", "m\"2d]'D}", "m\"2d]'D}", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1468), "", "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
