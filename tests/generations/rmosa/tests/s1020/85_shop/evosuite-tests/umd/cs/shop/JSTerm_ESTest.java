/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 09 07:45:03 GMT 2020
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSTerm_ESTest extends JSTerm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5996882482534363
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars(1, 1);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.reset();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSTerm0.equals(jSTerm1);
      jSTerm0.equals(jSTerm1);
      System.setCurrentTimeMillis(1);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals(13, stringBuffer0.length());
      
      JSTerm jSTerm2 = jSTerm0.cloneT();
      boolean boolean0 = jSTerm0.equals(jSTerm2);
      assertFalse(jSTerm2.isConstant());
      assertTrue(boolean0);
      assertFalse(jSTerm2.isVariable());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeEval(true);
      jSTerm0.addElement((Object) null);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement("(dDsZG#b#J>W%)");
      UnaryOperator.identity();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution5 = jSTerm0.matches(jSTerm1, jSSubstitution4);
      assertNotSame(jSSubstitution5, jSSubstitution3);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(d.sZ #:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.addAll((Collection) jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement((Object) null);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      Object object0 = jSTerm0.clone();
      jSTerm0.addElement(object0);
      jSTerm0.applySubstitutionT(jSSubstitution1);
      assertEquals("[null, [null]]", jSTerm0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.parallelStream();
      jSTerm0.addElement("|PNM\"+Co");
      UnaryOperator.identity();
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      jSTerm0.addElement(jSTerm1);
      jSTerm1.isFunction();
      jSTerm0.print();
      // Undeclared exception!
      try { 
        jSTerm1.set(108, jSTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 108
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.addElement((Object) null);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeEval(true);
      // Undeclared exception!
      try { 
        jSTerm0.call();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.parallelStream();
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      Object object0 = jSTerm0.clone();
      jSTerm0.addElement(object0);
      jSTerm0.standardizerTerm();
      assertEquals("[dDsZG:JD>;%, [dDsZG:JD>;%]]", jSTerm0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".-9~'T");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.nval = 1170.4;
      jSTerm0.makeEval(true);
      streamTokenizer0.eolIsSignificant(true);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionT(jSSubstitution0);
      JSTerm jSTerm1 = jSTerm0.cloneT();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      Integer integer0 = new Integer((-2));
      jSSubstitution1.add((Object) integer0);
      jSTerm0.matches(jSTerm1, jSSubstitution1);
      JSTerm jSTerm2 = jSTerm0.call();
      // Undeclared exception!
      try { 
        jSTerm2.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.parallelStream();
      jSTerm0.makeEval(true);
      jSTerm0.addElement(jSSubstitution0);
      jSTerm0.applySubstitutionT(jSSubstitution0);
      assertTrue(jSTerm0.isEval());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eH/C:_p|7N7");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.nextToken();
      jSTerm0.makeEval(true);
      JSTerm jSTerm1 = jSTerm0.cloneT();
      jSTerm1.listIterator();
      jSTerm1.standardizerTerm();
      System.setCurrentTimeMillis(0L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm2 = jSTerm0.applySubstitutionT(jSSubstitution0);
      jSTerm2.listIterator();
      JSJshopVars.lessT = (-1);
      JSJshopVars.whiteSpace = 2649;
      jSTerm0.applySubstitutionT(jSSubstitution0);
      assertTrue(jSTerm0.isEval());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>;%)");
      UnaryOperator.identity();
      JSTerm jSTerm0 = new JSTerm();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.equals(jSTerm1);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5996882482534363
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars(1, 1);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.reset();
      System.setCurrentTimeMillis(1);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals(13, stringBuffer0.length());
      
      JSTerm jSTerm1 = jSTerm0.cloneT();
      jSTerm1.clear();
      assertEquals(1, jSTerm0.size());
      
      boolean boolean0 = jSTerm0.equals(jSTerm1);
      assertTrue(jSTerm1.isFunction());
      assertFalse(jSTerm1.isConstant());
      assertFalse(boolean0);
      assertFalse(jSTerm1.isVariable());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      jSTerm0.isVariable();
      jSTerm0.addElement(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z2k6xQ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeVariable();
      streamTokenizer0.pushBack();
      JSTerm jSTerm1 = jSTerm0.standardizerTerm();
      JSSubstitution jSSubstitution0 = jSTerm1.matches(jSTerm0);
      assertEquals(1, jSSubstitution0.size());
      
      boolean boolean0 = jSTerm0.equals(jSTerm1);
      assertFalse(boolean0);
      
      JSTerm jSTerm2 = jSTerm1.call();
      assertFalse(jSTerm2.isFunction());
      assertEquals("[%%%0]", jSTerm1.toString());
      assertEquals("[%%%0]", jSTerm2.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement("|PNM\"+Co");
      UnaryOperator.identity();
      Object object0 = new Object();
      Object object1 = jSTerm0.clone();
      jSTerm0.addElement(object1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.addElement(jSSubstitution0);
      Function.identity();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement("|PNM\"+Co");
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Object object0 = new Object();
      jSTerm0.addElement(unaryOperator0);
      // Undeclared exception!
      try { 
        jSTerm0.standardizerTerm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.function.UnaryOperator$$Lambda$45/1418639306 cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8637152712119474
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fZL:R6>pTb Cfl6`");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeVariable();
      streamTokenizer0.pushBack();
      JSTerm jSTerm1 = new JSTerm();
      JSTerm jSTerm2 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.wordChars(2, 2);
      jSTerm2.clear();
      jSTerm1.matches(jSTerm2, jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSTerm2, jSSubstitution0);
      JSSubstitution jSSubstitution2 = jSTerm0.matches(jSTerm1, jSSubstitution1);
      assertTrue(jSSubstitution2.fail());
      
      jSTerm0.matches(jSTerm1);
      assertFalse(jSTerm0.isFunction());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(1823);
      // Undeclared exception!
      try { 
        jSTerm0.call();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement(jSSubstitution0);
      jSTerm0.clone();
      Object object0 = jSTerm0.clone();
      jSTerm0.addElement(object0);
      Function.identity();
      jSTerm0.cloneT();
      StringReader stringReader0 = new StringReader("(k0XL\"!ub?jG`kt");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = null;
      try {
        jSTerm1 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8334167840510496
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z2k6xQ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeVariable();
      assertFalse(jSTerm0.isConstant());
      
      streamTokenizer0.pushBack();
      JSTerm jSTerm1 = new JSTerm();
      JSTerm jSTerm2 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm2.matches(jSTerm0, jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSTerm2.matches(jSTerm1, jSSubstitution0);
      assertNotSame(jSSubstitution0, jSSubstitution1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.addElement("(dDsZG#:J#D>%)");
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSTerm0, jSSubstitution1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSTerm1, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%eh<ZspoWp3Aut<;T|");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      assertEquals("[%eh]", jSTerm0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("(dDsZG#:#D>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSTerm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.isFunction();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(1823);
      // Undeclared exception!
      try { 
        jSTerm0.isGround();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>;%)");
      StringReader stringReader1 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(%k0XL\"!uq+b?j`G`kt");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?T03B{n}`&j:~t<O");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.isGround();
      assertFalse(boolean0);
      assertFalse(jSTerm0.isFunction());
      assertEquals("[?%%%]", jSTerm0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?)J%9+oCfECo>V\"F?");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      JSTerm jSTerm1 = jSTerm0.call();
      jSTerm1.parallelStream();
      boolean boolean0 = jSTerm1.equals(jSTerm0);
      assertFalse(jSTerm1.isConstant());
      assertFalse(jSTerm0.isFunction());
      assertTrue(boolean0);
      assertEquals("[?]", jSTerm1.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      jSSubstitution0.parallelStream();
      jSTerm0.addElement(jSSubstitution0);
      jSTerm0.standardizerTerm();
      assertEquals("[[]]", jSTerm0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.standardizerTerm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      jSTerm0.addElement((Object) null);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution1.standarizerSubs();
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSTerm1, jSSubstitution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) jSTerm0);
      jSTerm0.addElement(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.389893765450255
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dIDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = jSTerm0.applySubstitutionT(jSSubstitution0);
      System.setCurrentTimeMillis(41);
      jSTerm0.equals(jSTerm1);
      System.setCurrentTimeMillis(1567L);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "|PNM\"+Co";
      jSTerm0.addElement("|PNM\"+Co");
      UnaryOperator.identity();
      Object object0 = new Object();
      jSTerm0.addElement(object0);
      // Undeclared exception!
      try { 
        jSTerm0.isGround();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.addElement(jSSubstitution1);
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.equals(jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement("|PNM\"+Co");
      jSTerm0.addElement("|PNM\"+Co");
      Function.identity();
      // Undeclared exception!
      try { 
        jSTerm0.cloneT();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(1823);
      // Undeclared exception!
      try { 
        jSTerm0.cloneT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.parallelStream();
      jSTerm0.addElement(jSSubstitution0);
      JSTerm jSTerm1 = jSTerm0.standardizerTerm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSTerm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4791475340911524
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.reset();
      System.setCurrentTimeMillis(1);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals(13, stringBuffer0.length());
      
      JSTerm jSTerm1 = jSTerm0.cloneT();
      JSSubstitution jSSubstitution2 = jSTerm1.matches(jSTerm0, jSSubstitution1);
      assertTrue(jSTerm1.isFunction());
      assertNotSame(jSTerm1, jSTerm0);
      assertFalse(jSTerm1.isConstant());
      assertEquals(0, jSSubstitution2.size());
      assertFalse(jSSubstitution2.fail());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement("call ");
      jSTerm0.addElement("call ");
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.call();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.437730347982188
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.addElement(jSTerm0);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.wordChars((-4), (-4));
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.standarizerSubs();
      jSTerm0.matches(jSTerm0, jSSubstitution1);
      // Undeclared exception!
      try { 
        jSTerm0.call();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(780);
      jSTerm0.listIterator();
      JSJshopVars.apostrophe = 47;
      jSTerm0.addElement("|PNM\"+Co");
      jSTerm0.addElement("|PNM\"+Co");
      Function.identity();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      int int0 = 93;
      jSTerm0.setSize(93);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      jSTerm0.iterator();
      JSTerm jSTerm1 = jSTerm0.applySubstitutionT(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm1.replaceAll((UnaryOperator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Integer integer0 = new Integer(1);
      jSSubstitution0.add((Object) integer0);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      assertTrue(jSTerm0.isVariable());
      
      JSTerm jSTerm1 = jSTerm0.call();
      assertTrue(jSTerm1.isVariable());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.addElement("|PNM\"+Co");
      Function.identity();
      jSTerm0.makeVariable();
      jSTerm0.cloneT();
      assertTrue(jSTerm0.isVariable());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.cloneT();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.addElement(jSSubstitution0);
      UnaryOperator.identity();
      StringReader stringReader0 = new StringReader("?");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSTerm0.removeElement(streamTokenizer0);
      jSTerm0.makeVariable();
      JSTerm jSTerm1 = new JSTerm();
      boolean boolean0 = jSTerm0.equals(jSTerm1);
      assertTrue(jSTerm0.isVariable());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.equals(jSTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("dsZG:J>;%");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(|U3q/%%MYSV/?b+");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      int int0 = 1823;
      jSTerm0.setSize(1823);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("]");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1209503926735835
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y~1n#5}AX?dEy0)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      assertEquals(41, streamTokenizer0.ttype);
      assertFalse(jSTerm1.isVariable());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader(")DVrI!]9R=445");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      assertTrue(jSTerm1.isConstant());
      assertFalse(jSTerm1.isVariable());
      assertEquals("[nil]", jSTerm1.toString());
      assertFalse(jSTerm1.isFunction());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3766223465693348
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.reset();
      System.setCurrentTimeMillis(1);
      jSTerm0.toStr();
      jSTerm0.cloneT();
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution0 = null;
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT((JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      JSJshopVars.interrogation = 44;
      StringReader stringReader0 = new StringReader("%%%");
      StringReader stringReader1 = new StringReader("'uy3");
      jSTerm0.setSize(3657);
      jSTerm0.setSize(119);
      StringReader stringReader2 = new StringReader("?");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader2);
      jSTerm0.removeElement(stringReader2);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT((JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dIDsZG#q$J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.read();
      streamTokenizer0.pushBack();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      System.setCurrentTimeMillis(41);
      jSTerm0.equals(jSTerm0);
      System.setCurrentTimeMillis(1363L);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeFunction();
      StringReader stringReader0 = new StringReader("= ");
      JSTerm jSTerm1 = new JSTerm();
      assertEquals("[]", jSTerm1.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%9N)'6=5]8wd7!#>G:");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(jSTerm0);
      jSTerm0.replaceAll(unaryOperator0);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zHj|{J");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      boolean boolean0 = jSTerm0.equals(jSTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("m2=9af");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution1 = jSTerm1.matches(jSTerm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5759873622966776
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.whitespaceChars(1, 1);
      stringReader0.reset();
      System.setCurrentTimeMillis(1);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals(13, stringBuffer0.length());
      
      JSTerm jSTerm1 = jSTerm0.cloneT();
      JSSubstitution jSSubstitution2 = jSTerm1.matches(jSTerm0);
      assertNotSame(jSTerm1, jSTerm0);
      assertFalse(jSTerm1.isConstant());
      assertTrue(jSSubstitution2.isEmpty());
      assertFalse(jSSubstitution2.fail());
      assertTrue(jSTerm1.isFunction());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5274701679579494
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals(14, stringBuffer0.length());
      
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = jSTerm0.applySubstitutionT(jSSubstitution0);
      assertTrue(jSTerm1.isFunction());
      
      JSTerm jSTerm2 = jSTerm0.standardizerTerm();
      assertFalse(jSTerm2.isEval());
      assertFalse(jSTerm2.isVariable());
      assertNotSame(jSTerm0, jSTerm1);
      assertTrue(jSTerm2.isFunction());
      assertFalse(jSTerm2.isConstant());
      assertNotSame(jSTerm2, jSTerm0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("49C@V(of3){Y");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSJshopVars.plus = (-4);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSTerm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7GwkpSGd");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = jSTerm0.standardizerTerm();
      assertFalse(jSTerm1.isFunction());
      assertFalse(jSTerm1.isVariable());
      assertTrue(jSTerm1.isConstant());
      assertEquals("[7.0]", jSTerm1.toString());
      assertFalse(jSTerm1.isEval());
      assertNotSame(jSTerm1, jSTerm0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3YO'k,A?0g'I0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.equals(jSTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.9017412329512398
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dIDsZ#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Qe.lW;Rl[q3D");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSTerm0.addElement(stringReader0);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.standarizerSubs();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSTerm) null, jSSubstitution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.389893765450255
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dIDsZG#:J#D>;%)");
      char[] charArray0 = new char[7];
      charArray0[0] = '?';
      charArray0[1] = 'U';
      charArray0[2] = '4';
      charArray0[3] = 'F';
      charArray0[4] = 'H';
      charArray0[5] = '\"';
      charArray0[6] = '$';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = jSTerm0.applySubstitutionT(jSSubstitution0);
      assertEquals("[G:JD>;%]", jSTerm0.toString());
      
      JSJshopVars.leftBrac = (-1);
      JSTerm jSTerm2 = jSTerm1.applySubstitutionT(jSSubstitution0);
      assertNotSame(jSTerm0, jSTerm1);
      assertFalse(jSTerm2.isFunction());
      assertFalse(jSTerm2.isVariable());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.print();
      assertEquals("[Line]", jSTerm0.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.rightBrac = 2;
      jSTerm0.parallelStream();
      jSTerm0.addElement(" ");
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.addElement(jSTerm1);
      jSTerm0.isGround();
      // Undeclared exception!
      try { 
        jSTerm1.set(103, jSTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 103
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.5875009311062074
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#:#D>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      System.setCurrentTimeMillis(1);
      boolean boolean0 = jSTerm0.isGround();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.call();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.2788479335999436
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.skip((-4));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.reset();
      System.setCurrentTimeMillis(1);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals("(dDsZGbJ>W% )", stringBuffer0.toString());
      assertFalse(jSTerm0.isEval());
      
      JSTerm jSTerm1 = jSTerm0.call();
      assertEquals(10, jSTerm1.capacity());
      assertNotSame(jSTerm1, jSTerm0);
      assertFalse(jSTerm1.isVariable());
      assertFalse(jSTerm1.isConstant());
      assertTrue(jSTerm1.isFunction());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P`{*R=N,Fhu$4AM8:c");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = jSTerm0.call();
      assertFalse(jSTerm1.isEval());
      assertFalse(jSTerm1.isFunction());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.22371807606583377
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(agMF}f?]\r(`Z");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'W';
      charArray0[1] = '[';
      charArray0[2] = 'd';
      charArray0[3] = '{';
      charArray0[4] = 'l';
      charArray0[5] = '/';
      charArray0[6] = 'P';
      stringReader0.read(charArray0);
      JSJshopVars.plus = (-4);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.isEval();
      assertEquals("[?%%%]", jSTerm0.toString());
      assertTrue(jSTerm0.isVariable());
      assertFalse(boolean0);
      assertFalse(jSTerm0.isConstant());
      assertFalse(jSTerm0.isFunction());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.6551416497122078
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(d.sZ #:J#D>;%)");
      JSTerm jSTerm0 = new JSTerm();
      stringReader0.close();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.40945861869508926
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dIDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.listIterator();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeConstant();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.6551416497122078
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(d.sZ #:J#D>;%)");
      JSTerm jSTerm0 = new JSTerm();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">Hv{.fb # `j");
      JSTerm jSTerm0 = new JSTerm();
      boolean boolean0 = jSTerm0.isConstant();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("dDsZGgJD>;%");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.isConstant();
      assertFalse(jSTerm1.isEval());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("umd.cs.shop.JSTerm");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals(4, stringBuffer0.length());
      assertFalse(jSTerm0.isEval());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'1b zs!VINSL8an");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(>gMFKf?]\r(FZ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.cloneT();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.777661295762166
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(k0XL\"!ub?jG`kt");
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = jSTerm0.cloneT();
      assertNotSame(jSTerm1, jSTerm0);
      assertFalse(jSTerm1.isFunction());
      assertEquals("[%%%]", jSTerm1.toString());
      assertFalse(jSTerm1.isEval());
      assertFalse(jSTerm1.isVariable());
      assertTrue(jSTerm1.isConstant());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">Hv{.fb # `j");
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.standardizerTerm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(1823);
      // Undeclared exception!
      try { 
        jSTerm0.standardizerTerm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.40945861869508926
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dIDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nextToken();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.isGround();
      assertFalse(jSTerm0.isEval());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.2145591551764051
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>;%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isVariable();
      assertFalse(jSTerm0.isEval());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1365424468294338
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.addElement(jSTerm0);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.standarizerSubs();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "(dDsZG#:J#D>%)");
      jSPredicateForm0.retainAll(jSSubstitution0);
      jSTerm0.matches(jSPredicateForm0, jSSubstitution1);
      JSSubstitution jSSubstitution2 = jSTerm0.matches(jSTerm0, jSSubstitution1);
      assertFalse(jSSubstitution2.fail());
      
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution3 = jSTerm0.matches(jSTerm1, jSSubstitution1);
      assertTrue(jSSubstitution3.fail());
      assertFalse(jSTerm0.isEval());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.007466573695334
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(dDsZG#:J#D>%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.addElement((Object) null);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSTerm0, jSSubstitution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.2788479335999436
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSJshopVars.lessT = 1;
      StringReader stringReader0 = new StringReader("(dDsZG#b#J>W%)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.reset();
      System.setCurrentTimeMillis(1);
      StringBuffer stringBuffer0 = jSTerm0.toStr();
      assertEquals(13, stringBuffer0.length());
      
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution2 = jSTerm0.matches(jSTerm1);
      assertFalse(jSTerm0.isEval());
      assertTrue(jSSubstitution2.fail());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm((StreamTokenizer) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
