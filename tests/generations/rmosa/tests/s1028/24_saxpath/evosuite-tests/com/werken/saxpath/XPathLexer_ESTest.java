/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 11:18:36 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9792886722599112
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.consume((-815));
      xPathLexer0.minus();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("g:W[gk7>`'<`kxlE");
      xPathLexer0.consume((-3229));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tJ`My");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-648));
      Token token0 = new Token((-648), "tJ`My", (-648), (-648));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      int int0 = (-1430);
      xPathLexer0.consume((-1430));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-2323));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.consume((-419));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.consume((-1213));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0618047033734874
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.star();
      xPathLexer0.consume((-1729));
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6903752622677266
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=$8.d");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('8', char0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8943491735075906
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.pipe();
      xPathLexer0.consume((-1729));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.497819495727898
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e &WTRUY^1");
      xPathLexer0.mod();
      xPathLexer0.consume((-2557));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9807049691157324
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.minus();
      xPathLexer0.consume((-508));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";;:>:s5U_#");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-112));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W J(");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(" ", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5762568283040395
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1:.9w5,");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".9", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5030853380934683
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1:.9w5,");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.892400767303865
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-29));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0992338308014475
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a]ks");
      xPathLexer0.number();
      xPathLexer0.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.79438837168257
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}.!Ib>PnQ&E+Uh8");
      Token token0 = xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token0);
      assertEquals(14, token0.getTokenType());
      assertEquals("}.", token0.getTokenText());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("!", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0606758531880334
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.consume((-1809));
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.756277968739305
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      Token token0 = xPathLexer0.dollar();
      String string0 = token0.toString();
      assertEquals("[ (26) (l)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("mg", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("l", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(".8", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("L", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.comma();
      assertEquals("|", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.637687195377672
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|vNU{");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("vNU", token0.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.79709058749954
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\\7.+");
      Token token0 = xPathLexer0.comma();
      assertEquals("\\", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.consume((-713));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6386726597777703
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      xPathLexer0.setXPath("/*h<</'ot");
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2430));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FT8XFu5G}xW9v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("FT8XFu5G", token0.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.733305538797096
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("lm", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("gl", token1.getTokenText());
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      char char0 = xPathLexer0.LA(11);
      assertEquals('C', char0);
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H^pGehA9");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("^pGehA9", token0.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      assertEquals("/*", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("h", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.endPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume((-104));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ytH>>p");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("tH", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1607597319228833
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">A%;CGmTB~s");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('d');
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7{)NYn.-W`ii^6");
      Token token0 = xPathLexer0.number();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4374355727841266
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u7'O{");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("u7'O{");
      xPathLexer1.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.794110516722859
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u(f<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("f<", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      assertNotNull(token2);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3606603471552874
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";:>:s5U_#");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(":s", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.isIdentifierChar(']');
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("U_", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0za");
      xPathLexer0.number();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("0^'D;T9Q?S+ZV/1o^");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.43570606742266
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K6V`'2vAU");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals("6", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("`", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qo+S ZG Be<I@p");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("qo", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("qo+S ZG Be<I@p");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("S", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.279746654339424
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("as");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("as", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`2((oitscAlP\u0001");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`2((oitscAlP\u0001", token0.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ewdd");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("dd", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R:S$pvc2HbxFBX>00;");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(":", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6.>82M5RN_4J%`pP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals("6.", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bC')5SHRH]Vqgv|");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("C", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6932245773362196
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("diu$+,v}C+\"jr-=");
      Token token0 = xPathLexer1.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("iu", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.694118987274108
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=$8.d");
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6901823238150926
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mdg[;W@c(HC(m*K<p");
      Token token0 = xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5188566338664158
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1985632902179788
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%f!Q&/L");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.not();
      assertEquals("f", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.isIdentifierChar('d');
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("&", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("L", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.3619128822231257
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":RxU>G`");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7344769164390619
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("lm", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("gl", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.comma();
      assertEquals("|", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1202276115865593
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">A%;CGmTB~s");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("A", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar(',');
      assertFalse(boolean0);
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("%", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2987809680330296
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@N{`gTT>g+As4DJ! {");
      Token token0 = xPathLexer0.plus();
      assertEquals("@", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("{`gTT>g+As4DJ! {", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("{", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.at();
      assertEquals("T", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">PD)ma3");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("PD", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5765843988226926
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&+Dr6df/|<n:-Tyzn_");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Dr6df", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_k>0K`X");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M`ZA@_");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("E^JE4p*o8\"\u0004$BYj{");
      xPathLexer1.isIdentifierChar('d');
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.8910459577298777
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.comma();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6948091183990215
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1:.9w5,");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3956127926478654
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";:>:s5U_#");
      Token token0 = xPathLexer0.at();
      assertEquals(";", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("s5", token3.getTokenText());
      
      xPathLexer0.isIdentifierChar(']');
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.pipe();
      assertEquals("U", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("_", token5.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1643070801493682
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("U@:]^", token4.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f\"");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6678726621251612
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.143001852289074
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qbT 5lhysI#Ij");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.892632114903634
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_!O:.$");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.consume((-663));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3*3P<");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("3", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8423049422082958
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("diu$+,v}C+\"jr-=");
      xPathLexer1.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer1.at();
      assertEquals("d", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.minus();
      assertEquals("i", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer2.mod();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("u$+,v}C+\"jr-=", token4.getTokenText());
      assertNotSame(token4, token0);
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7336904255762353
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.2862844537332951
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":-8xU>G`");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5780791438596724
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=g\"u^L0r 3V.v/");
      Token token0 = xPathLexer0.dots();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("g", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("X y]gx");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token4 = xPathLexer3.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer3.dots();
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kjB%b");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals("j", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("%b", token2.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.454846471029285
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":-8xU>G`");
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7856363495279706
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";@KbOog1jXq_>Hp");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(";@", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.colon();
      assertEquals("H", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(";@KbOog1jXq_>Hp");
      xPathLexer1.setPreviousToken((Token) null);
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TY[");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.2678696043961537
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.2ln#");
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7037595479727587
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("mg", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("l.", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("8", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7053764935625395
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("lm", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(".8", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.comma();
      assertEquals("|", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E]");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("E", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GZZ;_&");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals("Z", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(";_", token2.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6L:]&^VB-uONx");
      Token token0 = xPathLexer0.number();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7067884742184047
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("lm", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("gl", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("K", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.consume((-1430));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(" ", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'H");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kXz6 i|d`3TWS-(3m");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Xz6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";D'T|WL4!");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";D'T|WL4!", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.2136892044654117
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";:>:s5U_#");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.isIdentifierChar(']');
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3ThpZ");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H4(W\"rgB{Mc0M");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.6673537207655347
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("/*", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.consume((-1));
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("*h", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Uva?q");
      Token token1 = xPathLexer1.equals();
      xPathLexer1.setPreviousToken(token1);
      assertEquals("U", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("va", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~r");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7T cM^");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("cM", token1.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.6877906150720685
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("diu$+,v}C+\"jr-=");
      Token token1 = xPathLexer1.minus();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(6, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.2685121746772783
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.2ln#");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("l", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6877906150720685
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.at();
      xPathLexer1.setPreviousToken(token1);
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.4753010325364178
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e &WTRUY^1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("e", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&WTRUY^1", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("&", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("W", token3.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.9297205569658238
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=$8.d");
      XPathLexer xPathLexer1 = new XPathLexer("=$8.d");
      xPathLexer1.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals("=", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("=$8.d");
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.identifierOrOperatorName();
      Token token2 = xPathLexer1.rightBracket();
      xPathLexer1.star();
      xPathLexer2.star();
      Token token3 = xPathLexer1.star();
      assertEquals(".", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("$", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.setPreviousToken(token2);
      assertEquals("$", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token5 = xPathLexer2.identifierOrOperatorName();
      assertEquals("8.d", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer1.or();
      xPathLexer5.endPosition();
      Token token6 = xPathLexer1.comma();
      assertEquals("d", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5555922160034714
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qbT 5lhysI#Ij");
      Token token0 = xPathLexer0.comma();
      assertEquals("q", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("s", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('M');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6382331959236724
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("/*", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("h<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.weresaxpth.XPathLexer");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.4679179601368824
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qbT 5lhysI#Ij");
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.isIdentifierStartChar('F');
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=$8.d");
      XPathLexer xPathLexer1 = new XPathLexer("=$8.d");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("$", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('j');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3686909895215762
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<d#`WFfg?|*GVor'<");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("d", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.mod();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",@?Rvzx8&t0b[bbB'z");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|zB");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals("z", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("bf");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("bf", token1.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d9Vv0+1iaOz*3y=-FK:");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3034788552493013
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.2ln#");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ln#", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.7329406140505397
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("|K", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?!*2K&z1Co", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("?!", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(20, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("&", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.n#");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("n#", token1.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O|QzS}dxCF");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("O", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.576335951617724
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":DNGM8");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("NGM8", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.7819164072167197
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qo+S ZG Be<I@p");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("qo", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("Z", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("G", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("B", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.consume();
      Token token6 = xPathLexer0.rightParen();
      assertEquals("<", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("I@p", token7.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('`');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("qo+S ZG Be<I@p");
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("qo", token8.getTokenText());
      
      Token token9 = xPathLexer0.plus();
      assertEquals("I", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      xPathLexer1.consume();
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.731213573847667
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("lm", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("gl", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".8", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(17, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("K", token6.getTokenText());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.3960221924677296
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";:>:s5U_#");
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.isIdentifierChar(']');
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":K");
      xPathLexer0.consume((-1195));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.204824394650597
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      xPathLexer0.equals();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('`');
      assertFalse(boolean1 == boolean0);
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      xPathLexer0.consume((-1480));
      xPathLexer0.not();
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-1474), int0);
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer1.rightParen();
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1yAx^$bur");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("yAx", token0.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.2845130924164607
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.2ln#");
      XPathLexer xPathLexer1 = new XPathLexer(":.2ln#");
      XPathLexer xPathLexer2 = new XPathLexer(":.2ln#");
      Token token0 = xPathLexer2.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.div();
      Token token1 = xPathLexer1.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals(":.", token1.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.1023956589129735
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("as");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.endPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1195));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5445519927532287
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.isIdentifierStartChar('e');
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.0978100054573563
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-394));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.6352676620030204
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.759693383974764
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("lm", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("gl", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      xPathLexer0.setXPath("m/l38w:2-'D`x8=K%");
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("/", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.796560996608503
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.consume((-2341));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.7396895877571283
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/*h<</'ot");
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5063638417063936
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lmgl.8L|K?!*2K&z1Co");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("mgl.8L", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("|K", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("!", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals("*", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.7817835938677709
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qo+S ZG Be<I@p");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("qo", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(" ", token4.getTokenText());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("<", token6.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('`');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("qo+S ZG Be<I@p");
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals("I", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      xPathLexer1.consume();
      Token token9 = xPathLexer1.not();
      assertEquals("S", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      String string0 = "diu$+,v}C+\"jr-=";
      XPathLexer xPathLexer1 = new XPathLexer("diu$+,v}C+\"jr-=");
      xPathLexer1.consume((-689));
      xPathLexer1.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w)gf/x r%Il");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";:>:s5U_#");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals(":>", token0.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.4755791579709887
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e &WTRUY^1");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals("e", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&WTRUY^1", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("T", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("RUY^1", token4.getTokenText());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o");
      Token token0 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (21) (o)", string0);
      
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('w');
      assertTrue(boolean0);
      
      xPathLexer0.or();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      boolean boolean1 = xPathLexer0.isIdentifierChar('\\');
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.3046217123921586
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.2ln#");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertEquals(".2ln", token0.getTokenText());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("#", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5087949381754218
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e &WTRUY^1");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals("e", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(" &", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("WTRUY", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.2893665959532945
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=$8.d");
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.colon();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.060187452699633
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.currentPosition();
      xPathLexer0.plus();
      xPathLexer0.getXPath();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.8558350694528993
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qbT 5lhysI#Ij");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.nextToken();
      boolean boolean0 = xPathLexer0.isIdentifierChar('`');
      assertFalse(boolean0);
      
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.dots();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.consume();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.getPreviousToken();
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.setXPath("S(c/$Pj*LL");
      Token token13 = xPathLexer0.dots();
      assertEquals("S", token13.getTokenText());
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.3083169218985244
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\\7.+");
      Token token0 = xPathLexer0.comma();
      assertEquals("\\", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.colon();
      assertEquals("7", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.1268847209279154
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.163156414921033
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(">", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("U", token4.getTokenText());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(8);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.LA(2423);
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.0780014561946283
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";:>:s5U_#");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      boolean boolean0 = xPathLexer0.isIdentifierChar(']');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-107));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.0567934118715805
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\\7.+");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("\\", token0.getTokenText());
      
      xPathLexer0.consume(107);
      xPathLexer0.mod();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.currentPosition();
      int int1 = xPathLexer0.endPosition();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.0526921325973753
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K_!");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("K_", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.endPosition();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.163156414921033
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("U", token4.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.0959303109859069
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\\7.+");
      Token token0 = xPathLexer0.comma();
      assertEquals("\\", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.120965130130363
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%f!Q&/L");
      xPathLexer0.consume();
      xPathLexer0.setXPath("%f!Q&/L");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("f", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.isIdentifierChar('d');
      xPathLexer0.div();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0577602969647817
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.164251385356831
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals("]", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("U", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("@", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.1635062793485673
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals("]", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(">", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("U", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.2855735467800784
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":-8xU>G`");
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.0133678052002693
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K_!");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("K_", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.endPosition();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.4202065276414335
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":-8xU>G`");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertEquals("-8xU", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("G", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.0526921325973753
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K_!");
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('D');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('`');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.09369477483826
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K_!");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.0643141996692582
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":-8xU>G`");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.0375524015757562
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%f!Q&/L");
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('d');
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.1247640896322912
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e]!1>U@:]^");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("U", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.189422781267857
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":RxU>G`");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.2114011303541332
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";:>:s5U_#");
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(":s", token2.getTokenText());
      
      xPathLexer0.isIdentifierChar(']');
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.027506398845117
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":-8xU>G`");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.0236941667411839
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\\7.+");
      Token token0 = xPathLexer0.comma();
      assertEquals("\\", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifier();
      assertEquals("7.", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.0033249196125593
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("].%?vs80*940Xgl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
  }
}
