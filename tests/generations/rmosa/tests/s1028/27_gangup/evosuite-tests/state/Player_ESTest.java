/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 10:08:57 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1144), "J{AsC>y{-'qb`!%TA", (-1144));
      player0.setMoney((-1144));
      player0.id = 2961;
      player0.setDead(504L);
      player0.getMoney();
      player0.getMoney();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(1504);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.setDead((-427L), false);
      player0.getTimeOfDeath();
      player0.gangStrength();
      MockFile mockFile0 = new MockFile("o-kfp{7yfGv9pyIN");
      File file0 = MockFile.createTempFile("o-kfp{7yfGv9pyIN", "o-kfp{7yfGv9pyIN", (File) mockFile0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(file0, "o-kfp{7yfGv9pyIN");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // o-kfp{7yfGv9pyIN
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-1477), "Ar)|Z=bp3)XI", (-1477));
      player0.head = (Party) player1;
      player0.setConnected(false);
      player0.id = 2;
      player0.getTimeOfDeath();
      player0.isConnected();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertFalse(player0.isConnected());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(141);
      Party party0 = new Party();
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(10);
      Player player1 = new Player(10);
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player10", player1.getName());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player5", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player5", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(4119, (String) null, (String) null, 4119, 2);
      Player player1 = new Player(1513, "", "", (-10), 2);
      long long0 = player0.getTimeOfDeath();
      assertEquals(2, player0.getStrength());
      assertEquals(0L, long0);
      
      Player player2 = new Player((byte) (-3), (String) null, 2444);
      Player player3 = new Player((-2153), "]#kSCiN1e&Nu.2OXSF", 4919);
      player2.toString();
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertTrue(player2.isConnected());
      assertEquals(1, player2.getStrength());
      assertEquals(2444, player2.getPictureId());
      assertEquals("0.0.0.0", player2.getIP());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(228, "u5swl[EfbKp-r80", "dp-=9X~8\"n^9uwC4B]", (-13), (-13));
      player0.setY((-13));
      float float0 = player0.getY();
      assertEquals((-13.0F), float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(60, (String) null, (String) null, 60, (-668));
      int int0 = player0.gangStrength();
      assertEquals((-668), int0);
      assertEquals(60, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-982));
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-982", player0.toString());
      
      Player player1 = new Player((-982), "", (short)4919);
      player1.toString();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-3645));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)48;
      byteArray0[2] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-117), 30775);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-2551), ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", (-1), (-1));
      player0.setX(0);
      player0.pack();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.getStrength();
      float float0 = player0.getMoney();
      assertEquals(9, player0.getId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-18), (String) null, (-18));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-685));
      player0.setConnected(true);
      player0.setDead();
      Party party0 = player0.prev;
      player0.setZ(4919);
      player0.reset(true);
      player0.setDead((-760L), true);
      player0.getMoney();
      Player player1 = new Player(2, (String) null, (String) null, 4919, (short)4919);
      player1.setX(4919);
      player0.getStrength();
      player1.getName();
      assertEquals(4919.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(4919);
      player0.setConnected(true);
      player0.setDead();
      Party party0 = player0.prev;
      player0.setZ(2);
      player0.reset(true);
      player0.setDead(0L);
      player0.setDead(0L, false);
      player0.getMoney();
      player0.setX(0.0F);
      player0.reset(false);
      player0.getY();
      player0.setY(2);
      player0.getStrength();
      player0.getName();
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(2.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setDead();
      player0.isDead();
      Player player1 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1), "s?7", 4919);
      Player player1 = new Player((short)4919);
      player0.add(player1);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.getName());
      
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4919, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(0, "HP*J1CV3pr", "HP*J1CV3pr", 0, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = " J'K1AXT%J";
      Player player0 = new Player(399, "", " J'K1AXT%J", 0);
      Player player1 = new Player(0, " J'K1AXT%J", "state.Player", 390, 0);
      player1.setDead((long) 390);
      player1.setDead((long) (short)4919, false);
      player0.setJoinOK(player1, false);
      player0.getIP();
      String string1 = "";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, false, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-231), ":O!o~5zc_%]FDiw5", (-5118));
      player0.setZ((-5118));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)2;
      player0.unpack(byteArray0);
      player0.reset(false);
      player0.getName();
      float float0 = player0.getZ();
      assertEquals((-5118.0F), float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2472);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, ";?bms>YyfM)e?o[,O!~c", ";?bms>YyfM)e?o[,O!~c", 0, 0);
      player0.setX(0);
      Player player1 = new Player(55);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(71);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(2075, (String) null, (String) null, 0);
      player0.id = 983;
      player0.setY(2075);
      player0.id = 3;
      player0.getX();
      player0.getMoney();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.getIP();
      player0.setX(0.1F);
      player0.getStrength();
      float float0 = Player.TOLERANCE;
      int int0 = Packable.ACTION;
      player0.setZ(0.2F);
      player0.isDead();
      player0.setDead();
      player0.getY();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-982), "]", (-982));
      player0.toString();
      assertEquals((-982), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-487.24893F));
      player0.getX();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte)44;
      byteArray0[5] = (byte)107;
      byteArray0[6] = (byte)10;
      player0.unpack(byteArray0);
      player0.setDead(5032L, false);
      int int0 = player0.getStrength();
      assertEquals(5032L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-752), "{79dfORHw;V", 1);
      player0.getY();
      player0.getSubparty();
      player0.type();
      player0.setDead();
      player0.next = null;
      player0.add((Party) null);
      player0.prev = null;
      player0.getTimeOfDeath();
      player0.setX(0.0F);
      player0.setConnected(false);
      player0.setMoney(5);
      player0.setConnected(false);
      player0.setMoney(1392409281320L);
      player0.getName();
      player0.getX();
      player0.getMoney();
      player0.setZ(1392409281320L);
      player0.reset(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(51);
      player0.setMoney(51);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals(51.0F, float0, 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(2472);
      player0.setDead(15000L);
      player0.getTimeOfDeath();
      player0.setY(0.0F);
      assertEquals(15000L, player0.getTimeOfDeath());
      
      Player player1 = new Player((short)4919, "", (short)4919);
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Player player0 = new Player(300);
      byte[] byteArray0 = new byte[19];
      byteArray0[1] = (byte) (-91);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(17, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-673));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-673", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(60);
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(9, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(60);
      player0.setX(60);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(60.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(636);
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      
      float float0 = player0.getY();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player636", player0.getName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-3619), "", "", 363, (-3619));
      player0.setDead((long) (-3619));
      player0.type();
      player0.remove((Party) null);
      player0.getName();
      player0.getPictureId();
      player0.setDead(0L);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-982), (String) null, (String) null, (-982), (-982));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(0);
      int int0 = player0.type();
      assertEquals(5, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-1162));
      player0.pack();
      String string0 = player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1162", string0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-87));
      player0.setConnected(false);
      Player player1 = new Player((-28927), "t(@YK@pL]4/Z1eJu", 502);
      player1.isJoinOK(player0, false);
      player1.getPictureId();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-573), "Vpv~t2KuC.", ".", (-3430));
      Party party0 = player0.head;
      Player player1 = new Player(1289);
      player1.getSubparty();
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player1289", player1.toString());
      
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-3430), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals("Vpv~t2KuC.", player0.getIP());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-2050));
      player0.isDead();
      player0.reset(true);
      player0.reset(false);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.isJoinOK(player0, true);
      int int0 = player0.getPictureId();
      assertFalse(player0.isConnected());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-2050));
      player0.isDead();
      player0.reset(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)27;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte)1;
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-2050", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(60);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-982));
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-982", player0.toString());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-13));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-923));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.getTimeOfDeath();
      player0.getZ();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      try { 
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(60);
      player0.setJoinOK(player0, true);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player60", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(60);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(0, "mJ5|T<x':^HyaOU", (short)4919);
      player0.prev = (Party) player1;
      assertEquals(4919, player1.getPictureId());
      
      String string0 = player0.getIP();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-3329));
      player0.setDead((-210L), true);
      int int0 = player0.gangStrength();
      assertEquals((-210L), player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(2615, "CaA?v", 2615);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u001377\u0000\u0001\n7A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005CaA?v", byteArrayOutputStream0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(1285);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(31, byteArrayOutputStream0.size());
      assertEquals("\u00137\u0005\u0000\u0001\u0000\u0000A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nPlayer1285", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(633);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Player player0 = new Player(60);
      player0.setMoney(0.0F);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("Player60", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(4919);
      player0.setY(0.0F);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player4919", player0.getName());
  }
}
