/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 07:09:50 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("V?b.Fl*dj=pY{o$zX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(36);
      char[] charArray0 = new char[2];
      charArray0[1] = 'd';
      stringWriter0.write(charArray0);
      simpleNode0.dump("*ge", stringWriter0);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2826);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2826
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.setIdentifier("Y<");
      JavaParser javaParser0 = new JavaParser("Y<");
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode0.jjtAddChild(simpleNode1, 18);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtGetChild(18);
      assertEquals(19, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      SimpleNode simpleNode1 = new SimpleNode(55);
      simpleNode0.jjtAddChild(simpleNode1, 55);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode((byte)16);
      Node node0 = simpleNode2.parent;
      simpleNode2.jjtAddChild(simpleNode0, 1);
      simpleNode2.jjtGetChild(1);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-4689));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('D');
      // Undeclared exception!
      try { 
        simpleNode0.dump("&", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(63);
      StringWriter stringWriter0 = new StringWriter(63);
      stringWriter0.append((CharSequence) "*gt");
      String string0 = "(";
      simpleNode0.setIdentifier("Error: Ignoring invalid lexical state : ");
      String string1 = "&";
      simpleNode0.setIdentifier("*gt");
      simpleNode0.dump("Error: Ignoring invalid lexical state : ", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append('&');
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "Error: Ignoring invalid lexical state : ", 2350, 63);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier(";");
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 1280);
      simpleNode0.jjtGetChild(1);
      assertEquals(1281, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*gt");
      simpleNode0.setIdentifier("56zdM+rC8tPb,g'g");
      String string0 = "<=";
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("<=", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter2.append('&');
      // Undeclared exception!
      try { 
        stringWriter3.append((CharSequence) "&", 18, 491);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      SystemInUtil.addInputLine((String) null);
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump("PackageDeclaration", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(1615);
      int int0 = 86;
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("}");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9432029103573272
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.append((CharSequence) "*gt");
      String string0 = null;
      SystemInUtil.addInputLine((String) null);
      simpleNode0.setIdentifier("<");
      String string1 = "&";
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("*gt", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.append('&');
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "<", 18, 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 1;
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("}");
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(",pZ0hH`qK3B{Ne", stringWriter0);
      JavaParser javaParser0 = null;
      try {
        javaParser0 = new JavaParser((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
      
      simpleNode1.toString();
      simpleNode1.jjtOpen();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode1;
      nodeArray0[5] = null;
      simpleNode0.children = nodeArray0;
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.jjtOpen();
      simpleNode1.jjtGetParent();
      assertEquals(0, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("Dlx4Tfs!E");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(413);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*gt");
      SystemInUtil.addInputLine("*gt");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter2 = stringWriter1.append('N');
      simpleNode0.dump("*gt", stringWriter2);
      assertEquals("*gtN<VariableDeclaratorId>\n  <identifier>*gt</identifier>\n</VariableDeclaratorId>\n", stringWriter2.toString());
      assertEquals("*gtN<VariableDeclaratorId>\n  <identifier>*gt</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*gt");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`Gu)x[{CH7");
      simpleNode0.setIdentifier("<<");
      char[] charArray0 = new char[3];
      charArray0[0] = '`';
      charArray0[1] = 'L';
      charArray0[2] = '`';
      stringWriter1.write(charArray0);
      simpleNode0.dump("*gt", stringWriter1);
      assertEquals("*gt`L`<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      assertEquals("*gt`L`<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4979253112033195
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter(84);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode0, 84);
      // Undeclared exception!
      simpleNode0.dump("", stringWriter0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode((byte)16);
      Node node0 = simpleNode1.parent;
      simpleNode1.jjtAddChild(simpleNode0, 1);
      simpleNode1.dump("AssignmenNperat'r", stringWriter0);
      assertEquals(2, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      SystemInUtil.addInputLine("*gt");
      simpleNode0.setIdentifier("");
      StringWriter stringWriter1 = stringWriter0.append('c');
      simpleNode0.dump(">", stringWriter1);
      assertEquals("c<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      assertEquals("c<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "&&");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(">=", stringWriter1);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(96);
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("{", stringWriter1);
      assertEquals("<NormalAnnotation>\n</NormalAnnotation>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1911));
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-3309));
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertEquals(0, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0067001064205034
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("pv{D-");
      SimpleNode simpleNode1 = new SimpleNode(48);
      simpleNode1.setIdentifier("Ze");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/N)0/Y7K!U");
      simpleNode0.setIdentifier("pv{D-");
      simpleNode1.jjtClose();
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("const", stringWriter0);
      simpleNode0.dump("Ze", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>Ze</identifier>\n</RelationalExpression>\n<PackageDeclaration>\n  <identifier>pv{D-</identifier>\n  <identifier>pv{D-</identifier>\n  <identifier>*ge</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0724028775138872
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.append((CharSequence) "*gt");
      simpleNode0.setIdentifier("(");
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier("Literal");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("Yfmqv 5", stringWriter0);
      simpleNode0.setIdentifier("=C");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.append('e');
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = '4';
      stringWriter1.write(charArray0);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.dump("#jyEHYFb", stringWriter1);
      simpleNode0.dump((String) null, stringWriter2);
      simpleNode1.id = (-1125);
      simpleNode1.dump("assert", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.toString("<identifier>Literal Value</identifier>\n");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1125
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8350516730230504
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("pv{D-");
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("pv{D-", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>pv{D-</identifier>\n  <identifier>=</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3518);
      Node[] nodeArray0 = new Node[1];
      JavaParser javaParser0 = new JavaParser("TypeArguments");
      javaParser0.currNode = (Node) simpleNode0;
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("rcU.2]N_f#Cv", (Writer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3518
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2177);
      StringWriter stringWriter0 = new StringWriter(2177);
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, 1);
      Node node0 = simpleNode0.parent;
      simpleNode1.parser = javaParser0;
      simpleNode1.jjtAddChild(simpleNode0, (byte)0);
      simpleNode1.jjtAddChild((Node) null, 1);
      assertEquals(2, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9510567829046702
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*gt");
      simpleNode0.dump("*gt", stringWriter1);
      simpleNode0.jjtClose();
      simpleNode0.setIdentifier("|");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("|", stringWriter2);
      simpleNode0.dump("*gt", stringWriter0);
      assertEquals("*gt<PackageDeclaration>\n  <identifier>|</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("PackageDeclaration : |", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 1280);
      // Undeclared exception!
      try { 
        simpleNode0.dump("iX}H]A%~vYS.U", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3518);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1172));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1172
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1596);
      JavaParser javaParser0 = new JavaParser("eT)(^5");
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.dump("N<4n[f", (Writer) null);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("9FNm{,O\"pY4G[", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8001573041913385
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.append((CharSequence) "*gt");
      SystemInUtil.addInputLine((String) null);
      String string0 = "(";
      simpleNode0.setIdentifier("(");
      String string1 = "&";
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("*gt", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.append('&');
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "(", 18, 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("PackageDeclaration", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(463);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1726567838));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-119304647));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -119304647
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0105301834040734
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("/", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1218));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1218
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9749540746744716
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*gt");
      SystemInUtil.addInputLine((String) null);
      simpleNode0.setIdentifier("<");
      stringWriter1.append('S');
      simpleNode0.dump((String) null, stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.009656341980306
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('U');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "pv{D-");
      simpleNode0.dump("pv{D-", stringWriter2);
      simpleNode0.setIdentifier("3");
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.dump("pv{D-", stringWriter3);
      assertEquals("<ForInit>\n  <identifier>3</identifier>\n</ForInit>\n", stringWriter3.toString());
      
      String string0 = simpleNode0.toString("f{99}{8=Tz7??");
      assertEquals("f{99}{8=Tz7??ForInit : 3", string0);
  }
}
