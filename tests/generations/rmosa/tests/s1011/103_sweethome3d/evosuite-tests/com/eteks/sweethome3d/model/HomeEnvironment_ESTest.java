/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 11:18:16 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(840);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth(2069);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getSkyTexture();
      assertEquals(840, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(791L);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "jPGE+DFV=_^b");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jPGE+DFV=_^b");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-943), (HomeTexture) null, (-943), (HomeTexture) null, (-943), (-1707.984F));
      homeEnvironment0.setVideoQuality((-943));
      homeEnvironment0.setSubpartSizeUnderLight((-957.7F));
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.setPhotoQuality((-943));
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.getVideoFrameRate();
      String string0 = "y2A sY<dHvYR#^htq";
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("y2A sY<dHvYR#^htq");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.y2A sY<dHvYR#^htq
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "", resourceURLContent0, 31, 0.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(31, homeTexture0, 7, homeTexture0, 31, 2309.0F);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(31, homeEnvironment0.getLightColor());
      assertEquals(2309.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(31, homeEnvironment0.getGroundColor());
      assertEquals(7, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(58, (HomeTexture) null, 58, (HomeTexture) null, 58, 58);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setVideoFrameRate((-519));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals((-519), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (-840), (-840));
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSkyColor(2713);
      homeEnvironment1.getGroundTexture();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(2713, homeEnvironment0.getSkyColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("(", "(", resourceURLContent0, 0.0F, 0.0F, "GROUND_TEXTURE");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(39, homeTexture0, 39, homeTexture0, 39, 0.0F);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(39, homeEnvironment0.getLightColor());
      assertEquals(39, homeEnvironment0.getSkyColor());
      assertEquals(39, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(58, (HomeTexture) null, 58, (HomeTexture) null, 58, 58);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setWallsAlpha(18.0F);
      homeEnvironment0.clone();
      assertEquals(18.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(733, (HomeTexture) null, 733, (HomeTexture) null, 733, 733);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setCeillingLightColor((-3234));
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoWidth();
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3982), (HomeTexture) null, (-3982), (HomeTexture) null, (-3982), (-3982));
      homeEnvironment0.setPhotoQuality((-3982));
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-3982), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, (HomeTexture) null, 6, (HomeTexture) null, 6, 6);
      homeEnvironment0.setPhotoWidth((-294));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-294), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("[n", (Content) null, 1.5F, (-2579.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1944, homeTexture0, 1944, homeTexture0, 1944, (-713.6833F));
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1944, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1944, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-713.6833F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CEILING_LIGHT_COLOR");
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("com.eteks.sweethome3d.tools.OperatingSystem$1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.com.eteks.sweethome3d.tools.OperatingSystem$1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("kA", (Content) null, 0.0F, 671);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(671, homeTexture0, (-1), homeTexture0, 1925, (-1.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(671, homeEnvironment0.getGroundColor());
      assertEquals((-1), homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1925, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.974268351915661
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.setPhotoHeight((-1230));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setLightColor(0);
      homeEnvironment0.setGroundColor(12);
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoQuality();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.getVideoFrameRate();
      System.setCurrentTimeMillis(604800000L);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.getVideoWidth();
      homeEnvironment2.clone();
      homeEnvironment0.clone();
      homeEnvironment2.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("dTm~NTt]A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.dTm~NTt]A
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("mg>", (Content) null, (-142.89856F), 17.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(42, homeTexture0, 14, homeTexture0, 14, 14);
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(14, homeEnvironment0.getLightColor());
      assertEquals(14, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(14.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(42, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("Y", "Y", resourceURLContent0, 13427964, 13427964, "Y", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, homeTexture0, 13427964, homeTexture0, 143, 143);
      homeEnvironment0.getSkyTexture();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(143, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(143.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13427964, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.864555230685108
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("qCVAw&~", (Content) null, (-480.0F), (-518.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("qCVAw&~", (Content) null, 1951, (-518.0F), false);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2471), homeTexture0, 1951, 709, (-518.0F));
      homeEnvironment0.setPhotoHeight(13);
      homeEnvironment0.setVideoFrameRate(13);
      homeEnvironment0.setVideoFrameRate(709);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setSubpartSizeUnderLight((-2039.794F));
      homeEnvironment0.setVideoQuality((-2471));
      homeEnvironment0.setLightColor(1951);
      homeEnvironment0.getWallsAlpha();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(13, homeEnvironment0.getPhotoHeight());
      assertEquals((-2039.794F), float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-836), (HomeTexture) null, (-739), (-1531), (-2146821660));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(1.3333334F, 1.3333334F, 11.0F, (-1734.3871F), (-1734.3871F), 76.0F);
      linkedList0.add(camera0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment0.setSubpartSizeUnderLight(1235.5544F);
      homeEnvironment0.setVideoWidth(143);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(1235.5544F, float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2651), (HomeTexture) null, (-2651), (HomeTexture) null, (-2651), (-2651));
      homeEnvironment0.setPhotoQuality((-2651));
      homeEnvironment0.clone();
      assertEquals((-2651), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 320, 0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight((-2146589760));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(1073741824);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundTexture();
      assertEquals(1073741824, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 7);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(7);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-456), (-456), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-456), homeTexture0, (-456), homeTexture0, (-456), (-456));
      homeEnvironment0.getGroundTexture();
      assertEquals((-456), homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-456), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-456), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-456.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3), (HomeTexture) null, (-3), (HomeTexture) null, (-3), (-3));
      homeEnvironment0.setSubpartSizeUnderLight((-3));
      homeEnvironment0.clone();
      assertEquals((-3.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2009), (HomeTexture) null, (-2009), (HomeTexture) null, (-2009), (-2009));
      homeEnvironment0.setPhotoWidth((-2009));
      homeEnvironment0.clone();
      assertEquals((-2009), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("C", (Content) null, 8192, 8192, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, homeTexture0, 8192, homeTexture0, 8192, 8192);
      homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(8192, homeEnvironment0.getLightColor());
      assertEquals(8192.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(8192, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(8192, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2), (HomeTexture) null, (-2), (HomeTexture) null, (-2), (-2));
      homeEnvironment0.setVideoWidth((-2));
      homeEnvironment0.clone();
      assertEquals((-2), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(48, (HomeTexture) null, 48, (HomeTexture) null, 48, 48);
      homeEnvironment0.setPhotoHeight(48);
      homeEnvironment0.setVideoWidth(48);
      homeEnvironment0.setVideoWidth(48);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, (HomeTexture) null, 1, 1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@");
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("UGH;Y(kYtb&xfKr", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("UGH;Y(kYtb&xfKr", propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth((-3685));
      homeEnvironment0.setGroundColor(985);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setSkyColor(1);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoHeight();
      assertEquals(985, homeEnvironment0.getGroundColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2764), (HomeTexture) null, (-1271), (-245), 1);
      System.setCurrentTimeMillis((-2764));
      homeEnvironment1.getGroundTexture();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3982), (HomeTexture) null, (-3982), (HomeTexture) null, (-3982), (-3982));
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-3982.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3982), homeEnvironment0.getGroundColor());
      assertEquals((-3982), homeEnvironment0.getSkyColor());
      assertEquals((-3982), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2320, (HomeTexture) null, 2320, (HomeTexture) null, 2320, 2320);
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2320, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2320, homeEnvironment0.getLightColor());
      assertEquals(2320, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(2320.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.setGroundColor(2023);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("_1]qQ$lUVX3}", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_WIDTH", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality((-1259));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setLightColor((-1259));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setSkyColor(1);
      assertEquals(2023, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, (HomeTexture) null, 5, (HomeTexture) null, 5, 5);
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.clone();
      assertEquals(5, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(779, (HomeTexture) null, 779, (HomeTexture) null, (-2146821660), 779);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoWidth((-2146821660));
      assertEquals((-1610116224), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1872, (HomeTexture) null, (-1898), (HomeTexture) null, (-1923), 1585.0F);
      homeEnvironment0.setVideoWidth((-1898));
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-1423), homeEnvironment0.getVideoHeight());
      assertEquals((-1898), int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 7);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2), (HomeTexture) null, (-2), (HomeTexture) null, (-2), (-2));
      homeEnvironment0.setVideoFrameRate((-2));
      homeEnvironment0.clone();
      assertEquals((-2), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(779, (HomeTexture) null, 779, (HomeTexture) null, 779, 779);
      homeEnvironment0.setSubpartSizeUnderLight(779);
      homeEnvironment0.clone();
      assertEquals(779.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-965), (HomeTexture) null, (-965), (HomeTexture) null, (-965), (-965));
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("}tLf;^KA}`", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality((-965));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor((-965));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoFrameRate();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("NAME");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.NAME
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(58, (HomeTexture) null, 58, (HomeTexture) null, 58, 58);
      homeEnvironment0.setPhotoHeight(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1394), 2775, 0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      int int0 = 4703;
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoWidth();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-420), (HomeTexture) null, 0, (-420), (-420));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight((-4026));
      homeEnvironment0.getPhotoWidth();
      List<Camera> list0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setSubpartSizeUnderLight((-1199.5656F));
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoHeight();
      assertEquals((-1199.5656F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-4026), (HomeTexture) null, (-4026), (HomeTexture) null, (-4026), 4703);
      homeEnvironment1.setAllLevelsVisible(false);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2651), (HomeTexture) null, (-2651), (HomeTexture) null, (-2651), (-2651));
      homeEnvironment0.setPhotoHeight((-2651));
      homeEnvironment0.clone();
      assertEquals((-2651), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("qCVAw&~", (Content) null, (-480.0F), (-518.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2471), homeTexture0, 1982, 709, (-518.0F));
      homeEnvironment0.setVideoFrameRate(13);
      homeEnvironment0.setVideoFrameRate(709);
      homeEnvironment0.setSubpartSizeUnderLight((-2039.794F));
      homeEnvironment0.setLightColor((-2471));
      homeEnvironment0.getWallsAlpha();
      System.setCurrentTimeMillis(0);
      HomeEnvironment.DrawingMode.values();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(746, (HomeTexture) null, 746, (HomeTexture) null, 746, 746);
      homeEnvironment0.setVideoQuality(746);
      homeEnvironment0.clone();
      assertEquals(746, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2146557990), (HomeTexture) null, (-2146557990), (HomeTexture) null, (-2146557990), (-2146557990));
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals((-2146557990), homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2146557990), homeEnvironment1.getGroundColor());
      assertEquals((-2.14655795E9F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals((-2146557990), homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      Random.setNextRandom(4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "", temporaryURLContent0, 4, 4, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getPhotoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("PINHOLE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.PINHOLE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(728, (HomeTexture) null, 728, (HomeTexture) null, 728, 728);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(728, homeEnvironment1.getSkyColor());
      assertEquals(728.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(728, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(728, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 1L, 1L, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, homeTexture0, 2316, homeTexture0, 2316, 2316);
      homeEnvironment0.setVideoQuality(2316);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(2316, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(58, (HomeTexture) null, 58, (HomeTexture) null, 58, 58);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(58, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(58, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(58, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(58.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2009), (HomeTexture) null, (-2009), (HomeTexture) null, (-2009), (-2009));
      homeEnvironment0.setVideoQuality((-2009));
      homeEnvironment0.clone();
      assertEquals((-2009), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(58, (HomeTexture) null, 58, (HomeTexture) null, 58, 58);
      homeEnvironment0.setPhotoWidth(8);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(746, (HomeTexture) null, 746, (HomeTexture) null, 746, 746);
      homeEnvironment0.setPhotoQuality(746);
      homeEnvironment0.clone();
      assertEquals(746, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, (-459), (HomeTexture) null, 7, (-459));
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(7, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-459.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(boolean0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-459), homeEnvironment0.getSkyColor());
      assertEquals(7, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-706), (HomeTexture) null, (-706), (HomeTexture) null, (-706), 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals((-706), int0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-706), homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-706), homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(779, (HomeTexture) null, 779, (HomeTexture) null, 779, 779);
      homeEnvironment0.clone();
      homeEnvironment0.getGroundColor();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(32, (HomeTexture) null, 32, (HomeTexture) null, 32, 32);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(32, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(32.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(32, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(32, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2), (HomeTexture) null, (-2), (HomeTexture) null, (-2), (-2));
      homeEnvironment0.setLightColor(706);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(728, (HomeTexture) null, 728, (HomeTexture) null, 728, 728);
      homeEnvironment0.getDrawingMode();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(728.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(728, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(728, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(728, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = 7;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 7);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(7, 7, 633.0F, 7, 780.8427F, 7, 7, camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList0.addFirst(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2), (HomeTexture) null, (-2), (HomeTexture) null, (-2), (-2));
      homeEnvironment0.setCeillingLightColor((-2));
      homeEnvironment0.clone();
      assertEquals((-2), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 191, (HomeTexture) null, 0, 0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis((-858L));
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      int int0 = (-2548);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setGroundColor((-2548));
      homeEnvironment0.setVideoQuality((-2548));
      homeEnvironment0.setSkyColor(3837);
      homeEnvironment0.setSubpartSizeUnderLight((-2548));
      homeEnvironment0.setVideoQuality(3837);
      homeEnvironment0.getCeillingLightColor();
      String string0 = "of\"TT\\)";
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("of\"TT)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.of\"TT)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(728, (HomeTexture) null, 728, (HomeTexture) null, 728, 728);
      homeEnvironment0.setCeillingLightColor((-1158));
      homeEnvironment0.setCeillingLightColor(728);
      homeEnvironment0.setVideoWidth(728);
      assertEquals(728, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(779, (HomeTexture) null, (-1), (HomeTexture) null, 779, (-1));
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoQuality((-1));
      assertEquals((-1), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, (HomeTexture) null, 6, (HomeTexture) null, 6, 6);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      int int0 = 15;
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(6, (HomeTexture) null, 15, (HomeTexture) null, 15, 1507.6937F);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(20, (HomeTexture) null, (-2146189442), (HomeTexture) null, (-836), 5.0F);
      homeEnvironment0.setPhotoQuality((-836));
      homeEnvironment0.setCeillingLightColor((-836));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setCeillingLightColor((-836));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-706), (HomeTexture) null, (-829), (-1213), 1.0F);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.getCeillingLightColor();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-836), int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1675);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      String string0 = "kn\\hr_TB|`\\=|b^!";
      CatalogTexture catalogTexture0 = new CatalogTexture("knhr_TB|`=|b^!", (Content) null, (-1129.372F), (-1129.372F));
      CatalogTexture catalogTexture1 = new CatalogTexture("", "RATIO_2_1", (Content) null, (-3942.692F), (-1129.372F), "O'l{voT0k+!");
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("knhr_TB|`=|b^!", propertyChangeListener0);
      String string1 = "_5!y9DYiICtX?@";
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, "_5!y9DYiICtX?@", (Object) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(779, (HomeTexture) null, (-4297), (HomeTexture) null, (-2146821660), (-4297));
      homeEnvironment0.setGroundColor(1507);
      assertEquals(1507, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(34, (HomeTexture) null, 34, (HomeTexture) null, 34, 34);
      homeEnvironment0.setGroundColor(34);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      assertEquals(AspectRatio.RATIO_4_3, aspectRatio0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(730, (HomeTexture) null, 730, (HomeTexture) null, 730, 730);
      homeEnvironment0.setLightColor((-1));
      assertEquals((-1), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 7);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(7, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(7.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(7, homeEnvironment0.getGroundColor());
      assertEquals(7, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2), (HomeTexture) null, (-2), (HomeTexture) null, (-2), (-2));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-2), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2), homeEnvironment0.getSkyColor());
      assertEquals(240, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1351, (HomeTexture) null, 1351, (HomeTexture) null, 1351, 1351);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1351, homeEnvironment0.getGroundColor());
      assertEquals(1351.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, int0);
      assertEquals(1351, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1351, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(779, (HomeTexture) null, 779, (HomeTexture) null, 779, 779);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor(779);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1972, (HomeTexture) null, 1972, (HomeTexture) null, 2147072169, (-3716.0F));
      homeEnvironment0.setWallsAlpha((-1935.0F));
      assertEquals((-1935.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2147072169, (HomeTexture) null, 2191, (HomeTexture) null, 2147072169, (-505.71756F));
      homeEnvironment0.setVideoFrameRate(1972);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha((-505.71756F));
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(58, (HomeTexture) null, 58, (HomeTexture) null, 58, 58);
      homeEnvironment0.setVideoFrameRate(25);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(58, homeEnvironment0.getSkyColor());
      assertEquals(58.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(58, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(58, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(779, (HomeTexture) null, 779, (HomeTexture) null, 779, 779);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1972, (HomeTexture) null, 1972, (HomeTexture) null, 0, 0);
      homeEnvironment0.setWallsAlpha(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SUBPART_SIZE_UNDER_LIGHT", propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 5127, 1066.7856F);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight((-1067));
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSkyColor(4703);
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment0.getSkyColor();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(4703, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8720086468341763
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("3", (Content) null, (-2039.794F), (-2039.794F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(13, homeTexture0, (-2873), 13, (-1.0F));
      homeEnvironment1.setPhotoHeight((-884));
      homeEnvironment1.setVideoFrameRate(14);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setObserverCameraElevationAdjusted(true);
      homeEnvironment2.setSubpartSizeUnderLight((-2039.794F));
      homeEnvironment1.setVideoQuality(13);
      homeEnvironment1.setLightColor(8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment2.setWallsAlpha((-2240.3503F));
      homeEnvironment1.setAllLevelsVisible(true);
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, 300, (HomeTexture) null, 300, 300);
      homeEnvironment0.setSkyColor((-1423));
      homeEnvironment0.clone();
      assertEquals((-1423), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1227133534, (HomeTexture) null, 1227133534, (HomeTexture) null, 1227133534, 972.0F);
      homeEnvironment0.setPhotoHeight(1227133534);
      homeEnvironment0.setPhotoHeight(1227133534);
      homeEnvironment0.clone();
      assertEquals(1227133534, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(23, (HomeTexture) null, 23, (HomeTexture) null, 23, 23);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(23.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(23, homeEnvironment1.getSkyColor());
      assertEquals(23, homeEnvironment1.getGroundColor());
      assertEquals(23, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 400, (HomeTexture) null, 7, 400);
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(7, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(7, homeEnvironment1.getGroundColor());
      assertEquals(400.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 1L, 1L, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, homeTexture0, 2316, homeTexture0, 2316, 2316);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(2316, homeEnvironment1.getSkyColor());
      assertEquals(17, homeEnvironment1.getGroundColor());
      assertEquals(2316, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0, int0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(2316.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2320, (HomeTexture) null, 2320, (HomeTexture) null, 2320, 2320);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2320, homeEnvironment0.getLightColor());
      assertEquals(2320, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(2320, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2320.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 5;
      homeEnvironment0.getPhotoHeight();
      String string0 = "\"sL`i1t|axF";
      Content content0 = null;
      // Undeclared exception!
      try { 
        TemporaryURLContent.copyToTemporaryURLContent((Content) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.tools.TemporaryURLContent", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(735, (HomeTexture) null, 735, (HomeTexture) null, 735, 735);
      homeEnvironment0.setPhotoWidth(735);
      assertEquals(735, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 7);
      homeEnvironment0.setSubpartSizeUnderLight(7);
      assertEquals(7.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("qCVAw&~", (Content) null, 1951, (-2039.794F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1951, homeTexture0, 1951, 13, 1951);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setSubpartSizeUnderLight((-2039.794F));
      homeEnvironment0.setVideoQuality(13);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setWallsAlpha(1951.0F);
      assertEquals(13, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(746, (HomeTexture) null, 746, (HomeTexture) null, 746, 746);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(746, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(746, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(746.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(746, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 7);
      homeEnvironment0.setSkyColor(15);
      assertEquals(15, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8690529818095458
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1396), 0, 0.0F);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSkyColor((-2146589777));
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(730, (HomeTexture) null, 730, (HomeTexture) null, 730, 730);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor((-5));
      assertEquals((-5), homeEnvironment0.getLightColor());
  }
}
