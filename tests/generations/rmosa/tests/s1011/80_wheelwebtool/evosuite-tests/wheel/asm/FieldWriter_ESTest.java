/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 17:31:54 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(53);
      classWriter0.version = 53;
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2141), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-31));
      classWriter0.index = (-31);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      classWriter0.version = 33;
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2141), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (Object) null);
      classWriter0.version = (-2345);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "k>M|Sy<!Il%^!", "k>M|Sy<!Il%^!", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "k>M|Sy<!Il%^!", "k>M|Sy<!Il%^!", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      classWriter0.index = 33554432;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "B7@]HeuV6{E>j{idG1(", "B7@]HeuV6{E>j{idG1(", "", "");
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "k>M|Sy<!Il%^!", "k>M|Sy<!Il%^!", "k>M|Sy<!Il%^!", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-1997);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1997
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      classWriter0.index = 33554432;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "B7@]HeuV6{E>j{idG1(", "B7@]HeuV6{E>j{idG1(", "", "");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      classWriter0.index = 33554432;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "B7@]HeuV6{E>j{idG1(", "B7@]HeuV6{E>j{idG1(", "", "");
      classWriter0.addUninitializedType("Sensitive", 33554432);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "", "l;`s12[-o!z!xH]", "B7@]HeuV6{E>j{idG1(", "B7@]HeuV6{E>j{idG1(");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1006);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByteArray((byte[]) null, 2, (-1));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1006, "java/lang/Throwable", (String) null, "java/lang/Throwable", "java/lang/Throwable");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6330395116644678
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "B7@]HeuV6{E>j{idG1(", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(53);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2141), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "k>M|Sy<!Il%^!", "k>M|Sy<!Il%^!", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2141), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(330);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "_l8EuPhA`|Q]h", "_l8EuPhA`|Q]h", "<c?ZV0", "<c?ZV0");
      Attribute attribute0 = new Attribute("PFt][$");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "B7@]HeuV6{E>j{idG1(", "", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2141), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(53);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2141), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (Object) null);
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 8, "pS", "pS", "pS", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "B7@]HeuV6{E>j{idG1(", "", (String) null, (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 33554432, "B7@]HeuV6{E>j{idG1(", (String) null, "", "B7@]HeuV6{E>j{idG1(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(525);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1480, "eZQmMsLdK3^:[k", "[]", "[]", (Object) null);
      fieldWriter0.visitEnd();
  }
}
