/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 12:44:36 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-801));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-801), "&\u0003Q", "#v*F%$:b", "On8Uf#", "On8Uf#");
      fieldWriter0.visitAnnotation("#v*F%$:b", true);
      classWriter0.visit(49, (-801), "&\u0003Q", "On8Uf#", "", (String[]) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "H\"^TcEb$*)>:_X=~", "#v*F%$:b", "Deprecated", "");
      fieldWriter0.visitAnnotation("ConstantValue", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(46, int0);
      
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter2 = fieldWriter0.next;
      fieldWriter1.put(byteVector0);
      fieldWriter1.visitAnnotation("", false);
      int int1 = fieldWriter2.getSize();
      assertEquals(36, int1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.version = 9;
      classWriter0.newMethodItem("", "@cQ", "Synthetic", true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-760), "@cQ", "The FileFilter must not be null", "~Z=Oy#.t;w:ak\"^", "~Z=Oy#.t;w:ak\"^");
      fieldWriter0.visitAnnotation("'2S>e92jf-`!UxM", true);
      fieldWriter0.getSize();
      classWriter0.addType("eZlmMs~dK3$:[k");
      fieldWriter0.getSize();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
      
      classWriter0.visit(49, 48, "", (String) null, (String) null, stringArray0);
      int int1 = fieldWriter0.getSize();
      assertEquals(42, int1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1252));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "u";
      stringArray0[1] = "u";
      classWriter0.visit((-1252), (-1252), "!W$s8hu-Xb%bI@K47_'", "!W$s8hu-Xb%bI@K47_'", "u", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1252), "u", "u", "u", "u");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong(1);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3528);
      classWriter0.newUTF8("byte");
      classWriter0.index = (-772);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-772), "byte", "i1FDC2", "", "float");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1638));
      classWriter0.index = (-1638);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1638), "6P_", "6P_", "6P_", "6P_");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3528);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3528, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-1556);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{5H6p14>'88'J", "{5H6p14>'88'J", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(13);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 13, "Tx5)z9LO,Jf|?", "Tx5)z9LO,Jf|?", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1247));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1247), "[R", "[R", "[R", "[R");
      Attribute attribute0 = new Attribute("[R");
      fieldWriter0.visitAttribute(attribute0);
      String[] stringArray0 = new String[1];
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("[R");
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1666));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1666), "", "", (String) null, "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 20, "7c^C", "7c^C", "7c^C", "7c^C");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "7c^C", "7c^C", "7c^C", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(525);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 525, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3528);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3528, "~GX", "~GX", "~GX", "~GX");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(525);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 525, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3528);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3528, "o", "o", "o", "o");
      fieldWriter0.visitAnnotation("o", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3528);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3528, "~GX", "~GX", "~GX", "~GX");
      fieldWriter0.visitAnnotation("~GX", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1666));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1666), "~GX", "~GX", "~GX", "~GX");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(525);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 525, "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 20, "7^6G", "7^6G", "7^6G", "7^6G");
      fieldWriter0.visitAnnotation("7^6G", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3528);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3528, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-7), "QH-N", "QH-N", "QH-N", "QH-N");
      Attribute attribute0 = new Attribute("[I5[{fx");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1252));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1252), "1u", "1u", "1u", "1u");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "eZQmMsLdK3^:[k", "eZQmMsLdK3^:[k", "eZQmMsLdK3^:[k", "eZQmMsLdK3^:[k");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3518);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3518, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(504);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 504, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
