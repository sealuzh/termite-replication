/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 01 22:49:09 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.endPosition();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      String string0 = null;
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.consume((-2421));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume((-3182));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("dm>L");
      xPathLexer0.consume((-2218));
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.134006824564753
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.rightParen();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      int int0 = (-2693);
      xPathLexer0.not();
      xPathLexer0.consume((-2693));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("auEJ(Vzepqz");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.795122406426881
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o|G|rMW')Q}aDIzN");
      xPathLexer0.whitespace();
      xPathLexer0.consume((-2532));
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("i/A@\"/");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(12, token1.getTokenType());
      assertEquals("i/", token1.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.786809345095625
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ou{Asd>y((/vvs?b");
      xPathLexer0.setXPath("?'grYi*i?$4'S");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(27, token0.getTokenType());
      assertEquals("grYi*i?$4", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("S", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2833));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.consume((-938));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8921481463615892
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.consume((-3227));
      xPathLexer0.not();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghg}`");
      xPathLexer0.not();
      xPathLexer0.consume((-2441));
      xPathLexer0.consume((-3189));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.consume((-405));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.629480691684263
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume((-3182));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+~:.Y2");
      xPathLexer0.consume((-3402));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8888043637074614
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("FwTR2aR)8");
      xPathLexer0.doubleColon();
      xPathLexer1.consume((-429));
      // Undeclared exception!
      try { 
        xPathLexer1.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("dm>L");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume((-2585));
      String string0 = "h<J:7aD+kC";
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ou{Asd>y((/vvs?b");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.796255979069995
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rgo1`I[Lr|1");
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-755));
      xPathLexer0.at();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5773668528831553
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tTDEv67(m");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume((-4));
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.consume((-469));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a+");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w>B?n!`[pQTr(YN");
      xPathLexer0.consume((-3733));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.893390768293866
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("QV.9?");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v(@23*");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("uzJ*rsZTFZKP");
      xPathLexer1.comma();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0450945687738242
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B67&mka`~.?");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("67", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      String string0 = token2.toString();
      assertEquals("[ (13) (&)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.pipe();
      assertEquals("m", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2857353728425127
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.setXPath("`gI}_((mlN.W");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`gI}_((mlN.W", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("`gI}_((mlN.W", token2.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' P]RJ;Z");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("'", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y])7oqdt]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("]gSS3&jb;?&");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5765843988226926
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e<EN$8?F");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("e", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X^+p<#8slx8|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0530102843485865
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume(1);
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token1 = xPathLexer0.not();
      assertEquals("h", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("7", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("aD", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("+", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("qkU.=8?");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("qkU.=8?", token1.getTokenText());
      assertNotSame(token1, token0);
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aa`F");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("a", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.operatorName();
      char char0 = xPathLexer0.LA(0);
      assertEquals('a', char0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2577715229088553
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("/){+-KTc*l4o");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(")", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^zn?yx0sT$Jv");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^zn?yx0sT$Jv", token0.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B67&mka`~.?");
      Token token0 = xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (13) (B)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('6', char0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<C0K\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(22, token1.getTokenType());
      assertEquals("0K", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(162);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4GO0TGsP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.695183761009689
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pDf!J,U|\"A");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-2148));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.setXPath("LHb!ie*zc7[^%!");
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("LHb", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zX%4tkKE^8\"Nu_5HzU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("zX", token0.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("RMeW<:F^tq");
      Token token0 = xPathLexer0.number();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("RMeW<:F^tq", token1.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UQM&");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      assertEquals("UQM&", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.4443810970675455
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("\"4gP*SaLIb<0dFR4");
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QV.9?");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V.9", token0.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<$E");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("<", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8447999328284082
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("0xdWpQvQ");
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5940527916262124
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("RMeW<:F^tq");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("R", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("MeW", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(":", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("xEDq");
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertNotSame(token1, token0);
      assertEquals("xEDq", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("x", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6294814259865158
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3e-E#mJd,G");
      xPathLexer0.pipe();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("PF");
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer1.number();
      xPathLexer1.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer1.setXPath("3e-E#mJd,G");
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      XPathLexer xPathLexer1 = new XPathLexer("&p$&bX9ujU-z_+$6");
      xPathLexer1.consume();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=})!UmnZyl1Z,E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7025336641448265
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8NM(");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("NM", token0.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3324126702246388
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      Token token0 = xPathLexer0.plus();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.setXPath("QV.9?");
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("V.", token3.getTokenText());
      assertEquals(14, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals("9", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vE!:kX$o");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2230640298312356
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' P]RJ;Z");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ou{Asd>y((/vvs?b");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5476467761017558
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z<`5gp1Il");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Z", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?t>TY$tg-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.8988690268344652
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?!>TY tg-i", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(1, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H]Sy!4");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("Ov^p6L");
      XPathLexer xPathLexer2 = new XPathLexer("Ov^p6L");
      assertEquals("Ov^p6L", xPathLexer2.getXPath());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.2772166162815273
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w>B?!`[pQT(YN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(">", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("SOvqn&YD:I0$kT\"&H");
      Token token2 = xPathLexer0.identifier();
      assertEquals("B", token2.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.6870204957035666
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l*!-G11");
      xPathLexer0.setXPath("l*!-G11");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.comma();
      String string0 = token0.toString();
      assertEquals("[ (32) (l)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.4394166425618065
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Hd");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      assertEquals("-Hd", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8128883611364484
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ou{Asd>y((/vvs?b");
      xPathLexer0.setXPath("?'grYi*i?$4'S");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("i", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.4384474624881487
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("f?U:KYg");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("f?U:KYg", token1.getTokenText());
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4001591967441862
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' P]RJ;Z");
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      assertEquals("", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4033141200850843
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' P]RJ;Z");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.doubleColon();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5236612142099228
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w>B?n!`[pQT(YN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(">", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      xPathLexer0.setXPath(":;");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(";", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B67&mka`~.?");
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nt");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oi^2{o73f9Q");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("i", token0.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("I3\"E^!]7sO4");
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
      assertEquals("I3\"E^!]7sO4", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("5q! bW_0 rdNl");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5757919066433397
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Knu6^pfK9d");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3e-E#mJd,G");
      xPathLexer0.setXPath("3e-E#mJd,G");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("8^|zG9L[i4viMM");
      Token token0 = xPathLexer1.number();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4903282412762486
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w>B?n!`[pQT(YN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals(">", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.setXPath(":;");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(";", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals(";", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5986412576748237
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":@4p4pmI]v=Of@\"nr@");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("4", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("p4pmI", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.439243482388646
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("F=RnI<K?OQ");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("5cVk%[)(K+,k\"Q5)");
      xPathLexer2.number();
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.04426979249439
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B67&mka`~.?");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("B6", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&mka`~.?", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      String string0 = token2.toString();
      assertEquals("[ (13) (&)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1029854534729282
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.setXPath("/){+-KTc*l4o");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("s");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("s", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      assertNotSame(token1, token0);
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{R{9?z(!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{R{9?z(!", token0.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.setXPath("C&i1 'fbi|$?rP");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B67&mka`~.?");
      XPathLexer xPathLexer1 = new XPathLexer("j{Z%WT&QeHy: ]j>*");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5624549702052581
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.setXPath("Sml<ASPJ~f2!!^=");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Sml", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OTS|kKo[!TsJA8a08<");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("D^JF");
      xPathLexer1.and();
      xPathLexer0.div();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0248780759832101
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<C0K\"");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2220));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")y4~9<E29'irICW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pu].dnV^");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("u", token0.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aa`F");
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      assertNotNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.36455525779919
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      Token token0 = xPathLexer0.plus();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("-", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.setXPath("QV.9?");
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.pipe();
      assertEquals(".", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("9", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7866893370950918
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ou{Asd>y((/vvs?b");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.setXPath("?'grYi*i?$4'S");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("grYi*i?$4", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2UCVGy`!So%a]R<{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.613874115713341
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lI:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lI", token0.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KbJX&2FX'8nZX]`Gu");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("bJX", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.819996727440481
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("0xdWpQvQ");
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.6645275175312553
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume(1);
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("h", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("<", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("J", token5.getTokenText());
      
      xPathLexer0.consume();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("7", token6.getTokenText());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.4801796994626841
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WeJ><~S%");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("W", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("J", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.6424686033182452
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      xPathLexer0.getPreviousToken();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = new Token(2, "$*^K,{r[YS", 93, (-1619));
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.5754415416798357
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ex}EExy3p93Rs^6t88G");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$d$I]FihH?");
      xPathLexer0.consume((-4204));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.2764196880775138
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zX%4kKE^8\"Nu_5HzU");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("zX", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%4kKE^8\"Nu_5HzU", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(~h6L4!K<q");
      xPathLexer0.dollar();
      xPathLexer0.consume((-1642));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' P]RJ;Z");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("'", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("r.jczug'~5iL&ym(S=U");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("r.jczug'~5iL&ym(S=U", token1.getTokenText());
      assertNotSame(token1, token0);
      
      Token token2 = xPathLexer0.dots();
      assertEquals("r.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.6721161016665798
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("RMeW<:F^tq");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("MeW", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("<:", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("F^tq", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals("F", token5.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.6638069738482946
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.consume(1);
      xPathLexer0.plus();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token3 = xPathLexer0.leftParen();
      assertEquals("h", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("J", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_,S");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      assertEquals("_,S", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      xPathLexer0.consume((-4587));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?@ap|:6Z6");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.colon();
      assertEquals("@", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.4414276049572026
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume(1);
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("J", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("7", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' P]RJ;Z");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.7583389341948736
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B67&mka`~.?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B67", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      String string0 = token1.toString();
      assertEquals("[ (13) (&)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("mka`~.?", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.3336547282191928
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      Token token0 = xPathLexer0.plus();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.setXPath("QV.9?");
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      assertEquals(".9", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("?", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("?", token5.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.0620922146043945
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer0.identifier();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer1.dots();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.doubleColon();
      xPathLexer3.relationalOperator();
      xPathLexer0.or();
      xPathLexer1.colon();
      xPathLexer2.minus();
      xPathLexer3.minus();
      xPathLexer2.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.rightBracket();
      String string0 = xPathLexer3.getXPath();
      assertEquals("com.werken.saxpath.XPathLexer", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.072152882236705
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token2 = xPathLexer0.leftParen();
      assertEquals("h", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.whitespace();
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.setXPath("|(q#&Z*2*c]6Ej9f}d");
      Token token8 = xPathLexer0.nextToken();
      assertEquals(17, token8.getTokenType());
      assertEquals("|", token8.getTokenText());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("(", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.operatorName();
      Token token10 = xPathLexer0.rightParen();
      assertEquals("q", token10.getTokenText());
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals("#&Z*2*c]6Ej9f}d", token11.getTokenText());
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals("&", token13.getTokenText());
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.3253012735909597
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WeJ><~S%");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("eJ", token1.getTokenText());
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.674961180964427
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("T", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(" ", token4.getTokenText());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.8986394057093217
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.4386637722437188
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.isIdentifierChar('q');
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.isIdentifierChar('W');
      xPathLexer0.isIdentifierStartChar('Q');
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('G');
      assertTrue(boolean1 == boolean0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.43973730954914
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.isIdentifierChar(']');
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierChar('<');
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(']');
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('C');
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.9321822710140909
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume(223);
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.120640059021058
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("!", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("G1", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('T');
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('0');
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.6341044831933003
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2007));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.8947038064248852
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      char char0 = xPathLexer0.LA(10);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.9398367270009689
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(">", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.8975597835770679
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.9385073817035279
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(">T", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.0372550480223812
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0694373695329493
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("RMeW<:F^tq");
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("QV.,,9?");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.94011458196068
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.8978571371304429
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.not();
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.hasMoreChars();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.9398367270009689
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(">", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.9839615774220376
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("T", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("Y", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.9398367270009689
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.9408486167049912
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      assertEquals("!", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.0799138677455942
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.8941365914504098
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      int int1 = xPathLexer0.currentPosition();
      assertEquals(2, int1);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.3343803994650953
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("QV.9?");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.3649271650280108
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.3015968001265148
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setXPath("QV.9?");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.94011458196068
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("!G", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.645548838085136
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.9855764724538605
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.9366833962954113
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.8902026811435648
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.setXPath("");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.9408486167049912
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("T", token2.getTokenText());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.9422872068866133
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("?", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.9976317328328186
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!G1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals("G", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.9037410398264998
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.982462327047225
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.colon();
      assertEquals("T", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.9408486167049912
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.3330966257675285
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-G11");
      xPathLexer0.setXPath("!-G11");
      Token token0 = xPathLexer0.plus();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.setXPath("QV.9?");
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".9", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("?", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.8965277918330019
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.endPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=0.9361161813209359
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.operatorName();
      xPathLexer0.consume(61);
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.8983952054651214
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.103700679105035
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(">", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("TY tg-i", token2.getTokenText());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=0.9862122003623157
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.9853608777718625
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?!>TY tg-i");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("?!", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("TY", token1.getTokenText());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=0.8839573385092272
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")OLe");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }
}
