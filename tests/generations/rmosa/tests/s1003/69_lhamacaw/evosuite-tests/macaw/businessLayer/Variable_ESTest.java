/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 01:16:40 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      String string0 = "&VWew";
      rawVariable0.setNotes("&VWew");
      rawVariable0.setNotes((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-123));
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = null;
      derivedVariable0.setCleaningDescription((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.setQuestionNumber("pee^R9\t#$");
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      assertEquals("pee^R9\t#$", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getLabel();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.750633851454319
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode(") IPxu75w5AST=KcZ:x");
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1970445914));
      derivedVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("-1970445914", rawVariable0.getDisplayItemIdentifier());
      
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      derivedVariable0.getCategory();
      derivedVariable0.getAlternativeVariable();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setAddressLine2("/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      derivedVariable0.setIdentifier(2873);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, (Variable) null);
      derivedVariable0.setCleaned(true);
      derivedVariable0.getCategory();
      derivedVariable0.getAlternativeVariable();
      assertEquals("2873", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode(") IPxu75w5AST=KcZ:x");
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIdentifier((-1073741822));
      derivedVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      derivedVariable0.getCategory();
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      derivedVariable0.hasSameDisplayName(variable0);
      assertEquals("-1073741822", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9618599338074767
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "#7vVU$";
      rawVariable0.setAlias("WA'[1TLx");
      rawVariable0.setForm("#7vVU$");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      System.setCurrentTimeMillis(0L);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getCleaningStatus();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setLabel("WA'[1TLx");
      rawVariable0.addValueLabel(valueLabel1);
      derivedVariable0.getCategory();
      rawVariable0.getAlias();
      rawVariable0.clone();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.add((Variable) rawVariable0);
      arrayList2.add((Variable) rawVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.668619868083795
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      
      derivedVariable0.getCleaningStatus();
      String string0 = derivedVariable0.getColumnStart();
      assertNull(string0);
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode(") IPxu75w5AST=KcZ:x");
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      assertTrue(rawVariable0.isNewRecord());
      
      derivedVariable0.getCategory();
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.8970651502571956
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setFilePath("|s]PF(c_");
      rawVariable0.setCleaned(true);
      rawVariable0.setName("|s]PF(c_");
      rawVariable0.getName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setFileName("|s]PF(c_");
      supportingDocument0.setFileName("|s]PF(c_");
      supportingDocument0.setIdentifier((-1994091956));
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.isCleaned();
      rawVariable0.getValueLabels();
      rawVariable0.getSupportingDocuments();
      rawVariable0.clone();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setLabel("N1Qp)<&xCIHI?49iO.");
      rawVariable0.getCleaningStatus();
      rawVariable0.getNotes();
      rawVariable0.getAlternativeVariable();
      assertEquals("N1Qp)<&xCIHI?49iO.", rawVariable0.getLabel());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      derivedVariable0.getCategory();
      derivedVariable0.getAlternativeVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCategory();
      assertTrue(derivedVariable0.isCleaned());
      
      derivedVariable1.getAlternativeVariable();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setMissingValue(false);
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(1069);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.630989711424645
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlias();
      User user0 = new User("'UE{Y4*>}V", "");
      user0.setAddressLine2("'UE{Y4*>}V");
      user0.setIdentifier(0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.isNewRecord();
      derivedVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      System.setCurrentTimeMillis(0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getCategory();
      rawVariable0.getCategory();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      assertTrue(derivedVariable0.isNewRecord());
      
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User((String) null, (String) null);
      rawVariable0.setName((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      String string0 = rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument1);
      arrayList0.parallelStream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      supportingDocument0.setDescription((String) null);
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setDocumentCode(") IPxu75w5AST=KcZ:x");
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setAddressLine2("/");
      valueLabel0.setIdentifier(965);
      user0.setPassword("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = "-";
      derivedVariable0.setName("-");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals("-", derivedVariable0.getName());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("general.fieldValue.unknown");
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("general.fieldValue.unknown");
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setAddressLine2("/");
      valueLabel0.setIdentifier(965);
      user0.setPassword("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("user.addressLine2.saveChanges");
      derivedVariable0.setName("-");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals("-", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-2966));
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setForm((String) null);
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.add((-2966), (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2966, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      String string0 = "$I0`P7zWYfgViEG=&N8";
      rawVariable0.setName("$I0`P7zWYfgViEG=&N8");
      rawVariable0.setYear("$I0`P7zWYfgViEG=&N8");
      Variable.validateFields(rawVariable0);
      rawVariable0.getName();
      User user0 = new User();
      user0.setStatus("$I0`P7zWYfgViEG=&N8");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.removeValueLabel(valueLabel0);
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode(") IPxu75w5AST=KcZ:x");
      User user0 = new User(") IPxu75w5AST=KcZ:x", ") IPxu75w5AST=KcZ:x");
      user0.setPassword(") IPxu75w5AST=KcZ:x");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAvailability("general.fieldValue.unknown");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setFilePath((String) null);
      supportingDocument0.clone();
      supportingDocument0.getDisplayName();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.form = "ERROR #";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getFilePath();
      assertNull(string0);
      
      rawVariable0.getValueLabels();
      String string1 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string1);
      
      String string2 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", string2);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber((String) null);
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(rawVariable1);
      String string0 = derivedVariable1.getCodeBookNumber();
      assertNull(string0);
      
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.getOntologyTerms();
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.parallelStream();
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.getCategory();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      supportingDocument1.setFileName("KX'&=P");
      ontologyTerm1.setNewRecord(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      derivedVariable1.setAvailability("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.getForm();
      derivedVariable0.isCoded();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      boolean boolean0 = derivedVariable1.isCleaned();
      assertEquals("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER", derivedVariable1.getAvailability());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("?AMyv0aodBf'@tA0agc", (String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Eek;Ut/<8514");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.384198918389992
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setAddressLine2("/");
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode(") IPxu75w5AST=KcZ:x");
      User user0 = new User(") IPxu75w5AST=KcZ:x", ") IPxu75w5AST=KcZ:x");
      user0.setPassword(") IPxu75w5AST=KcZ:x");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      derivedVariable1.setName("%>v{iE 96laA5");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAvailability("general.fieldValue.unknown");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setCategory("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      valueLabel0.setIdentifier((-2045222519));
      user0.setAddressLine2("/");
      valueLabel0.setIdentifier(965);
      user0.setPassword("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("-");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.getCleaningDescription();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setStatus("c Rh=j");
      user0.setAddressLine2("/");
      valueLabel0.setIdentifier(965);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaningStatus("/");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertEquals("/", derivedVariable2.getCleaningStatus());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getNotes();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user1 = new User();
      user1.setPassword("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("yC>n^4=c([N*fZg:]");
      User user2 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlias("macaw.businessLayer.OntologyTerm");
      DerivedVariable.detectFieldChanges(user2, derivedVariable2, derivedVariable0);
      assertEquals("macaw.businessLayer.OntologyTerm", derivedVariable2.getAlias());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      DerivedVariable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("(|I =`,!Z|@sjFK8");
      user0.setPassword("G :");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("G :");
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("G :", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1059);
      rawVariable0.columnStart = "IU";
      rawVariable0.createVariableSummary();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      System.setCurrentTimeMillis(93L);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = ".~Lb Ym\"VB-";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.questionNumber = null;
      valueLabel0.setValue("ti_;(X,");
      valueLabel0.setValue("");
      rawVariable0.removeValueLabel(valueLabel0);
      String string0 = "uH~D?Bf:%$H. R";
      rawVariable0.setYear("uH~D?Bf:%$H. R");
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setAddressLine2("/");
      valueLabel0.setIdentifier(965);
      user0.setPassword("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "/";
      derivedVariable0.setName("-");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = null;
      arrayList0.add((OntologyTerm) null);
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.setIdentifier((-1970445914));
      rawVariable0.notes = "macaw.businessLayer.Variable";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm1.setIdentifier((-1730));
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2("macaw.businessLayer.OntologyTerm");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("gO@+OFJF`");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(1);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("`<d?_58k<9!");
      derivedVariable1.getCodeBookNumber();
      derivedVariable1.isCoded();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      derivedVariable1.getFilePath();
      assertEquals("`<d?_58k<9!", derivedVariable1.getYear());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(2565);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "ZoAZ/ ";
      User user0 = new User();
      user0.setAddressLine2("");
      user0.clone();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName(" :");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.getForm();
      derivedVariable1.getForm();
      assertEquals(" :", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCategory();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm0.setNewRecord(true);
      derivedVariable1.addOntologyTerm(ontologyTerm2);
      derivedVariable0.getCleaningDescription();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      arrayList0.trimToSize();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable1.setAvailability("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setAlias("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      String string0 = "4)Q|nG";
      derivedVariable0.setForm("");
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.2646522143032732
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setAlias((String) null);
      user0.setAddressLine2("");
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setAddressLine1((String) null);
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName(" :");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "^[\\w\\-\\+\\&\\*]+(?:\\.[\\w\\-\\_\\+\\&\\*]+)*@(?:[\\w-]+\\.)+[a-zA-Z]{2,7}$";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.addAll(172, (Collection<? extends OntologyTerm>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 172, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.759894919457782
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode(") IPxu75w5AST=KcZ:x");
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine2("");
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName(" :");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setYear("6Khjo.:TcG\"NTxAxwaB");
      derivedVariable1.setName("");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=4.080250964599902
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.getDisplayName();
      derivedVariable0.getValueLabels();
      User user2 = new User("", "");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getCleaningStatus();
      String string0 = derivedVariable1.getColumnEnd();
      assertEquals("jDQX7Z-Rv>&6];n`", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("-");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "lha.mrc.ac.uk:LHA";
      derivedVariable0.getForm();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("Y{\"eA<");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.questionNumber = "=g\"3u&5BG";
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.790981674735082
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(9);
      arrayList1.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-3323));
      derivedVariable0.form = "fa+q$Fwz`BbGkIR";
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.clone();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("-");
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.getCategory();
      String string0 = derivedVariable0.getColumnStart();
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("i]y9]~TZP");
      rawVariable0.getCleaningDescription();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.getDisplayName();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getAlternativeVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("UNABLE_TO_CHECK_AVAILABILITY_STATE_DUPLICATE");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      user0.setAddressLine2("Fu:4RYzFuj");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("$5?1r`ZW!B_vI");
      derivedVariable0.getAlias();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("$5?1r`ZW!B_vI", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5768731582333269
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-795));
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getQuestionNumber());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList3.add(supportingDocument1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8677758426013722
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.setForm("MISSING_DISPLAY_LIST_SELECTOR");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(rawVariable1);
      derivedVariable1.getCodeBookNumber();
      assertEquals("MISSING_DISPLAY_LIST_SELECTOR", derivedVariable1.getForm());
      
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable3.setSourceVariables(arrayList3);
      assertFalse(derivedVariable3.isCoded());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-429));
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("-");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("variable.name.label");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setCleaningStatus("x4vmx&DcBnnpjZn8M{");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      arrayList0.trimToSize();
      arrayList0.add((Variable) null);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getSupportingDocuments();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user1 = new User((String) null, (String) null);
      user0.setAffiliation("variable.isCleaned.saveChanges.changedToNotClean");
      user0.setLastName("variable.isCleaned.saveChanges.changedToNotClean");
      ValueLabel valueLabel0 = new ValueLabel();
      String string0 = rawVariable0.getQuestionNumber();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("n?UxlOF8w24}p");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.form = "%2F8)K[WbsuS`\"~";
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getCleaningDescription();
      derivedVariable1.getCleaningDescription();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getColumnEnd();
      assertEquals("n?UxlOF8w24}p", derivedVariable0.getForm());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("kebt/BG!tTH<61@2", "kebt/BG!tTH<61@2");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setFilePath("kebt/BG!tTH<61@2");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.columnStart = "kebt/BG!tTH<61@2";
      System.setCurrentTimeMillis((-1470L));
      user0.setFirstName("ZbzsMWv6^RHO{1gf");
      User.checkValidUserIDField("variable.alias.label");
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getColumnStart();
      derivedVariable0.getSourceVariables();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("NEW");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable1 = null;
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, (DerivedVariable) null, (DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "@";
      rawVariable0.getCleaningDescription();
      User user0 = new User((String) null, "variable.alias.label");
      user0.setPassword("variable.alias.label");
      user0.setCity("macaw.businessLayer.Variable");
      try { 
        User.checkValidEmail("macaw.businessLayer.Variable");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"macaw.businessLayer.Variable\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "y8DwNL&M;`$/";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
      
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("'mn/jkhPE2@axP.%Hkz");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, arrayList0.size());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5849521658071746
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.notes = "macaw.businessLayer.Variable";
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("macaw.businessLayer.Variable", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setIdentifier(2326);
      rawVariable0.addSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(9);
      arrayList1.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-3323));
      derivedVariable0.form = "fa+q$Fwz`BbGkIR";
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.clone();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("-");
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList2 = new ArrayList<MacawChangeEvent>();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getLabel();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.865033386547558
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setIdentifier(1452);
      derivedVariable0.setAlias("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      derivedVariable0.clone();
      derivedVariable0.questionNumber = null;
      derivedVariable0.setCleaned(false);
      derivedVariable0.questionNumber = ";uI48,`][";
      derivedVariable0.setColumnStart("|4s%<S#V}G-z~}VJ4K");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      System.setCurrentTimeMillis(1452);
      derivedVariable0.getLabel();
      derivedVariable0.isCleaned();
      derivedVariable0.getIdentifier();
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("|4s%<S#V}G-z~}VJ4K", derivedVariable0.getColumnStart());
      
      derivedVariable1.getOntologyTerms();
      derivedVariable1.getCleaningStatus();
      derivedVariable1.getOntologyTerms();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "G?:$!tl";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "J&|qxn3zB32R";
      ontologyTerm0.setNameSpace("J&|qxn3zB32R");
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.columnStart = "DD";
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("n?T^V[ZQV%AFWFN");
      derivedVariable0.getLabel();
      assertEquals("n?T^V[ZQV%AFWFN", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      user0.setUserID("-");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      user0.setPassword("/");
      user0.setAddressLine2("-");
      user0.setPassword("/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("-");
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable1);
      assertEquals("-", derivedVariable1.getName());
      
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.setCoded(false);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.8081364284244676
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine2("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName(" :");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.getForm();
      derivedVariable1.getForm();
      derivedVariable1.getOntologyTerms();
      assertEquals(" :", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.3605073365242366
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setLabel("\"2RY{7@)ry30K`!");
      User user0 = new User();
      user0.setPassword((String) null);
      derivedVariable0.setName("A<y:Y");
      User user1 = new User();
      User user2 = new User("CEar,M]!#M~WeT0", "*O>y3");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user2, derivedVariable1, derivedVariable1);
      User user3 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable2, derivedVariable3);
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable3);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      rawVariable0.setNotes("Q.'_");
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable3.setName("X_xdM774@!RRst");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getLabel();
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("\"2RY{7@)ry30K`!", derivedVariable0.getLabel());
      
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable3, derivedVariable4);
      DerivedVariable derivedVariable5 = new DerivedVariable();
      Variable.detectFieldChanges(user3, derivedVariable1, derivedVariable5);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1970445914));
      rawVariable0.notes = "macaw.businessLayer.Variable";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.spliterator();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getNotes();
      assertEquals("macaw.businessLayer.Variable", rawVariable0.getNotes());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-795));
      ValueLabel valueLabel2 = new ValueLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("general.fieldValue.unknown");
      derivedVariable0.isCoded();
      derivedVariable0.getQuestionNumber();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = ";\"W";
      derivedVariable0.getForm();
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals(";\"W", derivedVariable0.getForm());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setColumnStart((String) null);
      derivedVariable0.removeSourceVariable(rawVariable0);
      String string0 = rawVariable0.getAlias();
      assertNull(string0);
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.cleaningStatus.label");
      derivedVariable0.setNotes("variable.cleaningStatus.label");
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCategory();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "XNnos[";
      rawVariable0.notes = "INVALID_AVAILABILITY_STATE";
      String string0 = rawVariable0.getColumnStart();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCategory();
      assertEquals("Unknown", string1);
      assertNotNull(string1);
      
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, int0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("-");
      derivedVariable0.removeSourceVariable(rawVariable1);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setYear((String) null);
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(rawVariable1);
      ontologyTerm0.setNewRecord(false);
      String string0 = derivedVariable0.getYear();
      assertNull(string0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(false);
      derivedVariable2.removeSourceVariable(rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      boolean boolean0 = rawVariable3.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.addSourceVariable(rawVariable3);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable variable0 = null;
      rawVariable0.setNotes("nC|1)vCk9soa/?+6(.");
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(3013);
      rawVariable0.notes = "macaw.businessLayer.Variable";
      rawVariable0.addSupportingDocument(supportingDocument0);
      assertEquals("", rawVariable0.getFilePath());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "CgzI,qi6Ur9dKR";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1786));
      User user0 = new User("B;p76v2", "B;p76v2");
      user0.setLastName("B;p76v2");
      user0.setAddressLine2("B;p76v2");
      User user1 = new User("b-$`,h*|C.GNh;E[n", "variable.form.label");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(linkedList0);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      arrayList2.containsAll(arrayList0);
      rawVariable0.setFilePath("jDQX7Z-Rv>&6];n`");
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      arrayList4.iterator();
      rawVariable0.setFilePath("g");
      arrayList3.iterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList3.add(supportingDocument3);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.getFilePath();
      assertEquals("g", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription(") IPxu75w5AST=KcZ:x");
      supportingDocument0.setIdentifier((-1970445914));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) null);
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("R!2ZQdy%LFr_P%~A");
      rawVariable0.clone();
      assertEquals("R!2ZQdy%LFr_P%~A", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("variable.saveChanges.valueChanged");
      derivedVariable0.clone();
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("B_w_?XhsENEYVOcM");
      rawVariable0.clone();
      arrayList0.stream();
      System.setCurrentTimeMillis((-1780L));
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.58357976679115
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.notes = "+";
      rawVariable0.setColumnStart("[G`VbJkFP<T1N");
      rawVariable0.setQuestionNumber("[G`VbJkFP<T1N");
      int int0 = (-1700);
      rawVariable0.setIdentifier((-1700));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setAvailability("+rUZpa||-1-\"nODq\"");
      rawVariable0.setCategory("[G`VbJkFP<T1N");
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<Variable>((-1700));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1700
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.clone();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.label.label");
      rawVariable0.clone();
      assertEquals("variable.label.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("n?T^N[ZnV%A_WFN");
      derivedVariable0.columnStart = "n?T^N[ZnV%A_WFN";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("n?T^N[ZnV%A_WFN", derivedVariable1.getDisplayName());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("n?T^N[ZnV%A_WFN", derivedVariable1.getColumnStart());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5350009613862015
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1970445914));
      rawVariable0.notes = "macaw.businessLayer.Variable";
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getYear());
      assertEquals("macaw.businessLayer.Variable", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.5338841398510814
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "jmDv";
      rawVariable0.notes = "jmDv";
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("general.fieldValue.unknown");
      rawVariable0.setCleaned(true);
      User user0 = new User("general.fieldValue.unknown", "general.fieldValue.unknown");
      String string0 = "variable.cleaningDescription.label";
      User user1 = null;
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user0, (User) null, (User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("variable.isCoded.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("variable.isCoded.label", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("]y7leSYa");
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("{V7LYJ)fhC2~S5^:h");
      rawVariable0.notes = "{V7LYJ)fhC2~S5^:h";
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) rawVariable0);
      arrayList0.iterator();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      User user0 = new User("# >H8!Z3@q|8<?-1", "variable.columnStart.label");
      user0.setLastName("#t[dScC,FZ@@$lSkw[[");
      user0.setAddressLine2("# >H8!Z3@q|8<?-1");
      assertEquals("", user0.getCounty());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      int int0 = 9;
      arrayList2.clear();
      // Undeclared exception!
      try { 
        arrayList2.add((-1565), valueLabel0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1565, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      user0.setAffiliation((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(933);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      String string0 = ".1G@";
      derivedVariable2.setCategory(".1G@");
      // Undeclared exception!
      try { 
        User.validateFields(user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user1 = new User((String) null, (String) null);
      user0.setLastName("variable.isCoded.label");
      rawVariable0.setIdentifier((-2045222519));
      user0.setAffiliation("variable.isCleaned.saveChanges.changedToNotClean");
      user0.setLastName("variable.isCleaned.saveChanges.changedToNotClean");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(4632);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      String string0 = derivedVariable0.getCategory();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2028178998));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("-2028178998", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCoded());
  }
}
