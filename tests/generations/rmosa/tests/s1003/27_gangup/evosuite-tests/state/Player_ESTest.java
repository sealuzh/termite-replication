/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 00:55:49 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.nio.CharBuffer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1792, "state.Party", (-1125));
      player0.setDead((long) 1792, false);
      player0.type();
      Player player1 = new Player(2, "state.Party", "state.Party", (-1125));
      player0.setJoinOK(player1, true);
      System.setCurrentTimeMillis(1392409296329L);
      player0.pack();
      player1.isJoinOK(player0, true);
      player0.isJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      player0.type();
      player1.isJoinOK(player0, true);
      assertEquals(1792L, player0.getTimeOfDeath());
      
      player1.pack();
      assertEquals((-1125), player1.getPictureId());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1792, "state.Party", (-1125));
      player0.type();
      player0.setJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409296320L);
      player0.pack();
      player0.isJoinOK(player0, true);
      player0.isJoinOK(player0, false);
      player0.isJoinOK(player0, false);
      player0.type();
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(10);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-2839));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-35);
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte)1;
      int int0 = 1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-7711), 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(2, "", 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.setZ((-2251.6F));
      System.setCurrentTimeMillis((-677L));
      Party party0 = player0.prev;
      player0.next = null;
      System.setCurrentTimeMillis(2);
      player0.setMoney((-677L));
      player0.type();
      player0.pack();
      player0.type();
      System.setCurrentTimeMillis(1);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-2251.6F), player0.getZ(), 0.01F);
      assertEquals((-677.0F), float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0, "J", "@9[Lg?{PxNHw1%jlcm", 5, 0);
      player0.setDead((-1663L), false);
      int int0 = player0.getStrength();
      assertEquals((-1663L), player0.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(717);
      int int0 = (-717);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player(14102, "Pw.nk$ N$LC7}[nQ", "Pw.nk$ N$LC7}[nQ", 14102, (-717));
      player0.next = (Party) player1;
      player0.id = 717;
      player1.head = (Party) player0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      player1.gangStrength();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1529), "", "", (-1529));
      player0.setY((-1529));
      player0.pack();
      float float0 = player0.getY();
      assertEquals((-1529.0F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(120);
      String string0 = player0.getName();
      assertEquals("Player120", string0);
      
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player(0, (String) null, 0);
      player1.toString();
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.974268351915661
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-1912), "state.Party", "z=kMDkQCL", (-1912));
      player0.toString();
      player0.getY();
      player0.setDead((long) (-491));
      Player player1 = new Player((-125), "z=kMDkQCL", "z=kMDkQCL", 5397, (-491));
      player0.isJoinOK(player1, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      bufferedOutputStream0.flush();
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player1.pack(dataOutputStream0);
      player1.getMoney();
      player1.getPictureId();
      player0.isJoinOK(player1, true);
      player1.getY();
      System.setCurrentTimeMillis(2031L);
      player1.pack();
      Player player2 = new Player((-1912));
      player0.remove(player2);
      player0.getMoney();
      player0.getPictureId();
      player0.add(player1);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals((-491L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.323009262423563
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u+0;v62dw-");
      Player player0 = new Player((-2625));
      player0.setDead((-1L));
      Player player1 = new Player(2784);
      Party party0 = player0.gangBoss();
      party0.id = (int) (short)4919;
      player0.head = party0;
      int int0 = Packable.PLAYER;
      player1.setMoney(0.1F);
      player0.setDead((-1L), false);
      player0.isDead();
      player1.setY((-2972.962F));
      player1.getX();
      player1.toString();
      player1.setZ((-1L));
      player1.type();
      player1.setY(1.0F);
      player0.add(player1);
      byte[] byteArray0 = player0.pack();
      player1.getZ();
      player0.getName();
      player1.unpack(byteArray0);
      player0.getTimeOfDeath();
      player1.isJoinOK(player0, false);
      player1.setX((-1396.9211F));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.537855771056755
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setConnected(true);
      player0.setConnected(true);
      player1.setConnected(true);
      Party party0 = player0.next;
      Party party1 = player0.next;
      player0.setX(1719.017F);
      player1.setX(5560.1533F);
      player1.getX();
      player1.getX();
      player0.setZ(5560.1533F);
      player1.setZ(0.0F);
      Party party2 = player0.gangBoss();
      Player player2 = new Player((short)4919, (String) null, "!P", 1354, (short)4919);
      player2.setY(3749.383F);
      player1.setDead((long) (short)4919);
      player2.type();
      Player player3 = new Player();
      player2.setJoinOK(player1, true);
      player3.setDead();
      player2.getTimeOfDeath();
      player3.setY(0.1F);
      player2.reset(true);
      player2.getIP();
      party2.remove(player1);
      player2.setDead(0L);
      player1.pack();
      player3.getZ();
      assertTrue(player3.isDead());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      
      int int1 = Packable.ACTION;
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(1983, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "state.Party", 1983);
      player0.setMoney(1983);
      float float0 = player0.getMoney();
      assertEquals(1983.0F, float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2, "", 2);
      player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(2, player0.getPictureId());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-2594));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("Player-2594", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2, "", "", 2, 2);
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(2, player0.getPictureId());
      assertEquals(2, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(448, "state.Player", 376);
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(376, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.reset(true);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.next;
      player0.prev = null;
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)77;
      Player player0 = new Player((byte)77, "", "", 1);
      player0.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)77);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(27);
      player0.setDead((-2185L), true);
      player0.pack();
      player0.pack();
      player0.getTimeOfDeath();
      player0.getY();
      player0.getTimeOfDeath();
      player0.setConnected(true);
      float float0 = player0.getX();
      assertEquals((-2185L), player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(1104, "", "gui.ModuleBrowserDialog$ModuleFilter", 376, (-558));
      int int0 = player0.getStrength();
      assertEquals(376, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-558), int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(4);
      player0.setConnected(true);
      player0.setDead(0L, true);
      player0.setConnected(true);
      Player player1 = new Player((short)4919);
      player0.add(player1);
      Player player2 = new Player((-1697), "Player.unpack(): *** WARNING *** data is not of proper type!", (-1697));
      player0.setDead(0L, true);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      
      int int0 = player1.gangStrength();
      assertEquals(2, int0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      
      Player player3 = new Player((short)4919, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", (short)4919);
      boolean boolean0 = player3.isDead();
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(0L, player3.getTimeOfDeath());
      assertEquals(4919, player3.getPictureId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(4);
      Player player1 = new Player((-2600), (String) null, 2);
      assertTrue(player1.isConnected());
      
      player1.setConnected(false);
      Party party0 = new Party((short)4919);
      player1.getName();
      assertFalse(player1.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(863, ".*[.]class$", "", 863, 863);
      player0.getSubparty();
      player0.setMoney(863);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      player0.setZ((byte)77);
      player0.setDead((long) (byte)4, false);
      player0.reset(false);
      player0.isConnected();
      player0.getZ();
      player0.setDead(0L);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = player0.type();
      assertTrue(player0.isDead());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-2144));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(29, (String) null, 29);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(4);
      player0.setConnected(true);
      Party party0 = new Party(4);
      player0.next = party0;
      player0.setDead();
      player0.isDead();
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(1, "(K$?Pz>}2oM-z4;,bO", 1508);
      player0.setY(10.0F);
      player0.setConnected(false);
      player0.setX(1508);
      player0.getY();
      player0.getZ();
      player0.remove((Party) null);
      player0.setX((-2720.0F));
      player0.isDead();
      player0.isConnected();
      float float0 = player0.getX();
      assertEquals((-2720.0F), float0, 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setConnected(false);
      player0.setConnected(false);
      player0.setConnected(false);
      Party party0 = player1.next;
      Party party1 = player0.next;
      player0.boss = null;
      player1.setX(0.0F);
      player1.setX((-3662.2F));
      player1.getX();
      player1.getX();
      player0.setZ(0.0F);
      player0.setZ(0.0F);
      player1.gangBoss();
      assertEquals((-3662.2F), player1.getX(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(329);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1519));
      float float0 = player0.getZ();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player-1519", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1, "(K$?Pz>}2oM-z4;,bO", 1508);
      player0.setY(11.196395F);
      player0.setConnected(false);
      player0.setX(1508);
      player0.getY();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(1);
      int int0 = Packable.GAME_STATE;
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(25, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(120);
      Player player1 = new Player(120);
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertTrue(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player120", player1.getName());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(1761);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-2594));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-2594", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(1668, "", "gui.ModuleBrowserDialog$ModuleFilter", 0, 0);
      Player player1 = new Player(0, ">WT2;Yr,TXL", (short)4919);
      player0.setDead((long) 1668, true);
      int int0 = player0.gangStrength();
      assertEquals(1668L, player0.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(599, "", "", 599, 11308);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(11308);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeChars("Player.unpack(): *** WARNING *** data is not of proper type!");
      player0.pack(dataOutputStream0);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = (-215);
          int int1 = 2412;
          Player player0 = new Player((-215), "Vn,*O ps", "Vn,*O ps", 2412, (-215));
          player0.gangStrength();
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          MockFileOutputStream mockFileOutputStream0 = null;
          try {
            mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"writeFileDescriptor\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:245)
             // org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
             // sun.reflect.GeneratedConstructorAccessor74.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(1101, "", "ijK#owl;<t&T!._", 0, 376);
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals("", player0.getIP());
      assertEquals(376, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player((-1));
      player0.gangStrength();
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-839));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3962), (-2087));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals("Player-839", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-521), "module.ModuleBrowserDialog$ModuleFilter", 3304);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis(3304);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = (-2594);
      Player player0 = new Player((-2594));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(filterOutputStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'U';
      charArray0[1] = '3';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      player0.reset(false);
      // Undeclared exception!
      try { 
        mockPrintStream0.append((CharSequence) charBuffer0, 1731, (-5057));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-1), "", (-2762));
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
      assertEquals((-2762), player0.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(4832);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player4832", player0.toString());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-2594));
      player0.setJoinOK(player0, false);
      player0.isDead();
      System.setCurrentTimeMillis((-2594));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-4));
      Player player1 = new Player((-4));
      boolean boolean0 = player1.isConnected();
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-4", player1.toString());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-2594));
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(4);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(1743);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte)4;
      player0.unpack(byteArray0);
      float float0 = Player.TOLERANCE;
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(1213);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player1213", player0.getName());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(508);
      player0.setMoney(508);
      assertEquals(508.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(27);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("gui.ModuleBrowserDialog$ModuleFilter");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setDead((long) 27, true);
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(27L, long0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(2302);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = 15360;
      byte[] byteArray0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a");
      Player player0 = new Player(15360, "a", 15360);
      player0.getX();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("V+51'aj3");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
