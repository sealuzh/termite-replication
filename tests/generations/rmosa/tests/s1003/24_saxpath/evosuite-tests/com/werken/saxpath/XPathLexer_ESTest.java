/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 01:05:35 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7982372669070887
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5lJr83os0\".,");
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      xPathLexer0.consume((-337));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5234261050237028
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Ud .`z8i_V8c=#+");
      xPathLexer0.consume((-158));
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      xPathLexer0.identifier();
      xPathLexer0.consume((-487));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2136));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.895163032361212
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D9:9Tg+g_3w))Y");
      Token token0 = xPathLexer0.number();
      Token token1 = new Token(2, "D9:9Tg+g_3w))Y", 2, (-801));
      xPathLexer0.leftParen();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token2 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("9:", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(5, token5.getTokenType());
      assertEquals("+", token5.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6870204957035666
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.comma();
      xPathLexer0.consume((-2914));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ve%>0((P?_7m");
      xPathLexer0.consume((-2018));
      xPathLexer0.at();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6905579106695527
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.consume((-3000));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.892400767303865
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
      
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.consume(120);
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.consume((-950));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      String string0 = ".7`@P@k-Bqj}7zH;#P";
      xPathLexer0.consume((-337));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.consume((-3213));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5712448203683604
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.consume((-320));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lm%cX!VJkJ^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("lm", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(";SL\"%j)gL");
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",btW?tr<pzD2u_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("j2", token0.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kc:F`sn%RPi");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Kc", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3360038052879681
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GdL!?f?4#;<#J");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.div();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Ud .`z8i_V8c=#+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Ud", token1.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y@I>a+LcZ>:gP,");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E,W|*3951lo[/d1r!N$");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.842824809515558
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Ud .`z8i_V8c=#+");
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-2847));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("78uQ^Gf])!Y");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("78", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.283284892956868
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dy9hxkN!h)&");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("D9:9Tg+g_3w))Y");
      xPathLexer1.setXPath("");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.255097841860187
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2*tX9kkag6h2_Nb");
      Token token0 = xPathLexer0.plus();
      assertEquals(".", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("*", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("t", token3.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.258989351608448
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Hx", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Ud .`z8i_V8c=#+");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("U", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.dots();
      assertEquals(" .", token3.getTokenText());
      assertEquals(14, token3.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nZ?Y//`SyZ`Wv0R");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("n", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('Z', char0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4~DY~!cPY");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V4", token0.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$e#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(26, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.2242465345248141
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2*tX9kkag6h2_Nb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.not();
      assertEquals("t", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("9", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7985850929940455
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@HS}wC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("HS", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("}w", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-4424);
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume((-4424));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("; C']2p'BE>V/I");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("; C']2p'BE>V/I", token0.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",T>SJ");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.442093355162183
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"d4)dj\"Q~ T\"H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("d4)dj", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~TJ*gT");
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.isIdentifierStartChar('_');
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_},!K+G(pB\"e~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|Sv|_\bg");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Sv", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5738258741571483
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("C", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(">", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("rn$^`+K_ #a0Ok", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("r", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6439540026575292
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      xPathLexer0.leftParen();
      xPathLexer0.consume((-781));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setXPath("xJRTRk3`_$");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("F");
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-1246));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("v#z=.w5");
      xPathLexer1.setXPath("X%-V;");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!=y!HE}*_H");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setXPath("B]eemx[>Nr\"<p $Mr");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("B", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&M'xStbmh]ALZ|9 6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&M'xStbmh]ALZ|9 6", token0.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0}M[s}VRT,m42Bd:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Zi");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Zi", token0.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5464181185899843
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">M<54Fri<D|UvV\"Qb");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.at();
      assertEquals("M", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("D", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("U", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4433194754801835
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#NIvp m/4Tnx(W5P");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.star();
      assertEquals("#", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.star();
      String string0 = token1.toString();
      assertEquals("[ (20) (I)", string0);
      
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('-');
      assertTrue(boolean0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("/", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      xPathLexer0.consume((-337));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=NS{aT.");
      XPathLexer xPathLexer1 = new XPathLexer("=NS{aT.");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      xPathLexer1.operatorName();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals("NS", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7826405607580718
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.setXPath("gi=G3efb,jW=[");
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("=", token4.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("u", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7575516024981703
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'>s?IV?z}}'tq|&RC");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("'>s?IV?z}}'tq|&RC");
      Token token0 = xPathLexer0.comma();
      assertEquals("'", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
      
      xPathLexer1.getPreviousToken();
      Token token3 = xPathLexer0.minus();
      assertEquals("?", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("IV", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qus&kE+Ig:<");
      XPathLexer xPathLexer1 = new XPathLexer("Qus&kE+Ig:<");
      xPathLexer1.setXPath("Qus&kE+Ig:<");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("Qus", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.3847256167556468
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("32RZ1x");
      Token token0 = xPathLexer0.dollar();
      assertEquals("3", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("2", token1.getTokenText());
      
      Token token2 = new Token(40, "32RZ1x", 40, 122);
      Token token3 = xPathLexer0.leftParen();
      String string0 = token3.toString();
      assertEquals("[ (1) (R)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.div();
      Token token4 = xPathLexer0.slashes();
      assertEquals("Z", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")c]*}&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("c]*}&", token1.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("n", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#5<`\n~B&IL.k^^");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.currentPosition();
      char char0 = xPathLexer0.LA(1);
      assertEquals('5', char0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R;/AkT)O&5hFG@xpwW");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("~MD8<d");
      xPathLexer1.setXPath("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5533655335473042
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D9:9Tg+g_3w))Y");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("D9:9Tg+g_3w))Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer1.setXPath("");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer1.div();
      xPathLexer1.getPreviousToken();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("9T", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("g", token4.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("],9)jB&}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.3144916922458882
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#NIvp m/4Tnx(W5P");
      XPathLexer xPathLexer1 = new XPathLexer("o6M5v");
      Token token0 = xPathLexer1.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("#N", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Ivp", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.6698639611970993
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OZ[Ces]Mr!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Ces", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("]M", token3.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.8814755514617243
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=NS{aT.");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      Token token1 = new Token(2573, "=NS{aT.", 238, 238);
      xPathLexer0.leftParen();
      String string0 = token0.toString();
      assertEquals("[ (26) (=)", string0);
      
      Token token2 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.div();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("{", token3.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("T.", token4.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.endPosition();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.consume((-3247));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7857155974636965
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'>s?IV?z}}'tq|&RC");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.literal();
      assertEquals(">s?IV?z}}", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("'>s?IV?z}}'tq|&RC");
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("tq", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("|", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.getPreviousToken();
      Token token4 = xPathLexer0.minus();
      assertEquals("&", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("RC", token5.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w#}x`KhT+");
      XPathLexer xPathLexer1 = new XPathLexer("w#}x`KhT+");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.2912592824830993
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      xPathLexer0.consume((-337));
      xPathLexer0.setXPath(".7`@P@k-Bqj}7zH;#P");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".7", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("`@", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("P@k-Bqj}7zH;#P", token2.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3365478502623527
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GdL!?f?4#;<#J");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4707744465498056
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("m", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S5");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("S5", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5911838789262045
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("gi=G3efb,jW=[");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/H}hp+-7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7317510328602492
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'>s?IV?z}}'tq|&RC");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("'>s?IV?z}}'tq|&RC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">s?IV?z}}", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("tq|&RC", token1.getTokenText());
      
      xPathLexer1.getPreviousToken();
      Token token2 = xPathLexer0.minus();
      assertEquals("t", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("q|", token3.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.2766167329568288
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      String string0 = ".7`@P@k-Bqj}7zH;#P";
      xPathLexer0.at();
      xPathLexer0.consume((-337));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.6260098737521633
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OB=A^`\"^y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("OB", token0.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Y>NDL");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("2", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Y>NDL", token1.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6901823238150926
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      assertEquals("", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(1019);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.2568966518781752
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      xPathLexer0.consume((-337));
      xPathLexer0.setXPath(".7`@P@k-Bqj}7zH;#P");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.869896407698803
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.setXPath("q85G^+CR2nq:[");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("85", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.star();
      assertEquals("G", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{Wqu(@@a=<m0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{Wqu(@@a=<m0", token0.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      xPathLexer0.consume((-264));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.095924398920587
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      XPathLexer xPathLexer1 = new XPathLexer("d`!");
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8220739531834824
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("q85G^+CR2nq:[");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("a,=\"/bY-;1\"+a'");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.372620333598572
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GdL!?f?4#;<#J");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("GdL", token0.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("f?", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("#;<#J", token3.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5182781538197783
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("C>#rn$^`+K_ #a0Ok", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("C", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.relationalOperator();
      assertEquals(9, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7522916211099606
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[(Yu+tk");
      Token token0 = xPathLexer0.comma();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("(", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("Y", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("+", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.2857353728425127
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      XPathLexer xPathLexer1 = new XPathLexer("39+Jnrg;v6K/3S/!lM1");
      Token token0 = xPathLexer1.number();
      assertEquals("39", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("C", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.43570606742266
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1886759387754966
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2*tX9kkag6h2_Nb");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.3185904736333802
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("z6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%z]`n>fhh}V3iTy", token2.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.795338716182451
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-670));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.6280962162333061
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.setXPath("q85G^+CR2nq:[");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("85", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GdL!?f?4#;<#J");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N#@k<`'@h{k*'hTu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("N", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oa`r=.");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("oa", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.282325506963904
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("v':]3\"_}vbo5~R$?p");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.6161375359293506
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.3363854664682553
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GdL!?f?4#;<#J");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.7465901583383947
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">M<54Fri<D|UvV\"Qb");
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.6930054383653501
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">M<54Fri<D|UvV\"Qb");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("54", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p+}Sf:a4:rPo");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("p", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h_e/-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("h_e", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.4359291685201199
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Ud .`z8i_V8c=#+");
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-337));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.8542326508787064
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GWN6q^wai/]!?E=U;");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("WN6q", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("^w", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.equals();
      assertEquals("a", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.097242790482881
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m.?TtOab,");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.071407494094898
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q+m{kuOCdipACy&?Ap");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("q+", token1.getTokenText());
      
      xPathLexer0.mod();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.8281884242395012
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GWN6q^wai/]!?E=U;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("GWN6q", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("^w", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.equals();
      assertEquals("a", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.442260514018817
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#NIvp m/4Tnx(W5P");
      xPathLexer0.mod();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.plus();
      String string0 = token0.toString();
      assertEquals("[ (5) (N)", string0);
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("I", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(12, token4.getTokenType());
      assertEquals("m/", token4.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.2262012847331967
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("; C']2p'BE>V/I");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("C", token2.getTokenText());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftParen();
      xPathLexer1.dots();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("h,~f2/(|.S?'Y0eM;q");
      assertFalse(xPathLexer2.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.3443022199897614
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("d`!");
      xPathLexer1.consume();
      xPathLexer1.setXPath("");
      xPathLexer1.setXPath("d`!");
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer1.div();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("`", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.2328143947380164
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6:5G@\"ecRzyQhz");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-816));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.255923060543138
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2*tX9kkag6h2_Nb");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("t", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(31, token2.getTokenType());
      assertEquals(".2", token2.getTokenText());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-1103));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mq");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.3008976830976673
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GdL!?f?4#;<#J");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.consume((-1081));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qom.werken.saxpath.XPat<Lexer");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token1 = xPathLexer0.comma();
      assertEquals("o", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.rightBracket();
      Token token0 = xPathLexer1.leftBracket();
      xPathLexer1.mod();
      xPathLexer1.relationalOperator();
      xPathLexer0.getXPath();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.4690173454988364
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Ud .`z8i_V8c=#+");
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-657));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.981982673179814
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.isIdentifierChar('8');
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.getXPath();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.endPosition();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.hasMoreChars();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      Token token0 = new Token('8', "", '8', '8');
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      xPathLexer0.consume((-337));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.9420393861075032
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('P');
      assertTrue(boolean0);
      
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.235528891525289
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6:'SG@\"ecRzyQhz");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("6:", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('P');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.0229068002862234
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      Token token0 = xPathLexer0.equals();
      assertEquals("<", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.2930605626786669
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iRwQ5g7=41dQYO-|6");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-337));
      xPathLexer0.setXPath(".7`@P@k-Bqj}7zH;#P");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.800527479825321
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GWN6q^wai/]!?E=U;");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.0096004269837273
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      xPathLexer0.rightParen();
      xPathLexer0.consume((-4480));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.2563291794005904
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2*tX9kkag6h2_Nb");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("t", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.2566839990339433
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2*tX9kkag6h2_Nb");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq,hGWOU^6srNa7s");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('o');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.517823229261434
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.0228557876075088
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("C", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.0646616945352338
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("H", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.9770503974543704
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(" ", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.21909194315381
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.9440880416772854
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("C", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(">", token2.getTokenText());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9849204152253782
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.0212696304337525
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(">", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals("#", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.9819344023383753
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.1016569460642307
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D!9|139bY^fBJ,eb");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.9431937872619043
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.2268403043913112
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2*tX9kkag6h2_Nb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("t", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("X9kkag6h2_Nb", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.221821601946461
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("x", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      boolean boolean0 = xPathLexer0.isIdentifierChar('\u001D');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.2236489051791266
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.2234961663815627
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('>');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.9467055164373503
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals(".C", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(18);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9877962214782028
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("C", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(">", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals(27, token3.getTokenType());
      assertEquals("rn$^`+K_ ", token3.getTokenText());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.9821786025825756
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(".C", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("#", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.0610299520304507
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("#", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=1.256965255222906
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("H", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.2572422251716666
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>Hx=qG_-~Y");
      Token token0 = xPathLexer0.comma();
      assertEquals("<", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(1576);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 184
  /*Coverage entropy=1.1956194630918755
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6:5G@\"ecRzyQhz");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 185
  /*Coverage entropy=0.9852837543115804
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(">", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=0.9431937872619043
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.9431937872619043
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".C>#rn$^`+K_ #a0Ok");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }
}
