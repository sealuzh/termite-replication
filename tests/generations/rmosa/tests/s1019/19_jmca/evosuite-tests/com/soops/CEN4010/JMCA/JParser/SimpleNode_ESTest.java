/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 23:15:41 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.EmptyStackException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      simpleNode0.identifiers = null;
      String string0 = ")";
      // Undeclared exception!
      try { 
        simpleNode0.toString(")");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      simpleNode0.identifiers = null;
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      String string0 = "&&";
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(1101);
      stringWriter0.append((CharSequence) "fX2=B# 2RDP_i");
      StringWriter stringWriter1 = stringWriter0.append('S');
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = 'S';
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      charArray0[5] = 'q';
      charArray0[6] = 'S';
      charArray0[7] = 'N';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = new StringWriter(69);
      stringWriter2.write(charArray0);
      StringWriter stringWriter3 = stringWriter1.append('S');
      stringWriter3.close();
      StringWriter stringWriter4 = stringWriter3.append('S');
      simpleNode0.dump("lv", stringWriter4);
      assertEquals("fX2=B# 2RDP_iS4S\u0000SSqSNSS<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
      assertEquals("fX2=B# 2RDP_iS4S\u0000SSqSNSS<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 47;
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(256);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">>");
      StringWriter stringWriter2 = stringWriter1.append('q');
      StringBuffer stringBuffer0 = new StringBuffer("ClassOrInterfaceBody");
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) stringBuffer0);
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.append('S');
      char[] charArray0 = new char[2];
      charArray0[0] = 'q';
      charArray0[1] = 'S';
      stringWriter2.write(charArray0);
      char[] charArray1 = new char[0];
      stringWriter0.write(charArray1);
      stringWriter3.close();
      simpleNode0.dump("fX2=B# 2RDP_i", stringWriter1);
      StringReader stringReader0 = new StringReader("<");
      stringWriter0.flush();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter(42);
      StringWriter stringWriter1 = stringWriter0.append('o');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "}");
      stringWriter1.append('o');
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      stringWriter2.write(charArray0);
      stringWriter0.write(charArray0);
      stringWriter0.close();
      simpleNode0.dump("<", stringWriter2);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1000384801967673
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.toString();
      simpleNode0.setIdentifier("ForInit");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(84);
      StringWriter stringWriter1 = stringWriter0.append('|');
      simpleNode0.dump("{", stringWriter1);
      JavaParser javaParser0 = new JavaParser("Literal");
      simpleNode0.dump("{", stringWriter1);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter2 = new StringWriter(1989);
      simpleNode0.dump("Literal", stringWriter0);
      stringWriter1.append('|');
      stringWriter2.append((CharSequence) "Literal");
      simpleNode0.dump("{", stringWriter0);
      simpleNode0.dump("Q(*@&WX14Nvn", stringWriter2);
      assertEquals("Literal<ForInit>\n  <identifier>ForInit</identifier>\n  <identifier>*le</identifier>\n</ForInit>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<Arguments>\n  <identifier>*lshft</identifier>\n</Arguments>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7805062184775959
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(71);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(71);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ";");
      stringWriter0.append('q');
      char[] charArray0 = new char[3];
      charArray0[1] = 'q';
      stringWriter1.write(charArray0);
      stringWriter0.close();
      simpleNode0.dump(";", stringWriter1);
      StringReader stringReader0 = new StringReader("</");
      stringWriter1.flush();
      JavaParser javaParser0 = new JavaParser("fX2=B# 2RDP_i");
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.104396374629252
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      simpleNode0.setIdentifier("&&");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('$');
      simpleNode0.dump(",", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 55);
      simpleNode0.jjtAddChild((Node) null, 0);
      assertEquals(56, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0675636642741912
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser(">");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(">");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      simpleNode0.setIdentifier(">");
      simpleNode0.toString();
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(1989);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">=");
      stringWriter1.close();
      simpleNode0.dump("*ge", stringWriter1);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      Node node0 = javaParser1.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1103786918));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<");
      int int0 = 614;
      StringWriter stringWriter0 = new StringWriter(614);
      stringWriter0.append((CharSequence) "<");
      char[] charArray0 = new char[8];
      charArray0[0] = 'G';
      charArray0[1] = 'S';
      charArray0[2] = 'q';
      charArray0[3] = '{';
      charArray0[4] = 'P';
      stringWriter0.write(charArray0);
      charArray0[5] = 'n';
      charArray0[6] = 'g';
      charArray0[7] = 'S';
      stringWriter0.write(charArray0);
      stringWriter0.close();
      simpleNode0.dump("<", stringWriter0);
      StringReader stringReader0 = new StringReader("<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("'", stringWriter0);
      int int0 = (-2004392018);
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-2004392018));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("TrcyU,p-Fr9=~GO", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4983818770226537
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte) (-107);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(65);
      simpleNode0.jjtAddChild(simpleNode0, 65);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 65, (byte)10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      StringBuffer stringBuffer0 = javaParserTokenManager0.image;
      stringWriter0.append((CharSequence) null);
      // Undeclared exception!
      simpleNode0.dump("&", stringWriter0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser(">");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump(">", stringWriter0);
      simpleNode1.jjtGetChild(0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-987));
      SystemInUtil.addInputLine("}");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('i');
      stringWriter0.flush();
      char[] charArray0 = new char[1];
      simpleNode0.identifiers = null;
      stringWriter0.close();
      charArray0[0] = 'i';
      stringWriter0.write(charArray0);
      stringWriter1.write("-m");
      // Undeclared exception!
      try { 
        simpleNode0.dump("}", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      SystemInUtil.addInputLine("Gt'kGFmQTQ2HD ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = new StringWriter(5);
      simpleNode0.dump("Uxp/Mj(h^QtLP.", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(65);
      simpleNode0.jjtAddChild(simpleNode0, 65);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetChild(0);
      assertEquals(66, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 65;
      SimpleNode simpleNode0 = new SimpleNode(65);
      StringReader stringReader0 = new StringReader("E{e}\"H*\"fqzdXOxh9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 65, 65);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(65);
      simpleNode0.jjtAddChild(simpleNode1, 65);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      int int1 = (-594);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-594));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.id = 42;
      StringReader stringReader0 = new StringReader("JzNG2n&|Tr{M");
      simpleNode0.jjtAddChild(simpleNode1, 1);
      Node node0 = simpleNode1.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("#OkfsO=W}32vK");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-59));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      Node node1 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 416);
      assertEquals(417, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-4598));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = simpleNode0.parent;
      int int0 = (-480);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = null;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Y9cb/.?_I");
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-480));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -480
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      SimpleNode simpleNode1 = new SimpleNode(42);
      simpleNode0.jjtAddChild(simpleNode1, 42);
      StringWriter stringWriter0 = new StringWriter(42);
      simpleNode0.dump("{BTaFjeVf:LCb%}H", stringWriter0);
      assertEquals(43, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("#OkfsO=W}32vK", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("#OkfsO=W}32vK", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(65);
      int int0 = 0;
      SimpleNode simpleNode1 = new SimpleNode(65);
      simpleNode1.id = (-3243);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("{");
      simpleNode1.identifiers = arrayList0;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter(65);
      stringWriter0.close();
      // Undeclared exception!
      try { 
        simpleNode0.dump("E{e}\"H*\"fqzdXOxh9", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3243
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1104857836));
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringReader stringReader0 = new StringReader("&&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.parser = javaParser0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-114307594));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      String string0 = null;
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-114307594));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2303041861882895
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      SystemInUtil.addInputLine("tlf^`");
      PipedInputStream pipedInputStream0 = new PipedInputStream(48);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 48);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-5262));
      simpleNode0.parent = (Node) simpleNode1;
      StringWriter stringWriter0 = new StringWriter(48);
      stringWriter0.append((CharSequence) "tlf^`");
      simpleNode0.dump("tlf^`", stringWriter0);
      simpleNode0.setIdentifier("R");
      StringWriter stringWriter1 = new StringWriter(1989);
      simpleNode0.dump("tlf^`", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(node0, 48);
      simpleNode0.jjtGetParent();
      assertEquals(49, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1993));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2343));
      simpleNode0.setIdentifier("lvd *M&.?{0J'p");
      simpleNode0.setIdentifier("lvd *M&.?{0J'p");
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader(".6sc");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.jjtSetParent(simpleNode0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      simpleNode0.jjtAddChild(simpleNode0, 10);
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.117138797873711
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1647);
      String string0 = "#|?rTr%OZMsFcbbzb";
      // Undeclared exception!
      try { 
        simpleNode0.toString("#|?rTr%OZMsFcbbzb");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1647
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9389355707834581
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      SystemInUtil.addInputLine("tlf^`");
      StringWriter stringWriter0 = new StringWriter(55);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"float\"");
      stringWriter0.append((CharSequence) "tlf^`");
      simpleNode0.dump("tlf^`", stringWriter0);
      simpleNode0.setIdentifier("H");
      StringWriter stringWriter1 = new StringWriter(1989);
      simpleNode0.dump("tlf^`", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      SystemInUtil.addInputLine("tlf^`");
      StringWriter stringWriter0 = new StringWriter(55);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"float\"");
      stringWriter0.append((CharSequence) "tlf^`");
      simpleNode0.dump("tlf^`", stringWriter0);
      simpleNode0.setIdentifier("H");
      StringWriter stringWriter1 = new StringWriter(1989);
      simpleNode0.dump("tlf^`", stringWriter1);
      assertEquals("<UnaryExpressionNotPlusMinus>\n  <identifier>H</identifier>\n</UnaryExpressionNotPlusMinus>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString("PackageDeclaration");
      assertEquals("PackageDeclarationUnaryExpressionNotPlusMinus : H", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SystemInUtil.addInputLine("Error: Ignoring invalid lexical state : ");
      SimpleNode simpleNode0 = new SimpleNode(42);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("TrcyU,p-Fr9=~GO", stringWriter0);
      assertEquals("<ConditionalAndExpression>\n  <identifier>=</identifier>\n</ConditionalAndExpression>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ConditionalAndExpression : =", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("TrcyU,p-Fr9=~GO", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1103786918));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 42;
      SimpleNode simpleNode0 = new SimpleNode(42);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringWriter stringWriter0 = new StringWriter(42);
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = '<';
      charArray0[2] = 'G';
      charArray0[3] = '\'';
      charArray0[4] = 'O';
      charArray0[5] = ':';
      stringWriter0.flush();
      stringWriter0.write(charArray0);
      stringWriter0.write(charArray0);
      stringWriter0.close();
      simpleNode0.dump("*amp", stringWriter0);
      StringReader stringReader0 = new StringReader("L.u5FydhX:).H~");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      jJTJavaParserState0.openNodeScope(simpleNode0);
      jJTJavaParserState0.closeNodeScope(simpleNode0, false);
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3292));
      simpleNode0.jjtAddChild(simpleNode0, 31);
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3292
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9766893090132731
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      String string1 = "=";
      SimpleNode simpleNode1 = null;
      try {
        simpleNode1 = new SimpleNode((JavaParser) null, 1738);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
