/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 23:15:06 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStreamWriter;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.Collection;
import java.util.List;
import java.util.Vector;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.rowio.RowOutputText;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SQLUtil.normalize("--", false);
      Boolean boolean0 = new Boolean("exe(\",");
      SQLUtil.parseColumnTypeAndSize("--");
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("exe(\",", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6:1wyU(lT[B#zT");
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize("*/", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      SQLUtil.isQuery("T/*2GSqcY(wTtqs");
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("?_ECmj[%", defaultDBTable0, (-2515), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("+W+K6/*");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "+W+K6/*";
      stringArray0[1] = "+W+K6/*";
      stringArray0[2] = "+W+K6/*";
      stringArray0[3] = "+W+K6/*";
      stringArray0[4] = "+W+K6/*";
      stringArray0[5] = "+W+K6/*";
      stringArray0[6] = "+W+K6/*";
      stringArray0[7] = "+W+K6/*";
      SQLUtil.leftJoin("+W+K6/*", stringArray0, "+W+K6/*", (String) null, stringArray0);
      // Undeclared exception!
      SQLUtil.mutatesStructure("+W+K6/*");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = " /* ";
      // Undeclared exception!
      SQLUtil.isDDL(" /* ");
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("*", compositeDBObject0);
      tableContainer0.getTable("*");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, (-425), "into");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Random.setNextRandom(65280);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "z#CX~W!,h)vs:Ed";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("z#CX~W!,h)vs:Ed", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, z#CX~W!,h)vs:Ed) REFERENCES (, z#CX~W!,h)vs:Ed)", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DBDataType.getInstance(13, "+W+K6/*");
      Integer integer0 = RawTransaction.COMMIT;
      // Undeclared exception!
      SQLUtil.isProcedureCall("+W+K6/*");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DBSchema dBSchema0 = new DBSchema("?c 7[V$>1Qil[t5");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("?c 7[V$>1Qil[t5", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "?c 7[V$>1Qil[t5", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"?c 7[V$>1Qil[t5\" PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "EpW^zv2n6T_ZD/+iD";
      stringArray0[1] = "EpW^zv2n6T_ZD/+iD";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "EpW^zv2n6T_ZD/+iD", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("v[", true, dBUniqueConstraint0);
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(defaultDBTable0, "v[", false, stringArray0);
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex("y8G~7-$9}Yb5$h", true, dBUniqueConstraint0);
      dBUniqueConstraint1.equals("y8G~7-$9}Yb5$h");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "y8G~7-$9}Yb5$h", true, stringArray0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "EpW^zv2n6T_ZD/+iD";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(dBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "select into";
      stringArray0[1] = "G~X\"ef47.m#uNPhS|";
      String[] stringArray1 = new String[1];
      stringArray1[0] = ",";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("select into", stringArray0, ",", "select into", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "reserveSpace";
      stringArray0[1] = "P~=z_gwUq?'34+";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "reserveSpace", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("P~=z_gwUq?'34+", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("P:k");
      PrintWriter printWriter0 = mockPrintWriter0.format("SELECT * FROM ", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, printWriter0);
      assertEquals("table", dBTable0.getObjectType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(1448, "exe(\",3:+5c8rw+a2");
      Integer integer0 = new Integer(1448);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("exe(\",3:+5c8rw+a2", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.getForeignKeyConstraint();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("exe(\",3:+5c8rw+a2");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("t]l/h9+r7tq#", stringArray0);
      String string0 = SQLUtil.substituteMarkers("", "t]l/h9+r7tq", "t]l/h9+r7tq");
      assertEquals("", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "execute";
      stringArray0[1] = "execute";
      stringArray0[2] = "execute";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("execute", stringArray0, "I.C+B>", "execute", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("`%SrhMvs");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("`%SrhMvs", defaultDBTable0, (DBDataType) null);
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      Vector<JMXPrincipal> vector0 = new Vector<JMXPrincipal>(constraintDescriptorList0);
      constraintDescriptorList0.addAll((Collection) vector0);
      constraintDescriptorList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
      assertEquals("`%SrhMvs", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, (String) null, "k");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(1201, "rename");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rename", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[8];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("([{$Laz#;x1|65");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: ([{$Laz#;x1|65
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "remote";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "remote", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (remote)", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(1201, "rename");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rename", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("rename", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.COMMIT;
      StringBuffer stringBuffer0 = new StringBuffer();
      SQLUtil.typeAndName(defaultDBTable0);
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("selectu.&fc?!");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("crateunique tdexsetnstrAng(sri;Zsstring)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"sri;Zsstring\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBDataType dBDataType0 = DBDataType.getInstance((-252), "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setDefaultValue("g");
      SQLUtil.renderColumn(defaultDBColumn0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance(" (2) DEFAULT g NULL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(1469, "exe(\",3:+5c8rw+a2");
      Integer integer0 = RawTransaction.COMMIT;
      dBDataType0.isAlpha();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("exe(\",3:+5c8rw+a2", (DBTable) null, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder("MW)RQ");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("MW)RQEXE(\",3:+5C8RW+A2(0,0)", stringBuilder0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-233), "exe(\",3:+5c8rw+a2");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CHrG#a^UJV\"gS{ E", (DBTable) null, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("EXE(\",3:+5C8RW+A2", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition(" default ", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[9];
      String string0 = "7?aNbT@~^&Hf";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join("org.postgresql.jdbc2.AbstractJdbc2BlobClob", "org.postgresql.jdbc2.AbstractJdbc2BlobClob", stringArray0, "7?aNbT@~^&Hf", "7?aNbT@~^&Hf", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = SQLUtil.normalize("O>-My/&S", true);
      assertEquals("O > - My / & S", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Integer integer0 = RawTransaction.COMMIT;
      columnDescriptorList0.add((Object) integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-252), "");
      SQLUtil.isProcedureCall(" NULL");
      String[] stringArray0 = new String[5];
      stringArray0[0] = " NULL";
      stringArray0[1] = "";
      stringArray0[2] = " NULL";
      stringArray0[3] = "";
      stringArray0[4] = "";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" NULL", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("fvtb?n", " NULL", " NULL");
      jdbcConnectionPool0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[5];
      RowOutputText rowOutputText0 = new RowOutputText("", "updatedeletepaoxjnne.uf-", "o%WlDe1 T{Xozxh`", true, " join ");
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(rowOutputText0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputText0);
      PrintWriter printWriter0 = mockPrintWriter0.printf("updatedeletepaoxjnne.uf-", (Object[]) stringArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      DBSchema dBSchema0 = new DBSchema("updateconstraint hzjoc{$d}[boz@kr?*\" unique (hzjoc{$d}[boz@kr?*\")");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wzU9i08jS+lKdM!", dBSchema0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertNull(dBForeignKeyConstraint0.getDoc());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", false, "SELECT * FROM ", "SELECT * FROM ");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      String string1 = SQLUtil.removeComments("xTJ16`F!VtgL+i");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("F\u0001");
      SQLUtil.removeComments("executeiticyum]j5");
      String string0 = "R%IX^U?u40";
      DBCatalog dBCatalog0 = new DBCatalog("deletepaoxjnne.uf-");
      DBSchema dBSchema0 = new DBSchema("executeiticyum]j5", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R%IX^U?u40", dBSchema0);
      String[] stringArray0 = new String[6];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, true, dBUniqueConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      DBCatalog dBCatalog1 = new DBCatalog();
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'R%IX^U?u40' has no foreign key with the columns (, , , , , )
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("callselect * from");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" qJ ");
      String[] stringArray0 = new String[9];
      stringArray0[0] = " qJ ";
      stringArray0[1] = " qJ ";
      stringArray0[2] = " qJ ";
      stringArray0[3] = " qJ ";
      stringArray0[4] = " qJ ";
      stringArray0[5] = " qJ ";
      stringArray0[6] = " qJ ";
      stringArray0[7] = " qJ ";
      stringArray0[8] = " qJ ";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " qJ ", true, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("CONSTRAINT \" qJ \" ", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Object object0 = new Object();
      SQLUtil.renderValue("`[k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(390, "L006");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("`[k", defaultDBTable0, dBDataType0);
      dBDataType0.isNumber();
      defaultDBColumn0.setNullable(false);
      SQLUtil.renderColumn(defaultDBColumn0);
      DBDataType.getInstance(390, "`[k");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("-fA%zFr4<bz`T0tTUNq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "create table ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create table ");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("create unique indexscan for table number");
      DBSchema dBSchema0 = new DBSchema("create unique indexscan for table number");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("hasParams=", dBSchema0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("hasParams=", defaultDBTable0.getName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("sekectq", "sekectq", (String[]) null, "sekectq", "sekectq", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("<\"", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "+ecam";
      int int0 = 1201;
      String string1 = "zTK7zNj(9W%e";
      String[] stringArray0 = new String[9];
      stringArray0[0] = "zTK7zNj(9W%e";
      stringArray0[1] = "zTK7zNj(9W%e";
      stringArray0[2] = "zTK7zNj(9W%e";
      stringArray0[3] = "+ecam";
      stringArray0[4] = "+ecam";
      stringArray0[5] = "+ecam";
      stringArray0[6] = "+ecam";
      stringArray0[7] = "zTK7zNj(9W%e";
      stringArray0[8] = "zTK7zNj(9W%e";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "+ecam", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select into");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("deleterefeenc");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = SQLUtil.normalize("EpW^zv2n6T_ZD/+iD", false);
      assertEquals("EpW ^ zv2n6T_ZD / + iD", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("EpW^zv2n6T_ZD/+iD");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "r!gk";
      stringArray0[1] = "EpW ^ zv2n6T_ZD / + iD";
      stringArray0[2] = "EpW ^ zv2n6T_ZD / + iD";
      stringArray0[3] = "EpW^zv2n6T_ZD/+iD";
      stringArray0[4] = "EpW ^ zv2n6T_ZD / + iD";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "Holdable cursors are supported only for scrollable insensitive result sets.", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"Holdable cursors are supported only for scrollable insensitive result sets.\" UNIQUE ()", string1);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = SQLUtil.normalize("exe(\",3:+5c8rw+a2", false);
      assertEquals("exe (\",3:+5c8rw+a2\"", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("exe(\",3:+5c8rw+a2");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: exe(\",3:+5c8rw+a2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = SQLUtil.normalize("yMG~7-$9}Yb5$h", true);
      assertEquals("yMG ~ 7 - $ 9 } Yb5 $ h", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = null;
      String[] stringArray0 = null;
      String string1 = "ALTER TABLE ";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "2zW1_\"mDx";
      stringArray1[2] = "ALTER TABLE ";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("2zW1_\"mDx", (String[]) null, (String) null, "ALTER TABLE ", stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = SQLUtil.normalize("create unique index)<v", true);
      assertEquals("create unique index) < v", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(compositeDBObject0).toString();
      dBCatalog0.setOwner(compositeDBObject0);
      dBCatalog0.getTables();
      String string0 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals("null.null", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = SQLUtil.normalize("Cj,3{.rn9=6V(Z/I})", true);
      assertEquals("Cj, 3 {.rn9 = 6V (Z / I })", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = SQLUtil.normalize("s;PWJ17W4&LD`'8y|s", true);
      assertEquals("s ; PWJ17W4 & LD ` '8y|s'", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      boolean boolean0 = SQLUtil.isDML("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("", string0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("alter index");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTables();
      String string0 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", true, "SELECT * FROM ", "SELECT * FROM ");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"SELECT * FROM \" ", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("&P#", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("&P#", dBSchema0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "&P#";
      stringArray0[1] = " DEFAULT ";
      stringArray0[2] = " DEFAULT ";
      stringArray0[3] = "&P#";
      stringArray0[4] = "&P#";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" DEFAULT ", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (&P#,  DEFAULT ,  DEFAULT , &P#, &P#) REFERENCES &P#(&P#,  DEFAULT ,  DEFAULT , &P#, &P#)", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[10];
      // Undeclared exception!
      try { 
        SQLUtil.join("c013800d-00fb-2647-07ec-000000134f30", "(U3+j'D~F9 q", stringArray0, "c013800d-00fb-2647-07ec-000000134f30", "(U3+j'D~F9 q", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Hzjoc{$d}[Boz@Kr?*\"";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Hzjoc{$d}[Boz@Kr?*\"", true, stringArray0);
      DBUniqueConstraint dBUniqueConstraint1 = defaultDBTable0.getUniqueConstraint(stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("paoxjnn", true, dBUniqueConstraint1);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint2 = new DBUniqueConstraint(dBTable0, "Za\"_;u;3I`YE.bZbI", true, stringArray0);
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex("paoxjnn", true, dBUniqueConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint2, stringBuilder0);
      SQLUtil.renderColumnListWithTableName("paoxjnn", stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("$2(=Gz\u0004dK4");
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns (Hzjoc{$d}[Boz@Kr?*\")
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.join("{Y#@XwS7l", "", stringArray1, "{Y#@XwS7l", "{Y#@XwS7l", stringArray0);
      assertEquals("{Y#@XwS7l join {Y#@XwS7l as {Y#@XwS7l on ", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      String[] stringArray0 = new String[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = SQLUtil.leftJoin((String) null, stringArray0, " REFERENCES ", " REFERENCES ", (String[]) null);
      assertEquals("left join  REFERENCES  as  REFERENCES  on ", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("create materialized view");
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema create materialized view", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.7786655906578275
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "yMG~7-$9}Y5h";
      SQLUtil.normalize("yMG~7-$9}Y5h", false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("CurrentOfResultSet\n", true, "CurrentOfResultSet\n", "CurrentOfResultSet\n");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT CurrentOfResultSet\n ", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "E*x.(\",3:+5cS";
      stringArray0[2] = "(s;SY}iS[r]X4s=~6";
      stringArray0[3] = "E*x.(\",3:+5cS";
      stringArray0[4] = "(s;SY}iS[r]X4s=~6";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("(s;SY}iS[r]X4s=~6", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("(s;SY}iS[r]X4s=~6");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("(s;SY}iS[r]X4s=~6CONSTRAINT (s;SY}iS[r]X4s=~6 ", stringBuilder0.toString());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("create table");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("$x'e", stringArray0, ":CHnw;l6%F]CZ", "truncate$x'eoy5'&6\"o", stringArray0);
      assertEquals(":CHnw;l6%F]CZ as truncate$x'eoy5'&6\"o on ", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "inner";
      stringArray0[1] = "inner";
      stringArray0[2] = "inner";
      stringArray0[3] = "inner";
      stringArray0[4] = "inner";
      stringArray0[5] = "inner";
      stringArray0[6] = "=ujj";
      stringArray0[7] = "inner";
      stringArray0[8] = "inner";
      String[] stringArray1 = new String[8];
      stringArray1[1] = "inner";
      stringArray1[2] = "inner";
      stringArray1[3] = "=ujj";
      stringArray1[4] = "inner";
      stringArray1[5] = "inner";
      stringArray1[6] = "inner";
      stringArray1[7] = "inner";
      // Undeclared exception!
      try { 
        SQLUtil.join("inner", "inner", stringArray0, "inner", "inner", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[20];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBUniqueConstraint0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-3664), "update");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DBSchema dBSchema0 = new DBSchema("sekectq");
      dBSchema0.getTable("gZPX`\"<K(i1?:3kU");
      Integer.valueOf((-3664));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("gZPX`\"<K(i1?:3kU", (DBTable) null, dBDataType0);
      StringBuilder stringBuilder0 = new StringBuilder("sekectq");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("sekectqUPDATE", stringBuilder0.toString());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = "s+lect intosekecD7tq";
      boolean boolean0 = true;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s+lect intosekecD7tq", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = stringBuilder1.reverse();
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-1916568788), (CharSequence) stringBuilder2, (-1916568788), 322);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset -1916568788
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(1201, "rename");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rename", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumn(dBColumnArray0[0]);
      assertEquals("rename RENAME NULL", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "/*");
      SQLUtil.addOptionalCondition("/*", stringBuilder0);
      assertEquals("/* or /*", stringBuilder0.toString());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "1");
      SQLUtil.addRequiredCondition("1", stringBuilder0);
      assertEquals("1 and 1", stringBuilder0.toString());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("alter table", stringBuilder0);
      assertEquals("alter table", stringBuilder0.toString());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("create materialized viewexecuteiticyum]j5");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("1C>slk->O");
      assertNull(boolean0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectater table");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter materialized view");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessionupdatetruncation of large objects is only implemented in 8.3 and later servers.");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.9287964732655708
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = SQLUtil.normalize("$+He? 6/zrN*-", true);
      assertEquals("$ + He ? 6 / zrN * -", string0);
      
      boolean boolean0 = SQLUtil.isDML("$+He? 6/zrN*-");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$+He? 6/zrN*-";
      stringArray0[1] = "$+He? 6/zrN*-";
      String string1 = SQLUtil.renderColumnListWithTableName("$+He? 6/zrN*-", stringArray0);
      assertEquals("$+He? 6/zrN*-.$+He? 6/zrN*-, $+He? 6/zrN*-.$+He? 6/zrN*-", string1);
      
      DBSchema dBSchema0 = new DBSchema("$+He? 6/zrN*-");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "into", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string2 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ($+He? 6/zrN*-, $+He? 6/zrN*-)", string2);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[0];
      VersionNumber.valueOf("alter tabledrop index");
      DBSchema dBSchema0 = new DBSchema("drop materialized viewj(w#g[ozc2_1m;");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("RRFT[?Rv@]5D(", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter tabledrop index", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("alter tabledrop index", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String string0 = SQLUtil.renderQuery(dBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM RRFT[?Rv@]5D( WHERE ", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[10];
      String string0 = "insert";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("&lg");
      defaultDBTable0.setName("&lg");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("create unique indexsetnstring(string, string)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"string\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(13, "+W+K6/*");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("+W+K6/*", (DBTable) null, dBDataType0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "+W+K6/*");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("+W+K6/*+W+K6/*(0)", stringBuilder0.toString());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = "UHC";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("UHC");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("UHC", defaultDBTable0, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("alter table", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String[] stringArray0 = new String[10];
      String string0 = SQLUtil.join("*&}XI'uz[[6(Qd", "*&}XI'uz[[6(Qd", stringArray0, "2nV'=McI0gF%nP", "*&}XI'uz[[6(Qd", stringArray0);
      assertEquals("*&}XI'uz[[6(Qd join 2nV'=McI0gF%nP as *&}XI'uz[[6(Qd on *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null and *&}XI'uz[[6(Qd.null = *&}XI'uz[[6(Qd.null", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join("call!wuam%ri=8,0)[ wam", ")cf[\"8S\"^=czLQV", stringArray0, "call!wuam%ri=8,0)[ wam", "call!wuam%ri=8,0)[ wam", stringArray0);
      assertEquals("call!wuam%ri=8,0)[ wam join call!wuam%ri=8,0)[ wam as call!wuam%ri=8,0)[ wam on )cf[\"8S\"^=czLQV.null = call!wuam%ri=8,0)[ wam.null and )cf[\"8S\"^=czLQV.null = call!wuam%ri=8,0)[ wam.null and )cf[\"8S\"^=czLQV.null = call!wuam%ri=8,0)[ wam.null and )cf[\"8S\"^=czLQV.null = call!wuam%ri=8,0)[ wam.null and )cf[\"8S\"^=czLQV.null = call!wuam%ri=8,0)[ wam.null and )cf[\"8S\"^=czLQV.null = call!wuam%ri=8,0)[ wam.null and )cf[\"8S\"^=czLQV.null = call!wuam%ri=8,0)[ wam.null", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("Y5wnuqQlJ:<__xLX", "Y5wnuqQlJ:<__xLX", stringArray0, "alter session", "alter session", stringArray0);
      assertEquals("Y5wnuqQlJ:<__xLX join alter session as alter session on ", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[20];
      String string0 = SQLUtil.join("LIKE ", "LIKE ", stringArray0, "LIKE ", "jz=d@e9|`>B2y>", stringArray0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join((String) null, "FOREIGN KEY ", stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("null as null on FOREIGN KEY .null = null.null and FOREIGN KEY .null = null.null and FOREIGN KEY .null = null.null and FOREIGN KEY .null = null.null and FOREIGN KEY .null = null.null and FOREIGN KEY .null = null.null and FOREIGN KEY .null = null.null", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin((String) null, stringArray0, " REFERENCES ", (String) null, stringArray0);
      assertEquals("left join  REFERENCES  as null on ", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("alter table", stringBuilder0);
      assertEquals("alter table", stringBuilder0.toString());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("$+He? 6/zrN*-", (String[]) null, "$+He? 6/zrN*-", "$+He? 6/zrN*-", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[10];
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[20];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.7598407318671061
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      SQLUtil.normalize("$+He? 6/zrN*-", true);
      DBUniqueConstraint dBUniqueConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("kW#0$bqTTmd~dc-y", (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[20];
      SQLUtil.join("LIKE ", "LIKE ", stringArray0, "LIKE ", "LIKE ", stringArray0);
      TableContainer tableContainer0 = new TableContainer("G AHQmDbG|W=DEIK");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("G AHQmDbG|W=DEIK", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "G AHQmDbG|W=DEIK");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Character character0 = new Character('3');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'3'", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      SQLUtil.renderValue(stringBuffer0);
      DBCatalog dBCatalog0 = new DBCatalog();
      assertEquals("catalog", dBCatalog0.getObjectType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("slavepremode", "slavepremode", "slavepremode");
      assertEquals("'slavepremode'", string0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("create materialized view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("LKQz_");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("deletetrunatin of large objects is only implemented in 8.3 ad later ervers.");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("call");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materialized view");
      assertTrue(boolean0);
  }
}
