/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 21:57:08 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm1);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      arrayList1.removeIf(predicate2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.setAlternativeVariable(rawVariable2);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, (Variable) null);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.add(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList3 = RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable4);
      assertTrue(arrayList3.isEmpty());
      
      derivedVariable1.getValueLabels();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.questionNumber = "";
      rawVariable0.setLabel("");
      rawVariable0.isNewRecord();
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      arrayList0.removeIf(predicate0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(1);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      arrayList0.add(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.setIsNewRecord(true);
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("s#5\"cdbZh6.[($");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocument(supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2063));
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      User user0 = null;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      predicate0.test(valueLabel0);
      arrayList0.removeIf(predicate0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      int int0 = (-916);
      derivedVariable1.setIdentifier((-916));
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      arrayList0.add(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=4.210123790842242
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("LI{~I\"");
      rawVariable0.setAlias("LI{~I\"");
      rawVariable0.getNotes();
      rawVariable0.getDisplayName();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setFirstName("");
      derivedVariable0.setIdentifier(1145);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      user1.setCity("");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      derivedVariable0.clone();
      assertEquals(1145, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      User user0 = null;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      arrayList0.removeIf(predicate0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.995412454458509
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      User user0 = null;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      arrayList0.removeIf(predicate0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.630821318732888
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setLastName("0-T4=x<D`|h}fL/.Q_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("D");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getQuestionNumber();
      rawVariable1.hasSameDisplayName(rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList1);
      assertEquals("D", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("H^T$5U:Rr");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("5E*(f");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setForm("variable.name.label");
      derivedVariable0.setForm("UNABLE_TO_CHECK_CATEGORY_DUPLICATE");
      derivedVariable0.questionNumber = "92wYp\"$@i.7";
      derivedVariable0.setIdentifier(4);
      derivedVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(3388L);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getIdentifier();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals(4, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ontologyTerm0.setIdentifier(2341);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8257110036816973
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      User user0 = new User("T$t;a}>THn8Kn2", "92wYp\"$@i.7");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setQuestionNumber((String) null);
      derivedVariable0.clone();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      User user0 = new User("92wYp\"$@i.7", "92wYp\"$@i.7");
      user0.setStatus("1-VifakIui[(aG");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("92wYp\"$@i.7");
      derivedVariable0.setLabel("92wYp\"$@i.7");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList2.add(2852, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable1.setCleaningDescription((String) null);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      User user0 = new User("%", (String) null);
      user0.setFirstName((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setLabel("Y");
      rawVariable0.setName("b\"^6&MT4FDAS$.4!");
      User user0 = new User();
      user0.setAddressLine1((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      rawVariable0.setName("Y");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.507657014263189
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setLabel("Y");
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = null;
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getAvailability();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      String string0 = rawVariable0.getCodeBookNumber();
      assertNull(string0);
      
      rawVariable0.getCleaningStatus();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      User user0 = new User("T$t;a}>THn8Kn2", "92wYp\"$@i.7");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getAvailability();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.isCleaned();
      assertTrue(rawVariable0.isCleaned());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      derivedVariable0.removeSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1547));
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ontologyTerm0.setIdentifier(1009);
      arrayList0.add(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.9303375694486506
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      rawVariable0.setQuestionNumber("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL");
      rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(110);
      valueLabel0.setLabel("bd;K9u+(aZ%2");
      valueLabel0.clone();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.clone();
      rawVariable0.getAvailability();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAvailability("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-1885));
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getIdentifier();
      rawVariable0.getCleaningDescription();
      derivedVariable0.getAvailability();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCodeBookNumber();
      Variable.validateFields(derivedVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL", rawVariable0.getQuestionNumber());
      
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.630117871843128
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("T^pbnUk`.9T");
      derivedVariable0.setForm("{");
      derivedVariable0.getCategory();
      derivedVariable0.getLabel();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getQuestionNumber();
      User user0 = new User("supportingDocument.documentCode.label", "{");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getQuestionNumber();
      assertEquals("{", derivedVariable0.getForm());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.756209745568653
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.form = "UNABLE_TO_GET_ORIGINAL_VALUE_LABEL";
      derivedVariable1.setIsNewRecord(false);
      derivedVariable1.setAvailability("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getDisplayItemIdentifier();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList1);
      User.checkValidUserIDField("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL");
      derivedVariable1.setIsNewRecord(false);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getIdentifier();
      derivedVariable0.clone();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertEquals("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL", derivedVariable1.getForm());
      
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getColumnStart();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getColumnStart();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.8280722787702453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.stream();
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.form = null;
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      derivedVariable0.removeSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(2590);
      supportingDocument0.setDocumentCode("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.setCleaningDescription((String) null);
      String string0 = derivedVariable0.getForm();
      assertNull(string0);
      
      System.setCurrentTimeMillis(0L);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      String string1 = derivedVariable0.getLabel();
      assertNotNull(string1);
      
      rawVariable0.getQuestionNumber();
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus("o`7\"NNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("D");
      derivedVariable0.setQuestionNumber("o`7\"NNv99idk.p!i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("o`7\"NNv99idk.p!i", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      derivedVariable0.addSourceVariable(rawVariable0);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("Y");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("DUPLICATE_ONTOLOGY_TERM");
      ontologyTerm0.setDescription("qHIUcfW");
      User user1 = new User("qHIUcfW", "DUPLICATE_ONTOLOGY_TERM");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("INVALID_SUPPORTING_DOCUMENT");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.710401248597012
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable0.setCleaningDescription("E0l");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getColumnEnd();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.getAlternativeVariable();
      derivedVariable2.cloneAttributes(derivedVariable0);
      User user0 = new User((String) null, "s,I:}");
      // Undeclared exception!
      try { 
        User.validateFields(user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      rawVariable0.getCodeBookNumber();
      boolean boolean0 = rawVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList2);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.8972603737881384
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.setName((String) null);
      int int0 = (-1982292595);
      supportingDocument0.setIdentifier((-1982292595));
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setQuestionNumber((String) null);
      derivedVariable0.setCleaningStatus((String) null);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      arrayList0.spliterator();
      derivedVariable0.getAvailability();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.addSupportingDocuments(arrayList1);
      rawVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.cloneAttributes(rawVariable1);
      rawVariable1.clone();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable1.getCleaningStatus();
      derivedVariable0.getOntologyTerms();
      rawVariable1.createVariableSummary();
      rawVariable1.getColumnStart();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel0);
      derivedVariable0.addSourceVariable(rawVariable1);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("Y");
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getName();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.6727906724532096
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setQuestionNumber("ariabl.columnEnd.label");
      ontologyTerm0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.setName("T=R[tmk");
      User user0 = new User("B(BLHG?!JgC&'iDp4", "B[e<V/fZ");
      rawVariable0.setNotes("M#*`gH`@>V#2+VF");
      user0.setPhone("B(BLHG?!JgC&'iDp4");
      user0.setAffiliation("user.addressLine2.saveChanges");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable0.getName();
      rawVariable0.getQuestionNumber();
      rawVariable0.getOntologyTerms();
      assertEquals("M#*`gH`@>V#2+VF", rawVariable0.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.getNotes();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.825162256654077
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setAlias("O_YI");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.isCoded();
      User user0 = new User("OB=", "OB=");
      user0.setAddressLine1("OB=");
      user0.setStatus("OB=");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User.detectFieldChanges(user0, user0, user0);
      ontologyTerm1.setNewRecord(false);
      ontologyTerm1.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      ontologyTerm0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getQuestionNumber();
      System.setCurrentTimeMillis(2854L);
      derivedVariable1.setIsNewRecord(false);
      derivedVariable0.getAlias();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.860446514917979
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "]tfs}#K";
      rawVariable0.setIdentifier(1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("-Ktv0TA|$");
      ontologyTerm0.setIdentifier(2137);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.isNewRecord();
      rawVariable0.getForm();
      rawVariable0.getAlias();
      rawVariable0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.notes = "-Ktv0TA|$";
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      assertEquals("1", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "xLv@f1e493+iXf";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("OpY");
      ontologyTerm0.setIdentifier((-1654));
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getCodeBookNumber();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("s#9!CHYRI(P].");
      derivedVariable0.createVariableSummary();
      assertEquals("s#9!CHYRI(P].", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.16009945663519
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("Y");
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      rawVariable0.setCleaningDescription("Y");
      user0.setAffiliation("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      rawVariable0.columnStart = "(hLTPimJb.";
      ontologyTerm0.setDescription("qHIUcfW");
      User user1 = new User("qHIUcfW", "DUPLICATE_ONTOLOGY_TERM");
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      rawVariable2.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable2.setCoded(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable2, rawVariable0);
      derivedVariable0.setCoded(true);
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable3);
      derivedVariable0.getColumnStart();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus("o`7\"NNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("o`7\"NNv99idk.p!i");
      derivedVariable0.setLabel("D");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(2852, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.582567877087128
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("~LZ?9=;");
      rawVariable0.getCleaningStatus();
      rawVariable0.getColumnEnd();
      rawVariable0.getColumnEnd();
      rawVariable0.isCleaned();
      rawVariable0.getColumnStart();
      rawVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.setLabel("variable.year.label");
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable1.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList2);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.getLabel();
      derivedVariable1.getColumnEnd();
      derivedVariable0.getOntologyTerms();
      rawVariable0.getOntologyTerms();
      derivedVariable1.isNewRecord();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("variable.year.label", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("Kw xesfC");
      rawVariable0.getYear();
      User user0 = new User("Kw xesfC", "UNABLE_TO_DELETE_CATEGORY");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("Kw xesfC", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus("o`7\"NNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCoded(true);
      derivedVariable0.setLabel("D");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(2852, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.questionNumber = "SNI868=(U@0-yi<vW>j";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "EV8by:dC";
      derivedVariable0.codeBookNumber = "EV8by:dC";
      derivedVariable0.setCategory("EV8by:dC");
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setFilePath("b%");
      arrayList0.add(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      assertEquals("b%", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.codeBookNumber = "variable.isCoded.label";
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus("o`7\"NNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("D");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(2852, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      String string0 = "<n(";
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus("o`7\"NNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      rawVariable0.columnEnd = "%";
      derivedVariable0.setLabel("D");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6306398469971106
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setName("user.status.unverified");
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("user.status.unverified", rawVariable2.getName());
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      rawVariable0.codeBookNumber = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      String string0 = rawVariable0.getQuestionNumber();
      assertNotNull(string0);
      
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.columnStart = "WeJf|9hbdfM>%@kH";
      rawVariable0.getColumnStart();
      rawVariable0.getDisplayItemIdentifier();
      User user0 = new User((String) null, "Gl!23D <Ccnb(HTV");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.866583408992525
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setName("OpY");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("DUPLICATE_ONTOLOGY_TERM");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      try { 
        User.checkValidUserIDField("&YyUy#aq%h#R\"&w'");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"&YyUy#aq%h#R\"&w'\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.columnEnd = null;
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.setForm((String) null);
      String string0 = rawVariable0.getQuestionNumber();
      assertNotNull(string0);
      
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnEnd("user.status.label");
      arrayList0.add(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      assertEquals("user.status.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.columnEnd = "-=GV\"grjGndZf";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "zI";
      derivedVariable0.getCategory();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("zI", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getForm());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.438556626225264
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      rawVariable2.columnEnd = "DUPLICATE_ONTOLOGY_TERM";
      ontologyTerm0.setDescription("qHIUcfW");
      User user1 = new User("qHIUcfW", "DUPLICATE_ONTOLOGY_TERM");
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      rawVariable2.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList1.add((-1610612734), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1610612734, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("#+");
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("#+", rawVariable0.getCodeBookNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "[!";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setName((String) null);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("Y");
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable2.getSupportingDocuments();
      supportingDocument0.setDocumentCode("DUPLICATE_ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable3 = new RawVariable();
      supportingDocument0.setDocumentCode("^[w-+&*]+(?:.[w-_+&*]+)*@(?:[w-]+.)+[a-zA-Z]{2,7}$");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable2.setName("C+Q<Xcc)|");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(rawVariable2);
      rawVariable0.getAvailability();
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("z$wD");
      assertEquals("z$wD", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      rawVariable0.getNotes();
      rawVariable0.getName();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "fU-`";
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add((Object) valueLabel0);
      valueLabel0.setLabel("Y");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      Comparator<ValueLabel> comparator0 = (Comparator<ValueLabel>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.containsAll(arrayList1);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.isNewRecord();
      rawVariable0.getValueLabels();
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.columnStart = "$'y9m|aVi}MH";
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setQuestionNumber("nL5JLIu_l<(GSSZ");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getName();
      assertEquals("nL5JLIu_l<(GSSZ", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnStart = "user.county.label";
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.setForm("78S");
      arrayList0.add(ontologyTerm0);
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable1.getColumnStart();
      assertEquals("78S", rawVariable1.getForm());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.getLabel();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      String string0 = "9HY[Y7BW%I$,^`8[";
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "9HY[Y7BW%I$,^`8[");
      Predicate.isEqual((Object) null);
      arrayList0.removeIf(predicate0);
      UnaryOperator.identity();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList1);
      int int0 = (-988);
      // Undeclared exception!
      try { 
        arrayList0.listIterator((-988));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -988
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = null;
      User user0 = new User("~|Tj-]jZy;r", "M)\"5%l9]}e<KF");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      derivedVariable1.form = "~R5SPPjg3_=n]FZQ[IA";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setForm((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = null;
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setName("Y");
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("LYMz0-Vc#@<Re^3& sc");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        arrayList0.add(2852, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.3831253810845707
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setName("W/NmQ<z$F");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setAvailability("W/NmQ<z$F");
      String string0 = "%ItgPlKA4I/OH";
      rawVariable0.setAlias("%ItgPlKA4I/OH");
      rawVariable0.setAlias((String) null);
      rawVariable0.getQuestionNumber();
      rawVariable0.setName("");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.535370920690678
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("'fH4km)fMy~C%a", "T$t;a}>THn8Kn2");
      User.checkValidUserIDField("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("Iz?P*p[n~D7aL{2Y");
      rawVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("DF");
      rawVariable0.getColumnEnd();
      assertEquals("DF", rawVariable0.getForm());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("i");
      derivedVariable0.setCleaningDescription("i");
      derivedVariable0.getYear();
      assertEquals("i", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      User user0 = null;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      arrayList0.removeIf(predicate0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      rawVariable0.setName("Y");
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      derivedVariable0.questionNumber = "C=v={`t\"GE2\"o.-}86>";
      derivedVariable0.setForm("Dm64Z#ky]B#");
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setQuestionNumber("r:XXCy~ca5|hPKz+x1");
      User user0 = new User("r:XXCy~ca5|hPKz+x1", "r:XXCy~ca5|hPKz+x1");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      user0.setPassword("r:XXCy~ca5|hPKz+x1");
      arrayList1.forEach(consumer0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getYear();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("r:XXCy~ca5|hPKz+x1", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("MISSING_DISPLAY_LIST_DELETER");
      rawVariable0.codeBookNumber = "MISSING_DISPLAY_LIST_DELETER";
      rawVariable0.setColumnStart("MISSING_DISPLAY_LIST_DELETER");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getColumnStart();
      rawVariable0.getYear();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, (DerivedVariable) null, (DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.709784915777289
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus("o`7\"NNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAvailability("o`7\"NNv99idk.p!i");
      derivedVariable0.setLabel("D");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(2852, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "x>pT=%:";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      User user0 = new User();
      user0.setStatus("1k(Sd%w?9o=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "&6}!2g5w?{h2A7?2";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getNotes();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.codeBookNumber = "A=r}";
      String string0 = "s#5\"cdbZh6.[($";
      User user0 = new User("s#5\"cdbZh6.[($", ">3$kt$!<Zb:{_U*L");
      rawVariable0.getNotes();
      try { 
        User.checkValidUserIDField("bat9@n^Re0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"bat9@n^Re0\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.columnEnd = "f&";
      derivedVariable0.getOntologyTerms();
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CATEGORY";
      String string0 = rawVariable0.getQuestionNumber();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("'fH4km)fMy~C%a", "T$t;a}>THn8Kn2");
      ontologyTerm0.setNewRecord(false);
      user0.setIdentifier((-1796));
      User.checkValidUserIDField("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("*HDuGZ\"tzM]!3Bo-|/");
      rawVariable0.getForm();
      assertEquals("*HDuGZ\"tzM]!3Bo-|/", rawVariable0.getForm());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setAlias((String) null);
      rawVariable0.getLabel();
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertNull(string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "UNABLE_TO_GET_USER_IDENTIFIER";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getName());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-3168));
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.notes = "$_ty.Zj";
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("", string0);
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setFilePath("Ez'CFx8Io7& NTd");
      rawVariable0.setCodeBookNumber("nR?O$DWS&y{");
      rawVariable0.getCodeBookNumber();
      assertEquals("nR?O$DWS&y{", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "KSS}VKp,'SS";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
      
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.notes = "EDIT";
      derivedVariable0.getLabel();
      derivedVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.setNotes("92wY9Rp5$@i.7");
      User user0 = new User();
      user0.setStatus("o`7\"NJNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.add(2852, (Variable) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.setMissingValue(true);
      User user1 = null;
      Variable variable0 = null;
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      User user2 = new User("}M4&xec3X:5&", "}M4&xec3X:5&");
      ValueLabel valueLabel2 = new ValueLabel();
      // Undeclared exception!
      try { 
        ValueLabel.differencesExist(user2, (Variable) null, valueLabel0, valueLabel2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.7711556071505146
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(4772);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      User user0 = new User("NON_EXISTENT_VARIABLE_FOR_SUMMARY", "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      user0.setStatus("variable.year.label");
      derivedVariable0.setLabel("variable.year.label");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setName("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM", rawVariable0.getName());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("Y");
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      ontologyTerm0.setDescription("qHIUcfW");
      User user1 = new User("qHIUcfW", "DUPLICATE_ONTOLOGY_TERM");
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      rawVariable2.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList1.add((-1610612734), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1610612734, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.659037556219115
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("<n(", "92wYp\"$@i.7");
      user0.setStatus("o`7\"NNv99idk.p!i");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("D");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(2852, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2852, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, "UNABLE_TO_DELETE_USER");
      user0.setStatus("1k(Sd%w?9o=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      boolean boolean1 = rawVariable0.isCleaned();
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean1 == boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-728));
      derivedVariable0.getValueLabels();
      User user0 = new User();
      user0.setPhone(",A>ZNWlb8(S");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getIdentifier();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.isCoded();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      assertEquals((-728), derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "Nb_zw `E48H|Uu";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Nb_zw `E48H|Uu", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("/x!z#");
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("P]mD");
      rawVariable0.clone();
      assertEquals("P]mD", rawVariable0.getYear());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.48462116244288
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "pjAB06*END";
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "wejxbs#";
      rawVariable0.codeBookNumber = "Mo1YW;m";
      rawVariable0.notes = "Mo1YW;m";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getColumnStart());
      
      rawVariable0.columnStart = "Mo1YW;m";
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("wejxbs#", rawVariable2.getColumnEnd());
      assertEquals("", rawVariable2.getName());
      assertEquals("Mo1YW;m", rawVariable2.getNotes());
      assertEquals("", rawVariable2.getForm());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCoded());
      assertEquals("", rawVariable2.getYear());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("", rawVariable2.getAlias());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("Mo1YW;m", rawVariable2.getCodeBookNumber());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("Mo1YW;m", rawVariable2.getColumnStart());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("", rawVariable2.getLabel());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("D");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        arrayList0.add((-1840700267), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1840700267, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setName((String) null);
      derivedVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.notes = "st!4B2D";
      rawVariable0.getNotes();
      rawVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.5343183560907687
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("cI9ADNG6C");
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("Kw xesfC");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("N.'7+v+6 ceT6[g%u\"");
      derivedVariable0.questionNumber = "N.'7+v+6 ceT6[g%u\"";
      derivedVariable0.createVariableSummary();
      assertEquals("N.'7+v+6 ceT6[g%u\"", derivedVariable0.getName());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "),?Qd*WKE";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes(" type=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals(" type=", rawVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
