/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 22:31:31 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1, (String) null, (String) null, 1, 0);
      int int0 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-2146), "&3GBhKGZhJ", (-5126));
      Player player1 = new Player((-2146));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player1.isConnected();
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals((-5126), player0.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player-2146", player1.getName());
      assertFalse(boolean1 == boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(4, "wZA", "", 186, 8);
      Player player1 = new Player();
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-749), 47);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "HGSPRM!l- |>u2xfAb", "", 2190, 0);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2190, player0.getPictureId());
      assertEquals("HGSPRM!l- |>u2xfAb", player0.getIP());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2824);
      player0.setDead((-2090L));
      long long0 = player0.getTimeOfDeath();
      assertEquals((-2090L), long0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-201), (String) null, (String) null, 186);
      player0.getIP();
      long long0 = player0.getTimeOfDeath();
      assertEquals(186, player0.getPictureId());
      assertEquals(0L, long0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-7));
      player0.setY((-7));
      player0.getY();
      System.setCurrentTimeMillis(4919L);
      int int0 = player0.type();
      assertEquals((-7.0F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-3936));
      player0.pack();
      player0.pack();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte) (-49);
      byteArray0[4] = (byte) (-102);
      byteArray0[5] = (byte)43;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", (String) null, 0, 3003);
      Player player1 = new Player(382);
      player0.isJoinOK(player1, false);
      player1.getStrength();
      player0.toString();
      player1.toString();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-1133), (String) null, (-1133));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = (-1);
      Player player0 = new Player((-1), (String) null, (-1));
      player0.setMoney(1511.5188F);
      player0.isConnected();
      player0.setY((-1));
      player0.getMoney();
      player0.setMoney(1511.5188F);
      Player player1 = new Player((short)4919);
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3844894049549885
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(4919, "", (-910));
      player0.setMoney(0.0F);
      player0.isConnected();
      Player player1 = new Player(295, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (-910), (-910));
      player1.setY((-910));
      player0.getSubparty();
      player0.getMoney();
      player0.setMoney((-2191.0F));
      player0.setY((-644.41394F));
      player1.setDead(1392409296320L);
      player1.pack();
      player0.setConnected(false);
      player0.setDead();
      player0.toString();
      Player player2 = new Player(5);
      player2.getX();
      Player player3 = new Player((-1), "", 0);
      player2.setY(4919);
      player2.setX((-1068.4869F));
      player3.isJoinOK(player0, true);
      player2.getZ();
      player0.setY(1736.071F);
      player1.setDead(0L, false);
      player3.setDead();
      player2.getX();
      player3.isDead();
      player3.isJoinOK(player1, true);
      assertEquals(1392409281320L, player3.getTimeOfDeath());
      
      Player player4 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "", 5, (-309));
      player4.setX(3273.99F);
      assertEquals(3273.99F, player4.getX(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-23457), (String) null, "H@Q1k!", (-23457), (-23457));
      int int0 = player0.getStrength();
      assertEquals((-23457), int0);
      assertTrue(player0.isConnected());
      assertEquals((-23457), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.97613471996344
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(4919);
      player0.setZ((-3649.4028F));
      player0.setDead((long) 4919);
      player0.setMoney(0);
      player0.setY((-833.229F));
      player0.setZ(0.0F);
      player0.getSubparty();
      player0.setZ((-833.229F));
      player0.gangStrength();
      player0.getStrength();
      Player player1 = new Player(1);
      player1.getPictureId();
      player1.setX(0.0F);
      player1.setMoney(0.0F);
      player1.setDead((-2244L), false);
      player0.setConnected(false);
      Player player2 = new Player((short)4919, "", 31930);
      player2.setDead(1392409296320L);
      player1.setZ(0.1F);
      player2.setDead(4632L);
      player2.setMoney((-1.0F));
      player1.getZ();
      assertEquals(0.0F, player1.getX(), 0.01F);
      
      Player player3 = new Player(1, "", (short)4919);
      player3.setZ(0.0F);
      assertEquals(0.0F, player3.getZ(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.329337375063968
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player((short)4919);
      player0.setZ(0);
      player1.setZ(0.0F);
      player1.setDead((long) 0);
      player1.setMoney(0.0F);
      player0.setMoney(0.0F);
      Player player2 = new Player((-877));
      player2.setY(0.1F);
      player2.setY(0.1F);
      player1.setZ((-272.291F));
      player0.setZ(0.2F);
      player0.getSubparty();
      player1.getSubparty();
      player0.setZ((-3614.8574F));
      player2.setZ(0.2F);
      player1.gangStrength();
      player1.gangStrength();
      player0.getStrength();
      player1.getStrength();
      Player player3 = new Player(188);
      player3.getPictureId();
      player2.getPictureId();
      player0.setX(0);
      player3.setX((-4130.6F));
      player3.setMoney(0);
      player2.setMoney(0.0F);
      Player player4 = new Player(5);
      player4.setDead((-1974L), true);
      Player player5 = new Player(0, "w x", 5);
      player5.setDead((long) 0, true);
      player2.setConnected(false);
      player2.setConnected(true);
      player2.setDead(2760L);
      player4.setDead(2760L);
      player3.setZ((-1.0F));
      player2.setZ((-1.0F));
      player4.setDead((-1L));
      Player player6 = new Player(5912, "pEms?B", "pEms?B", 188, (short)4919);
      player6.setDead((long) (short)4919);
      player2.setMoney((-1421.16F));
      player6.setMoney(2465.4248F);
      player1.getZ();
      player4.getZ();
      player5.setZ(0.0F);
      player0.setZ((short)4919);
      player5.getPictureId();
      player2.getPictureId();
      player0.isConnected();
      Player player7 = new Player(5);
      player7.isConnected();
      Player player8 = new Player((-10506), "w x", " ", (-1), 5);
      player1.setJoinOK(player4, false);
      assertTrue(player4.isDead());
      assertEquals(0.0F, player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0570128495250297
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0);
      player0.setDead((-3723L));
      player0.setMoney((-3723L));
      player0.setY(0.0F);
      player0.setZ((-2241.5425F));
      player0.getSubparty();
      player0.setZ((-1.0F));
      Player player1 = new Player(0, "", 3235);
      player1.gangStrength();
      player0.getStrength();
      player0.getPictureId();
      player0.setX(0.0F);
      player1.setMoney((-2241.5425F));
      player1.setDead(0L, true);
      player1.setConnected(true);
      player1.setDead(214L);
      Player player2 = new Player(1, "", "91)bg6;UKDAE", (-19041));
      player2.setZ((-19041));
      player0.setDead(2230L);
      Player player3 = new Player((-3080), "tfq/x$UCP^m#9", (-3080));
      player3.setMoney(3235);
      player3.getZ();
      player1.setZ(0.2F);
      int int0 = player1.getPictureId();
      assertEquals(214L, player1.getTimeOfDeath());
      assertEquals(3235, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-201));
      player0.remove((Party) null);
      player0.setDead();
      Player player1 = new Player((-201), "^MUB!c%MdOrl", 5);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte)10;
      player1.unpack(byteArray0);
      player1.getY();
      player0.getName();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-678));
      Player player1 = new Player(4368, "3b7\"e-v<G", (-1826));
      player1.setConnected(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.setJoinOK(player1, false);
      player0.setX((-1826));
      player0.isJoinOK(player1, false);
      player0.pack();
      float float0 = player0.getX();
      assertEquals((-1826.0F), float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(255.9F);
      player0.gangStrength();
      player0.setDead(1392409296320L, true);
      player0.getTimeOfDeath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      player0.pack();
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1381, "module.ModuleBrowserDialog$ModuleFilter", 5);
      player0.setMoney((-1));
      player0.isConnected();
      player0.setY(4643.0864F);
      player0.getSubparty();
      player0.getMoney();
      Player player1 = new Player(3568);
      player1.setMoney(0.0F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      
      player1.setY((-1));
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1770), "", (-1770));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte) (-92);
      byteArray0[2] = (byte) (-1);
      player0.unpack(byteArray0);
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1770), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-241));
      Party party0 = new Party();
      player0.head = party0;
      System.setCurrentTimeMillis((-241));
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(2128);
      Player player1 = new Player(2128);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals("Player2128", player1.toString());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-909));
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-909", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-237), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-237), (-237));
      int int0 = player0.gangStrength();
      assertEquals((-237), int0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-237), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(56);
      player0.head = (Party) player1;
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(2, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(3, "", "", (-1));
      player0.reset(true);
      Party party0 = player0.gangBoss();
      player0.boss = party0;
      player0.setDead((long) (-1), true);
      player0.setY(610.1778F);
      party0.id = 582;
      player0.prev = party0;
      party0.remove((Party) null);
      player0.getZ();
      player0.prev = party0;
      player0.getMoney();
      player0.getStrength();
      byte[] byteArray0 = player0.pack();
      player0.setX(1899.3866F);
      player0.getName();
      player0.unpack(byteArray0);
      assertEquals(610.1778F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-3986));
      byte[] byteArray0 = player0.pack();
      player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, 4919);
      player0.getSubparty();
      System.setCurrentTimeMillis((-50L));
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4919, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-2130));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(32, pipedInputStream0.available());
      
      player0.pack();
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-2159));
      Player player1 = new Player((short)4919);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(4, "b\"/E", 195);
      Player player1 = new Player((-2146), "", 4);
      player1.setJoinOK(player0, false);
      player0.setConnected(true);
      player1.setConnected(false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[0] = (byte) (-1);
      player0.unpack(byteArray0);
      Player player2 = new Player((byte) (-1), "state.Party", (byte) (-1));
      player1.setJoinOK(player0, true);
      player1.isConnected();
      player0.pack();
      player0.pack();
      System.setCurrentTimeMillis(1392409296320L);
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player1, false);
      player0.gangStrength();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Le+)?[&=G#='Cb");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setZ(0.0F);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-2220));
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(3236);
      Player player1 = new Player();
      player0.head = (Party) player1;
      player0.pack();
      player0.remove(player1);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      float float0 = Player.MOVE_DISTANCE;
      float float1 = player1.getZ();
      assertEquals(0.0F, float1, 0.01F);
      
      player1.pack();
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("Player-1", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Player player0 = new Player(31930, "h!>v", (-1579));
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      int int0 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-1579), int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(4);
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, int0);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player4", player0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 2756;
      Player player0 = new Player(2756);
      player0.setZ(0.0F);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(3281);
      Player player1 = new Player(0);
      player0.head = (Party) player1;
      player0.setDead((long) 0, false);
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      assertFalse(player1.isDead());
      
      player0.gangStrength();
      player0.isDead();
      player1.setDead(0L);
      player0.type();
      float float0 = Player.MOVE_DISTANCE;
      boolean boolean0 = player0.isConnected();
      assertTrue(player0.isDead());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      boolean boolean0 = player1.isDead();
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(4);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player4", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-2184));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1284, "", 1284);
      player0.reset(true);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(281);
      player0.reset(false);
      player0.prev = (Party) null;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-1));
      float float0 = Player.MOVE_DISTANCE;
      Player player1 = new Player((-1), ".*[.]class$", 0);
      assertEquals(0, player1.getPictureId());
      
      float float1 = player0.getMoney();
      assertEquals(0.0F, float1, 0.01F);
      
      String string0 = player0.toString();
      assertFalse(player0.isDead());
      assertEquals("Player-1", string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = null;
      player0.setDead(1392409296320L);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
