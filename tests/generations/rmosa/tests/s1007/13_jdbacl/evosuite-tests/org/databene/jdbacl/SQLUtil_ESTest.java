/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 05:40:07 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.UnsupportedEncodingException;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.databene.commons.version.VersionNumber;
import org.databene.commons.version.VersionNumberComponent;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("rename", stringBuilder0);
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M.v[%mNls3tGC7YW");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "M.v[%mNls3tGC7YW";
      stringArray0[1] = "//";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "call(", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("<BZ9m!swh+oKFf!p-g", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0);
      PrintWriter printWriter0 = mockPrintWriter0.append('v');
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, printWriter0);
      assertSame(defaultDBTable0, dBTable0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "5p{u0ih[";
      stringArray0[1] = null;
      stringArray0[2] = "5p{u0ih[";
      stringArray0[3] = "5p{u0ih[";
      SQLUtil.join("5p{u0ih[", (String) null, stringArray0, "QaR$*Q4J/Ou[W", "M", stringArray0);
      SQLUtil.isDML("QaR$*Q4J/Ou[W");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("5p{u0ih[ join QaR$*Q4J/Ou[W as M on null.5p{u0ih[ = M.5p{u0ih[ and null.null = M.null and null.5p{u0ih[ = M.5p{u0ih[ and null.5p{u0ih[ = M.5p{u0ih[");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(stringArray0[1], false, defaultDBTable0, "truncate");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("v>0bk#x6c&y", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLUtil.addOptionalCondition("5p{u0ih[ join QaR$*Q4J/Ou[W as M on null.5p{u0ih[ = M.5p{u0ih[ and null.null = M.null and null.5p{u0ih[ = M.5p{u0ih[ and null.5p{u0ih[ = M.5p{u0ih[", stringBuilder1);
      SQLUtil.ownerDotComponent(dBCheckConstraint0);
      SQLUtil.typeAndName(defaultDBTable0);
      SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      SQLUtil.isProcedureCall("truncate");
      SQLUtil.typeAndName(dBCheckConstraint0);
      SQLUtil.normalize("PRIMARY KEY ", false);
      boolean boolean0 = false;
      File file0 = FileUtil.canonicalFile("5p{u0ih[");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(file0, "QaR$*Q4J/Ou[W");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // QaR$*Q4J/Ou[W
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("select intol00 join l0");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "select intol00 join l0";
      stringArray0[1] = "select intol00 join l0";
      stringArray0[2] = "select intol00 join l0";
      stringArray0[3] = "insert%%c<_=(z{s'e";
      stringArray0[4] = "select intol00 join l0";
      stringArray0[5] = "select intol00 join l0";
      stringArray0[6] = "select intol00 join l0";
      stringArray0[7] = "select intol00 join l0";
      String string0 = SQLUtil.innerJoin("select intol00 join l0", stringArray0, "create table", "REAL", stringArray0);
      assertEquals("create table as REAL on select intol00 join l0.select intol00 join l0 = REAL.select intol00 join l0 and select intol00 join l0.select intol00 join l0 = REAL.select intol00 join l0 and select intol00 join l0.select intol00 join l0 = REAL.select intol00 join l0 and select intol00 join l0.insert%%c<_=(z{s'e = REAL.insert%%c<_=(z{s'e and select intol00 join l0.select intol00 join l0 = REAL.select intol00 join l0 and select intol00 join l0.select intol00 join l0 = REAL.select intol00 join l0 and select intol00 join l0.select intol00 join l0 = REAL.select intol00 join l0 and select intol00 join l0.select intol00 join l0 = REAL.select intol00 join l0", string0);
      
      DBSchema dBSchema0 = new DBSchema("O1m';&\"lfLP~cN");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select intol00 join l0", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("inner", defaultDBTable0, 2781, "//");
      defaultDBColumn0.setNullable(false);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("inner // NOT NULL", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SQLUtil.normalize("/*", false);
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[0];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "mGa");
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      boolean boolean0 = SQLUtil.isQuery("");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.normalize("*/", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint((String[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns ()
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "selact into020]join l0";
      stringArray0[1] = "l[]Rg'.t";
      stringArray0[2] = "selact into020]join l0";
      stringArray0[3] = "l[]Rg'.t";
      stringArray0[4] = "l[]Rg'.t";
      stringArray0[5] = "l[]Rg'.t";
      stringArray0[6] = "l[]Rg'.t";
      stringArray0[7] = "selact into020]join l0";
      String string0 = SQLUtil.join("l[]Rg'.t", "selact into020]join l0", stringArray0, "l[]Rg'.t", "l[]Rg'.t", stringArray0);
      assertEquals("l[]Rg'.t join l[]Rg'.t as l[]Rg'.t on selact into020]join l0.selact into020]join l0 = l[]Rg'.t.selact into020]join l0 and selact into020]join l0.l[]Rg'.t = l[]Rg'.t.l[]Rg'.t and selact into020]join l0.selact into020]join l0 = l[]Rg'.t.selact into020]join l0 and selact into020]join l0.l[]Rg'.t = l[]Rg'.t.l[]Rg'.t and selact into020]join l0.l[]Rg'.t = l[]Rg'.t.l[]Rg'.t and selact into020]join l0.l[]Rg'.t = l[]Rg'.t.l[]Rg'.t and selact into020]join l0.l[]Rg'.t = l[]Rg'.t.l[]Rg'.t and selact into020]join l0.selact into020]join l0 = l[]Rg'.t.selact into020]join l0", string0);
      
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      TableContainer tableContainer0 = new TableContainer("K7SUQKR~)XICGC$9#~");
      tableContainer0.getTable("AUv3Fb_P{i\"cKEA");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("K7SUQKR~)XICGC$9#~", (DBTable) null, 2737, "K7SUQKR~)XICGC$9#~");
      columnDescriptorList0.add((Object) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
      StringBuilder stringBuilder0 = new StringBuilder("K7SUQKR~)XICGC$9#~");
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-344), 2737);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -344
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "QO";
      stringArray0[1] = "QO";
      stringArray0[2] = "DEFRAGMENT_ROWS";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("QO", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (QO, QO, DEFRAGMENT_ROWS) REFERENCES null(QO, QO, DEFRAGMENT_ROWS)", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) " l(Ef, 4wH;");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("exec", false, "exec", "exec");
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      dBCheckConstraint0.setOwner(compositeDBObject0);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      DBColumn[] dBColumnArray0 = new DBColumn[8];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn(";nne9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column ';nne9' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = "setDate(String,Date,Calendar)";
      String string1 = "/*";
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "insert3";
      stringArray0[1] = "setcharacte";
      stringArray0[2] = "setcharacte";
      stringArray0[3] = "setcharacte";
      stringArray0[4] = "setcharacte";
      stringArray0[5] = "setcharacte";
      String[] stringArray1 = new String[1];
      stringArray1[0] = null;
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("setcharacte", stringArray0, "insert3", (String) null, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "3XrP(z8&r_";
      SQLUtil.renderColumnListWithTableName("3XrP(z8&r_", stringArray0);
      SQLUtil.isDML("3XrP(z8&r_");
      SQLUtil.mutatesStructure("create materialized viewe6m (e ` f, 4 %");
      SQLUtil.normalize("setClob(int, Reader, long)", true);
      SQLUtil.isQuery("3XrP(z8&r_.3XrP(z8&r_");
      String string0 = SQLUtil.normalize("--", false);
      String string1 = SQLUtil.normalize("K", false);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "/1--mbhAw%0: p$-";
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("CALL AUTOCOMMIT()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Xc*v/>03iD6O;o5", true, stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance("NCLOB");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("*-_", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setDefaultValue("*-_");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("*-_ NCLOB DEFAULT *-_ NULL", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".";
      stringArray0[1] = ".";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Xc*v/>03iD6O;o5", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(19);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      stringBuilder1.reverse();
      StringBuilder stringBuilder2 = stringBuilder0.insert(19, 2072.9216507275);
      SQLUtil.addOptionalCondition(".", stringBuilder2);
      assertEquals(" 5o;O6Di30>/v*cX T2072.9216507275NIARTSNOC or .", stringBuilder0.toString());
      
      NameSpec nameSpec1 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec1);
      assertEquals("UNIQUE (., ., , )", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("select}hr\"=n,<ti\",8_s:xt!");
      String string0 = SQLUtil.renderValue(dBCatalog0);
      assertNull(string0);
      
      Integer integer0 = RawTransaction.COMMIT;
      Object object0 = new Object();
      Character character0 = new Character(']');
      String string1 = SQLUtil.renderValue(character0);
      assertEquals("']'", string1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("alter tableorg.hsqldb.library.now");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "alter tableorg.hsqldb.library.now";
      stringArray0[1] = "alter tableorg.hsqldb.library.now";
      stringArray0[2] = "deletealtr table";
      stringArray0[3] = "alter tableorg.hsqldb.library.now";
      stringArray0[4] = "";
      stringArray0[5] = "alter tableorg.hsqldb.library.now";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "alter tableorg.hsqldb.library.now";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter tableorg.hsqldb.library.now", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("alter tableorg.hsqldb.library.now", true, dBTable0, stringArray0, dBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("alter tableorg.hsqldb.library.now");
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals(FKChangeRule.NO_ACTION, dBForeignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("setDate(String,Date,Calendar)", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = "org.apache.derby.impl.sql.execute.InsertResultSet$MyRowAllocator";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" /* WHERE ", false, "#7Cp)Q=([zO{D{n)", "e");
      StringBuilder stringBuilder0 = new StringBuilder("0H/j,?%r");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = SQLUtil.addRequiredCondition("W|>w>cy0", stringBuilder1);
      StringBuilder stringBuilder3 = stringBuilder2.append((CharSequence) "e");
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = 'C';
      StringBuilder stringBuilder4 = stringBuilder3.insert(41, charArray0);
      StringBuilder stringBuilder5 = stringBuilder4.insert(41, true);
      // Undeclared exception!
      try { 
        stringBuilder5.insert(41, (CharSequence) "e", 41, 41);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 41, end 41, s.length() 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DBDataType.getInstance((int) (byte)18, "DATE");
      StringBuilder stringBuilder0 = new StringBuilder();
      Object object0 = new Object();
      SQLUtil.renderValue(stringBuilder0);
      DBDataType.getInstance(40, "DATE");
      Integer integer0 = RawTransaction.COMMIT;
      assertEquals(0, (int)integer0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Character character0 = Character.valueOf('z');
      columnDescriptorList0.add((Object) character0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Character cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = ">j";
      String string1 = "crate table ";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.ABORT;
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      String string2 = "^p/*";
      // Undeclared exception!
      SQLUtil.isProcedureCall("^p/*");
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop tablexb");
      DBDataType dBDataType0 = DBDataType.getInstance((-1743), "callxb");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop tablexb", defaultDBTable0, dBDataType0);
      defaultDBTable0.addColumn(defaultDBColumn0);
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "x", false, "drop tablexb");
      String string0 = SQLUtil.constraintSpec(dBNotNullConstraint0, nameSpec0);
      assertEquals("drop tablexb NOT NULL", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("mYYUGAQc(ZSOpN*a'L4");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("mYYUGAQc(ZSOpN*a'L4");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, (String) null, true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder();
      System.setCurrentTimeMillis((-1087L));
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("isc_info_sql_scale ", 95);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Character character0 = new Character('Z');
      String string0 = SQLUtil.substituteMarkers("drop materialized view", "drop materialized view", character0);
      assertEquals("'Z'", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("A4RwXl");
      StringBuilder stringBuilder0 = new StringBuilder();
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("A4RwXl", defaultDBTable0, (DBDataType) null, integer1);
      defaultDBColumn0.getForeignKeyConstraint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "yKN";
      stringArray0[1] = "yKN";
      stringArray0[2] = "yKN";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("A4RwXl", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("truncateprirs_key bit");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "I-<u%";
      stringArray0[1] = "HiSIN]8)t";
      stringArray0[2] = "j$LXYw]&'Z*t^[=b=j";
      stringArray0[3] = "I-<u%";
      stringArray0[4] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "j$LXYw]&'Z*t^[=b=j");
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      assertEquals("j$LXYw]&'Z*t^[=b=j", stringBuilder0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "INTERVAL");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = SQLUtil.normalize("1nGV'd|>M\"P9Xm92m.", false);
      assertEquals("1nGV 'd|>M\"P9Xm92m.'", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = "~*Z+cL;(d<-YX'";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select into,");
      DBDataType dBDataType0 = DBDataType.getInstance((-310), "~*Z+cL;(d<-YX'");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~*Z+cL;(d<-YX'", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.toString();
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("~*Z+cL;(d<-YX'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("e)SSCS_UTI");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("e)SSCS_UTI");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("e)SSCS_UTI", defaultDBTable0, (DBDataType) null, integer0, integer1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-67);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLUtil.parseColumnTypeAndSize(".");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".";
      stringArray0[1] = ".";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, stringArray0);
      SQLUtil.join("Qe].m", "XAResource ", stringArray0, "Qe].m", "org.h2.jdbc.JdbcBatchUpdateException", stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("XAResource ");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("x_oll24+I H");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setNClob(String, Reader)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("@k-1@aM|^GJev{902sa");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, (-1460), "");
      defaultDBColumn0.setOwner(defaultDBTable0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
      
      String string1 = SQLUtil.removeComments("");
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[6] = "'(~P+&OFXS2*ktMk/*,";
      DBDataType.getInstance(20, "2G!>LitsSK~@a");
      SQLUtil.innerJoin("y+G 3~xXJ=", stringArray0, "getDistinctScalarAggregateResultSet", "'(~P+&OFXS2*ktMk/*,", stringArray0);
      String[] stringArray1 = new String[1];
      SQLUtil.renderColumnListWithTableName("org.apache.derby.impl.sql.execute.SetTransactionIsolationConstantAction", stringArray1);
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      SQLUtil.isProcedureCall("");
      SQLUtil.isDML("org.apache.derby.impl.sql.execute.SetTransactionIsolationConstantAction.null");
      SQLUtil.isProcedureCall("2G!>LitsSK~@a");
      // Undeclared exception!
      SQLUtil.mutatesStructure(".null, .null, .null, .null, .null, .null, .'(~P+&OFXS2*ktMk/*,, .null, .null, .null");
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("{N-{8Cba9VD");
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte)83;
      byteArray0[4] = (byte) (-13);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((byte)127);
      Object object0 = new Object();
      Object object1 = new Object();
      SQLUtil.renderValue((Object) null);
      DBDataType.getInstance((int) (byte) (-13), ",");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, false, dBPrimaryKeyConstraint0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = null;
      stringArray1[1] = "hl~;;ww";
      stringArray1[2] = ",";
      stringArray1[3] = "hl~;;ww";
      stringArray1[4] = "hl~;;ww";
      stringArray1[5] = ",";
      stringArray1[6] = "null";
      stringArray1[7] = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(")j*I\"tR", false, "...", "j");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT )j*I\"tR ", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#r3 A3t,");
      DBDataType dBDataType0 = DBDataType.getInstance(111, "o?U_KaP]rhy{^yg.Z");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("#r3 A3t,", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("O?U_KAP]RHY{^YG.Z", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[12];
      String string0 = SQLUtil.renderColumnListWithTableName("executeselect intol00 join l0", stringArray0);
      assertEquals("executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null, executeselect intol00 join l0.null", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("executeselect intol00 join l0");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(1521, "Z");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Z", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("Z Z NULL", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = ";-_x@k(/4yZVlZ";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "drop materialized viewhlter tableorg.hsq6db.lib/ary_now";
      stringArray0[1] = ";-_x@k(/4yZVlZ";
      DBSchema dBSchema0 = new DBSchema("drop materialized viewhlter tableorg.hsq6db.lib/ary_now");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("drop materialized viewhlter tableorg.hsq6db.lib/ary_now", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(";-_x@k(/4yZVlZ", true, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = stringBuilder1.append(0L);
      // Undeclared exception!
      try { 
        stringBuilder2.deleteCharAt((-1628145566));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1628145566
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.931892448497769
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = SQLUtil.normalize("ZYkntj/-Qv#J", false);
      assertEquals("ZYkntj / - Qv # J", string0);
      
      boolean boolean0 = SQLUtil.isDDL("O");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(",");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "O";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("select into", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"select into\" FOREIGN KEY (O) REFERENCES ,(O)", string1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Pb@Sj[");
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("insertuam-4p0 mlf");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SQLUtil.substituteMarkers("", "KZnbq!LK", "");
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("KZnbq!LK", false, " = ", "S1\";5D|5!?&6yI}CS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select intol010 join l0");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[8];
      String[] stringArray1 = new String[5];
      stringArray1[0] = null;
      stringArray1[1] = null;
      stringArray1[2] = "C#GIv@&Lkly5";
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "C#GIv@&Lkly5", stringArray0, "Unable to create SAXResult for SQLXML.", "C#GIv@&Lkly5", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("eecjammy");
      SQLUtil.addRequiredCondition("eecjammy", stringBuilder0);
      assertEquals("eecjammy and eecjammy", stringBuilder0.toString());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("alter materialized viewdefpaul|");
      SQLUtil.addOptionalCondition("alter materialized viewdefpaul|", stringBuilder0);
      assertEquals("alter materialized viewdefpaul| or alter materialized viewdefpaul|", stringBuilder0.toString());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(90, "alter&ablorg.hsqdb.lib2ary.now");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter&ablorg.hsqdb.lib2ary.now", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[12];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "setNClob(String, Reader)");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setNClob(String, Reader)", false, "setNClob(String, Reader)", "setNClob(String, Reader)");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("setNClob(String, Reader)CONSTRAINT \"setNClob(String, Reader)\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "alter indexx4v:)0l`]v\"im+mes";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "alter indexx4v:)0l`]v\"im+mes", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " with ", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = SQLUtil.normalize("ae$VT>lA*;M>^s", false);
      assertEquals("ae $ VT > lA * ; M > ^ s ", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter tableorg.hsqldb.library.now");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("callxhy%fg");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      SQLUtil.normalize("", false);
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      assertNull(defaultDBTable1.getName());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("v^Om8.Nbcfn");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "select intoh)i9a61si.", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("create unique index", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      dBUniqueConstraint0.addColumnName("select intoh)i9a61si.");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", dBTable0, (DBDataType) null, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-340759617), "select intol010 join l0");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select intol010 join l0", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("select intol010 join l0", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog("create materialized viewexecute.f, execute.execute, execute.f, execute.f, execute.xj}, execute.unique , execute.f", (Database) null);
      dBCatalog0.getSchema("jamm");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("dZH@eX;$X", (DBSchema) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("Unknown constraint type: ", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("4>Z9R", stringBuilder0);
      assertEquals("4>Z9R", stringBuilder0.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(259, "alter&ablorg.hsqdb.lib2ary.now");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter&ablorg.hsqdb.lib2ary.now", defaultDBTable0, dBDataType0);
      defaultDBColumn0.toString();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("alter&ablorg.hsqdb.lib2ary.now : ALTER&ABLORG.HSQDB.LIB2ARY.NOW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.7598407318671061
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SQLUtil.normalize("ZYkntj/-Qv#J", false);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("alter tableorg.hsqldb.lirary.now", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter tableorg.hsqldb.lirary.now", dBSchema0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "alter tableorg.hsqldb.lirary.now";
      stringArray0[1] = "alter tableorg.hsqldb.lirary.now";
      stringArray0[2] = "alter tableorg.hsqldb.lirary.now";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "BLOB", object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("create table", "alterttableorg.hsql", "alterttableorg.hsql");
      assertEquals("create table", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = "X0X0E.S";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("alterttable", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(5);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      int int0 = 443;
      // Undeclared exception!
      try { 
        stringBuilder0.delete((-2), 5);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")Ha1Xzm9~>MQ";
      stringArray0[1] = ")Ha1Xzm9~>MQ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ")Ha1Xzm9~>MQ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE ()Ha1Xzm9~>MQ, )Ha1Xzm9~>MQ)", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(" 6M(E`f,4%HP");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format:  6M(E`f,4%HP
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      String[] stringArray1 = new String[1];
      stringArray1[0] = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, stringArray0, (String) null, (String) null, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[1];
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray1 = new String[1];
      String string0 = SQLUtil.join("select intol010 join l0", "select intol010 join l0", stringArray0, "select intol010 join l0", "select intol010 join l0", stringArray1);
      assertEquals("select intol010 join l0 join select intol010 join l0 as select intol010 join l0 on select intol010 join l0.null = select intol010 join l0.null", string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, (String[]) null, ".$E4xr1]'/0qn^", ".$E4xr1]'/0qn^", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("#o/I!R^/", stringArray0, "x67&AB+<zT", (String) null, stringArray0);
      assertEquals("left join x67&AB+<zT as null on ", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.parseColumnTypeAndSize("selectdrop table");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Boolean boolean0 = Boolean.TRUE;
      Vector<VersionNumberComponent> vector0 = new Vector<VersionNumberComponent>();
      StringBuilder stringBuilder1 = stringBuilder0.append("\"CI_T2C");
      DBSchema dBSchema0 = new DBSchema("M&Ot", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M&Ot", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-1445694212), "\"CI_T2C");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("M&Ot", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("\"CI_T2C\"CI_T2C(3,1)", stringBuilder1.toString());
      assertEquals("\"CI_T2C\"CI_T2C(3,1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType dBDataType0 = DBDataType.getInstance("DATE");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("DATE", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.toString();
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("DATE : DATE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("nfC|", "C*##,w", (String[]) null, "nfC|", "callnull", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join((String) null, "8_4dz}#fXZl).", stringArray0, (String) null, "8_4dz}#fXZl).", stringArray0);
      assertEquals("null as 8_4dz}#fXZl). on ", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("!*qs.a@`2J[ ~", stringArray0, "OB", "OB", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = " NULL";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" NULL", (DBSchema) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("P|_EmA(?F~js[%Z i", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      stringBuilder1.append(true);
      StringBuilder stringBuilder2 = new StringBuilder(1);
      // Undeclared exception!
      try { 
        stringBuilder2.insert(1, (double) 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = SQLUtil.normalize("alter tableorg.hsqldb.library.now", false);
      assertEquals("alter tableorg.hsqldb.library.now", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = SQLUtil.normalize("mtBHBZV+\"qmU", false);
      assertEquals("mtBHBZV + \"qmU\"", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML(" DEFAULT ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL(" DEFAULT? ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("ae$VsT>lA*;M>^s");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("c}-z>4>");
      assertNull(boolean0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into^yjfy+");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create unique indexcy@2-s.null, cy@2-s.b+!t6d@gi~[lm[ne, cy@2-s.b+!t6d@gi~[lm[ne, cy@2-s.create materialized viewe6m(e`f,4%hp~, cy@2-s.b+!t6d@gi~[lm[ne");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter session");
      DBSchema dBSchema0 = new DBSchema("T3q@Olp/=og2lD{Z");
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("T3q@Olp/=og2lD{Z", "T3q@Olp/=og2lD{Z", versionNumber0);
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable("'3/0d({)>\"3,Nd5#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table ''3/0d({)>\"3,Nd5#'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("resultSetType", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      SQLUtil.renderValue("qL>1]M7'sk3iwyR%");
      Integer integer0 = RawTransaction.COMMIT;
      DBSchema dBSchema0 = new DBSchema("qL>1]M7'sk3iwyR%");
      assertEquals("schema", dBSchema0.getObjectType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      String string0 = null;
      String string1 = "E+#tRyP9dn";
      VersionNumber versionNumber0 = VersionNumber.valueOf("E+#tRyP9dn");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("E+#tRyP9dn", "", versionNumber0);
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table ''
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }
}
