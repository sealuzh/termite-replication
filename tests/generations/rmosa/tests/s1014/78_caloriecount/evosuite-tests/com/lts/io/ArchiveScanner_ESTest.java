/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 22:30:14 GMT 2020
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.InputStream;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("FILE_EXISTS", "FILE_EXISTS");
      ImprovedFile improvedFile2 = improvedFile1.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, "i");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "@?~z=b");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "FILE_EXISTS";
      stringArray0[2] = "FILE_EXISTS";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "D$6'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[1];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      stringArray0[0] = "";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, "i");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "@?~z=b");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|HK.jar332.|HK.jar.jar";
      stringArray0[1] = "}";
      stringArray0[2] = "|HK.jar332.|HK.jar.jar";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "}";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      improvedFile0.createTempDir("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "FILE_EXISTS";
      stringArray0[2] = "FILE_EXISTS";
      stringArray0[3] = "FILE_EXISTS";
      archiveScanner0.scan();
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.processFile("FILE_EXISTS");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "FILE_EXISTS";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[2] = "|HK.jar332|Hr.jar.jar";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("FILE_EXISTS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[1] = "FILE_EXISTS";
      stringArray0[2] = "|HK.jar332|Hr.jar.jar";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processFile("child, ");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "FILE_EXISTS";
      stringArray0[2] = "FILE_EXISTS";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.haveSlowResults = true;
      archiveScanner0.scandir(improvedFile0, ".WAR", false);
      assertNotSame(improvedFile0, improvedFile1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("c|H>?<a=X2uqhn{aLO{");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "c|H>?<a=X2uqhn{aLO{";
      stringArray0[1] = "c|H>?<a=X2uqhn{aLO{";
      stringArray0[2] = "c|H>?<a=X2uqhn{aLO{";
      stringArray0[3] = "c|H>?<a=X2uqhn{aLO{";
      stringArray0[4] = "c|H>?<a=X2uqhn{aLO{";
      stringArray0[5] = "c|H>?<a=X2uqhn{aLO{";
      stringArray0[6] = "c|H>?<a=X2uqhn{aLO{";
      stringArray0[7] = "c|H>?<a=X2uqhn{aLO{";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.processDirectory(improvedFile0, "c|H>?<a=X2uqhn{aLO{", true);
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("vbQh0vbQh.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|HK.jar332.|HK.jar.jar";
      stringArray0[1] = "}";
      stringArray0[2] = "|HK.jar332.|HK.jar.jar";
      archiveScanner0.excludes = stringArray0;
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "}";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.processArchive(improvedFile0, "FILE_EXISTS");
      assertEquals(0L, improvedFile0.getUsableSpace());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("# 2.You have unsaved changes.  Save them now?.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "# 2.You have unsaved changes.  Save them now?.jar", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/# 2.You have unsaved changes.  Save them now?.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(").jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, ").jar");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, ).jar
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, ".war");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "}";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[2] = "|HK.jar332.|HK.jar.jar";
      stringArray0[3] = "|HK.jar332.|HK.jar.jar";
      stringArray0[4] = "}";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      try { 
        archiveScanner0.processArchive(improvedFile0, "}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/replication/scripts/projects/78_caloriecount/FILE_EXISTS/FILE_EXISTS
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "FILE_EXISTS";
      stringArray0[2] = "FILE_EXISTS";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.processDirectory(improvedFile0, "A^;XfH`Gh0ILED.jar", true);
      assertFalse(improvedFile0.exists());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ImprovedFile.createTempImprovedFile("_n^y+oP(", "# ", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "_n^y+oP(", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("s'Ln|=7;OIwM2fiF?", "s'Ln|=7;OIwM2fiF?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      improvedFile0.makeDirectories();
      archiveScanner0.scan();
      archiveScanner0.processFile("s'Ln|=7;OIwM2fiF?");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0913030006468518
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_ZXISTS", "FILE_ZXISTS");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_ZXISTS";
      stringArray0[1] = "FILE_ZXISTS";
      stringArray0[2] = "FILE_ZXISTS";
      stringArray0[3] = "FILE_ZXISTS";
      stringArray0[4] = "FILE_ZXISTS";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.processDirectory(improvedFile0, "", true);
      assertTrue(improvedFile0.canExecute());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_ZXISTS", "FILE_ZXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_ZXISTS";
      stringArray0[1] = "FILE_ZXISTS";
      stringArray0[2] = "FILE_ZXISTS";
      stringArray0[3] = "FILE_ZXISTS";
      stringArray0[4] = "FILE_ZXISTS";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/FILE_ZXISTS/FILE_ZXISTS
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "FILE_EXISTS";
      stringArray0[2] = "FILE_EXISTS";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      try { 
        archiveScanner0.processDirectory(improvedFile0, "/home/ubuntu/replication/scripts/projects/78_caloriecount/FILE_EXISTS/FILE_EXISTS", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/FILE_EXISTS/FILE_EXISTS
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("s'.n|=7;OIwM2fiF?", "s'.n|=7;OIwM2fiF?");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("s'.n|=7;OIwM2fiF?", "s'.n|=7;OIwM2fiF?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "s'.n|=7;OIwM2fiF?", true);
      assertTrue(improvedFile0.canExecute());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("FILE_EXISTS", "FILE_EXISTS");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "FILE_EXISTS";
      stringArray0[1] = "FILE_EXISTS";
      stringArray0[2] = "FILE_EXISTS";
      stringArray0[3] = "FILE_EXISTS";
      stringArray0[4] = "FILE_EXISTS";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "FILE_EXISTS", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("s'Ln|=7;OIwM2fiF?", "s'Ln|=7;OIwM2fiF?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      improvedFile0.makeDirectories();
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "s'Ln|=7;OIwM2fiF?", false);
      assertTrue(improvedFile0.canWrite());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("vbQh", "vbQh", (File) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }
}
