/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 15:25:03 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.net.URISyntaxException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-1129));
      Player player1 = new Player(2, "6Xg5AU?[[TA']Q#", "6Xg5AU?[[TA']Q#", 2147340453, (-3305));
      Player player2 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1140));
      player0.gangStrength();
      Player player1 = new Player();
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis((-1140));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player2 = new Player();
      player2.setJoinOK(player1, false);
      int int0 = player1.type();
      assertEquals(5, int0);
      
      System.setCurrentTimeMillis(15000L);
      boolean boolean0 = player2.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      int int1 = Packable.GAME_STATE;
      System.setCurrentTimeMillis(16658L);
      System.setCurrentTimeMillis(15000L);
      int int2 = player1.gangStrength();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, int2);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-13051));
      player0.setX((-13051));
      player0.setZ((-13051));
      player0.pack();
      Player player1 = new Player((-13051));
      player0.isJoinOK(player1, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.setJoinOK(player0, false);
      player0.pack();
      player1.type();
      player0.type();
      player1.add(player0);
      System.setCurrentTimeMillis((short)4919);
      player1.isJoinOK(player0, false);
      player0.getX();
      player0.type();
      int int0 = player0.type();
      assertEquals((-13051.0F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player(1499);
      player0.setJoinOK(player1, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals("Player1499", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(8236);
      player0.setJoinOK(player0, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "haged'N*zg8um1;id");
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player8236", player0.getName());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(760);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.getY();
      Party party0 = player0.prev;
      player0.prev = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setX(0.0F);
      Player player1 = new Player(760, "^5Cc4x", (short)4919);
      player1.remove(player0);
      Player player2 = new Player(16704, (String) null, "^5Cc4x", 16704, (short)4919);
      player0.head = (Party) player2;
      player2.head = (Party) player1;
      player1.setDead();
      player0.setY(760);
      player1.gangStrength();
      System.setCurrentTimeMillis((short)4919);
      player1.setY(0.0F);
      player0.pack();
      player1.type();
      player0.getY();
      System.setCurrentTimeMillis(15000L);
      player2.getX();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player(0, "", "", 0, 0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-28);
      player0.unpack(byteArray0);
      player0.setY((byte) (-28));
      player0.setZ(0.0F);
      player0.id = (-1366);
      boolean boolean0 = true;
      player0.reset(true);
      player0.getY();
      player0.getY();
      String string1 = "";
      Player player1 = new Player(67, "", "", (-1335), 3);
      try { 
        MockURI.URI("", "", "I[j{EI)qej", (-3006), "", "4$!", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@I[j{EI)qej:-3006?4$!#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      player0.setZ((-1012.68976F));
      player0.setX(0);
      byte[] byteArray0 = player0.pack();
      player0.getIP();
      Player player1 = new Player(1826, "Player.unpack(): *** WARNING *** data is not of proper type!", ";GhQ.X33D7ul>i~", (-1));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player1.unpack(dataInputStream0);
      player1.gangStrength();
      player0.isJoinOK(player1, true);
      player0.getY();
      player0.pack();
      player1.unpack(byteArray0);
      player1.reset(true);
      float float0 = player1.getZ();
      assertEquals((-1012.68976F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0.0F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      player0.pack();
      player0.getIP();
      Player player1 = new Player(0);
      player0.pack();
      player0.getX();
      player0.pack();
      assertEquals(0.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(12800, (String) null, (String) null, 12800);
      player0.getIP();
      String string0 = ";GhQ.X33D7ul>i~";
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(10, "eDiW;b56$BmN{7~e", "eDiW;b56$BmN{7~e", (-1210));
      player0.setZ(1.0F);
      Player player1 = new Player((-1210), "eDiW;b56$BmN{7~e", "", 3, 3502);
      player1.setDead();
      player1.toString();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3502);
      byteArrayOutputStream0.flush();
      MockFile mockFile0 = new MockFile("", "eDiW;b56$BmN{7~e");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player1.pack(dataOutputStream0);
      player0.type();
      player1.toString();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-257), ".Z}X", (String) null, 3124, (-925));
      player0.getX();
      player0.getName();
      player0.getX();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      byteArray0[3] = (byte) (-28);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("la3Xs}I>kYAaU[,rH#");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(10, "\"AOqV9)s3$v0r5RB", "\"AOqV9)s3$v0r5RB", 10);
      player0.setDead();
      Player player1 = new Player(236, "Vrt8X&i]cT4", "Vrt8X&i]cT4", (-22478), (-22478));
      player1.setZ(0);
      player0.gangStrength();
      player0.pack();
      player1.setZ((-102.6446F));
      player1.setDead();
      Player player2 = new Player(1255, "", (String) null, 0);
      player2.toString();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-22478));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -22478
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(929);
      Party party0 = new Party();
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(4, (String) null, 4);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-19968), (String) null, (String) null, (-19968), (-313));
      player0.remove((Party) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)0;
      player0.unpack(byteArray0);
      player0.head = null;
      player0.setDead(516L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.getTimeOfDeath();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2449, "Ya+xT", "Ya+xT", 0, 0);
      Party party0 = player0.gangBoss();
      party0.boss = party0;
      party0.add(player0);
      player0.setMoney(2449);
      player0.id = 0;
      player0.add(party0);
      player0.setDead(565L, true);
      Player player1 = new Player(2449);
      player1.setDead((long) 0);
      player1.remove(party0);
      party0.add(player1);
      player0.isDead();
      player0.setDead(0L);
      player0.setConnected(true);
      player0.setX(0.0F);
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
      
      boolean boolean0 = player1.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-69);
      byteArray0[7] = (byte) (-19);
      byteArray0[8] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.getIP();
      Player player1 = new Player((short)4919, "A#?6Wrv", 87);
      player1.remove(player0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      
      Player player2 = new Player((byte)0, "", " \"3XB^u3'zgS", (short)4919, 1532);
      int int1 = player2.gangStrength();
      assertEquals(1532, int1);
      assertEquals("", player2.getIP());
      
      Player player3 = new Player((-19967), "", "", 1416, 773);
      Player player4 = new Player((-19967), "", 813);
      player4.setJoinOK(player1, false);
      assertEquals(10.0F, player4.getX(), 0.01F);
      assertEquals(0.0F, player4.getY(), 0.01F);
      assertEquals("0.0.0.0", player4.getIP());
      assertTrue(player4.isConnected());
      assertEquals(1, player4.getStrength());
      assertEquals(813, player4.getPictureId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.next = party0;
      party0.prev = player0.next;
      player0.setMoney((-3713.4397F));
      player0.setConnected(false);
      player0.id = (-1531);
      player0.getStrength();
      player0.getStrength();
      player0.setMoney(0.0F);
      Player player1 = new Player((-734), "", "hr&$.Igq", (-1), (-2789));
      player1.setDead();
      player1.setDead((long) (-734), true);
      player0.setJoinOK(player1, false);
      player0.isConnected();
      player0.setDead((-86L));
      assertEquals((-86L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = (-103);
      Player player0 = new Player((-103), "b@ubfSuX", (-103));
      player0.setDead();
      player0.getPictureId();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        dataInputStream0.readLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-489));
      Player player1 = new Player((-489));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-116);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)74;
      player1.unpack(byteArray0);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("Player-489", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2356, "", "", 2356, (-554));
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-78);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (-554));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      bufferedInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.isBoss();
      player0.setY(4175.0F);
      player0.getStrength();
      player0.setDead((long) (-554), true);
      player0.getTimeOfDeath();
      player0.getTimeOfDeath();
      player0.setConnected(true);
      assertEquals(4175.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player(3, "l+:`,v~kq^e:a'", "l+:`,v~kq^e:a'", (-1), 262);
      player1.getStrength();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(1826);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = new PipedInputStream(12800);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1826", player0.getName());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(3407);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player3407", player0.toString());
      
      Player player1 = new Player(332, "H&-+2I", 3407);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(3407, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2);
      player0.setConnected(false);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-5343), "R", "", 2294, (-5343));
      player0.setDead((long) 2294);
      player0.isConnected();
      player0.setY((-5343));
      player0.setMoney(1.0F);
      player0.getName();
      player0.id = (-5343);
      player0.gangStrength();
      player0.getMoney();
      player0.setY(1.0F);
      player0.setMoney(2294);
      player0.isConnected();
      player0.setDead((-1702L));
      player0.head = null;
      player0.type();
      player0.getName();
      InputStream inputStream0 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-5343));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(1, ">\"`Ag,IP?oh8kq", ">\"`Ag,IP?oh8kq", (-21));
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player(1, ">\"`Ag,IP?oh8kq", ">\"`Ag,IP?oh8kq", (-21), (-592));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(">\"`Ag,IP?oh8kq");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player1.pack(dataOutputStream0);
      assertEquals((-592), player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals((-21), player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(8236);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1199));
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1199", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-4592), "", "", 2154, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(2154, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1285), "@'$:fo0pY,`F+|QZ7", (-1285));
      Player player1 = new Player((-1285), "@'$:fo0pY,`F+|QZ7", (-1285));
      player0.head = (Party) player1;
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-1285), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(2, int0);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(2147340491, "l", "l", 2147340491, 2147340491);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(2147340491, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2147340491, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player");
      Player player0 = new Player(2841, "Player", (-489));
      player0.toString();
      player0.getName();
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-489), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(14194);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(2239L);
      int int0 = player0.gangStrength();
      assertEquals(114, player0.getId());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(3383, "", "", 0);
      player0.getIP();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.getIP();
      player0.getIP();
      System.setCurrentTimeMillis((-1L));
      Player player1 = new Player(3383, "", "Ox1E@L|}6#kOZ/", 3383, (-17315));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(player1.isConnected());
      assertEquals((-17315), player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(3383, player1.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("", player1.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player1.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, ";4%l`t^", ";4%l`t^", 0);
      player0.getName();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(200, "HsLSQtr7:cfX", "HsLSQtr7:cfX", 2);
      Party party0 = player0.gangBoss();
      Player player1 = new Player();
      party0.next = (Party) player0;
      party0.remove(player1);
      player0.remove(party0);
      player0.setConnected(true);
      player0.setZ(200);
      player0.reset(true);
      player0.getMoney();
      player0.isDead();
      player0.isDead();
      player0.gangStrength();
      player1.setZ(1196.2908F);
      long long0 = player0.getTimeOfDeath();
      assertEquals(200.0F, player0.getZ(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-1232), "ZX", (-1232));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" ");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, (short)4919);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte) (-57);
      byteArray0[4] = (byte) (-127);
      mockFileOutputStream0.write(byteArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      assertEquals((-1232), player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(356, "", 356);
      player0.setConnected(true);
      player0.getPictureId();
      System.setCurrentTimeMillis((byte) (-113));
      System.setCurrentTimeMillis(356);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-2047));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 10;
      Player player0 = new Player((-946), "", 10);
      player0.setMoney((-946));
      player0.setY(1152.2F);
      player0.getMoney();
      player0.pack();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(4061, "gui.ModuleBrowserDialog$ModuleFilter", "", 0, 1);
      player0.setDead((long) 0);
      float float0 = Player.TOLERANCE;
      player0.setZ(1);
      player0.setDead();
      player0.isConnected();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.getTimeOfDeath();
      player0.getPictureId();
      float float1 = player0.getZ();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1.0F, float1, 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(0);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-89));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte) (-32);
      byteArray0[4] = (byte) (-17);
      byteArray0[5] = (byte)76;
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player-89", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(1877, "Q6eOtkZi", 1877);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(1877, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(356);
      int int0 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player356", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-28);
      player0.remove((Party) null);
      byteArray0[2] = (byte) (-43);
      Player player1 = new Player((byte) (-43), "", (byte) (-83));
      player0.head = (Party) player1;
      assertEquals((-83), player1.getPictureId());
      
      player0.reset(true);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(246);
      player0.setDead((long) 246, false);
      int int0 = player0.type();
      assertEquals(246L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(4, (String) null, (-1025));
      boolean boolean0 = player0.isConnected();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-1025), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-1540));
      player0.reset(true);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
