/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 15:36:30 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5917629735996164
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Uunp!5lq`%I+B[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      //  // Unstable assertion: assertEquals(6, javaCharStream0.getBeginColumn());
      //  // Unstable assertion: assertEquals("5lq", token0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.182508882687605
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte) (-103);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("<dOIgUpx@Tacq\"zO");
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)51, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.lengthOfMatch = (-1574);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(25, javaCharStream0.getBeginColumn());
      assertEquals("dOIgUpx", token0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      StringReader stringReader1 = new StringReader("v`u8zk|Qgl15ne&Xo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 40, 321, 321);
      javaCharStream0.ReInit((Reader) stringReader1, 63, 63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjnewStateCnt = 123;
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-59);
      byteArray0[6] = (byte) (-59);
      byteArray0[7] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("*6W9Z3");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals(103, token0.kind);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A&8d7l8D");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.line = (-3101);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.getColumn());
      assertEquals(1, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("stt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("stt");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("stt", token0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`?~yk");
      StringReader stringReader1 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 102, 102, 10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals(113, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1829430989272922
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u5uLNB!-t'F#M\"jr");
      StringReader stringReader1 = new StringReader("im/<oY~)*.;RR[:XU!r");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.skip(1L);
      StringReader stringReader2 = new StringReader("Error: Ignoring invalid lexical state : ");
      stringReader2.mark(32);
      char[] charArray0 = new char[4];
      charArray0[0] = 'h';
      charArray0[1] = 'e';
      charArray0[2] = 'I';
      charArray0[3] = 'h';
      stringReader0.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader0, 1, (-2022));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-2020), javaCharStream0.getColumn());
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"\t\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("# \"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("\"\t\"", token0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token$GTToken");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token$GTToken");
      stringReader1.markSupported();
      stringReader0.ready();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, (byte)47, (byte)47);
      javaCharStream1.ReInit((Reader) stringReader0, 35, 35);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*=");
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader1 = new StringReader("/Kuh9!Q{WdLl3ct");
      StringReader stringReader2 = new StringReader("-");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte) (-59);
      byteArray0[4] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("\u0514", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i^/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 6, 69);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 6, 16);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("i", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("%X[fk7_nx:s\"dGF L");
      javaCharStream0.ReInit((Reader) stringReader0, 2771, (int) (byte)47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 856, 1531, 75);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(48, javaCharStream0.getEndColumn());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^|,k`)8C1`@KO3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[2] = '\u0000';
      charArray0[5] = '\u0086';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dotble");
      StringReader stringReader1 = new StringReader("C|9DD-(ap N^_");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-471), (-1874), 2553);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1873), javaCharStream0.getColumn());
      assertEquals(106, token0.kind);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("++");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)124;
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      StringReader stringReader0 = new StringReader("_]$02^");
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-17), 450);
      javaCharStream1.ReInit((Reader) stringReader0, 5, (-1781));
      JavaCharStream javaCharStream2 = new JavaCharStream(bufferedInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(bufferedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("_", token0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("%X[fk7_nx:s\"dGF L");
      javaCharStream0.ReInit((Reader) stringReader0, 2771, (int) (byte)47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(108, token0.kind);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.skip((-1));
      StringReader stringReader0 = new StringReader("&=");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1168), 44);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(45, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("after : \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("after : \"");
      StringReader stringReader2 = new StringReader("after : \"");
      StringReader stringReader3 = new StringReader("throws");
      javaCharStream0.inputStream = (Reader) stringReader3;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("throws", token0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<=");
      StringReader stringReader1 = new StringReader("<<=");
      StringReader stringReader2 = new StringReader("<<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 122, (-2624));
      stringReader2.read();
      stringReader0.mark(1213);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("<=", token0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      StringReader stringReader0 = new StringReader("n_y|R(.l;Z|{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (byte)38, 1586);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 6, 69);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getLine());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A&8d7l8D");
      StringReader stringReader0 = new StringReader("A&8d7l8D");
      StringReader stringReader1 = new StringReader("@L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("@L");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=hR");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (byte)80, (-1267));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("P", token0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("==");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2466), 83, (byte)47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(84, javaCharStream0.getBeginColumn());
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=Iu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token$GTToken");
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 94, (-1));
      StringReader stringReader1 = new StringReader("jp:e4+>S_b7");
      javaCharStream0.ReInit((Reader) stringReader1, 111, (-387));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(sequenceInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream3);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-386), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      StringReader stringReader0 = new StringReader("J:ngm?R\"");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      StringReader stringReader1 = new StringReader("J:ngm?R\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("J", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      byteArray0[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token$GTToken");
      stringReader0.markSupported();
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = 'h';
      charArray0[2] = '=';
      charArray0[3] = 'Y';
      charArray0[4] = 'i';
      charArray0[5] = '5';
      charArray0[6] = '[';
      charArray0[7] = 'x';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 43, (byte)47);
      javaCharStream1.ReInit((Reader) stringReader0, 44, (int) (byte)47);
      javaCharStream1.ReInit((Reader) stringReader0, (int) (byte)0, 339, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 1428);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1428. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)38;
      byteArray1[1] = (byte)38;
      byteArray1[2] = (byte)38;
      byteArray1[3] = (byte)42;
      StringReader stringReader0 = new StringReader("/=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)38, (byte)38);
      stringReader0.mark((byte)38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(113, token0.kind);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-335), 114);
      StringReader stringReader1 = new StringReader("|=");
      javaCharStream0.ReInit((Reader) stringReader1, (-335), 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("|=", token0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("kP#~5Hi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("im/<oY~)*.;RR[:XU!r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0000");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte) (-47);
      byteArray0[2] = (byte) (-47);
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      StringReader stringReader1 = new StringReader("\"return\"");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      charArray0[1] = '0';
      charArray0[2] = '0';
      charArray0[3] = '<';
      charArray0[4] = 'h';
      javaCharStream0.buffer = charArray0;
      StringReader stringReader2 = new StringReader("&<Cfc%?`\"4gq{PJ<)");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte) (-7), (int) (byte)106);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      byteArrayInputStream0.markSupported();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(107, javaCharStream0.getBeginColumn());
      assertEquals("<", token1.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q9VSF+7+Rdh^3 K");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      StringReader stringReader1 = new StringReader("6-3IZJgH l%8V5l%~;");
      StringReader stringReader2 = new StringReader("iJq_=r8%w");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte)28, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(83);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(109, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("im/<oY~)*.;RR[:XU!r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[3] = 'b';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 27, 27, 27);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KEeuk)\"`4p>'p\"l~");
      StringReader stringReader1 = new StringReader("OB#Af4p:L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = 'P';
      charArray0[2] = 'Q';
      charArray0[3] = 'C';
      charArray0[4] = 'L';
      charArray0[5] = '@';
      javaCharStream0.nextCharBuf = charArray0;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, (-1), (-1));
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^|,H`)8C1`@KO3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(107, token0.kind);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":pA@[R%4#5kbd~Ek");
      StringReader stringReader1 = new StringReader(":pA@[R%4#5kbd~Ek");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = '{';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, '{', (byte)38, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(39, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":pA@[R%4#5kbd~Ek");
      StringReader stringReader1 = new StringReader(":pA@[R%4#5kbd~Ek");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 'r', (byte)38, (byte)38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(39, javaCharStream0.getBeginColumn());
      assertEquals(40, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      StringReader stringReader0 = new StringReader(".q)q<h,rL");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("5)<V1");
      StringReader stringReader2 = new StringReader("");
      stringReader2.skip(1L);
      StringReader stringReader3 = new StringReader("5)<V1");
      StringReader stringReader4 = new StringReader(" =gx0@3^D\"<{8J(]d$9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.ReInit((Reader) stringReader3, 957, 109);
      Token.newToken(109);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 957, column 114.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-101);
      byteArray0[3] = (byte) (-101);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("new");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-101), (int) (byte) (-101));
      StringReader stringReader1 = new StringReader("0X'Y@8t^Xs");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(44, token0.kind);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)38;
      byteArray1[2] = (byte)38;
      byteArray1[3] = (byte)42;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (byte)42, (byte)99);
      byteArrayInputStream0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader(")!++Gw*sfE]OtMiC&h}");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("`?~yk");
      StringReader stringReader1 = new StringReader("|WC[OUW5gFQ");
      StringReader stringReader2 = new StringReader("`?~yk");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("!");
      StringReader stringReader5 = new StringReader("!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-551), (-551));
      StringReader stringReader1 = new StringReader("]/o>/");
      javaCharStream0.ReInit((Reader) stringReader0, 89, 5161);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("|", token0.toString());
      assertEquals(106, token0.kind);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-101);
      byteArray0[3] = (byte) (-101);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 122, (-880), 3624);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaCharStream2.ReInit((Reader) stringReader0, 122, 122, 2885);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(2883, javaCharStream2.bufpos);
      assertEquals(0, javaCharStream2.getEndLine());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?%2*<94C&A{qr'|6 o@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("*");
      StringReader stringReader2 = new StringReader("?%2*<94C&A{qr'|6 o@");
      char[] charArray0 = new char[5];
      charArray0[0] = 'h';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(108, token1.kind);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wUt6#1[");
      StringReader stringReader1 = new StringReader("wUt6#1[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)28;
      byteArray0[4] = (byte) (-117);
      byteArray0[5] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((-2704));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("{");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-837), (-1198), (byte)123);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(23, token0.kind);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*=");
      int int0 = JavaParserConstants.RETURN;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals("*=", token0.toString());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q9VSF+7+Rdh^3 K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 2441, 118);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("wg2BW%B%!7uf=;");
      stringReader1.markSupported();
      javaCharStream0.ReInit((Reader) stringReader1, 2441, (int) (byte)13);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2441, column 16.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|RQC5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1124, 1124, 3);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":pA@[R%4#5kbd~Ek");
      char[] charArray0 = new char[7];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'r';
      charArray0[3] = 'j';
      charArray0[4] = 'r';
      charArray0[5] = ':';
      charArray0[6] = 'r';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 55, (byte)38);
      StringReader stringReader1 = new StringReader("int");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals("int", token0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("*fH,((]C");
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)69, (int) (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q9VSF+7+Rdh^3 K");
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      charArray0[1] = '9';
      charArray0[2] = 'w';
      charArray0[3] = 't';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1493, (-7), 1702);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.input_stream = javaCharStream1;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%k[d6!x,");
      StringReader stringReader1 = new StringReader("%k[d6!x,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aD8-26|4*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("byte");
      StringReader stringReader2 = new StringReader("aD8-26|4*^");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)38;
      byteArray0[4] = (byte)38;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("xA.e}dlg,9bTGg)V!x");
      StringReader stringReader1 = new StringReader("xA.e}dlg,9bTGg)V!x");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5888083670994821
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      StringReader stringReader0 = new StringReader("6-3IZJgH l%8V5l%~;");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6-3IZJgH l%8V5l%~;");
      javaCharStream0.ReInit((Reader) stringReader0, 32, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 32, column 50.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q9VSF+7+Rdh^3 K");
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[3] = ':';
      charArray0[2] = ':';
      charArray0[0] = 'r';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, (byte)0, (byte)28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("++");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-101), (byte) (-101), 1124);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream1.readChar();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(101, token0.kind);
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("z;rD!j?f:");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)15, (-1789));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("z", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1837132182957943
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("0*EZnr%L=-k56Dw4WC");
      StringReader stringReader1 = new StringReader("Y6dE$<{q7_");
      stringReader1.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, 32, (int) (byte)51);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 32, column 69.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)38;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 1780, 1780);
      byteArrayInputStream0.markSupported();
      StringReader stringReader0 = new StringReader("Sm%");
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = '5';
      charArray0[1] = 'C';
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("c", token0.toString());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("Rxh/Qvm)\"Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-335), 114);
      StringReader stringReader1 = new StringReader("Rxh/Qvm)\"Q");
      javaCharStream0.ReInit((Reader) stringReader1, (-335), 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("Rxh", token0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Efter : \"");
      StringReader stringReader1 = new StringReader("Efter : \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)81;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("Y6dE$<{q7_");
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)69, 56);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(61, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token.newToken(1);
      javaCharStream0.Done();
      MockPrintStream mockPrintStream0 = new MockPrintStream("M");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^|,k`)8C1`@KO3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '_';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 124, 1551, 1551);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(106, token0.kind);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, (byte)47, 1066);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.image = stringBuffer0;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(107, token0.kind);
      assertEquals("^", token0.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.592865162231328
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2g\"r}L<eDErS");
      StringReader stringReader1 = new StringReader("2g\"r}L<eDErS");
      StringReader stringReader2 = new StringReader("{q8cE<*vzk}8-<+()4'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(10, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("byte", token0.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("double");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1459, 8, 78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(26, token0.kind);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("float");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("float", token0.toString());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("package");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6, 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|Q^*FZ8:W");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader(", column ");
      StringReader stringReader1 = new StringReader("2g\"r}L<eDErS");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("C/suM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      stringReader3.read();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(42, token0.kind);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader(").w`:BEML");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1169), 41, 25);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(")", token0.toString());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u5uLNB!-t'F#M\"jr");
      StringReader stringReader1 = new StringReader("u5uLNB!-t'F#M\"jr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q}2IQ)l.U?zG>#4=D");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 102, 102, 10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("Q", token0.toString());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u5uLNB!-t'F#M\"jr");
      StringReader stringReader1 = new StringReader("im/<oY~)*.;RR[:XU!r");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader2 = new StringReader("Error: Ignoring invalid lexical state : ");
      stringReader2.mark(32);
      char[] charArray0 = new char[4];
      charArray0[0] = 'h';
      charArray0[1] = 'e';
      charArray0[2] = 'I';
      charArray0[3] = 'h';
      stringReader0.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader0, 1, (-2022));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-2020), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("static");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("static");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("static", token0.toString());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)38;
      byteArray1[1] = (byte)99;
      byteArray1[2] = (byte)38;
      StringReader stringReader0 = new StringReader("--");
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, 0, (int) (byte)99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*=");
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader1 = new StringReader("/Kuh9!Q{WdLl3ct");
      StringReader stringReader2 = new StringReader("-");
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-44);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte) (-65);
      byteArray0[4] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(102, token0.kind);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N%FtMuY[PF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 3867, 1713);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 54, (byte)0, 3867);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4897959183673469
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("long");
      StringReader stringReader1 = new StringReader("qfb5xWLMMCF4kb$I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = new Token();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(15, javaCharStream1.bufpos);
      assertEquals(16, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6, 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.getBeginColumn());
      assertEquals("try", token0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      String string0 = "6-3IZJgH\\ l%8V5l%~;";
      StringReader stringReader0 = new StringReader("6-3IZJgH l%8V5l%~;");
      javaCharStream0.ReInit((Reader) stringReader0, 32, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'X';
      charArray0[4] = 'Y';
      charArray0[5] = 'Y';
      charArray0[6] = 'Y';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/7U% o!^ahY#.d|M<");
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)97;
      byteArray0[5] = (byte)105;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"|\"");
      StringReader stringReader1 = new StringReader("\"|\"");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)38;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("(", token0.toString());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("<SINGLE_LINE_COMMENT>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, (-10));
      javaCharStream0.ReInit((Reader) stringReader0, 93, (-651));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals((-651), javaCharStream0.getBeginColumn());
      assertEquals((-651), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("y==/rXa*|[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 640, 6, 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals("y", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.48936170212765956
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^|,H`)8C1`@KO3");
      StringReader stringReader1 = new StringReader("IN_FORMAL_COMMENT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(16, javaCharStream0.bufpos);
      assertEquals(17, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KEeuk)\"`4p>'p\"l~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("KEeuk)\"`4p>'p\"l~");
      javaCharStream0.ReInit((Reader) stringReader1, 103, (-836));
      StringReader stringReader2 = new StringReader("2e@eb&");
      stringReader1.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0, (-836), 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(17, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*=");
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader1 = new StringReader("/Kuh9!Q{WdLl3ct");
      StringReader stringReader2 = new StringReader("0}Vn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 50, 389, 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L(BD-Q-09");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("L", token1.toString());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rq<TbW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, (-1278), 122);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("1d(fZL");
      StringReader stringReader2 = new StringReader("1d(fZL");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      StringReader stringReader3 = new StringReader("extends");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(105, token0.kind);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("%/K'L1");
      StringReader stringReader1 = new StringReader("%/K'L1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-3293), 50, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      StringReader stringReader0 = new StringReader("6-3IZJgH l%8V5l%~;");
      javaCharStream0.ReInit((Reader) stringReader0, 29, 29);
      StringReader stringReader1 = new StringReader("<ak\"");
      StringReader stringReader2 = new StringReader(";");
      stringReader2.markSupported();
      javaCharStream0.ReInit((Reader) stringReader2, (-1387), 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(";", token0.toString());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h,#Q");
      StringReader stringReader1 = new StringReader("h,#Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1713, 3, 0);
      StringReader stringReader2 = new StringReader("h,#Q");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("h", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("shk*R&%z?aNX'/UXa]B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0000");
      stringReader0.skip((-1345L));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)110, (-1253));
      byteArrayInputStream0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("n", token0.toString());
      
      Token token1 = javaParserTokenManager0.getNextToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      Token token2 = Token.newToken(1);
      token1.beginColumn = (-1803);
      Token token3 = new Token();
      token2.specialToken = token3;
      javaParserTokenManager0.SkipLexicalActions(token2);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.TokenLexicalActions(token1);
      Token token4 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, token4.kind);
      assertEquals("", token4.toString());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.48484848484848486
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2g\"r}L<eDErS");
      StringReader stringReader1 = new StringReader("2g\"r}L<eDErS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte) (-98);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader2 = new StringReader("0;ZF.*C+");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte) (-117), 2606);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (byte)95, 3073, 2717);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: <EOF> after : \"\\\"_\\ufffd\\ufffd\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2g\"r}L<eDErS");
      StringReader stringReader1 = new StringReader("2g\"r}L<eDErS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-4381), (-1), 6);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("g", token0.toString());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?%2*<94C&A{qr'|6 o@");
      char[] charArray0 = new char[6];
      charArray0[0] = 'r';
      charArray0[1] = 'y';
      charArray0[2] = 'j';
      charArray0[4] = 'j';
      charArray0[5] = 'o';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 55, 55);
      StringReader stringReader1 = new StringReader("?%2*<94C&A{qr'|6 o@");
      StringReader stringReader2 = new StringReader("!#");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 6, column 68.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=hR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6, 2423);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`?~yk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip((byte)104);
      StringReader stringReader1 = new StringReader("w?w%Qram,$2N");
      javaCharStream1.ReInit((Reader) stringReader1, (int) (byte)22, (-3960));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = new Token();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("w", token1.toString());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Cg\"T}L<eDEreS");
      StringReader stringReader1 = new StringReader("Cg\"T}L<eDEreS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1864805138932786
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?%2*<94C&A{qr'|6 o@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("*");
      StringReader stringReader2 = new StringReader("?%2*<94C&A{qr'|6 o@");
      char[] charArray0 = new char[5];
      charArray0[1] = 'h';
      charArray0[2] = 'h';
      charArray0[3] = 'h';
      charArray0[4] = 'b';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)83;
      Token token0 = Token.newToken(3069);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager1.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager2.MoreLexicalActions();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 0, 40, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("S", token0.toString());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("after : \"");
      StringReader stringReader1 = new StringReader("*=");
      StringReader stringReader2 = new StringReader("after : \"");
      StringReader stringReader3 = new StringReader("13kO>{&0(0w^+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      stringReader1.read();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("=", token1.toString());
      assertEquals(87, token1.kind);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[0] = (byte)91;
      StringReader stringReader0 = new StringReader("\"]\"");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 75, 75, (byte)91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("]", token0.toString());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.48484848484848486
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"/\"");
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader1 = new StringReader("\"/\"");
      StringReader stringReader2 = new StringReader("\"/\"");
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[4] = 'b';
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2g\"r}L<eDErS");
      StringReader stringReader1 = new StringReader("2g\"r}L<eDErS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte) (-98);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader2 = new StringReader("G .cK'1tY[s$");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (byte) (-98), (-370), 115);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("G", token0.toString());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      StringReader stringReader1 = new StringReader("Q9VSF+7+Rdh^3 K");
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      charArray0[2] = '-';
      charArray0[4] = 'r';
      charArray0[5] = 'r';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 66, 66, 421);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 66, column 75.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" 8wBf3g25fH'=P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 114);
      StringReader stringReader1 = new StringReader("}vAF`pZ[q/EsIhTv");
      javaCharStream0.ReInit((Reader) stringReader1, (-335), (-335));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-335), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%Gk[d6!x,");
      StringReader stringReader1 = new StringReader("%Gk[d6!x,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-335), 114);
      StringReader stringReader1 = new StringReader("~*F6ADM4|T");
      javaCharStream0.ReInit((Reader) stringReader1, (-335), 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(90, token0.kind);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      StringReader stringReader0 = new StringReader("3");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)47, (int) (byte)47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("3", token0.toString());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5891783264039585
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte) (-47);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("\")\"");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("2Dw:eR");
      javaCharStream0.ReInit((Reader) stringReader1, (int) (byte)28, (int) (byte)28);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      byteArrayInputStream0.markSupported();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(":", token1.toString());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)38;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte)38;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      StringReader stringReader0 = new StringReader("v");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)38, 4360);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals("v", token0.toString());
      assertEquals(74, token0.kind);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)28;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      StringReader stringReader0 = new StringReader("Y7VYdP(@4");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringReader stringReader1 = new StringReader("Y7VYdP(@4");
      javaCharStream1.ReInit((Reader) stringReader1, (-1), (-1));
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      byteArrayInputStream0.markSupported();
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 2, 47, (byte)28);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      assertFalse(javaParserTokenManager2.equals((Object)javaParserTokenManager0));
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w}E!Tc*6P=2Q9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("w", token0.toString());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(104, token0.kind);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(104, token0.kind);
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1887993544729887
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0000");
      stringReader0.skip((-1345L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 68, 68, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 68, column 72.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1849504592484699
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("37*d?\"VY&D()");
      StringReader stringReader1 = new StringReader("37*d?\"VY&D()");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" .");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("try");
      StringReader stringReader2 = new StringReader("[}?wu{nrq]");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<=");
      StringReader stringReader1 = new StringReader("<<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader2 = new StringReader("<<=");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals("<<=", token0.toString());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dotble");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.ReInit((Reader) stringReader0, 96, (-510));
      StringReader stringReader1 = new StringReader("VvWt.~q+$72");
      stringReader1.markSupported();
      javaCharStream0.ReInit((Reader) stringReader1, 96, (-510));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-507), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x$V>>*G6*:9");
      StringReader stringReader1 = new StringReader("x$V>>*G6*:9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringReader stringReader2 = new StringReader("x$V>>*G6*:9");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1), 221, 81);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(3, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O$%wjKB;Nn{ii@z+Z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("IN_SINGLE_LINE_COMMENT");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`?~yk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader(".*9#u@u");
      javaCharStream0.ReInit((Reader) stringReader0, 96, 2147483392);
      StringReader stringReader2 = new StringReader("`?~yk");
      stringReader1.markSupported();
      javaCharStream0.ReInit((Reader) stringReader1, 96, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)99;
      StringReader stringReader0 = new StringReader("!=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1111, (byte)23, (byte)99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2g\"r}L<eDErS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3581), (-1561), 114);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8$3[-]tiV:6 7V~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedPos = (-1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.48717948717948717
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"byte\"");
      StringReader stringReader0 = new StringReader("2g\"r}L<eDErS");
      StringReader stringReader1 = new StringReader("2g\"r}L<eDErS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader2 = new StringReader("0;ZF.*C+");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte) (-117), 2606);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 1328, (byte)34, (-2));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2, (byte)95, (-1));
      javaCharStream3.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream3);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -117, column 2615.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*=");
      int int0 = JavaParserConstants.RETURN;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 51, 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"|\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-178), (-178));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -178, column -175.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader(">>>");
      StringReader stringReader1 = new StringReader("");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!;x%n[19OOekU%`C.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%/K'L1");
      StringReader stringReader1 = new StringReader("x$V>>*G6*:9");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte)123;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)23, (byte)23, 9);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.TokenLexicalActions(token0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.soops.CEN4010.JMCA.JParser.Token cannot be cast to com.soops.CEN4010.JMCA.JParser.Token$GTToken
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.4888888888888889
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 93, 3494);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(">", token0.toString());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ex~rtY!{");
      StringReader stringReader1 = new StringReader("ex~rtY!{");
      StringReader stringReader2 = new StringReader("ex~rtY!{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("ex", token0.toString());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 6, 69);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.image = null;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&Vu`W`'lAYM:{k(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("H]Y?]r~2DNhYqX$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      stringReader3.read();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("do");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 97, 4635, 23);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(4636, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W}xB\u0003t<pf3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("#~2XznP?B=f[mUPYY&X");
      StringReader stringReader2 = new StringReader("W}xB\u0003t<pf3");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("$", token0.toString());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)43;
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)59;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 22);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1708), 99);
      byteArrayInputStream0.skip((byte)59);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      PrintStream printStream0 = javaParserTokenManager0.debugStream;
      javaParserTokenManager0.debugStream = printStream0;
      javaParserTokenManager0.setDebugStream(printStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V3bPP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-326), (-326));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 49, 45);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.TokenLexicalActions(token0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      javaParserTokenManager0.SwitchTo(0);
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals(49, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaParserTokenManager0.SwitchTo(1);
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals("S", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)15;
      StringReader stringReader0 = new StringReader("'+/9]ov\":Ag");
      StringReader stringReader1 = new StringReader("'+/9]ov\":Ag");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 869, (byte)15, 2553);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 869, column 17.  Encountered: \"/\" (47), after : \"\\'+\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z:UGm");
      StringReader stringReader1 = new StringReader("Z:UGm");
      stringReader1.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 90, 90, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("Z", token0.toString());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaParserConstants.COLON;
      StringReader stringReader1 = new StringReader("/Kuh9!Q{WdLl3ct");
      StringReader stringReader2 = new StringReader("0}Vn");
      stringReader0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((Reader) stringReader2, 74, 74);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 74, column 78.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 221, 2345, 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(81, token0.kind);
      assertEquals("[", token0.toString());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",O`4D5}_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 221, 221, 118);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(221, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(89, token0.kind);
      assertEquals("!", token0.toString());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|Q^*FZ8:W");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StringReader stringReader0 = new StringReader("after : \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("after : \"");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.2848345117089848
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[0] = (byte)91;
      StringReader stringReader0 = new StringReader("{~U'Jb6Y1^@Scm\"QA8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaCharStream0.adjustBeginLineColumn((byte)91, (byte)91);
      StringReader stringReader1 = new StringReader("{~U'Jb6Y1^@Scm\"QA8");
      Token token0 = javaParserTokenManager0.getNextToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, (-233));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -233. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      int int0 = JavaParserConstants.RETURN;
      StringReader stringReader0 = new StringReader("0Db!oC`_oW-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("0Db!oC`_oW-");
      StringReader stringReader2 = new StringReader("0Db!oC`_oW-");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)91;
      StringReader stringReader0 = new StringReader("\"]\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("\"]\"", token0.toString());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2g\"r}L<eDnrS");
      StringReader stringReader1 = new StringReader("2g\"r}L<eDnrS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3306), 29, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -3306, column 41.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StringReader stringReader0 = new StringReader("after : \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("'ngyj`bMo\"R$y^#[b");
      StringReader stringReader2 = new StringReader("'ngyj`bMo\"R$y^#[b");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"g\" (103), after : \"\\'n\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StringReader stringReader0 = new StringReader("# \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",O`4D5}_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2360, 2360, 1754);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(80);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 80. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, (-2575));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2575. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
