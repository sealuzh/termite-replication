/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 15:26:22 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('G');
      stringWriter1.write(18);
      simpleNode0.dump(")", stringWriter0);
      assertEquals("G\u0012<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("Mu!nxh{I<E_xDnc&/");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(1268);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(2500);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump("ExclusiveOrExpression", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1268
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("*");
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append('G');
      stringWriter1.write(18);
      simpleNode0.dump("*", stringWriter1);
      simpleNode0.jjtGetParent();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.append((CharSequence) null);
      simpleNode0.dump("jv`wqBpxTgTtJAV*VC<", stringWriter2);
      assertEquals("null<VariableDeclaratorId>\n  <identifier>*</identifier>\n</VariableDeclaratorId>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*rshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = ">";
      JavaParser javaParser0 = new JavaParser(">");
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("hr/bJ r8B.0Bt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = ':';
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      simpleNode0.dump((String) null, stringWriter1);
      charArray0[2] = '+';
      charArray0[3] = ':';
      charArray0[5] = ']';
      charArray0[6] = ':';
      stringWriter0.write(charArray0);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.jjtAddChild(simpleNode0, 66);
      simpleNode0.jjtAddChild(simpleNode0, 66);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetChild(66);
      assertEquals(67, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<Modifiers>\n  <identifier>*le</identifier>\n</Modifiers>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<TypeParameter>\n  <identifier>*lshft</identifier>\n</TypeParameter>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('f');
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.parent = (Node) simpleNode1;
      stringWriter1.close();
      simpleNode0.toString();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.jjtGetParent();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
      
      String string0 = simpleNode1.toString();
      assertEquals("CompilationUnit", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("b6~b}\"e56M", stringWriter0);
      assertEquals("<InstanceOfExpression>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*lshft", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*amp</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("&", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("{");
      simpleNode0.id = 37;
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[7];
      simpleNode0.parser = null;
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.flush();
      simpleNode0.dump(",R", stringWriter2);
      assertEquals("<NameList>\n</NameList>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.48837209302325585
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append('4');
      simpleNode0.toString();
      stringWriter1.append('4');
      SimpleNode simpleNode1 = new SimpleNode((-1));
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.id = 0;
      simpleNode0.jjtAddChild(simpleNode1, 1347);
      // Undeclared exception!
      simpleNode0.dump("CompilationUnit", stringWriter1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(823);
      StringReader stringReader0 = new StringReader("2,S>0=pM`-(");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 86);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(87, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = '+';
      charArray0[1] = ',';
      charArray0[5] = ']';
      StringBuffer stringBuffer0 = new StringBuffer(0);
      stringWriter0.append((CharSequence) stringBuffer0);
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.dump("CompilationUnit", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter('4');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode1 = new SimpleNode(2);
      simpleNode0.jjtAddChild(simpleNode1, '4');
      simpleNode0.jjtGetChild(2);
      assertEquals(53, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(424);
      SystemInUtil.addInputLine("NaK2]AM]2U-");
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("*Ny", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8006988631215468
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SimpleNode simpleNode1 = new SimpleNode(47);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode(1038);
      simpleNode2.dump("x[N|/B-+", stringWriter0);
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>=</identifier>\n  <identifier>*gt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      SimpleNode simpleNode3 = new SimpleNode(47);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write("*le");
      simpleNode3.dump("n'g", stringWriter1);
      int int0 = simpleNode2.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.7957596077518445
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.parser = javaParser0;
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode1.dump(";", stringWriter0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        stringWriter0.write(charArray0, 1, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(1268);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(2500);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("ExclusiveOrExpression");
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("ExclusiveOrExpression", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1268
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      char[] charArray0 = new char[8];
      charArray0[1] = ':';
      charArray0[2] = '+';
      charArray0[7] = ':';
      charArray0[5] = ']';
      StringBuffer stringBuffer0 = new StringBuffer(0);
      charArray0[6] = 'b';
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode('\u0000');
      simpleNode1.jjtAddChild(simpleNode0, 66);
      simpleNode1.jjtGetChild(66);
      assertEquals(67, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0954485469884303
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter(28);
      simpleNode0.dump("fXM%v", stringWriter0);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write(47);
      stringWriter1.close();
      simpleNode0.dump(">=", stringWriter1);
      simpleNode0.jjtGetParent();
      simpleNode0.dump("fXM%v", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 78);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2004852661));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2004852661
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-1));
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.jjtSetParent(nodeArray0[0]);
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      SimpleNode simpleNode0 = new SimpleNode((-1794));
      simpleNode0.jjtSetParent((Node) null);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1103541282));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9305096302300272
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      String string0 = "=";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte) (-1);
      byte byte0 = (byte)119;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((byte) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      char[] charArray0 = new char[8];
      charArray0[1] = ':';
      charArray0[2] = ',';
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode('\u0000');
      simpleNode1.jjtAddChild(simpleNode0, ',');
      simpleNode1.jjtAddChild(simpleNode0, ']');
      assertEquals(94, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("T{");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      stringWriter0.write(charArray0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-67);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)77;
      byteArray0[6] = (byte)98;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.dump("hEn>XkE\u0000#q_q*.b){R", stringWriter0);
      assertEquals("~<InstanceOfExpression>\n  <identifier>T{</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("InstanceOfExpression : T{", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 0);
      stringWriter0.flush();
      stringWriter0.close();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtAddChild(simpleNode0, 1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(834);
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 834
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      String string0 = "com.soops.CEN4010.JMCA.JParser.SimpleNode";
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9549783515321212
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter(28);
      simpleNode0.dump("fXM%v", stringWriter0);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.close();
      simpleNode0.dump("interface", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*ge</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      simpleNode0.toString("fXM%v");
      String string0 = simpleNode0.toString("o^J]");
      assertEquals("o^J]InstanceOfExpression : >=", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0693047561387572
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.parser = javaParser0;
      String string0 = "<";
      try { 
        javaParser0.TypeParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-2376));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1620));
      simpleNode0.jjtAddChild(simpleNode0, 47);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1981));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1981
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.941488363211384
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("=", stringWriter0);
      simpleNode0.dump("=", stringWriter0);
      StringReader stringReader0 = new StringReader("2Fg${. 3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)10, (-40366234), (byte)10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1308);
      simpleNode1.dump("2Fg${. 3", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>=</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>=</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : =", string0);
  }
}
