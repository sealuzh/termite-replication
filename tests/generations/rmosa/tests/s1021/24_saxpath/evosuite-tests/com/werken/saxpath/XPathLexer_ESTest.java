/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 01:22:26 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-259));
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-494));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8940784789052407
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!D`+YMi7lCa_");
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("w4a.9=6V6BTGSx Z9q");
      xPathLexer1.notEquals();
      xPathLexer1.rightBracket();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.3323586432015153
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(111);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.consume((-470));
      xPathLexer0.not();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.comma();
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-434), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6929510730627153
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3[|B");
      XPathLexer xPathLexer1 = new XPathLexer("+4d~");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      Token token2 = xPathLexer2.number();
      Token token3 = xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer("3[|B");
      xPathLexer3.setPreviousToken(token1);
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      String string0 = token3.toString();
      assertEquals("[ (30) (4)", string0);
      
      xPathLexer1.div();
      xPathLexer3.setPreviousToken(token2);
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7604335526319899
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-4425));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1233));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      xPathLexer0.equals();
      xPathLexer0.consume((-1016));
      String string0 = "dPAcY^3";
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-607));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.797997937030743
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-1605));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5754415416798357
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("//::Tu/wd=E");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("`9");
      xPathLexer1.setPreviousToken(token1);
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (12) (//)", string0);
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("`9");
      xPathLexer2.setPreviousToken((Token) null);
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2782102826350814
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      xPathLexer0.consume((-490));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5757919066433397
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("J$W8");
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("z:f$c ");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.consume(4614);
      xPathLexer0.setXPath("l:8kLlldr`");
      xPathLexer0.consume((-1));
      token0.toString();
      token0.toString();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.895870981300395
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!D`+YMi7lCa_");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("D", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("YMi7lCa_", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R_|o");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/I");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("v", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      String string0 = token1.toString();
      assertEquals("[ (30) ()", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2485));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0891115325266525
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".)M}U7zs~Hb%");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(".", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("M", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("}", token3.getTokenText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1039729096705169
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}!?hiq;4pb{_");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("E}P5w");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f:a\"\"Va;OV-t4$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("f", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YO!Y,U*x!CUoKF7_");
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.consume((-589));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.consume((-1179));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/=tqSrDaU-2HrA,_aR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.576850868104706
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.consume((-3019));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = "/[Gha~\\u6%Xgk]S\\=v";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6932245773362196
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|y5\"");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6491335331900294
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!@L:s{$L'");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("!@", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("L", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4183905196990456
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!D`+YMi7lCa_");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("w4a.9=6V6BTGSx Z9q");
      Token token2 = xPathLexer1.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals("4a", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(".", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9j!N=0o:!Mn!IZg");
      xPathLexer0.consume(4614);
      xPathLexer0.setXPath("9j!N=0o:!Mn!IZg");
      xPathLexer0.consume((-3058));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6951325271270146
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h0jIj:X2\"i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("h0jIj", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.notEquals();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2790719540873252
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y6b%1Ho*");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("6", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.796091586500539
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@\"y;o>;r8_-S #-z9RH");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-602));
      xPathLexer0.star();
      xPathLexer0.not();
      Token token0 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.162713745500182
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>:)BD.{^S;0ez.}][V");
      xPathLexer0.equals();
      xPathLexer0.consume((-1210));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*7M/Iv");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.280298378477355
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amN WIy<BH");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4802970903463986
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!D`+YMi7lCa_");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("!", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("w4a.9=6V6BTGSx Z9q");
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("w4", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("a", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(31, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("+", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      char char0 = xPathLexer1.LA(0);
      assertEquals('9', char0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y7<|UQ2?8uR");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z!ulx(d~-6KtIw");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      token1.toString();
      Token token2 = xPathLexer0.div();
      assertNull(token2);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y}Ier");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7284296057378936
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("15hAr9KO\"");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#o{_M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#o{_M", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5639690780025854
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals("1", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("unz", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("<", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('z', char0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.442765494967263
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`9");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("`9");
      token0.toString();
      xPathLexer1.div();
      xPathLexer0.setXPath("Sbt['n");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jL");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("jL", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.895569691403022
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(2);
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.consume(18);
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.consume((-56));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E$+/GR7tn|;~a");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XY~NLf6 B:f*5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("XY", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<=Trd$KF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<=", token0.getTokenText());
      assertEquals(8, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("Trd", token1.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4374355727841266
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<=Trd$KF");
      xPathLexer0.nextToken();
      xPathLexer0.LA(2303);
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.3393688744354226
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(":", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("8", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("kLlldr`", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("k", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!D`+YMi7lCa_");
      Token token0 = xPathLexer0.leftParen();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("D", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("!", token0.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1471207150721934
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!@L:s{$L'");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.2834136126558997
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;IUaM9");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("`;", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("I", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("UaM9", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PKt&7\"8jT]SG");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("PKt", token0.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]}HQ@kT|d1U4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6290001858442973
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V$x%%~2v,");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("V", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%%~2v,", token2.getTokenText());
      
      char char0 = xPathLexer1.LA(2303);
      assertEquals('\uFFFF', char0);
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")=^mNG[LEIgL**Ek?r");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.9819344023383753
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,6B^YlqCt&\"gj6Z");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(".", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(",", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.getPreviousToken();
      token1.toString();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0X]xT-uF\"mi!( /C");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8643299763970325
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NTHZ(c=HHH:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("NTHZ", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      char char0 = xPathLexer0.LA((-1));
      assertEquals('', char0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6942659974545626
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-w]U.;");
      XPathLexer xPathLexer1 = new XPathLexer("u}uy'");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("`9");
      xPathLexer1.mod();
      xPathLexer1.setPreviousToken((Token) null);
      token0.toString();
      xPathLexer2.div();
      xPathLexer2.setPreviousToken((Token) null);
      Token token1 = xPathLexer1.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.101975225866936
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amN WIy<BH");
      xPathLexer0.number();
      xPathLexer0.and();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6488546864999396
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!@L:s{$L'");
      xPathLexer0.setXPath("!@L:s{$L'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("L", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oq(V\"1uXneU7Mn7'/zn");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t+v1p) ]'Sd5c>4,m");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GD|^.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("GD", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.6933486083439715
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=X=*gP3D]m_h~:2qf@[");
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q#ru`;Gopa]1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w#K*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V$x%%~2v,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m=o5';");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("m", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("=", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.315814363831377
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}!?hiq;4pb{_");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.equals();
      assertEquals("?", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("hiq;4pb{_", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3159591025779396
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}!?hiq;4pb{_");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("?h", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("iq;4pb{_", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token4 = xPathLexer0.dots();
      assertEquals("i", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8384248728286852
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amN WIy<BH");
      xPathLexer0.number();
      xPathLexer0.and();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A)l{I|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.891722433292198
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") m");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-2345));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5062456895087566
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iN:,}T}<(0xrz@P");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("i", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("N", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1894227812678566
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!@L:s{$L'");
      Token token0 = xPathLexer0.minus();
      assertEquals("!", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.literal();
      assertEquals(":s{$", token3.getTokenText());
      assertNotNull(token3);
      assertEquals(27, token3.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;IUC[d9");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      assertEquals("`;", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("IUC", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.05752729743254
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;yIUaM;9");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("`", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("yIUaM", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">kPD(0Mi;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("__=5Le_a8");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      token1.toString();
      Token token2 = xPathLexer0.div();
      assertNull(token2);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5723992881587088
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("2", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.211847669671436
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>:)BD.{^S;0ez.}][V");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("<>", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(":", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(")", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("B", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("D.", token4.getTokenText());
      assertEquals(14, token4.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("FS#aR\"6azik[|XeZ");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("FS", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.439296956744126
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("12", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<*VZ1ymQ!!L+aS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.7612227407547085
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.251392894523197
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>:)BD.{^S;0ez.}][V");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(")", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("B", token5.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.6332018384291134
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'3^b[8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(6, int0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("e", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|c(=9iD&VmyyuJ>_q-o");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.727080727036795
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.439243482388646
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g[Dd'a'");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.9844945661888618
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("{B", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("^YlqCt&\"0j6Z", token3.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7509694366789843
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q%EK:r97");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Q", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("%", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      token0.toString();
      xPathLexer0.isIdentifierChar('z');
      Token token3 = xPathLexer0.rightParen();
      assertEquals("E", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (!)", string0);
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('z');
      assertTrue(boolean0);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("K:r97", token4.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5640006406702622
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.3745631025069378
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.axpat.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.axpat.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.283562747916579
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4m_Mv");
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4fcf{~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5484903952423188
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`9");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("`9");
      xPathLexer1.setPreviousToken(token0);
      token0.toString();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("mgVc*oieS");
      xPathLexer0.setPreviousToken(token1);
      xPathLexer1.relationalOperator();
      xPathLexer1.slashes();
      xPathLexer1.whitespace();
      Token token2 = xPathLexer2.operatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-543));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.4377134277438377
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3^ToXk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("^", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3036220473409637
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("l", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.60944107202973
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V$x%%~2v,");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("x", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      char char0 = xPathLexer1.LA(2303);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.2857353728425127
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W-O^cI,");
      Token token0 = xPathLexer0.identifier();
      assertEquals("W-O", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.4086818701599513
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.7317685901381066
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Q%EK:r97");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('z');
      Token token1 = xPathLexer0.rightParen();
      token1.toString();
      token0.toString();
      xPathLexer0.isIdentifierChar('z');
      xPathLexer0.mod();
      xPathLexer0.number();
      token1.toString();
      Token token2 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.and();
      xPathLexer0.at();
      token2.toString();
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1933435478089003
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.setXPath("Hz;y");
      XPathLexer xPathLexer1 = new XPathLexer("g. 12");
      xPathLexer1.and();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("g.", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(" ", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("H", token5.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.3744776796864562
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.axpat.Token");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("om.werken.axpat.Token", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.109316884058807
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      Token token0 = xPathLexer0.equals();
      assertEquals("<", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(")", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("BD.", token3.getTokenText());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1686876133776367
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(")", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(" ", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CUo");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      assertEquals("CUo", token0.getTokenText());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.39996222517837
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.consume((-3731));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3671));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.8418202449650023
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(3363);
      xPathLexer0.mod();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.div();
      xPathLexer0.and();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.consume((-5908));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.3029491501447021
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WNk)#0K|5-o9A?|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("WNk", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.3167915391561091
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;IUaM9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`;IUaM9", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("`", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(";I", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("UaM9", token3.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.7582560415498607
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("15hAr9KO\"");
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.587180203514933
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".)M}U7zs~Hb%");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("M", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.minus();
      assertEquals("U", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.0130482352545467
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".)M}U7zs~Hb%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("M", token2.getTokenText());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z1I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("z1I", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amN WIy<BH");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ %(");
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      assertEquals("", xPathLexer2.getXPath());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.1067743631423907
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!D>+Vn");
      Token token0 = xPathLexer0.slashes();
      assertEquals("!", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("D", token1.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(WV+%lJZig'8");
      xPathLexer0.hasMoreChars();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("ph", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.8537030573112467
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n`j)_EFyr~5H|y");
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.comma();
      assertEquals("n", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.equals();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('5');
      assertFalse(boolean0);
      
      Token token1 = xPathLexer0.colon();
      String string0 = token1.toString();
      assertEquals("[ (18) (j)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("_EFyr", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      assertEquals("|", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("y", token7.getTokenText());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.8796460426932662
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("l", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("8", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("kLlldr`", token3.getTokenText());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.4988334918068422
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!D`+YMi7lCa_");
      XPathLexer xPathLexer1 = new XPathLexer("!D`+YMi7lCa_");
      xPathLexer1.rightParen();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s*~yN$]T");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("s*~yN$]T");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(2303);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|>Y=U!tFI_UK{");
      String string0 = xPathLexer0.getXPath();
      assertEquals("|>Y=U!tFI_UK{", string0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.1523229374679789
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath("Hz;y");
      XPathLexer xPathLexer1 = new XPathLexer("g. 12");
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("g", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("H", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('\u0011');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.2832275384495062
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;IUaM9");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("`;", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("IUaM9", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.9839885573337067
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2485));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.021789831578195
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.setXPath(".,{B^YlqCt&\"0j6Z");
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(".,", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("{", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("B^", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar(' ');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.010600509602785
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;yIUaM;9");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("`", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";yIUaM;9", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.9761951903453057
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!@L:s{$L'");
      Token token0 = xPathLexer0.equals();
      assertEquals("!", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('M');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String string0 = "|>Y=U!tFI_UK{";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3099));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.0471663676971366
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".)M}U7zs~Hb%");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("M", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.059390814468983
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.dots();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("B^", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("Y", token4.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9833795899347685
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l:8kLlldr`");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("l", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.9854461315138212
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("{B^YlqCt&\"0j6Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("{", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("B^", token4.getTokenText());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.2462569302961506
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}!?hiq;4pb{_");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.3151587824498883
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}!?hiq;4pb{_");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.0630594622054272
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("{", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("B^", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("YlqCt", token4.getTokenText());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.9730660204078417
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".)M}U7zs~Hb%");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(")", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.9471302951984122
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("12", token2.getTokenText());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.0122517398343953
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".)M}U7zs~Hb%");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("M", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.0602663434343995
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(",", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("{", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("B^", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.9048446482285661
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".&v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&v", token1.getTokenText());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.2832275384495062
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;IUaM9");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("`;", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("IUaM9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.1440278465027351
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>)BD.{^S;0ez.}][V");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(">", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(")", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("B", token3.getTokenText());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.0113823258194414
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".)M}U7zs~Hb%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("M", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.0586379441508953
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("B^", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("Y", token4.getTokenText());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.0222365925610692
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.pipe();
      assertEquals("{", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("B^", token3.getTokenText());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9761951903453057
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!@L:s{$L'");
      Token token0 = xPathLexer0.pipe();
      assertEquals("!", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.0991116471470945
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("{", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("B^", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("Y", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=0.9455123176703224
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,6B^YlqCt&\"gj6Z");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("6B", token1.getTokenText());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.9839885573337067
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=0.9832042436082165
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,{B^YlqCt&\"0j6Z");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 184
  /*Coverage entropy=1.0007010947850676
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".&v");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 185
  /*Coverage entropy=1.05018035865703
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;yIUaM;9");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("`", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.consume(448);
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=1.141774908189467
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!@L:s{$L'");
      xPathLexer0.consume(576);
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.9345419104321983
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`;IUaM9");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(111);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.9763573967613697
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".,6B^YlqCt&\"gj6Z");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
  }
}
