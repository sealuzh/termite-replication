/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 00:56:14 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterInputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-23249), "", (-23249));
      player0.setY((-23249));
      float float0 = player0.getY();
      assertEquals((-23249.0F), float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(1822, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 138, 138);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player((-19145), "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (short)4919);
      player0.boss = (Party) player0;
      player0.setJoinOK(player1, false);
      player0.boss.head = (Party) player1;
      player0.boss = (Party) player1;
      player1.pack();
      player0.boss.head = player0.boss.head;
      player0.isJoinOK(player1, false);
      player1.isConnected();
      player0.getZ();
      player1.setMoney(3374.8535F);
      player0.boss.next = (Party) player1;
      System.setCurrentTimeMillis(1392409296339L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.isJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(3374.8535F, player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-12146), "", 1008);
      player0.id = 5;
      Player player1 = new Player();
      player1.setDead((long) (-12146), false);
      player0.add(player1);
      player1.setConnected(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player1.setY(5);
      player1.setDead(0L, false);
      player0.isJoinOK(player1, true);
      player0.getY();
      player1.getY();
      assertTrue(player1.isDead());
      
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      player0.setZ(0.0F);
      sequenceInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      dataInputStream0.read();
      player0.unpack(dataInputStream0);
      player0.pack();
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(14335, "state.Player", 14335);
      player0.setJoinOK(player0, true);
      Player player1 = new Player(14335, "state.Player", (short)4919);
      player1.next = (Party) player1;
      assertEquals(4919, player1.getPictureId());
      
      boolean boolean0 = player0.isJoinOK(player0, true);
      float float0 = Player.MOVE_DISTANCE;
      System.setCurrentTimeMillis(1392409296320L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "state.Player");
      boolean boolean1 = player0.isJoinOK(player0, false);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean1 == boolean0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(5, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 5);
      player0.setZ((-1.0F));
      Player player1 = new Player(5, "z", "module.ModuleBrowserDialog$ModuleFilter", 201);
      player0.head = (Party) player1;
      float float0 = player0.getZ();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-3402), "fYL|Wf", "fYL|Wf", (-3402), (-3402));
      player0.setDead((long) (-3402));
      player0.gangStrength();
      player0.pack();
      player0.getY();
      System.setCurrentTimeMillis((short)4919);
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis((-3402));
      System.setCurrentTimeMillis(1687L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-407));
      Player player1 = new Player(1542, "IHoo-v\"1J~K>KF3Rw(", (-2314));
      player1.isJoinOK(player0, false);
      player0.isConnected();
      player1.getZ();
      player0.setMoney((-407));
      Player player2 = new Player((-1482), "K$ZxQpjL|;):K", 1542);
      float float0 = player0.getMoney();
      assertEquals((-407.0F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(1822, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 138, 138);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player((-19145), "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (short)4919);
      player0.boss = (Party) player1;
      player0.setJoinOK(player1, false);
      player1.head = (Party) player0;
      player0.boss.head = (Party) player1;
      player0.boss = (Party) player1;
      player1.pack();
      boolean boolean0 = player0.isJoinOK(player1, false);
      player1.setConnected(false);
      player1.isConnected();
      player0.getZ();
      player1.setMoney(3374.8535F);
      Player player2 = new Player(1822, "gui.ModuleBrowserDialog$ModuleFilter", (-612));
      boolean boolean1 = player2.isJoinOK(player1, false);
      assertEquals(3374.8535F, player1.getMoney(), 0.01F);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player(0, "8gtu", "", (short)4919);
      player0.isJoinOK(player1, true);
      player0.isConnected();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      player1.getZ();
      player0.setMoney(0.1F);
      Player player2 = new Player(19711, "", 19711);
      float float0 = player0.getMoney();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8910459577298777
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setX((short)4919);
      player0.setX(0.2F);
      player0.setX((-377.8F));
      player1.setX((-1.0F));
      player0.setX((short)4919);
      player0.setX((-1.0F));
      player0.setX(2918.91F);
      player0.setX(0.0F);
      player1.gangStrength();
      player0.gangStrength();
      player1.gangStrength();
      player0.gangStrength();
      player1.gangStrength();
      player0.gangStrength();
      Player player2 = new Player(591, "ycW_K{=afS} ", "|{'.&;L2B/", 0, (-1));
      Player player3 = new Player(4, "", "|{'.&;L2B/", (short)4919, (short)4919);
      player2.setJoinOK(player3, false);
      player2.setJoinOK(player0, false);
      player0.gangStrength();
      player2.gangStrength();
      player0.pack();
      player2.isJoinOK(player3, false);
      float float0 = player1.getX();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2918.91F);
      player0.setX(2918.91F);
      player0.setX((-1.0F));
      player0.setX((-408.1F));
      player0.setX((-408.1F));
      player0.setX(0.0F);
      int int0 = Packable.ACTION;
      int int1 = Packable.GAME_EVENT;
      player0.gangStrength();
      player0.gangStrength();
      Player player1 = new Player((-2595));
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setJoinOK(player1, true);
      assertEquals(0.0F, player0.getX(), 0.01F);
      
      Player player2 = new Player(2886, (String) null, (-2595));
      player2.gangStrength();
      Player player3 = new Player();
      Player player4 = new Player(2626, (String) null, 1);
      player4.isJoinOK(player3, false);
      player4.toString();
      float float0 = player4.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(1819);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-43);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-65);
      byteArray0[6] = (byte) (-88);
      byteArray0[7] = (byte) (-103);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-65), 2202);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      dataInputStream0.markSupported();
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ");
      Player player0 = new Player(3, "module.ModuleBrowserDialog$ModuleFilter", 3);
      player0.setDead();
      Party party0 = new Party((short)4919);
      Player player1 = new Player(3, "module.ModuleBrowserDialog$ModuleFilter", 3);
      player0.setMoney(0.0F);
      player1.reset(false);
      player0.next = (Party) player1;
      System.setCurrentTimeMillis((-1019L));
      player0.pack();
      player0.getTimeOfDeath();
      player0.getZ();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getIP();
      Party party0 = player0.head;
      player0.remove((Party) null);
      player0.boss = null;
      player0.setY(0);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.setZ(0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      player0.type();
      player0.getX();
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.874099239168671
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-81);
      byteArray0[6] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      Player player2 = new Player();
      Player player3 = new Player();
      Player player4 = new Player();
      player3.head = (Party) player0;
      player4.setX(2346.5767F);
      player0.setX(214.75005F);
      player2.setX(0.0F);
      player1.setX((-2685.2087F));
      assertEquals((-2685.2087F), player1.getX(), 0.01F);
      
      player3.gangStrength();
      player2.gangStrength();
      player3.gangStrength();
      player2.gangStrength();
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      Player player2 = new Player();
      player2.setX(2346.5767F);
      player0.setX(214.75005F);
      player1.setX(0.0F);
      player0.gangStrength();
      player1.gangStrength();
      player1.gangStrength();
      Player player3 = new Player(1601, "ycW_KAZdafS}a", "", 4);
      Player player4 = new Player(4, "", "ycW_KAZdafS}a", 1, 4);
      player0.setJoinOK(player1, false);
      player4.setJoinOK(player3, false);
      player1.gangStrength();
      player4.gangStrength();
      Player player5 = new Player(4, "", "", 1, (-1308));
      player0.isJoinOK(player2, true);
      assertEquals(2346.5767F, player2.getX(), 0.01F);
      
      player5.getName();
      assertEquals(0.0F, player5.getY(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1, "", "SjdT,siZ9-", (-643));
      player0.pack();
      player0.setZ((-1.0F));
      player0.setDead(1392409296320L, false);
      player0.setDead(0L);
      player0.gangStrength();
      player0.setMoney(0.0F);
      player0.getIP();
      player0.setX((-87));
      int int0 = player0.getStrength();
      assertEquals((-1.0F), player0.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(2229);
      Player player1 = new Player((-2462));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("Player-2462", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(22);
      Player player1 = new Player((-1));
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player-1", player1.toString());
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.930485158288402
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1822, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 138, 138);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player((-19145), "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (short)4919);
      player0.boss = (Party) player1;
      player0.setZ(0.1F);
      player0.boss = (Party) player1;
      player0.setJoinOK(player1, false);
      player0.boss.head = (Party) player1;
      player0.boss = (Party) player1;
      player1.pack();
      player0.isJoinOK(player1, false);
      player1.isConnected();
      player0.getZ();
      player1.setMoney(3374.8535F);
      System.setCurrentTimeMillis(1392409296320L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-19145));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.isJoinOK(player0, true);
      float float0 = player0.getY();
      assertEquals(0.1F, player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.prev;
      player0.add((Party) null);
      player0.remove((Party) null);
      Player player1 = new Player(1886, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 1886);
      Player player2 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (short)4919, 2073);
      player1.add(player2);
      assertEquals(2073, player2.getStrength());
      
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      
      Player player3 = new Player(2073, (String) null, (String) null, 3460, 5);
      int int0 = player3.getPictureId();
      assertEquals(3460, int0);
      
      player3.getIP();
      assertFalse(player3.isDead());
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(0L, player3.getTimeOfDeath());
      assertTrue(player3.isConnected());
      assertEquals(0.0F, player3.getY(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = (-1229);
      Player player0 = new Player((-1229), "Qhb", (String) null, (-1229));
      player0.setDead();
      player0.gangStrength();
      player0.isBoss();
      player0.getY();
      Player player1 = new Player(3, "pj,;U*A#Jb", (-1229));
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.setDead(862L);
      player0.isJoinOK(player1, true);
      player0.getName();
      player0.getZ();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedInputStream0.close();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)25;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-94);
      try { 
        pipedInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe closed
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2097);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-1440), (String) null, (-1440));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1.0F);
      player0.setX((-617.35F));
      Player player1 = new Player((short)4919, "Akk(2y=:FiZ", "Player", (-488), 0);
      player1.setX(0.2F);
      player0.setX(2452.56F);
      player1.gangStrength();
      assertEquals(0.2F, player1.getX(), 0.01F);
      
      Player player2 = new Player((-1), "Akk(2y=:FiZ", "Player", (short)4919);
      int int0 = player2.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(1379, (String) null, "", 1379);
      Player player1 = new Player((-2150), "", "n`zvjo$4IxBmQ@B&6", 1379, 1379);
      player1.gangStrength();
      player0.isJoinOK(player1, false);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2453);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player2453", player0.toString());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(1788, "#_|7SG<BXxB7so=}", "#_|7SG<BXxB7so=}", 1788, (-1017));
      player0.getSubparty();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)76;
      byteArray0[6] = (byte) (-39);
      byteArray0[7] = (byte) (-60);
      byteArray0[8] = (byte) (-121);
      player0.unpack(byteArray0);
      player0.getStrength();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.head;
      player0.boss = null;
      player0.setY(0);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.setZ(0);
      player0.getIP();
      player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      assertEquals("Player0", player0.getName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-187), "XubY_(JS+rJ1_'B*", "XubY_(JS+rJ1_'B*", (-187));
      boolean boolean0 = player0.isDead();
      assertEquals(1, player0.getStrength());
      assertEquals((-187), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1903, "", "", 1);
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(0, "", "AHC!ued", 4, 93);
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1084), "Bp Kf551N;u7", "+p~`t:L-IHys", (-1084));
      player0.getPictureId();
      player0.setMoney((-1084));
      System.setCurrentTimeMillis(5);
      Player player1 = new Player(5, "jj{M$", "xHW3$f6G;jy[AxH?", 5);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-1084.0F), player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 1);
      player0.reset(true);
      System.setCurrentTimeMillis((-1984L));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(187, "state.Party", 187);
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(187, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player((short)4919, "l", (-1824));
      player1.isJoinOK(player0, true);
      player0.getName();
      player0.isJoinOK(player1, false);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream(enumeration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(3);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player3", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(5);
      float float0 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player5", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-32));
      float float0 = player0.getMoney();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-32", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      player0.next = null;
      player0.getStrength();
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 1144;
      Player player0 = new Player(1144);
      Player player1 = new Player((short)4919);
      player0.head = (Party) player1;
      long long0 = 0L;
      boolean boolean0 = false;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(717);
      System.setCurrentTimeMillis((-3418L));
      MockFile mockFile0 = new MockFile("6U");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(30L, mockFile0.length());
      
      int int0 = Packable.PLAYER;
      int int1 = player0.type();
      assertEquals(5, int1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 13342;
      String string0 = null;
      int int1 = (-49);
      Player player0 = new Player(13342, (String) null, (-49));
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(filterOutputStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockPrintStream1, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream2);
      dataOutputStream0.writeChar(13342);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(346);
      player0.setZ(346);
      player0.setX(1946.5986F);
      int int0 = player0.getPictureId();
      assertEquals(346.0F, player0.getZ(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      player0.getIP();
      Player player1 = new Player(0, (String) null, (String) null, 0, 0);
      boolean boolean0 = true;
      player1.setY((-1170.13F));
      player0.reset(false);
      MockFile mockFile0 = new MockFile("0.0.0.0");
      MockFile mockFile1 = new MockFile("", "P");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-3497));
      Party party0 = player0.head;
      player0.boss = null;
      player0.reset(false);
      long long0 = player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-3497", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = true;
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(14335);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(5);
      System.setCurrentTimeMillis(5);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)66;
      player1.unpack(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-27415), (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        dataInputStream0.readFully(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(275);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte) (-23);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setDead((-534L));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(2562);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)86;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*ndbT\"");
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)6;
      player0.setDead();
      byteArray0[4] = (byte) (-10);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)97;
      byteArray0[7] = (byte)90;
      byteArray0[8] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(2229);
      player0.setDead(127L, false);
      Player player1 = new Player((-2462));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
