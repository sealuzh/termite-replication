/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 04:56:16 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      classWriter0.version = 50;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4102, "}iUQW", "Di2Om:>xSPD9", (String) null, "Di2Om:>xSPD9");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte) (-42);
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)27;
      byteArray0[8] = (byte) (-90);
      byteVector0.data = byteArray0;
      byteVector0.length = 50;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      classWriter0.index = (-6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1164), "TTQHXsekIPLKbb}o", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "TTQHXsekIPLKbb}o");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      classWriter0.index = (-1192);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6), "The prefix must n be null", "The prefix must n be null", (String) null, "The prefix must n be null");
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(59);
      classWriter0.newUTF8("N");
      classWriter0.addType("N");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByte(3356);
      byteVector0.length = 2203;
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-178), "4\"){2C,u", "4\"){2C,u", "Z", object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addType("Ly||ajVo%FkKGwK");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.newMethod("Ly||ajVo%FkKGwK", "[]", "j?", false);
      byteVector0.putByte((-471));
      byteVector0.length = (-1364);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 9, "j?", "Ly||ajVo%FkKGwK", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("ConstantValue", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1364
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1016));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "A:Lz2YE", "A:Lz2YE", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 331;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      classWriter0.version = (-2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      classWriter0.version = 903;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4109, "lp,t4ui]+7Cn", "lp,t4ui]+7Cn", "lp,t4ui]+7Cn", "lp,t4ui]+7Cn");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2523));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2523), "yG>Up9*#dr;Mw", "yG>Up9*#dr;Mw", "yG>Up9*#dr;Mw", "yG>Up9*#dr;Mw");
      fieldWriter0.visitAnnotation("yG>Up9*#dr;Mw", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(551);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 551, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(820);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ":3)AS", ":3)AS", ":3)AS", ":3)AS");
      fieldWriter0.visitAnnotation(":3)AS", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(43);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 43, "N", "N", (String) null, "N");
      fieldWriter0.visitAnnotation("9f6F*", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(61);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 61, "N", "N", (String) null, "N");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1379);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1379, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(61);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 61, "N", "N", (String) null, "N");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6), "The prefix must n be null", "The prefix must n be null", (String) null, "The prefix must n be null");
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 32, ";0pD=yE%n]", ";0pD=yE%n]", ";0pD=yE%n]", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1016));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "V:LzE", "V:LzE", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1016));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "V:LzE", "V:LzE", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(551);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 551, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1016));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1016), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 50, "", "", "", "");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, ")", ")", ")", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(697);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 718, "W%Zdc,OCb3/t4", "PZdRlct", "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4");
      fieldWriter0.visitEnd();
      classWriter0.firstMethod = null;
      Attribute attribute0 = new Attribute("W%Zdc,OCb3/t4");
      classWriter0.visitSource("", "W%Zdc,OCb3/t4");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-85);
      byteArray0[4] = (byte) (-2);
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, (byte) (-2), (byte)0, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(551);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 551, "G?*<VIeT:i?oca+,i'Z", "G?*<VIeT:i?oca+,i'Z", "G?*<VIeT:i?oca+,i'Z", "G?*<VIeT:i?oca+,i'Z");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1033));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1033), "V:LzE", "V:LzE", "V:LzE", "V:LzE");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(551);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 551, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ":LE", ":LE", ":LE", ":LE");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1634), "x", "x", "x", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
