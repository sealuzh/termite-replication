/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 09:25:57 GMT 2020
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.InputStream;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("Z.r", "Z.r");
      String[] stringArray0 = new String[4];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "Z.r";
      stringArray1[1] = "Z.r";
      stringArray1[2] = "Z.r";
      stringArray1[3] = "Z.r";
      stringArray1[4] = "Z.r";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      stringArray1[5] = "**/CVS/**";
      stringArray1[6] = "Z.r";
      stringArray1[7] = "$C";
      archiveScanner0.setExcludes(stringArray1);
      stringArray0[0] = "Z.r";
      stringArray0[1] = "Z.r";
      stringArray0[2] = "Z.r";
      stringArray0[3] = "Z.r";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processArchive(improvedFile0, "Z.r");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[3];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "Y_3|/SC^l";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.excludes = stringArray1;
      stringArray0[0] = "Y_3|/SC^l";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processFile("Y_3|/SC^l");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l", "Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processFile("&cB|g-WvW!COhA.jar");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l", "Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.haveSlowResults = true;
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Y_3|/SC^l", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/Y_3|/SC^l/Y_3|/SC^l
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/S:C^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[11];
      archiveScanner0.excludes = stringArray0;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsExcluded = vector0;
      stringArray0[0] = "Y_3|/S:C^l";
      archiveScanner0.includes = stringArray0;
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Y_3|/S:C^l", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/Y_3|/S:C^l
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Z.r";
      stringArray0[1] = "Z.r";
      stringArray0[2] = "Z.r";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[3] = "Z.r";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processArchive((File) null, ".EAR");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("INVALID_FILE_NAME", "");
      improvedFile1.delete();
      try { 
        archiveScanner0.scandir(improvedFile1, "Wt[#0Yf\"yD 8N8%$", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /INVALID_FILE_NAME0
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("\"t");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("R/T:h,Zz%", "R/T:h,Zz%", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "\"t";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("#7@cQMM.cU USU!Jz", "Could not find output file, ");
      improvedFile1.createTempDir();
      // Undeclared exception!
      archiveScanner0.scandir(mockFile0, "\"t", false);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "Y_3|/SC^l");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, Y_3|/SC^l
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "tempdir");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/!SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir(")^?h}iB~3[V", ")^?h}iB~3[V");
      archiveScanner0.setBasedir((File) improvedFile1);
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "mu5j<Ugj%*u/8_|N", true);
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("\"t");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("R/T:h,Zz%", "R/T:h,Zz%", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(mockFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile.createTempImprovedFile(".jar", (String) null, improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "Wt[#0Yf\"yD 8N8%$", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("Z.r", "Z.r");
      String[] stringArray0 = new String[4];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "Z.r";
      stringArray1[1] = "Z.r";
      stringArray1[2] = "Z.r";
      stringArray1[3] = "Z.r";
      stringArray1[4] = "Z.r";
      stringArray1[5] = "**/CVS/**";
      stringArray1[6] = "Z.r";
      stringArray1[7] = "$C";
      archiveScanner0.setExcludes(stringArray1);
      stringArray0[0] = "Z.r";
      stringArray0[1] = "Z.r";
      stringArray0[2] = "Z.r";
      stringArray0[3] = "Z.r";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "Z.r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("Y_3|/SC^l", "Y_3|/SC^l");
      archiveScanner0.setBasedir((File) improvedFile1);
      archiveScanner0.scan();
      try { 
        archiveScanner0.processArchive(improvedFile0, ".jar");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, Y_3|/SC^l
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Y_3|/SC^l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("\"t");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("!`V~sWSoD", "!`V~sWSoD", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      archiveScanner0.processFile(".jar.jar");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l", "Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.processDirectory(improvedFile0, "Y_3|/SC^l", true);
      assertFalse(improvedFile0.isDirectory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir(")^?h}iB~3[V", ")^?h}iB~3[V");
      archiveScanner0.setBasedir((File) improvedFile1);
      archiveScanner0.scan();
      archiveScanner0.scandir(improvedFile0, "(3(LUyD", true);
      assertTrue(improvedFile0.canWrite());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir(")^?h}iB~3[V", ")^?h}iB~3[V");
      archiveScanner0.setBasedir((File) improvedFile1);
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile1, "&%P&", false);
      assertFalse(improvedFile1.isHidden());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y_3|/SC^l");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[13];
      archiveScanner0.excludes = stringArray0;
      stringArray0[0] = "Y_3|/SC^l";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Y_3|/SC^l", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("*!qP", "*!qP");
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("*!qP", "LVIW.jar", mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertTrue(boolean0);
  }
}
