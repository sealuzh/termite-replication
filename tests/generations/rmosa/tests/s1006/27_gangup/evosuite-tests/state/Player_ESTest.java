/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 04:32:27 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.net.URI;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(2224L);
      Player player0 = new Player(4919, "c", "c", (-1284));
      player0.setX((-1.0F));
      player0.getX();
      Player player1 = new Player((short)4919, "n,!}'Ilhz6_ ", 4919);
      player1.add(player0);
      Player player2 = new Player((-1043), "c", 929);
      player0.setJoinOK(player2, false);
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte)5;
      player0.unpack(byteArray0);
      player0.gangStrength();
      player0.gangStrength();
      assertEquals((-1.0F), player0.getX(), 0.01F);
      
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-11566));
      player0.setMoney((-11566));
      player0.getMoney();
      System.setCurrentTimeMillis((short)4919);
      player0.getX();
      System.setCurrentTimeMillis((-11566));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Knhddy#\"4");
      Player player0 = new Player(1282, (String) null, "", 1282, (-68));
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertNull(string0);
      assertEquals(1282, player0.getPictureId());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals((-68), player0.getStrength());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(3801);
      player0.setJoinOK(player0, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-78);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-78), 1024);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ";
      Player player0 = new Player((-1691), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 1257);
      player0.pack();
      player0.setDead((long) (-1691));
      player0.getTimeOfDeath();
      player0.gangStrength();
      player0.setY(0.0F);
      System.setCurrentTimeMillis(1392409296320L);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(959, (String) null, 959);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      player1.setY(0.0F);
      player1.boss = (Party) player0;
      byte[] byteArray0 = player1.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.write(byteArray0);
      pipedOutputStream0.write(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(31, pipedInputStream0.available());
      
      player1.getX();
      player1.pack();
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      player0.gangStrength();
      Player player1 = new Player(3033, (String) null, (short)4919);
      player1.toString();
      assertEquals(4919, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player(1948, "", "", 1467, 1);
      player1.setJoinOK(player0, false);
      player0.setY((-1320.6033F));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(3456);
      player0.getY();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(826, "(,+l", "(,+l", 826, 0);
      boolean boolean0 = false;
      player0.setJoinOK(player0, false);
      player0.pack();
      player0.isJoinOK(player0, false);
      player0.gangBoss();
      player0.getStrength();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("(,+l");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-532), (String) null, (-532));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(3501);
      Player player1 = new Player(3501, "", "", 3501, (-1316));
      player1.prev = (Party) player0;
      player0.add(player1);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player3501", player0.toString());
      
      float float0 = Player.TOLERANCE;
      int int0 = player1.getStrength();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals((-1316), int0);
      assertEquals(3501, player1.getPictureId());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-1669), "CNf[1ZIuw`", "CNf[1ZIuw`", 1632, (-1669));
      player0.setMoney(3750.585F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CNf[1ZIuw`");
      player0.gangStrength();
      player0.setZ(3750.585F);
      player0.getIP();
      player0.setDead((long) 1632, false);
      player0.getMoney();
      player0.toString();
      player0.getTimeOfDeath();
      player0.getZ();
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-1612), "EZxV%gZ}^Pd", (-1612));
      player0.setDead();
      player0.isDead();
      Player player1 = new Player((-838), "EZxV%gZ}^Pd", "", (-838), 1382);
      player1.setDead(151L, false);
      player1.reset(false);
      player0.head = (Party) player1;
      player0.getMoney();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-23);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-46);
      pipedOutputStream0.write(byteArray0);
      pipedOutputStream0.write(byteArray0);
      pipedOutputStream0.write(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player1.unpack(dataInputStream0);
      player0.reset(false);
      player1.getPictureId();
      System.setCurrentTimeMillis((-4613L));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      Player player1 = new Player((short)4919, ".y39 )9[S*Ym*Vpo+!", "lgL$n!WCaV", (short)4919);
      player0.isJoinOK(player1, false);
      int int0 = player1.getPictureId();
      assertEquals(4919, int0);
      
      int int1 = player0.getStrength();
      assertEquals(1, int1);
      
      player1.isJoinOK(player0, true);
      assertEquals(".y39 )9[S*Ym*Vpo+!", player1.getIP());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(".y39 )9[S*Ym*Vpo+!");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      Player player2 = new Player();
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertFalse(player2.isDead());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertTrue(player2.isConnected());
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0, player2.getPictureId());
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals("Player-1", player2.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, "P4<b$.O{veFg0DuLD0X", "", 0, (-584));
      int int0 = player0.gangStrength();
      assertEquals((-584), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("P4<b$.O{veFg0DuLD0X", player0.getIP());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", 0);
      player0.id = 0;
      player0.setDead(14L, false);
      player0.gangStrength();
      player0.getSubparty();
      player0.getTimeOfDeath();
      player1.setDead(14L, true);
      player1.setY(0);
      player0.isJoinOK(player1, true);
      player0.setY(0.1F);
      player0.getIP();
      player0.getY();
      player0.setDead((long) 1, false);
      assertEquals(1L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(3784);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.getName());
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player(2);
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals("Player2", player1.toString());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player1", player0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-15060), "35}Y }]2/afO", (-15060));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(3801);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-2177), "", "", (-1506), 166);
      player0.getIP();
      assertEquals(166, player0.getStrength());
      assertEquals((-1506), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(5, "|7QT-JVmUdu", "g8#x4rB0l%O5F", 0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      player0.getName();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("|7QT-JVmUdu", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.isConnected();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)55;
      Player player1 = new Player((-13));
      player0.remove(player1);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      player0.setZ((byte) (-125));
      player0.setDead((long) (byte)0, false);
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      player1.remove(player0);
      player0.setX(607.3529F);
      player0.pack();
      player0.gangStrength();
      player0.setJoinOK(player1, true);
      player1.getSubparty();
      player1.setConnected(true);
      float float0 = player0.getZ();
      assertEquals(607.3529F, player0.getX(), 0.01F);
      assertEquals((-125.0F), float0, 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-2112));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)0;
      byteArray0[1] = (byte) (-48);
      byteArray0[5] = (byte) (-61);
      player0.unpack(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)43;
      player0.gangStrength();
      System.setCurrentTimeMillis((short)4919);
      player0.type();
      System.setCurrentTimeMillis(5);
      System.setCurrentTimeMillis((-1224L));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(197);
      player0.setX(197);
      player0.setConnected(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)44;
      player0.gangStrength();
      player0.setMoney((byte)71);
      player0.setConnected(true);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte) (-59);
      player0.unpack(byteArray0);
      player0.type();
      player0.getMoney();
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals(197.0F, player0.getX(), 0.01F);
      assertEquals(71.0F, float0, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(3491);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals("Player3491", player0.toString());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-3776), "{", "tB&tbrD", 0, 0);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("{", player0.getIP());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(3, "<`n@i %.1", "<`n@i %.1", 3, 3);
      int int0 = player0.gangStrength();
      assertEquals(3, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(3, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-270));
      player0.setMoney(0.0F);
      player0.getPictureId();
      player0.setX((-270));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      player0.getSubparty();
      // Undeclared exception!
      try { 
        dataOutputStream0.writeShort((short)4919);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1612));
      String string0 = player0.getIP();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", string0);
      assertEquals("Player-1612", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-3885), ".TPoA3!l+^,", 1);
      boolean boolean0 = player0.isDead();
      assertEquals(1, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = (-640);
      Player player0 = new Player(1714, "B$9", (-640));
      player0.setZ(1714);
      Party party0 = new Party((-25789));
      party0.getSubparty();
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-2352), "6WB(RnFVoVGdLq", "6WB(RnFVoVGdLq", (-2352), (-2352));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("6WB(RnFVoVGdLq", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals((-2352), player0.getPictureId());
      assertEquals((-2352), player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(3127, "", 3127);
      player0.setConnected(false);
      player0.setDead();
      player0.isConnected();
      player0.getName();
      player0.setConnected(false);
      player0.setConnected(false);
      player0.setDead((-1L), false);
      player0.setDead();
      player0.setDead((-2092L), false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-41);
      player0.setConnected(false);
      player0.unpack(byteArray0);
      float float0 = player0.getZ();
      assertEquals((-2092L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(3456);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-40);
      pipedOutputStream0.write(byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-40);
      byteArray1[1] = (byte) (-23);
      byteArray1[2] = (byte)4;
      pipedOutputStream0.write(byteArray1);
      pipedOutputStream0.write(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-2175), "", "T:?1: >amO", (-2175), (-2175));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)116;
      byteArray0[6] = (byte)5;
      player0.unpack(byteArray0);
      player0.pack();
      player0.getZ();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "", (File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(1, (String) null, 1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, "", 2404);
      player0.getSubparty();
      Player player1 = new Player((short)4919);
      player0.boss = (Party) player1;
      player0.setMoney(0.2F);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.toString();
      player0.gangStrength();
      player0.toString();
      player0.getName();
      player1.setJoinOK(player0, false);
      assertEquals(2404, player0.getPictureId());
      
      int int0 = player1.gangStrength();
      assertTrue(player1.isConnected());
      
      player1.setConnected(true);
      int int1 = player1.getStrength();
      assertEquals(1, int1);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-320), "", 21);
      Player player1 = new Player((-437));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals("Player-437", player1.toString());
      
      Player player2 = new Player((-320), "", (-1863));
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(21, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(959);
      String string0 = player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player959", string0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(2896, (String) null, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.id = (-1090);
      player0.setMoney(0);
      player0.isDead();
      player0.reset(false);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertFalse(boolean0);
      
      player0.getName();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(3456);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      Player player0 = new Player(3801);
      Player player1 = new Player((short)4919);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(2);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Player player0 = new Player(10, "", 1);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((long) 1, true);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1L, long0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(0);
      long long0 = player0.getTimeOfDeath();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, long0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player0", player0.getName());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      player0.reset(true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(3801);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.next;
      player0.prev = null;
      player0.setDead((long) 0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.writeDouble(0.1F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(2563);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-979));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(31, byteArrayOutputStream0.size());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(0);
      player0.reset(false);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.getName());
  }
}
