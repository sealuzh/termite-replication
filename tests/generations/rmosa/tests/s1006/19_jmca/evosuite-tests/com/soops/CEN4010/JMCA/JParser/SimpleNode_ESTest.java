/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 04:59:02 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.FileDescriptor;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.SyncFailedException;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 47;
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump(")", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1272));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.parent = nodeArray0[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-51);
      byteArray0[0] = (byte) (-25);
      byteArray0[7] = (byte)49;
      byteArray0[8] = (byte) (-53);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(1);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node[] nodeArray1 = new Node[6];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<token of kind 7>");
      nodeArray1[0] = (Node) simpleNode0;
      nodeArray1[1] = (Node) simpleNode0;
      nodeArray1[2] = (Node) simpleNode0;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      ArrayList<String> arrayList0 = new ArrayList<String>(set0);
      simpleNode0.identifiers = arrayList0;
      nodeArray1[3] = (Node) simpleNode0;
      simpleNode0.identifiers = null;
      nodeArray1[4] = (Node) simpleNode0;
      nodeArray1[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray1;
      simpleNode0.children = nodeArray1;
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(nodeArray1[3], 682);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(69);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1789801664));
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.jjtGetChild(0);
      assertNotSame(node0, simpleNode1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4988179669030733
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.jjtAddChild(simpleNode0, 47);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("~@GhUG_-&g%", stringWriter0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*rshft</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*gt", stringWriter0);
      assertEquals("<WildcardBounds>\n  <identifier>*lshft</identifier>\n</WildcardBounds>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      SimpleNode simpleNode1 = new SimpleNode((-1));
      simpleNode0.parent = (Node) simpleNode0;
      Node node0 = simpleNode0.jjtGetParent();
      assertEquals(0, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("|");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      SimpleNode simpleNode1 = new SimpleNode((-2138));
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.dump("  <identifier>", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>|</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      simpleNode1.dump("4/qPL&a>^-eS%@.", stringWriter1);
      String string0 = simpleNode0.toString();
      assertEquals("InstanceOfExpression : |", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1607);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      SystemInUtil.addInputLine((String) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 220);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 221);
      // Undeclared exception!
      try { 
        simpleNode0.toString("_fab~'h)MAI4/9+_tk%");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1607
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("1");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append('X');
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals("X<VariableDeclaratorId>\n  <identifier>1</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      assertEquals("X<VariableDeclaratorId>\n  <identifier>1</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("&");
      simpleNode0.id = 9;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*amp</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("{");
      simpleNode0.id = 9;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(simpleNode0, 10);
      simpleNode1.jjtAddChild(simpleNode0, 1079);
      assertEquals(1080, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild(nodeArray0[0], 10);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[1], (-1612921304));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1612921304
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("  <identifier>", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<WildcardBounds>\n  <identifier>*lt</identifier>\n</WildcardBounds>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        simpleNode0.dump("EnumConstant", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1453729987204198
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.setIdentifier(">=");
      simpleNode1.jjtAddChild(simpleNode0, 10);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump(">=", stringWriter0);
      simpleNode1.jjtGetChild(10);
      simpleNode0.dump(">=", stringWriter0);
      simpleNode1.toString("<\"('!<}f");
      assertEquals(11, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-2004827868));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      stringWriter0.flush();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 4464);
      simpleNode0.dump("EnumBody", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(4465, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<WildcardBounds>\n  <identifier>*gt</identifier>\n</WildcardBounds>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2962));
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(7620);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7620
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode1.jjtAddChild(simpleNode0, 37);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("u,^SYs", stringWriter0);
      assertEquals(38, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(119);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("ro4.LY2@%pJ<^ofyo;", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 119
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 18, (-4056));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      Node node0 = javaParser0.currNode;
      simpleNode0.parent = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.soops.CEN4010.JMCA.JParser.SimpleNode");
      simpleNode0.setIdentifier("b");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.SimpleNode", stringWriter0);
      simpleNode0.dump("</identifier>", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(90);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("}");
      simpleNode0.dump("}", stringWriter0);
      assertEquals("}<WildcardBounds>\n</WildcardBounds>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("ConditionalAndExpression", stringWriter0);
      assertEquals("<NameList>\n  <identifier>~</identifier>\n</NameList>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("NameList : ~", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0915269783609793
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 37;
      SimpleNode simpleNode0 = new SimpleNode(37);
      String string0 = "~";
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter(2619);
      stringWriter0.flush();
      simpleNode0.dump("KT'&P)5#H@88mt", stringWriter0);
      simpleNode0.dump("~", stringWriter0);
      StringReader stringReader0 = new StringReader("~");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      try { 
        javaParser0.Statement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ~
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9510567829046702
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter(2619);
      stringWriter0.flush();
      simpleNode0.dump("KT'&P)5#H@88mt", stringWriter0);
      simpleNode0.dump("~", stringWriter0);
      StringReader stringReader0 = new StringReader("~");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      javaParser0.jjtree = jJTJavaParserState0;
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 37);
      simpleNode1.dump("~", stringWriter0);
      assertEquals("<NameList>\n  <identifier>~</identifier>\n</NameList>\n<NameList>\n  <identifier>~</identifier>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9786283849678516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 10;
      SimpleNode simpleNode0 = new SimpleNode(10);
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode0.jjtSetParent(simpleNode1);
      String string0 = ">=";
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-124249917));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-124249917));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9766893090132731
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      String string0 = ">";
      simpleNode0.setIdentifier(">");
      simpleNode0.jjtSetParent((Node) null);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '+';
      charArray0[1] = 'H';
      charArray0[2] = '2';
      charArray0[3] = '!';
      charArray0[4] = '^';
      charArray0[5] = 'k';
      charArray0[6] = '0';
      // Undeclared exception!
      try { 
        stringWriter0.write(charArray0, 33, 33);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.975635158878412
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      simpleNode0.toString("{");
      stringWriter0.flush();
      simpleNode0.dump("dr@WC>^3zc-!~}pS4", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*gt</identifier>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2206));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2206
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9749540746744716
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("^=", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }
}
