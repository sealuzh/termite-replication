/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 04:50:43 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.setIdentifier((-910));
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      assertEquals((-910), derivedVariable0.getIdentifier());
      
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      Variable.validateFields(derivedVariable1);
      derivedVariable1.getAlternativeVariable();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4925475601781946
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable1.setName("i");
      assertEquals("i", derivedVariable1.getDisplayName());
      
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      derivedVariable1.setIdentifier(97);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      int int0 = derivedVariable1.getIdentifier();
      assertEquals("97", derivedVariable1.getDisplayItemIdentifier());
      assertEquals(97, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.257932141837356
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      User user0 = new User("Unknown", "Unknown");
      user0.setPhone("general.error.blankField");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.notes = "dq<\"?9R`";
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      derivedVariable1.setCoded(true);
      User user1 = new User("variable.saveChanges.valueChanged", "variable.saveChanges.valueChanged");
      user1.setLastName("\"6{O");
      user1.setIdentifier((-1));
      user1.setIdentifier(1890);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      derivedVariable0.getCategory();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals(0, derivedVariable2.getIdentifier());
      
      derivedVariable1.isCoded();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.getValueLabels();
      derivedVariable0.getOntologyTerms();
      derivedVariable1.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningDescription();
      derivedVariable1.getCleaningStatus();
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getColumnEnd();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=4.304336908374968
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      rawVariable0.setColumnStart(">SUM7eC4.oQ6bc");
      rawVariable0.setCoded(true);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.setCategory("general.fieldValue.blank");
      rawVariable0.getCategory();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      Variable.validateFields(rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningDescription(">SUM7eC4.oQ6bc");
      derivedVariable1.clone();
      derivedVariable1.getSourceVariables();
      rawVariable0.getSupportingDocuments();
      derivedVariable1.hasSameDisplayName(rawVariable1);
      rawVariable0.getOntologyTerms();
      User user0 = new User();
      user0.setIdentifier((-2034458190));
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getName();
      assertEquals(">SUM7eC4.oQ6bc", derivedVariable1.getCleaningDescription());
      
      rawVariable1.createVariableSummary();
      Variable variable0 = rawVariable1.getAlternativeVariable();
      variable0.getCategory();
      System.setCurrentTimeMillis((-2034458190));
      rawVariable1.getFilePath();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.8948682677381035
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("");
      derivedVariable0.setCodeBookNumber("M|s]-[W_g(hbNT\"L");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.removeValueLabel((ValueLabel) null);
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getLabel();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setCleaningDescription(">!!jDW\"*|\"yiVJ,&Y");
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.isCoded();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "0";
      rawVariable0.clone();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals(">!!jDW\"*|\"yiVJ,&Y", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      User user0 = new User(" ty%pe=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.columnStart = null;
      derivedVariable0.form = null;
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      String string0 = derivedVariable0.getForm();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.860253576465345
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getCategory();
      rawVariable0.getIdentifier();
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      rawVariable0.getYear();
      rawVariable0.getYear();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getLabel();
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8896985514868954
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getCategory();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("VM- DYW#b");
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable1.getValueLabels();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable1.getDisplayItemIdentifier();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.7883741794371653
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("variable.cleaningStatus.label");
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.setCategory("z}^<HV5Kgb4;E");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      derivedVariable0.setIdentifier(505);
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.setName(":oL'`pu ir]T4");
      derivedVariable0.createVariableSummary();
      supportingDocument1.setIdentifier((-2163));
      System.setCurrentTimeMillis(0L);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getName();
      derivedVariable0.clone();
      assertEquals(":oL'`pu ir]T4", derivedVariable0.getName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.792596005829182
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setAffiliation("i");
      rawVariable0.setLabel("i");
      rawVariable0.setCoded(true);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("i", rawVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.145314833360033
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setQuestionNumber("i");
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      arrayList2.iterator();
      arrayList2.add(ontologyTerm3);
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      derivedVariable1.setOntologyTerms(arrayList3);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.getSourceVariables();
      derivedVariable1.hasSameDisplayName(rawVariable1);
      ArrayList<MacawChangeEvent> arrayList4 = RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      assertEquals("i", rawVariable0.getDisplayName());
      assertEquals(3, arrayList4.size());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User("4k4YlB3JKu{@9hOOqo", "4k4YlB3JKu{@9hOOqo");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setName((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.930227805988906
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.cleaningStatus.label");
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.remove((Object) rawVariable0);
      rawVariable0.columnStart = "variable.cleaningStatus.label";
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getForm();
      derivedVariable0.getColumnStart();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("HP+Rdc5qp6LUq)LxQ*d");
      supportingDocument0.setFileName(",JF8,O7=");
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayName();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      rawVariable0.isNewRecord();
      rawVariable0.getAlternativeVariable();
      rawVariable0.getColumnStart();
      rawVariable0.clone();
      assertEquals("variable.cleaningStatus.label", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5412966312718086
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("pA/m)*FV8Me|0-");
      User user0 = new User("pA/m)*FV8Me|0-", "pA/m)*FV8Me|0-");
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      User user1 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user1.setLastName("iya6Js760ag}N~+.dn");
      User.detectFieldChanges(user0, user1, user1);
      user1.setAffiliation("");
      rawVariable1.setLabel("=)i");
      assertEquals("=)i", rawVariable1.getLabel());
      
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(0);
      derivedVariable0.removeSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.6735493258434415
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getAvailability();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getFilePath();
      User user0 = new User("L_oYJ/=", "d");
      user0.setCity("L_oYJ/=");
      user0.setPassword("d");
      derivedVariable0.containsSourceVariable(rawVariable0);
      boolean boolean0 = rawVariable0.isNewRecord();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList1.size());
      
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList2.isEmpty());
      
      derivedVariable1.getSourceVariables();
      rawVariable0.getNotes();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("3ICf");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-2061584299));
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean1 == boolean0);
      
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5423765149766404
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("i");
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("i", rawVariable0.getCategory());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCleaningDescription();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "e7JAnuY";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      ontologyTerm0.setDescription("e7JAnuY");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable0.getColumnEnd();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getCategory();
      assertEquals("e7JAnuY", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7356743952630556
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      rawVariable0.setAvailability("T3in~4");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setPhone("(VtrqQkpGDN@rB-cH}u");
      user0.setAffiliation("i");
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("i", rawVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.735600922576527
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      rawVariable0.setCodeBookNumber("i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setAffiliation("i");
      user0.setAddressLine2("i");
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.587857739982518
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("7vr=>q&P`:-:ZtDtYB-");
      User user0 = new User("7vr=>q&P`:-:ZtDtYB-", "7vr=>q&P`:-:ZtDtYB-");
      User user1 = new User("Tf_|#bVw%tk[#", "7vr=>q&P`:-:ZtDtYB-");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      derivedVariable0.setYear("jeN4Nl");
      User user2 = new User();
      user2.setAffiliation("Tf_|#bVw%tk[#");
      rawVariable0.setLabel("Tf_|#bVw%tk[#");
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.setIdentifier((-2004318069));
      assertEquals((-2004318069), derivedVariable1.getIdentifier());
      
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      derivedVariable0.setIsNewRecord(false);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList3);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      String string0 = derivedVariable0.getColumnStart();
      assertNull(string0);
      
      String string1 = derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertNotNull(string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      derivedVariable1.setAvailability("");
      Variable.validateFields(derivedVariable1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable2);
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.928654410183081
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      User user2 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      assertEquals("i", rawVariable0.getName());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.712140425565448
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("9ru");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("9ru", rawVariable0.getDisplayName());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.995412454458509
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.676630944843476
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      rawVariable0.questionNumber = "i";
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setAffiliation("i");
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.alias.label");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.getDisplayName();
      assertEquals("variable.alias.label", derivedVariable0.getName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.9619765043034842
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-2021));
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.columnEnd = "ht~.";
      rawVariable0.getDisplayItemIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-2021));
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.clone();
      rawVariable0.isNewRecord();
      rawVariable0.getAlias();
      rawVariable1.getSupportingDocuments();
      System.setCurrentTimeMillis(299L);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.createVariableSummary();
      rawVariable0.getName();
      derivedVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isNewRecord());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
      assertEquals(0, variable0.getIdentifier());
      assertFalse(variable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(51);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertEquals("", macawChangeEvent0.getUserID());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      rawVariable0.setCleaningStatus("");
      Variable.validateFields(rawVariable0);
      supportingDocument0.setDescription("");
      supportingDocument0.setDocumentCode("");
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setName("FFrdpi{TgNR{rQV");
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      arrayList0.ensureCapacity((-1879048189));
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getName();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getFilePath();
      assertEquals("FFrdpi{TgNR{rQV", derivedVariable0.getName());
      
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.735600922576527
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      derivedVariable0.setAlias("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(107);
      ontologyTerm0.getDisplayName();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.676630944843476
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      derivedVariable0.columnEnd = "w";
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setAffiliation("i");
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setAvailability((String) null);
      String string0 = rawVariable0.getAvailability();
      assertNull(string0);
      
      String string1 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string1);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1050));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      
      derivedVariable1.getCleaningDescription();
      derivedVariable1.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "e7JAnuY";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("&c8qL.%");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      user0.setAffiliation("i");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("i", rawVariable0.getLabel());
      assertEquals("i", rawVariable0.getName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.258342972836423
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User(" t*)[,Ja'r", ",!y1<");
      user0.setFirstName(",!y1<");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      derivedVariable1.setCodeBookNumber("DUPLICATE_AVAILABILITY_STATE");
      derivedVariable1.setLabel("ye8l");
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getLabel();
      derivedVariable0.getAlias();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable1.getYear();
      derivedVariable1.setCleaningDescription("variable.alternativeVariable.label");
      derivedVariable1.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      user1.setAffiliation("SzOHCRTqS B4");
      derivedVariable1.getColumnStart();
      derivedVariable1.getLabel();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setCleaned(true);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getAlternativeVariable();
      derivedVariable2.removeSourceVariable((Variable) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable3.getColumnEnd();
      derivedVariable3.isCleaned();
      derivedVariable0.getColumnStart();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable4);
      assertEquals("DUPLICATE_AVAILABILITY_STATE", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "SzOHCRTqS B4";
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "CN_-ifi&MeO4(X~;&_";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.88154594818296
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setDescription("");
      supportingDocument0.setDocumentCode("");
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("y3bdnqoji)g");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      arrayList0.remove((Object) macawChangeEvent0);
      arrayList0.add((Variable) derivedVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setColumnStart((String) null);
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertNotNull(string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.3844894049549885
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "c$o?+mz}^~cJ+Sbzih";
      rawVariable0.columnEnd = null;
      rawVariable0.setCodeBookNumber("c$o?+mz}^~cJ+Sbzih");
      rawVariable0.setCodeBookNumber("^q");
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm((String) null);
      rawVariable0.hasSameDisplayName(rawVariable1);
      Variable.validateFields(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCleaningDescription();
      User user0 = new User("c$o?+mz}^~cJ+Sbzih", "");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("SzOHCRTqS B4");
      derivedVariable0.getFilePath();
      derivedVariable0.getOntologyTerms();
      assertEquals("SzOHCRTqS B4", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.7141139201062936
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlternativeVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      User user0 = new User(" tIype=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = " tIype=";
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.codeBookNumber = "(VtrqQkpGDN@rB-cH}u";
      String string0 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.735600922576527
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("*5l[~4,*Up[%kA");
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setAffiliation("i");
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.676630944843476
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      rawVariable0.notes = "i";
      user0.setAffiliation("i");
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      derivedVariable0.codeBookNumber = ")3|PbSz";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "S@hqO/1atE'UQes;kye";
      String string0 = derivedVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getYear();
      assertEquals("", string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getCleaningStatus();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5573884596225187
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.columnEnd = "variable.name.label";
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.name.label", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("%>-Dck}d");
      derivedVariable0.setColumnStart("Unknown");
      derivedVariable0.createVariableSummary();
      derivedVariable0.form = "variable.cleaningStatus.label";
      derivedVariable0.notes = "$g";
      derivedVariable0.getCleaningDescription();
      assertEquals("%>-Dck}d", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.questionNumber = "Unknown";
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCodeBookNumber("'7=cA,JER");
      derivedVariable0.createVariableSummary();
      rawVariable0.getName();
      derivedVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      assertEquals("'7=cA,JER", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = " type=";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      String string0 = derivedVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string1);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(2055);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.form = null;
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      String string0 = derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("^_}W|~`(Y}TP`C_ayQ;");
      derivedVariable0.clone();
      assertEquals("^_}W|~`(Y}TP`C_ayQ;", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User(" type=", "RtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "RtrqQkpGDN@rB-cH}u";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("RtrqQkpGDN@rB-cH}u", derivedVariable1.getNotes());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.isCoded();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("\"!|L}3nJ<L&");
      rawVariable0.clone();
      assertEquals("\"!|L}3nJ<L&", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "!ie";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("!ie", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getNotes());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "qe|`niX%=Me_";
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(117);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setFilePath("~SG.oUDP0-Bm2I/");
      rawVariable0.getColumnEnd();
      rawVariable0.getFilePath();
      assertEquals("~SG.oUDP0-Bm2I/", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.setAddressLine1("(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("Unknown");
      derivedVariable0.createVariableSummary();
      derivedVariable0.form = "variable.cleaningStatus.label";
      derivedVariable0.notes = "jg";
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.557969937643789
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart(" type=");
      rawVariable0.clone();
      assertEquals(" type=", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "SzOHCRTqS B4";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable0.getColumnEnd();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "e7JAnuY";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable0.getColumnEnd();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.cleaningStatus.label");
      rawVariable0.getQuestionNumber();
      String string0 = "vAZVYx";
      rawVariable0.setColumnEnd("vAZVYx");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("DJq4 }M#}cU.RlASV", "macaw.businessLayer.Variable");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "z\"rm";
      rawVariable0.questionNumber = "UNABLE_TO_CREATE_VARIABLE";
      rawVariable0.setQuestionNumber("L8dSJ,-n");
      rawVariable0.createVariableSummary();
      rawVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.questionNumber = "user.postCode.label";
      derivedVariable0.removeSupportingDocuments(arrayList0);
      String string0 = derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("9mf-/");
      rawVariable0.getForm();
      assertEquals("9mf-/", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "elQL2h|i0v:wj[Q";
      rawVariable0.setCoded(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getIdentifier();
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string1 = rawVariable0.getForm();
      assertEquals("", string1);
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, int0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("<h%");
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.getForm();
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      rawVariable0.getCleaningDescription();
      assertEquals("<h%", rawVariable0.getLabel());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("~<+wq!~xdof9w");
      derivedVariable0.getAlias();
      assertEquals("~<+wq!~xdof9w", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("UNABLE_TO_UPDATE_SUPPORTING_DOCUMENT");
      derivedVariable0.getAlias();
      assertEquals("UNABLE_TO_UPDATE_SUPPORTING_DOCUMENT", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.form = null;
      derivedVariable0.setSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.columnStart.label");
      rawVariable0.getColumnEnd();
      assertEquals("variable.columnStart.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.516511102740111
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "O?!fa)~<r$FT";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.form = null;
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "1y;zG[?~nS~VwV/`tnN";
      derivedVariable0.form = "KdW(}!3t`/";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
      
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_CREATE_VARIABLE");
      derivedVariable0.getName();
      derivedVariable0.getCodeBookNumber();
      assertEquals("UNABLE_TO_CREATE_VARIABLE", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1543);
      derivedVariable0.setYear("variable.name.label");
      derivedVariable0.getYear();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = derivedVariable0.getYear();
      assertNotNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "P#+c<*t xhP]";
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getAvailability();
      assertEquals("Unknown", string1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      User user0 = new User("tpe=", "variable.form.label");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.517536743765752
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.form = null;
      derivedVariable0.form = "Opi0~Fx2!ZLZ?";
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("Opi0~Fx2!ZLZ?", derivedVariable0.getForm());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.form = null;
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setYear((String) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user1.setAffiliation("(VtrqQkpGDN@rB-cH}u");
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      User user0 = new User("Unknown", "Unknown");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "PXHH\".]!+4$|}g?!7iD";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      String string0 = derivedVariable0.getName();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "K LjWd{5X6LebMeNJE3";
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      Variable.validateFields(rawVariable0);
      assertEquals("i", rawVariable0.getDisplayName());
      assertEquals("i", rawVariable0.getName());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.setCleaningStatus("variable.cleaningStatus.label");
      rawVariable0.getFilePath();
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setIdentifier((-2061584299));
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getIdentifier();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      derivedVariable0.addSourceVariable((Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "variable.isCode..label";
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.5278738449470564
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i");
      User user0 = new User("i", "i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user0.setCity("i");
      User user1 = new User();
      user0.setAffiliation("i");
      rawVariable0.setLabel("i");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      assertEquals("i", rawVariable0.getName());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.524257204514399
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.form = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.323009262423563
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("Za");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("Za", derivedVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCoded(true);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(derivedVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      derivedVariable0.setFilePath("NRb&x}>0@hAM\"\"");
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }
}
