/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 05:11:20 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-18));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9785775358639506
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token1 = xPathLexer0.plus();
      token1.toString();
      xPathLexer0.not();
      Token token2 = xPathLexer0.star();
      token2.toString();
      token0.toString();
      xPathLexer0.consume((-474));
      token2.toString();
      token0.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken((Token) null);
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_!=Y/:]dB};[pvY");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.setXPath("");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7938131631694842
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.consume((-2120));
      xPathLexer0.not();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.753570429265513
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token1 = xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token1);
      String string1 = token1.toString();
      assertEquals("[ (27) (m.werken.saxpath.T)", string1);
      
      Token token2 = xPathLexer0.dots();
      assertEquals("k", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.setXPath("ark%s");
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("ark%s", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-580));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-672));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7959184263273786
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qb!.N@..V8EU");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("b", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0a8a&1d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".0", token0.getTokenText());
      
      xPathLexer0.mod();
      char char0 = xPathLexer0.LA(0);
      assertEquals('0', char0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.793494183903136
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "com.werken.saxpath.Token";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.plus();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.consume((-6554));
      xPathLexer2.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer2.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1703437762811784
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >:vIGoZm+~Tz-");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{mVXZxC:Q2n*~5ivH1u");
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.consume((-83));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2904623542790858
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U.3I11$ew Kh:X'");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*RHs^LkQ2)OM+O");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("<5");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(15);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("5", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >GoZm+~Tz-");
      XPathLexer xPathLexer1 = new XPathLexer("S@)Pw4.&3>");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?>!ft7nG]Se");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f#]SM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0y?1");
      Token token0 = xPathLexer0.equals();
      assertEquals("0", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.798311588720541
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.star();
      String string0 = token0.toString();
      assertEquals("[ (20) (:)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.slashes();
      assertEquals("=", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.setXPath("e");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("e", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W\"R Ta]FVK");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dv7/?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Dv7", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m{xv)j{");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2478899556719798
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >GoZm+~Tz-");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("GoZm", token1.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.291538129173189
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U.3I11$ew Kh:X'");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("U", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".3", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("I", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.minus();
      assertEquals("1", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("1", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6584256896401368
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZM|p/!+");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (Z)", string0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.rightParen();
      assertEquals("M", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.not();
      String string1 = token2.toString();
      assertEquals("[ (23) (p)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.nextToken();
      assertEquals(11, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8173197508512917
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":4 >Ki");
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.notEquals();
      token0.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (4 )", string0);
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(">", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      token3.toString();
      String string1 = token0.toString();
      assertEquals("[ (5) (:)", string1);
      
      xPathLexer0.setPreviousToken(token3);
      token3.toString();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.setXPath("[ (22) (4 )");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(3, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(" ", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("(", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals("2", token8.getTokenText());
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#_X/;'L(L*jg!b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#_X/;'L(L*jg!b", token0.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.691477450899438
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZM|p/!+");
      Token token0 = xPathLexer0.at();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (16) (Z)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3572921636804158
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U.3I11$ew Kh:X'");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("U.", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("3", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("I11", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.plus();
      assertEquals("e", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Joux1Pvw`kg");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3125628595222434
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LR,Uy@E&Q-");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) (LR)", string0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(",", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.or();
      int int0 = (-1436);
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-1436));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.031358748724878
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w-0p~4\"`p|ZUKvucy-");
      Token token0 = xPathLexer0.whitespace();
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(22, token1.getTokenType());
      assertEquals("-0", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertEquals("~4\"`", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.slashes();
      assertEquals("|", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.setXPath("8d6AqA");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("d6", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("AqA", token6.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5724998387540088
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|aFh");
      xPathLexer0.or();
      xPathLexer0.setXPath("|aFh");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("|aFh");
      Token token1 = xPathLexer1.doubleColon();
      assertEquals("|a", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Fh", token2.getTokenText());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("a", token4.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4411482442934083
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.identifier();
      assertEquals("", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("<5");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2204422579932648
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0a8a&1d");
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.2261321702459138
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("<5");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(15);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.560500512444086
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|aFh");
      xPathLexer0.or();
      xPathLexer0.setXPath("\"d RqR");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.slashes();
      assertEquals("d", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(" RqR", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("R", token4.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8111882323473074
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":4 >Ki");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.setXPath("dNbm");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6941570926736427
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U.3I11$ew Kh:X'");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.dots();
      xPathLexer0.setXPath("ark%s");
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.439243482388646
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?CY(1P");
      xPathLexer0.or();
      xPathLexer0.setXPath("{Z} L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{Z} L", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{Z} L", token1.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZM|p/!+");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.consume((-2914));
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&}e5z5rXWhV#w;eQ$M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&}e5z5rXWhV#w;eQ$M", token0.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.645966354403068
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|aFh");
      xPathLexer0.or();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("|a", token0.getTokenText());
      
      xPathLexer0.setXPath("\"d RqR");
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("\"d RqR");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("d", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(" R", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("q", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7=pZ%=$4I");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.540580695283781
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|aFh");
      xPathLexer0.or();
      xPathLexer0.setXPath("|aFh");
      xPathLexer0.div();
      Token token0 = xPathLexer0.plus();
      assertEquals("|", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("|aFh");
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(17, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("aF", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("aFh", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6186681129945897
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H0Uxt^O[2BAP");
      Token token0 = xPathLexer0.notEquals();
      String string0 = token0.toString();
      assertEquals("[ (22) (H0)", string0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Uxt", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6qGM)NBz.==ke ");
      xPathLexer0.plus();
      xPathLexer0.setXPath("p.jwI{g");
      xPathLexer0.consume((-1988));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7608340580977342
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >GoZm+~Tz-");
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8591848902352393
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!?J~mn@]{%6");
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.setXPath("!?J~mn@]{%6");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.setXPath("");
      xPathLexer0.relationalOperator();
      int int0 = (-179);
      xPathLexer0.consume((-179));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8590827669213377
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!?J~mn@]{%6");
      Token token0 = xPathLexer0.comma();
      assertEquals("!", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.setXPath("!?J~mn@]{%6");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(23, token4.getTokenType());
      assertEquals("!", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("?J", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("~", token6.getTokenText());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("m", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("n@]{%6", token8.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N{6'/jwVWah-df0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3905585565733158
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >>VGoZm+~Tz-");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals(" >", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("VGoZm", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.pipe();
      assertEquals("+", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("~", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OU[E");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H+UC~@Izzm*,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7504504437238377
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token1 = xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token1);
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (27) (m.werken.saxpath.T)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ken", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("k", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.setXPath("[ (27) (m.werken.saxpath.T)");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals(" ", token5.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.mod();
      char char0 = xPathLexer0.LA(8);
      assertEquals('.', char0);
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("(", token6.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.443782489480845
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"N{DJuWsWBUi0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.270596690367271
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dollar();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.number();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume(18);
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.dollar();
      xPathLexer0.currentPosition();
      xPathLexer0.identifier();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(29, int0);
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.and();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token9);
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7773731358382805
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token1 = xPathLexer0.literal();
      assertNotNull(token1);
      
      xPathLexer0.setPreviousToken(token1);
      String string1 = token1.toString();
      assertEquals("[ (27) (m.werken.saxpath.T)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ken", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.setXPath("[ (27) (m.werken.saxpath.T)");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("27", token6.getTokenText());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals(") ", token7.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6950786545894383
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.setXPath("u.-TBu3.5|%?I");
      xPathLexer0.literal();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.rightParen();
      xPathLexer1.plus();
      xPathLexer1.number();
      xPathLexer1.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.5766482455904502
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|aFh");
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.slashes();
      xPathLexer0.setXPath("Tm[1kb5Q1(uFO`n");
      xPathLexer0.setXPath("X;b");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1635008600223442
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.setXPath(".;tH|CIs");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.9778643962668743
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("$D6~'L;I4)+");
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-2120));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`/");
      xPathLexer0.or();
      xPathLexer0.setXPath("`/");
      Token token0 = xPathLexer0.plus();
      assertEquals("`", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.22266386976721
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3136));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7740430509035654
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|aFh");
      Token token0 = xPathLexer0.minus();
      token0.toString();
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (6) (|)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      String string1 = token1.toString();
      assertEquals("[ (13) (a)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Fh", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("[ (6) (|)");
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x)6pK1-Vtz{zgXU");
      XPathLexer xPathLexer1 = new XPathLexer("0\"6~t-pkz&_0-h6u");
      Token token0 = xPathLexer1.equals();
      assertEquals("0", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer1.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("x", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.303413814598895
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0a8?&1d");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("0", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("a8?&1d", token2.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.9696527350682618
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token1 = xPathLexer0.literal();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      String string1 = token1.toString();
      assertEquals("[ (27) (m.werken.saxpath.T)", string1);
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("k", token2.getTokenText());
      
      xPathLexer0.setXPath("ark%s");
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("a", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("rk%s", token4.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("rk", token6.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4538566478843191
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (c)", string0);
      
      xPathLexer0.setXPath(".6Y}fnqX\"I<^#x[M;");
      Token token1 = xPathLexer0.at();
      assertEquals(".", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.equals();
      assertEquals("Y", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1888050876841882
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8p&d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".8", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("p", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.2814204066678432
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8p&d");
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-990));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.6945218746335167
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("FP;!");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7504461748715188
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token1 = xPathLexer0.literal();
      assertNotNull(token1);
      
      xPathLexer0.setPreviousToken(token1);
      String string1 = token1.toString();
      assertEquals("[ (27) (m.werken.saxpath.T)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ken", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("k", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.setXPath("[ (27) (m.werken.saxpath.T)");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(" ", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`S^DJ(8P!jTi0d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`S^DJ(8P!jTi0d", token0.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.576335951617724
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6qGM)NBz.==ke ");
      XPathLexer xPathLexer1 = new XPathLexer("6qGM)NBz.==ke ");
      xPathLexer0.isIdentifierChar('6');
      xPathLexer0.or();
      xPathLexer1.and();
      xPathLexer0.slashes();
      xPathLexer1.setXPath("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6877906150720685
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      int int0 = (-4186);
      xPathLexer0.equals();
      xPathLexer0.consume((-4186));
      xPathLexer0.colon();
      xPathLexer0.hasMoreChars();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8139426575004793
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >GoZm+~Tz-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Go", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Zm", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("+", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B`+_vOsvZ");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.6675024790361757
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6qGM)NBz.==ke ");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (q)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("6", token0.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("M", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.798311588720541
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-2075));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.668582331266923
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZM|p/!+");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (Z)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      xPathLexer0.setXPath("znY;@\\?moim8zh&e4");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("znY", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      Token token3 = xPathLexer0.equals();
      assertEquals(";", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.6174838027942209
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.setXPath(".;tH|CIs");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4775986907893222
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("$0KBv\"_jt/e(");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(26, token5.getTokenType());
      assertEquals("$", token5.getTokenText());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer1.number();
      assertEquals("0", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!?J~mn@]{%6");
      XPathLexer xPathLexer1 = new XPathLexer("s");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.7989354579575494
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|aFh");
      xPathLexer0.or();
      xPathLexer0.setXPath("|aFh");
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.comma();
      assertEquals("F", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("|a", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("h", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7878067984133728
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >GoZm+~Tz-");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`Vyl<a)X3@h");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      String string0 = token0.toString();
      assertEquals("[ (2) (`)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Vyl<a)X3@h", token1.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.743607280061922
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":4 >Ki");
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.notEquals();
      token0.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (4 )", string0);
      
      Token token2 = xPathLexer0.dollar();
      token2.toString();
      String string1 = token0.toString();
      assertEquals("[ (5) (:)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      String string2 = token2.toString();
      assertEquals("[ (26) (>)", string2);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Ki", token3.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.setXPath("[ (22) (4 )");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token1 = xPathLexer0.plus();
      assertEquals("o", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token2 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.039780917545109
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (.)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.setXPath(".!");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.443918117182803
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3fs-a~14\")*dL-Y");
      xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.setXPath("3fs-a~14\")*dL-Y");
      Token token0 = xPathLexer0.identifier();
      assertEquals("3fs-a", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(15);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals("~", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.6455126615479871
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.setXPath(".;tH|CIs");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.6307840346500722
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZM|p/!+");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (Z)", string0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      String string1 = token2.toString();
      assertEquals("[ (23) (|)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.nextToken();
      assertEquals("p/!+", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("p/", token4.getTokenText());
      assertEquals(12, token4.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j}JB?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y7");
      xPathLexer0.setXPath("bS] +B!r<");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("bS] +B!r<", token1.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]>.j5Yu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.consume((-83));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.455586660990479
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (c)", string0);
      
      xPathLexer0.setXPath(".6Y}fnqX\"I<^#x[M;");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".6", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Y}fnqX\"I<^#x[M;", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7463607036060487
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("26zhoV");
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.dots();
      assertEquals("z", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (11) (6)", string0);
      
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      String string1 = token0.toString();
      assertEquals("[ (5) (2)", string1);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("hoV", token3.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.setXPath("Qd^@AGv(");
      Token token4 = xPathLexer0.nextToken();
      assertNotSame(token4, token3);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6qGM)NBz.==ke ");
      xPathLexer0.plus();
      xPathLexer0.setXPath("Op.jwI{g");
      xPathLexer0.consume((-1988));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.7243189303068363
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8XMe~");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("8", token0.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("M", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("e", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("~", token4.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.8345482525328949
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.setXPath("^+M~9_+*4}nE>");
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("^", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.7637227043895436
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (32) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      String string1 = token1.toString();
      assertEquals("[ (5) (o)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("8;reI");
      xPathLexer1.setXPath("PC&\"&AU/Z\"lx%D");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals("&", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer1.equals();
      assertEquals("\"", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w~!.HX77Q&lx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0a8?&1d");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-674));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.3581170573982697
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("J", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("~", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.setXPath("<?V+LV0EA");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("?V+LV0EA", token5.getTokenText());
      
      char char0 = xPathLexer0.LA(6);
      assertEquals('V', char0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-18));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5777233286214165
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[E8l_0W4%Jt=`F`");
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.consume((-3613));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.777299126669501
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.isIdentifierChar('+');
      xPathLexer0.or();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setXPath("tlFSbaTFAnj-)qN%}");
      Token token3 = xPathLexer0.nextToken();
      assertNotSame(token3, token0);
      assertEquals("tlFSbaTFAnj-)qN%}", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("t", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.identifier();
      assertEquals("lFSbaTFAnj-", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9fWYWUeyB)jI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1864865572757703
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U.3I11$ew Kh:X'");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(".", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0697625266210076
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B`+_vOsvZ");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (`)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      String string1 = token0.toString();
      assertEquals("[ (32) (B)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setXPath("[ (5) (`)");
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(" (", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals("5", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.2361681181297204
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0a8?&1d");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.9765045589935208
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("J", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.setXPath("!J~mn@]{%6");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(23, token4.getTokenType());
      assertEquals("!", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("J~", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.not();
      assertEquals("m", token6.getTokenText());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.2599228654307046
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U.3I11$ew Kh:X'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("U.3I11", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ew", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(" ", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{mVXZxC:Q2n*~5ivH1u");
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.consume((-83));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = ":=p\\G%=$4I";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-1436));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
      
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.3535408168971776
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" >>VGoZm+~Tz-");
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.794110516722859
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-2120));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.9602969391529368
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume((-633));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.isIdentifierStartChar(']');
      xPathLexer0.number();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('Y');
      assertTrue(boolean0);
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0238700352087533
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.minus();
      assertEquals(":", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("p", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")<Y59-j~OB(x");
      boolean boolean0 = xPathLexer0.isIdentifierChar('\'');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.6107466427292398
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.slashes();
      xPathLexer0.setXPath(".tH|CIs");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.9839615774220376
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("pG", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.6950566883987848
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6qGM)NBz.==ke ");
      xPathLexer0.and();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      token1.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      String string0 = xPathLexer0.getXPath();
      assertEquals("6qGM)NBz.==ke ", string0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.982246017291655
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.endPosition();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0198984040030794
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.dollar();
      assertEquals(":", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("p", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.3929888464588545
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.setXPath("<?V+LV0EA");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("?V+LV0EA", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("?V", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.0665342018892605
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0277118431183578
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("pG", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("%", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0207327803067925
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.setXPath("-8d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("8", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.326004366392282
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U.3I11$ew Kh:X'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("U.3I11", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("$", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ew Kh:X'", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("w ", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.349849325439517
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":4 >Ki");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("4", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.or();
      xPathLexer0.setXPath("<+#AZxC)`Z+E0Vd4g");
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.0198984040030794
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("p", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.067048307666524
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("%=$4I", token4.getTokenText());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.9419821893481047
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("=", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("=", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.939539373447594
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.9809367740342577
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("pG", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.939539373447594
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.div();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.937673005399815
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9871180302836897
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("J", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("~", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.not();
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.9398367270009689
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      char char0 = xPathLexer0.LA(1159);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.1124462475138848
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B`+_vOsvZ");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (`)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      String string1 = token0.toString();
      assertEquals("[ (32) (B)", string1);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("_vOsvZ", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setXPath("[ (5) (`)");
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals(" (", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("5", token6.getTokenText());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.9403747953356474
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9802747415946682
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!J~mn@]{%6");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("~mn@]{%6", token2.getTokenText());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.98061779476791
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("p", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.4590780203283185
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.setXPath("u.-TBu3.5|%?I");
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals(".-TB", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("3", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer1.slashes();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(31, token3.getTokenType());
      assertEquals(".5", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("m.", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("%?I", token6.getTokenText());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.9806177947679101
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("=", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("p", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.945798740458085
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.9790704059864788
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1251));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.9406189955798477
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("=", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.9297927847536369
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume(827);
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.9820163961665115
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("p", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.939539373447594
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.9809367740342578
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("pG", token2.getTokenText());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.9790704059864788
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("p", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.9806177947679101
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("=", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=0.94011458196068
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("=", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.982246017291655
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.9410649264605612
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("=", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=0.9828593887903261
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.918899538566273
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
