/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 09:19:43 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-272));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9819126378119534
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("!:$'QAp^v@6pBoKia");
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = new Token(10, "!:$'QAp^v@6pBoKia", 10, 104);
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(":$", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("Q", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Ap", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("^", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      int int0 = (-2);
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1198));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3302));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">=|moh?*7mOSMqQ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">=", token0.getTokenText());
      assertEquals(10, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("|", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.800934927977544
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.$#`a GXy0ks");
      xPathLexer0.slashes();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("c.$#`a GXy0ks");
      xPathLexer1.number();
      xPathLexer0.and();
      xPathLexer0.dollar();
      int int0 = (-931);
      xPathLexer0.slashes();
      xPathLexer1.consume((-931));
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3302));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1090));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath(") (");
      XPathLexer xPathLexer1 = new XPathLexer("o|<`oq)S36X>cjLA");
      xPathLexer1.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer1.or();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.56849436356248
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      xPathLexer0.nextToken();
      xPathLexer0.consume((-297));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-2294));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6958621795160562
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = "ma<hEv~'+~N\"iy5s_";
      XPathLexer xPathLexer0 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.consume((-1047));
      XPathLexer xPathLexer1 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume((-158));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.895653120332003
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.consume((-1079));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">6#|<hJznx&F51qvj");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      assertNotNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("``WTKjn8^(");
      xPathLexer0.dots();
      xPathLexer0.consume((-2629));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.693287569462204
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y *#ld/gYougkK#ZBz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-2294));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.441055780123274
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.setXPath(">%/F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(12, token2.getTokenType());
      assertEquals("%/", token2.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3087));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("orqDA");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1008));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.441708468383044
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("N", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(9);
      assertEquals('1', char0);
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("YdE", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a7b@r{(?52{?");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("M/A");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("M/A", token2.getTokenText());
      assertNotSame(token2, token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6940799232481694
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*x-S?<ukbar?yq}lDz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("x-S", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?<ukbar?yq}lDz", token2.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (32) (3)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("io'NBc5XEi(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("io", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.consume((-2672));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6060622637234823
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("NY", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("d", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%T|7n2$!pJ-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%T|7n2$!pJ-", token0.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.2771555773997596
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xW$|>cp\"=TU+9[8(X2,");
      Token token0 = xPathLexer0.dots();
      assertEquals("x", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("W", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("$|", token2.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.consume((-2216));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3850163025665765
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<9AGZ)");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.number();
      assertEquals("9", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9~kzcLntKW_#4A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SD~:V?=6,AG:^");
      xPathLexer0.minus();
      xPathLexer0.consume((-1190));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7021480841566412
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ma", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      XPathLexer xPathLexer1 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      Token token2 = xPathLexer2.dots();
      assertEquals("m", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer2.operatorName();
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9849467990969145
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-Z^|Hy~b");
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-K8#B");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(".nAvd5)c");
      assertEquals(".nAvd5)c", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D\bJgKha$S)UCd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("D\bJgKha", token0.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X$$?uL}XiDRe{km@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1198));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.57613028340169
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x1C-m7");
      Token token0 = xPathLexer0.identifier();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume((-1793));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6303128181260793
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4wgBE[@(n`J7PSei");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8bqE_TkvRkUhtG");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7785045800329242
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.setXPath(">F");
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("F", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0267199079822902
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7469687697541352
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?[LdsU? ){P v");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      Token token2 = xPathLexer0.identifier();
      assertEquals("LdsU", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      String string0 = token1.toString();
      assertEquals("[ (26) ([)", string0);
      
      xPathLexer0.doubleColon();
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(2, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = new Token(15, "?[LdsU? ){P v", 15, 15);
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("v", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0980284078539744
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.setXPath(">F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("F", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("A&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6344636799247994
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("|*_J1RJ4ZA8=Sf/`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`ddBBx");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6687332483829953
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b|!xC0G[");
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("_~l/y',RK");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TN>ySxh*d>sz-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("TN", token0.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&j&^JHhFlt+''F%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&j&^JHhFlt+''F%", token0.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wd?8,Vx1|:K<$:S)*");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.consume((-3270));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0208725686906515
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{V%ig]hp-K%C;Hf/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{V%ig]hp-K%C;Hf/", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.773907861066308
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?[LdsU? ){P v");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.mod();
      String string0 = token1.toString();
      assertEquals("[ (26) ([)", string0);
      
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      Token token2 = xPathLexer0.identifier();
      assertEquals("sU", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = new Token(15, "?[LdsU? ){P v", 15, 15);
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("{", token7.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(" ", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      assertEquals("v", token10.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7077400829049936
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.setXPath("g");
      XPathLexer xPathLexer1 = new XPathLexer("j");
      xPathLexer1.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("j", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("g", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.4432646464098102
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\",eJ=p6=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      XPathLexer xPathLexer1 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.4418451084049067
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'\"Y,ue");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("wT");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.9855764724538605
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q^*f}>7o");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("q", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bH0);H|OfR:%)Z8>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("bH0", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oSqDA");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("H]6.Urh6~-O=gD)T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("H", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|_$X]VLL4>&/!NQ^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?[LdsU? ){P v");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.mod();
      token0.toString();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("?[LdsU? ){P v");
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.setXPath("o'oN4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("o", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3871160010589108
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1m+RwQf9wvt");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("R", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("wQf9wvt", token3.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]Gt.mc");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.9813963340036967
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4wgBE[@(n`J7PSei");
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1014));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("O}}m}]#p|{WE/VH?h}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("O", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^v&`qxyA");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^v&`qxyA", token0.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.440292171527223
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5N1]M7E");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.6641188146039143
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("hEv", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.7081598710530141
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4wgBE[@(n`J7PSei");
      Token token0 = xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("*{*M`u0-");
      xPathLexer0.setXPath("0/#C~VEi");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("t");
      assertEquals("t", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.4849998862697107
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.setXPath(" Lu8");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Lu8", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b|!PxC0G[");
      XPathLexer xPathLexer1 = new XPathLexer("b|!PxC0G[");
      xPathLexer1.setXPath("b|!PxC0G[");
      XPathLexer xPathLexer2 = new XPathLexer("/>r*n(hfZ^f");
      Token token0 = xPathLexer2.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5845243459370502
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("YdE=8D-1{N.%/@", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("Y", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6903752622677266
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=e]7-ZaQv");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("e", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5441028921452884
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=e]7-ZaQv");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("V;.nh1r>uLeO&JP`rt");
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token0);
      assertEquals("V;.nh1r>uLeO&JP`rt", token2.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I7$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("I7", token0.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("G?7;");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.9812341275876327
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-Z^|Hy~b");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("!", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("Z^", token2.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("6};@h");
      xPathLexer0.setXPath("S& LdX >Wrr(}Vs)6");
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token0);
      assertEquals("S& LdX >Wrr(}Vs)6", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.75848019496164
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6ZZ)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("^z'[8p(1 ZMAD");
      Token token1 = xPathLexer0.slashes();
      assertEquals("^", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("z'[8p(1 ZMAD", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("z", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.setXPath("r\"8");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("uu3zz]k");
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token0);
      assertEquals("uu3zz]k", token2.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2889));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.165254788986533
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b|!PxC0G[");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("!", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("PxC0G", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0264044704704611
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0155299673624314
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("NY", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("dE=8D-1{N.%/@", token2.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#bv");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#bv", token0.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.6366366221599724
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ma<hEv~'+~N\"iy5s_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ma", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("hEv", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertEquals("'+", token4.getTokenText());
      assertEquals(27, token4.getTokenType());
      assertNotNull(token4);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.2771555773997596
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xW$|>cp\"=TU+9[8(X2,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("xW", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("$|", token2.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("J");
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      assertNotSame(token2, token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k3|Ox-XV(7!e7HbI}99");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("k3", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1250653487120768
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("$.~l-Q");
      Token token2 = xPathLexer2.nextToken();
      assertEquals("$", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.7368992760725062
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.setXPath("K:A");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.023357040740341
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.pipe();
      assertEquals("@", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("pMR~kcdH", token2.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.2895568260562484
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kiexYLCT.-3^|ka");
      Token token0 = xPathLexer0.identifier();
      assertEquals("kiexYLCT.-3", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.6994402373902764
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?[LdsU? ){P v");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.mod();
      String string0 = token1.toString();
      assertEquals("[ (26) ([)", string0);
      
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      Token token2 = new Token(15, "?[LdsU? ){P v", 15, 15);
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("{", token5.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      Token token6 = xPathLexer0.nextToken();
      assertEquals("P", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1900982561266829
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!6$-Z^|Hy~b");
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5745912606773411
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("R", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("7x");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.9025171946853994
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.whitespace();
      xPathLexer0.setXPath(") (");
      xPathLexer0.setXPath("0de#{lAhom75Q9V%");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.doubleColon();
      String string0 = token0.toString();
      assertEquals("[ (19) (:C)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Q2", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      char char0 = xPathLexer0.LA(5);
      assertEquals('w', char0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.9431937872619043
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-819));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.411758971018835
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`ddBBx");
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5706866876326895
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("mfL?RUd,II:N>8M");
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token0);
      assertEquals("mfL?RUd,II:N>8M", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token1);
      assertEquals((-1), token2.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0222365925610692
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (32) (3)", string0);
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".", token1.getTokenText());
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.2923291668435353
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5864073563239784
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("NYdE", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("=", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",gz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?[LdsU? z{Pv");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?[LdsU? z{Pv", token0.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.4928970737067186
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.LA(29);
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.8495996949483757
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("mfL?RUd,II:N>8M");
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertNotSame(token3, token0);
      assertEquals("fL?RUd,II:N>8M", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("f", token5.getTokenText());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("mfL?RUd,II:N>8M");
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.687420655767592
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]6>}E{r:O");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.7584032422875344
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6ZZ)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Z)", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("Z", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4wgBE[@(n`J7PSei");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2229));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.getXPath();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.4560581581226337
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-K8#B");
      xPathLexer0.setXPath(".nAvd5)c");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(";");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.0606211630677527
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("pM", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.8936935921261018
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@vrZ");
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.consume((-798));
      xPathLexer0.consume(118);
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0212696304337525
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.or();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.9830215952063901
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.9835417963508326
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.797912195797784
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.setXPath("2;L{!? J7?");
      XPathLexer xPathLexer1 = new XPathLexer("j");
      XPathLexer xPathLexer2 = new XPathLexer("B%F$2XZC724");
      Token token1 = xPathLexer2.notEquals();
      xPathLexer1.setPreviousToken(token1);
      assertEquals("B%", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.9669311822043944
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      xPathLexer0.nextToken();
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.9795046222261661
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.6028527093820588
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.number();
      xPathLexer0.setXPath("1[ufS:g.oPI=e%DI[");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.9809367740342578
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("CQ", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.0245126054898777
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.9747193951233681
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      xPathLexer0.consume(526);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9820163961665115
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.937673005399815
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-Z^|Hy~b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("-Z", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9339437967906064
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("NYdE", token1.getTokenText());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.9689222225229608
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.currentPosition();
      xPathLexer0.consume((-2229));
      xPathLexer0.isIdentifierStartChar('}');
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-K8#B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.9820163961665116
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals("C", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.9288755706697487
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.9821786025825756
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (32) (3)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.9309808338276434
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dots();
      assertEquals("Y", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.9689222225229608
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.9412690497510285
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token1);
      
      Token token2 = xPathLexer1.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer1.or();
      xPathLexer0.isIdentifierChar('=');
      XPathLexer xPathLexer2 = new XPathLexer("\"");
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("\"", token4.getTokenText());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.533601797087452
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.setXPath(") (");
      xPathLexer0.literal();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath(") (");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(954);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      char char0 = xPathLexer0.LA(80);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9423583653738509
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.+sKWY");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (32) (3)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('X');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=2.8003226495551314
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("vm7Kl-- 5s4!Lj");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals("vm7Kl--", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('2');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 182
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=0.9857716959848035
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("CQ2", token1.getTokenText());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`ddBBx");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.getXPath();
      xPathLexer0.consume(112);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      String string0 = xPathLexer0.getXPath();
      assertEquals("`ddBBx", string0);
  }

  /**
  //Test case number: 185
  /*Coverage entropy=1.3953761210738067
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("xW$|>cp\"=TU+9[8(X2,");
      xPathLexer1.consume(96);
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=1.0285286697469058
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.at();
      assertEquals("C", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.9729534646494411
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("NYdE=8D-1{N.%/@", token1.getTokenText());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.9806177947679101
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=0.98061779476791
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=0.98061779476791
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=0.9795046222261661
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!-Z^|Hy~b");
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=0.9804369480107322
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".@pMR~kcdH");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=0.9706517278844276
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.plus();
      assertEquals("N", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=0.9689222225229608
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.minus();
      assertEquals("N", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=0.9422872068866133
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=0.8978571371304429
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!6$-Z^|Hy~b");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=0.9753669056593732
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!NYdE=8D-1{N.%/@");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("NYdE", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(29);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 198
  /*Coverage entropy=0.9398367270009689
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("!:$'QAp^v@6pBoKia");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 199
  /*Coverage entropy=0.9461653805253742
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":CQ2]{;CVx?U");
      xPathLexer0.literal();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }
}
