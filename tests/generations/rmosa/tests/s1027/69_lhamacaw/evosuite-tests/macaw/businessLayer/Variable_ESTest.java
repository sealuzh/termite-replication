/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 08:48:29 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_CHECK_DATABASE_EXISTS", "y!>H7pi$j|:Wms}l,f");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setIdentifier(2359);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable1);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.removeIf(predicate0);
      derivedVariable0.removeSourceVariables(arrayList1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      assertEquals("2359", rawVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.getSourceVariables();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("p");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setCleaningStatus("cZs{");
      derivedVariable0.setFilePath((String) null);
      ontologyTerm1.setDescription("variable.columnEnd.label");
      ontologyTerm1.getDisplayName();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.codeBookNumber = "variable.columnEnd.label";
      derivedVariable0.getValueLabels();
      User user0 = new User();
      user0.setAddressLine1((String) null);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getValueLabels();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getFilePath();
      assertEquals("variable.columnEnd.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("", "=Ya");
      user0.setAffiliation("3B`PUa]rbu7'YB9vQ<");
      user0.setUserID((String) null);
      derivedVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      String string0 = derivedVariable0.getNotes();
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(50);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.getCleaningDescription();
      assertEquals("p", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.588579399171122
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      System.setCurrentTimeMillis(1L);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      user0.setCounty((String) null);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setColumnStart((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      arrayList0.add((Variable) rawVariable0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getNotes();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      rawVariable0.getOntologyTerms();
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.538349598217249
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getValueLabels();
      assertTrue(rawVariable0.isNewRecord());
      
      User user0 = new User("9_z8[\bv", "9_z8[\bv");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.6306398469971106
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_CHECK_DATABASE_EXISTS", "y!>H7pi$j|:Wms}l,f");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1311));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      assertEquals("-1311", rawVariable1.getDisplayItemIdentifier());
      
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      assertTrue(derivedVariable0.isCleaned());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(1);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1841822037));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.585547947863809
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User((String) null, "trg\"cO8QX3+kf(");
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      derivedVariable1.setLabel((String) null);
      derivedVariable0.setForm((String) null);
      derivedVariable0.setLabel("$A{}^ep");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      User user1 = new User((String) null, (String) null);
      user1.setAddressLine2("$A{}^ep");
      derivedVariable1.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getSupportingDocuments();
      assertEquals("$A{}^ep", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8303033694907933
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_CHECK_DATABASE_EXISTS", "y!>H7pi$j|:Wms}l,f");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.isCoded();
      derivedVariable0.cloneAttributes(rawVariable1);
      derivedVariable0.clone();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User("R9Pz<K'H", "y!>H7pi$j|:Wms}l,f");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1073741822));
      ontologyTerm0.clone();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getAvailability();
      derivedVariable0.getValueLabels();
      User user0 = new User("NO_ONTOLOGY_TERM_FILTER", "NO_ONTOLOGY_TERM_FILTER");
      User user1 = new User();
      user1.setCounty("variable.year.label");
      User.checkValidUserIDField("NO_ONTOLOGY_TERM_FILTER");
      User.detectFieldChanges(user1, user0, user1);
      boolean boolean0 = true;
      try { 
        User.checkValidEmail("NO_ONTOLOGY_TERM_FILTER");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"NO_ONTOLOGY_TERM_FILTER\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-2990));
      derivedVariable0.setLabel("p");
      derivedVariable0.codeBookNumber = "p";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      arrayList0.parallelStream();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      arrayList1.add((Variable) derivedVariable1);
      arrayList1.removeIf(predicate0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable2);
      assertEquals("-2990", derivedVariable0.getDisplayItemIdentifier());
      
      derivedVariable1.getSourceVariables();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.codeBookNumber = "UNABLE_TO_GET_SOURCE_VARIABLES";
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.673003325297441
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(2925);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("p");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      rawVariable0.getLabel();
      User user0 = new User();
      User user1 = new User("p", "p");
      user1.setCounty("p");
      user0.setPassword("p");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      rawVariable0.getCategory();
      System.setCurrentTimeMillis((-2153L));
      rawVariable0.getOntologyTerms();
      assertEquals("p", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.828002829502935
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.clone();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable1.setName((String) null);
      derivedVariable0.setCodeBookNumber((String) null);
      Variable.validateFields(derivedVariable0);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.setCleaningDescription("z$#.VFH5o-@JZ[63");
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.getCategory();
      derivedVariable0.getCodeBookNumber();
      assertEquals("z$#.VFH5o-@JZ[63", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5395719426739167
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("3}.&93{i?h343Vj/");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getLabel();
      User user0 = new User();
      user0.setCounty("=Zm?");
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("3}.&93{i?h343Vj/", rawVariable0.getName());
      assertEquals("3}.&93{i?h343Vj/", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setYear((String) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getYear();
      arrayList0.parallelStream();
      derivedVariable0.getColumnEnd();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertTrue(derivedVariable0.isCleaned());
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      assertFalse(derivedVariable0.isCoded());
      
      derivedVariable0.setCoded(true);
      derivedVariable0.clone();
      boolean boolean0 = derivedVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("p");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("p", derivedVariable0.getLabel());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("?$a:NZ0?'s", "?$a:NZ0?'s");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7087417327549903
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("", "=Ya");
      derivedVariable0.setColumnEnd("=Ya");
      user0.setAffiliation("3B`PUa]rbu7'YB9vQ<");
      user0.setUserID((String) null);
      derivedVariable0.notes = null;
      user0.setStatus("");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "p";
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      derivedVariable0.setColumnEnd("SELF_REFERENCING_ALTERNATIVE_VARIABLE");
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      User user0 = new User("USim,", "C%:(0Al\u0001O2");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("p");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("p", derivedVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
      assertSame(variable0, rawVariable1);
      assertFalse(variable0.isNewRecord());
      assertEquals("0", variable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      derivedVariable0.setForm((String) null);
      derivedVariable0.setLabel("A{~^ep");
      User user0 = new User();
      user0.setAddressLine2("A{~^ep");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5424127330820716
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.setCleaned(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("NON_EXISTENT_VARIABLE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName((String) null);
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      User user0 = new User("NON_EXISTENT_VARIABLE", (String) null);
      user0.setCounty("NON_EXISTENT_VARIABLE");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable3);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCleaned());
      
      VariableSummary variableSummary0 = rawVariable3.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable3, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable1.getName();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("ontologyTerm.term.saveChanges");
      derivedVariable0.setLabel("p");
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("p");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      rawVariable0.getLabel();
      User user0 = new User();
      User user1 = new User("p", "p");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      rawVariable0.getDisplayName();
      assertEquals("p", rawVariable0.getName());
      
      derivedVariable1.getOntologyTerms();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.6732919255860415
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getFilePath();
      rawVariable0.setCategory("");
      rawVariable0.getCategory();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getSupportingDocuments();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("4HxC2+LsntP7Qe");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      derivedVariable1.getDisplayItemIdentifier();
      assertEquals("4HxC2+LsntP7Qe", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      User user0 = new User("variable.notes.label", "DUPLICATE_VALUE_LABELS_WITHIN_LIST");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("enSMc");
      derivedVariable0.setCategory("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCodeBookNumber();
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.630989711424645
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.setNotes("p");
      derivedVariable0.setLabel("p");
      derivedVariable0.codeBookNumber = "p";
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      derivedVariable0.setCleaningStatus(">>BtPb");
      User user0 = new User("USim,", "C%:(0Al\u0001O2");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("p");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("p", derivedVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("p");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setAlias("p");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getLabel();
      User user0 = new User();
      User user1 = new User("p", "p");
      user1.setCounty("p");
      user0.setPassword("p");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      rawVariable0.getCategory();
      assertEquals("p", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1800610761));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariable(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      derivedVariable0.getLabel();
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getFilePath();
      rawVariable0.getCategory();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "Unknown";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("4HxC2+LsntP7Qe");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      derivedVariable1.getDisplayItemIdentifier();
      assertEquals("4HxC2+LsntP7Qe", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.862681628353659
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("WD\"U6Qo@>c^;");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("nE");
      rawVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      derivedVariable0.createVariableSummary();
      rawVariable1.getLabel();
      User user0 = new User();
      user0.setCounty("D>PlD");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable2.getCategory();
      System.setCurrentTimeMillis((-2153L));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.585991948307809
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("p");
      rawVariable0.getLabel();
      User user0 = new User();
      user0.setCounty("general.fieldValue.unknown");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setYear("UNABLE_TO_GET_DERIVED_VARIABLE");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.createVariableSummary();
      assertEquals("UNABLE_TO_GET_DERIVED_VARIABLE", rawVariable2.getYear());
      
      rawVariable3.createVariableSummary();
      rawVariable1.getName();
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("Z(l", "jfu-B)Rnm@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.columnStart = "+";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("jfu-B)Rnm@");
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertFalse(arrayList0.contains(supportingDocument0));
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      User user0 = new User("#,IM>Q{(}P4d", "USim,");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("$1zG#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertFalse(derivedVariable2.isCleaned());
      
      derivedVariable0.getCodeBookNumber();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.384198918389992
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user1 = new User("variable.category.label", "variable.category.label");
      User.detectFieldChanges(user1, user0, user0);
      user1.setAddressLine1("USim,");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.columnStart = "USim,";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      User user0 = new User("}3%*y;d>rj96", "}3%*y;d>rj96");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, (Variable) null);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList1.set(1834, rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1834, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = ";,x";
      rawVariable0.setFilePath("dC~JU$2.bRDc=sM#");
      rawVariable0.getAvailability();
      rawVariable0.getFilePath();
      assertEquals("dC~JU$2.bRDc=sM#", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("USim,");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.questionNumber.label");
      supportingDocument0.setTitle("W#Hk");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setForm("general.error.blankFeld");
      rawVariable0.getQuestionNumber();
      assertEquals("general.error.blankFeld", rawVariable0.getForm());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.setCleaningStatus("blank");
      user0.setAddressLine1("variable.notes.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("blank", derivedVariable0.getCleaningStatus());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_GET_ONTOLOGY_TERMS", "UNABLE_TO_GET_ONTOLOGY_TERMS");
      user0.setAffiliation((String) null);
      user0.setUserID("UNABLE_TO_GET_ONTOLOGY_TERMS");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.columnEnd.label");
      derivedVariable0.form = "7|";
      user0.setStatus("7|");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      arrayList0.add((Variable) rawVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.384753780368075
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable1);
      predicate0.test((Object) null);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) derivedVariable1);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      predicate0.or(predicate3);
      predicate0.negate();
      Variable.validateFields(rawVariable0);
      arrayList0.removeIf(predicate3);
      derivedVariable0.removeSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user1 = new User("(#S*", "pa>W~A<PtJXbhrP  m");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.7722656317296304
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("USim,");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("USim,");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable0.createVariableSummary();
      rawVariable1.getLabel();
      User user0 = new User();
      user0.setCounty("");
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      assertEquals(1, arrayList0.size());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.createVariableSummary();
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("USim,", variableSummary0.getDisplayName());
      
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable3, derivedVariable0);
      assertEquals(0, arrayList1.size());
      
      rawVariable0.getName();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList0.removeIf(predicate0);
      derivedVariable1.setIdentifier(337);
      derivedVariable0.removeSourceVariables(arrayList1);
      User user0 = new User("AMK:n:W[V*Iv", "AMK:n:W[V*Iv");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.getSourceVariables();
      derivedVariable1.getAlternativeVariable();
      assertEquals("337", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2034458190));
      rawVariable0.createVariableSummary();
      assertEquals("-2034458190", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      assertEquals("user.status.label", derivedVariable0.getForm());
      
      derivedVariable0.setForm((String) null);
      User user0 = new User();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      User user0 = new User("y!>H7pi$j|:Wms}l,f", "y!>H7pi$j|:Wms}l,f");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.set(1834, derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1834, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getForm();
      derivedVariable0.createVariableSummary();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.alias.label");
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getFilePath();
      assertEquals("variable.alias.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber(",#v31ny");
      rawVariable0.getColumnEnd();
      assertEquals(",#v31ny", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("~o\"Ie*_(2=;~3a~}");
      boolean boolean0 = false;
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("~o\"Ie*_(2=;~3a~}");
      supportingDocument0.setTitle("~o\"Ie*_(2=;~3a~}");
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.isNewRecord();
      assertEquals("user.status.label", derivedVariable1.getForm());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getNotes());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setCoded(true);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(derivedVariable0.isCoded());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      user0.setAffiliation("FBKo :KNfv{");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      arrayList0.parallelStream();
      derivedVariable0.setIdentifier((-1119));
      MockDate mockDate0 = new MockDate((-1), 567, 0, (-1438), 567, 0);
      macawChangeEvent0.setDate(mockDate0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      arrayList0.removeIf(predicate0);
      int int0 = derivedVariable0.getIdentifier();
      assertEquals((-1119), int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = " +F^j";
      String string0 = rawVariable0.getColumnEnd();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("y^.)4Qz]g");
      derivedVariable0.columnStart = "_D,sp!O";
      derivedVariable0.getFilePath();
      assertEquals("y^.)4Qz]g", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      derivedVariable0.removeSourceVariable((Variable) null);
      String string0 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      User user0 = new User("(9KiOK$n", "variable.alias.label");
      String string0 = derivedVariable0.getNotes();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertEquals("", derivedVariable0.getYear());
      
      derivedVariable1.getYear();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      User user0 = new User("(9KiOK$n", "variable.alias.label");
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User("", "=Ya");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("Eu;");
      rawVariable0.addValueLabel((ValueLabel) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.columnStart = "AH}D";
      Variable.validateFields(rawVariable0);
      rawVariable0.getLabel();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("p");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      rawVariable0.getLabel();
      User user0 = new User();
      User user1 = new User("p", "p");
      user1.setCounty("p");
      rawVariable0.createVariableSummary();
      rawVariable0.getName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm(")H'");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.getSourceVariables();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("p", rawVariable0.getName());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "userSstatus.label";
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.columnEnd = "variable.alternativeVariable.label";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", rawVariable0.getForm());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("p");
      derivedVariable0.codeBookNumber = "p";
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      User user0 = new User("USim,", "C%:(0Al\u0001O2");
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = null;
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges((User) null, ontologyTerm0, ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("SwDeuQdwdYv,=zJB}D");
      derivedVariable0.getColumnEnd();
      assertEquals("SwDeuQdwdYv,=zJB}D", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.form = "i85^j>";
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User("R9Pz<K'H", "y!>H7pi$j|:Wms}l,f");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "R9Pz<K'H";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnStart();
      assertEquals("R9Pz<K'H", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("", "=Ya");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setLabel("=Ya");
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      rawVariable0.getLabel();
      User user1 = new User();
      User user2 = new User("", "supportingDocument.fileName.saveChanges");
      user1.setCounty((String) null);
      user0.setPassword("=Ya");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user1, (RawVariable) null, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("%< 5t}irk");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      ontologyTerm0.setOntologyName("variable.alternativeVariable.label");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaningDescription("%< 5t}irk");
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getNotes();
      derivedVariable0.setAlias("");
      derivedVariable0.setYear("=uH0\"TWasY?dqH$+5\"");
      derivedVariable0.getYear();
      derivedVariable0.setCategory("");
      assertEquals("%< 5t}irk", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "1y7r1z";
      derivedVariable0.removeSourceVariable(rawVariable0);
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      User user0 = new User("user.city.saveChanges", "user.city.saveChanges");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      String string0 = null;
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setAvailability("6bbZ Bm*Sgk");
      derivedVariable0.getYear();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      String string0 = derivedVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "USim,";
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCleaningDescription();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable1.setSourceVariables(arrayList0);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      derivedVariable0.isCoded();
      derivedVariable0.setName("Unknown");
      derivedVariable0.setNotes("Unknown");
      derivedVariable0.setCategory("ng;u1tkn");
      Variable.validateFields(derivedVariable0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      // Undeclared exception!
      try { 
        arrayList1.remove((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      User user0 = new User("DUPLICATE_VARIABLE", "R9Zee!O]9ynef");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("Uma']TuyfF-t");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.notes.label";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFilePath());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("cQ");
      derivedVariable0.clone();
      assertEquals("cQ", derivedVariable0.getYear());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "UNABLE_TO_DELETE_DERIVED_VARIABLE";
      rawVariable0.notes = "UNABLE_TO_DELETE_DERIVED_VARIABLE";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.clone();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "KO=?X";
      derivedVariable0.form = "user.status.label";
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "rn_M";
      rawVariable0.notes = "rn_M";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.columnStart = "[y|b2";
      rawVariable0.getCodeBookNumber();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      // Undeclared exception!
      try { 
        ValueLabel.differencesExist((User) null, rawVariable0, valueLabel0, valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("user.affiliation.saveChanges");
      rawVariable0.codeBookNumber = "*=.g?5LVXV$\b";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.getAlias();
      assertEquals("user.affiliation.saveChanges", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.form = "user.status.label";
      String string0 = derivedVariable0.getAlias();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.codeBookNumber.label";
      String string0 = derivedVariable0.getLabel();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string1);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.forEach(consumer0);
      arrayList0.spliterator();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.codeBookNumber.label";
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList1.set(1, rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("xz>*");
      derivedVariable0.setNotes("UNABLE_TO_GET_CHANGES_FOR_ SER");
      derivedVariable0.form = "user.status.label";
      System.setCurrentTimeMillis((-2153L));
      derivedVariable0.getNotes();
      assertEquals("xz>*", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("Y;");
      derivedVariable0.getQuestionNumber();
      assertEquals("Y;", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("user.status.label");
      String string0 = derivedVariable0.getQuestionNumber();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setQuestionNumber((String) null);
      String string0 = rawVariable0.getQuestionNumber();
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("J*[q?F?Si|;lCfKw}M", "LHA");
      user0.setAddressLine2((String) null);
      UnaryOperator.identity();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setFileName("");
      unaryOperator0.apply(supportingDocument0);
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.isNewRecord();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      rawVariable0.setAlias("general.error.promotesSecurityRisk");
      rawVariable0.getAlias();
      assertEquals("general.error.promotesSecurityRisk", rawVariable0.getAlias());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.status.label";
      derivedVariable0.setColumnEnd("(9KiOK$n");
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.getColumnEnd();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("(9KiOK$n", derivedVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("EZp~IGIR");
      User user1 = new User("EZp~IGIR", "EZp~IGIR");
      rawVariable0.codeBookNumber = "4R }_'pylek";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getCleaningDescription();
      assertEquals("EZp~IGIR", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.columnEnd = "Zfj";
      derivedVariable0.setQuestionNumber("~Xb'5!]?*1*F/5'>|o");
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("/qQ $6JRKpv%T");
      ontologyTerm0.setDescription("~Xb'5!]?*1*F/5'>|o");
      ontologyTerm0.setDescription("[ik<r,yurS=L:&?.");
      ontologyTerm0.setOntologyName("UVPJNs:}");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.questionNumber = "UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH";
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      String string1 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", string1);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "F>IRXZR3:>=P6uX";
      derivedVariable0.form = "user.status.label";
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "UNABLE_TO_GET_SOURCE_VARIABLES";
      derivedVariable0.notes = "UNABLE_TO_GET_SOURCE_VARIABLES";
      derivedVariable0.form = "user.status.label";
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.columnEnd = "w2L[efO0SW";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "'YLtmB2";
      rawVariable0.createVariableSummary();
      rawVariable0.setAlias("UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES");
      rawVariable0.setName("ItN");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertEquals("UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES", rawVariable0.getAlias());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("blank", "Pc`hHaXqyLqx%9Z");
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.768813537072052
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_CHECK_DATABASE_EXISTS", "y!>H7pi$j|:Wms}l,f");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable1);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.removeIf(predicate0);
      derivedVariable0.removeSourceVariables(arrayList1);
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      assertNotNull(macawChangeEvent1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("685@p7olTq|q\",;-nI", "685@p7olTq|q\",;-nI");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.set(61, derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 61, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("]FU}OEC");
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("NON_EXISTENT_VARIABLE_ASSOCIATION");
      rawVariable0.createVariableSummary();
      assertEquals("NON_EXISTENT_VARIABLE_ASSOCIATION", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "URp;Gb9j7x";
      derivedVariable0.notes = "Z6/1XQ]vNJAQ>'4`C2";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.749899816710008
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setFilePath("q{89XwARcwoK");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.parallelStream();
      rawVariable0.getYear();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("q{89XwARcwoK");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      // Undeclared exception!
      try { 
        rawVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.form = "i85^j>";
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setCategory("k!rH");
      derivedVariable0.getNotes();
      derivedVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList1 = null;
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getIdentifier();
      derivedVariable0.setNotes("");
      derivedVariable0.getValueLabels();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "=Ya");
      user0.setStatus("");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setName("");
      derivedVariable0.setIdentifier(0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.form = "user.status.label";
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.512535521785302
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("p");
      derivedVariable0.setLabel("p");
      derivedVariable0.codeBookNumber = "p";
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      User user0 = new User("USim,", "C%:(0Al\u0001O2");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("p");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setAddressLine2("p");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.setCategory("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getCodeBookNumber();
      assertEquals("p", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.5343183560907687
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.isCleaned.saveChanges.changedToNotClean");
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.getLabel();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.3781766359449454
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.6746860298550827
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("p");
      derivedVariable0.setLabel("p");
      derivedVariable0.codeBookNumber = "p";
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      User user0 = new User("USim,", "C%:(0Al\u0001O2");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("p");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("p", derivedVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.6473332103628433
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("", "=Ya");
      user0.setAffiliation("3B`PUa]rbu7'YB9vQ<");
      user0.setUserID((String) null);
      derivedVariable0.notes = null;
      user0.setStatus("");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCategory((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("", "=Ya");
      User user1 = new User();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList1);
      user0.setCounty(":_-QH1b<Psp#");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setYear((String) null);
      User user2 = new User();
      RawVariable rawVariable3 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user2, rawVariable3, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setAvailability("");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.spliterator();
      rawVariable0.removeOntologyTerms(arrayList1);
      Variable.validateFields(rawVariable0);
      rawVariable0.getForm();
      User user0 = new User();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_CHECK_DATABASE_EXISTS", "y!>H7pi$j|:Wms}l,f");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
