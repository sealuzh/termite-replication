/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 09:47:24 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.catalog.UUID;
import org.apache.derby.catalog.types.DefaultInfoImpl;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptor;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.iapi.types.CDCDataValueFactory;
import org.apache.derby.iapi.types.DataTypeDescriptor;
import org.apache.derby.iapi.types.SQLLongvarchar;
import org.apache.derby.iapi.types.StringDataValue;
import org.apache.derby.impl.sql.compile.GetCurrentConnectionNode;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcDataSource;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String[] stringArray0 = null;
      SQLUtil.renderColumnNames((String[]) null);
      String string0 = "/* ";
      // Undeclared exception!
      SQLUtil.isDML("/* ");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ql,3qzJ>t,E(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      Integer integer0 = RawTransaction.ABORT;
      streamTokenizer0.nval = (double) (-4);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 4", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance((-1956620305), "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("~3U{E11lW$~fY>x:K");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/*");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~3U{E11lW$~fY>x:K";
      stringArray0[1] = "~3U{E11lW$~fY>x:K";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "/*", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" and ", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFileWriter mockFileWriter0 = new MockFileWriter("Pe[", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(dBTable0.getDoc());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = " UP.RDB$OBJECT_TYPE = 0) or (RF.RDB$FIELD_NAME is null and UP.RDB$OBJECT_TYPE = 0)) order by 4,7 ";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(" UP.RDB$OBJECT_TYPE = 0) or (RF.RDB$FIELD_NAME is null and UP.RDB$OBJECT_TYPE = 0)) order by 4,7 ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"RF.RDB$FIELD_NAME is null and UP.RDB$OBJECT_TYPE = 0\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = new Boolean("alter materialized viewcaql");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("I;kAR]Jq#DXzP");
      assertNull(boolean1);
      
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, 336330788, "join");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize("*/", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("ROW_NUMBER", false, "ROW_NUMBER", "ROW_NUMBER");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Z>BuN,pX6KOC:nX";
      stringArray0[1] = "9d}zZ<Cah4MU";
      stringArray0[2] = "browse";
      stringArray0[3] = "ROW_NUMBER";
      stringArray0[4] = "ROW_NUMBER";
      stringArray0[5] = "9d}zZ<Cah4MU";
      stringArray0[6] = "ROW_NUMBER";
      String string0 = SQLUtil.join("9d}zZ<Cah4MU", "ROW_NUMBER", stringArray0, (String) null, "42X03", stringArray0);
      assertEquals("9d}zZ<Cah4MU join null as 42X03 on ROW_NUMBER.Z>BuN,pX6KOC:nX = 42X03.Z>BuN,pX6KOC:nX and ROW_NUMBER.9d}zZ<Cah4MU = 42X03.9d}zZ<Cah4MU and ROW_NUMBER.browse = 42X03.browse and ROW_NUMBER.ROW_NUMBER = 42X03.ROW_NUMBER and ROW_NUMBER.ROW_NUMBER = 42X03.ROW_NUMBER and ROW_NUMBER.9d}zZ<Cah4MU = 42X03.9d}zZ<Cah4MU and ROW_NUMBER.ROW_NUMBER = 42X03.ROW_NUMBER", string0);
      
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      String string1 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ql,3qzJ>t,E(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      Integer integer0 = RawTransaction.ABORT;
      streamTokenizer0.nval = 1034.77;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("1034.77", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "PRIMARY KEY ");
      DBSchema dBSchema0 = new DBSchema("x~DMV>Jz`!-|dyR*`Y");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("PRIMARY KEY ", dBSchema0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "PRIMARY KEY ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "PRIMARY KEY ";
      stringArray0[4] = "drop tablealter session";
      stringArray0[5] = "w)7bX#|H(bzC/^.d";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFile mockFile0 = new MockFile("+(2W[e[Tj5");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.append('t');
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      assertSame(printWriter0, mockPrintWriter0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      GetCurrentConnectionNode getCurrentConnectionNode0 = new GetCurrentConnectionNode();
      DataTypeDescriptor dataTypeDescriptor0 = getCurrentConnectionNode0.getDataType();
      CDCDataValueFactory cDCDataValueFactory0 = new CDCDataValueFactory();
      SQLLongvarchar sQLLongvarchar0 = new SQLLongvarchar();
      StringDataValue stringDataValue0 = cDCDataValueFactory0.getNullChar((StringDataValue) sQLLongvarchar0);
      DefaultInfoImpl defaultInfoImpl0 = new DefaultInfoImpl(false, "insert", stringDataValue0);
      ColumnDescriptor columnDescriptor0 = new ColumnDescriptor("org.apache.derby.iapi.types.SQLBoolean", 323, dataTypeDescriptor0, stringDataValue0, defaultInfoImpl0, (UUID) null, (UUID) null, 0, (-1L), (-298L));
      columnDescriptorList0.add((UUID) null, columnDescriptor0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.derby.iapi.sql.dictionary.ColumnDescriptor cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setClob(Strgg, Clob)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Strgg\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("drop table", stringBuilder0);
      SQLUtil.isQuery("drop table");
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = SQLUtil.normalize("F<$YZ/^", false);
      assertEquals("F < $ YZ / ^", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NCLOB");
      DBDataType dBDataType0 = DBDataType.getInstance("NCLOB");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("80220011-010c-bc85-060d-000000109ab8", defaultDBTable0, dBDataType0, integer1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "80220011-010c-bc85-060d-000000109ab8";
      objectArray0[1] = (Object) "NCLOB";
      objectArray0[2] = (Object) "80220011-010c-bc85-060d-000000109ab8";
      objectArray0[3] = (Object) integer0;
      PrintWriter printWriter0 = mockPrintWriter0.format("NCLOB", objectArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(]ps0+J!'?dym:IC3 ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (]ps0+J!'?dym:IC3 
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("my{5\"ej8o[)MG^", defaultDBTable0, (DBDataType) null);
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("my{5\"ej8o[)MG^", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBSchema dBSchema0 = new DBSchema("create table");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("BULK", dBSchema0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("F<$GZ/^", true, defaultDBTable0, "BULK");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertSame(stringBuilder1, stringBuilder0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CONSTRAINT ");
      String[] stringArray1 = new String[4];
      stringArray1[0] = "JANB1";
      stringArray1[1] = "sQ^O1";
      stringArray1[2] = "";
      stringArray1[3] = "CONSTRAINT ";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = SQLUtil.normalize("maintainParentLinks", false);
      assertEquals("maintainParentLinks", string0);
      
      String string1 = SQLUtil.normalize("--", false);
      assertEquals("--", string1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = SQLUtil.normalize("C,qkiMFc7o]", true);
      assertEquals("C, qkiMFc7o ]", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("N`TDO<#=");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "alter materialized viewtable";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("N`TDO<#=", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dBForeignKeyConstraint0.setTable(defaultDBTable0);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NCLOB");
      DBDataType dBDataType0 = DBDataType.getInstance("NCLOB");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("80220011-010c-bc85-060d-000000109ab8", defaultDBTable0, dBDataType0, integer1);
      defaultDBColumn0.toString();
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("80220011-010c-bc85-060d-000000109ab8", false, "1F](rk#=w2a.}3*?", "ibz$or");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Character character0 = Character.valueOf('r');
      Character.isAlphabetic(45);
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'r'", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(false);
      SQLUtil.addOptionalCondition("CONSTRAINT ", stringBuilder0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" )8AS\"8c", true, " )8AS\"8c", "rename");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \" )8AS\"8c\" ", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("F<$GZ/^", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("SELECT * FROM ");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.getInteger("tQfA0~U[U5j9'BNqa", 902);
      String string0 = SQLUtil.substituteMarkers("", "tQfA0~U[U5j9'BNqa", integer0);
      assertEquals("", string0);
      
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      boolean boolean0 = SQLUtil.isDML("n<xyk}1ra2j");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getForeignKeyConstraints();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , ) REFERENCES null(, , , , , )", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = " or ";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("4kSl^I", (String[]) null, " or ", "4kSl^I", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("insert");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "left");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "80220011-010c-bc85-060d-000000109ab8";
      DBDataType.getInstance("NCLOB");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "left", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(3054);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1);
      assertEquals("3054CONSTRAINT left ", stringBuilder1.toString());
      assertEquals("3054CONSTRAINT left ", stringBuilder0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I@cA";
      stringArray0[1] = null;
      stringArray0[2] = "insertvnwq%f";
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("executefailed to create a non-pooled connection for");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callselecst");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = SQLUtil.normalize("truncater)6zxx", true);
      assertEquals("truncater) 6zxx", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("RDB$INDICES");
      assertNull(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into(*/ (nv8cp b)_a[i%h");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("rename");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessionm:c?mr_-r$mx");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "create unique index";
      stringArray0[1] = "create unique index";
      stringArray0[3] = "create unique index";
      stringArray0[4] = "create unique index";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("create unique index", stringArray0, stringArray0[2], "create unique index", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("~r>@?wq x'=]R>", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("42Z16");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("42Z16", "42Z16", versionNumber0);
      defaultDatabase0.getTable("42Z16", false);
      DBDataType dBDataType0 = DBDataType.getInstance(1939, "42Z16");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("42Z16", (DBTable) null, dBDataType0, integer0, integer1);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("42Z16(3,3)", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("`&-g\"(leaf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: `&-g\"(leaf
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<M2s|e");
      DBDataType dBDataType0 = DBDataType.getInstance(34, "<M2s|e");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("<M2s|e", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("<M2S|E", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(" (", 9);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Unknown host ", true, stringArray0);
      String string0 = SQLUtil.ownerDotComponent(dBPrimaryKeyConstraint0);
      assertEquals("null.Unknown host ", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("join", "16)+nR 0d]u+", "16)+nR 0d]u+");
      assertEquals("join", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("alter tablek`dx]7xnk{6pcb(", stringBuilder0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor");
      DBDataType dBDataType0 = DBDataType.getInstance((-3), "");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" and ", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("alter tablek`dx]7xnk{6pcb((1,3)", stringBuilder1.toString());
      assertEquals("alter tablek`dx]7xnk{6pcb((1,3)", stringBuilder0.toString());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", false, "SELECT * FROM ", "SELECT * FROM ");
      String string0 = "alter materialized viewalter tableparameter index out of^bounds:";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      int int0 = (-1440098822);
      // Undeclared exception!
      try { 
        stringBuilder0.replace((-2), (-1440098822), "alter materialized viewalter tableparameter index out of^bounds:");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("R6as!4*K");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "R6as!4*K";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.typeAndName(dBForeignKeyConstraint0);
      assertEquals("foreign key constraint constraint", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9389355707834581
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = SQLUtil.normalize("SQ`@/w}SB", false);
      assertEquals("SQ ` @ / w } SB", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nMAe]h:B.(!lJr>uf");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "J^AxrnDy";
      stringArray0[1] = "SQ`@/w}SB";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "J^AxrnDy", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("nMAe]h:B.(!lJr>uf", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "J^AxrnDy", false, (String[]) null);
      dBUniqueConstraint0.setName("SQ ` @ / w } SB");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = SQLUtil.normalize("alter sessionalter sessionm:c?mr_-r$mx", false);
      assertEquals("alter sessionalter sessionm : c ?  mr_ - r $ mx", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = SQLUtil.normalize("select intos-*7(!r[~zu/5.\"6x", true);
      assertEquals("select intos - * 7 (! r [ ~ zu / 5.\"6x\"", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("renamedrop indexselect into");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.join("NCLOB", "NCLOB", stringArray0, stringArray0[0], "NCLOB", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("COLUMN_LIST", "COLUMN_LIST", stringArray0, "COLUMN_LIST", "COLUMN_LIST", (String[]) null);
      assertEquals("COLUMN_LIST join COLUMN_LIST as COLUMN_LIST on ", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "materiaized";
      stringArray0[1] = "materiaized";
      String string0 = "\u0001\u0082";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("materiaized", stringArray0, (String) null, "\u0001\u0082", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("sele]t", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, "selecst", "selecst");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("gF<$GZ/^");
      SQLUtil.addRequiredCondition("gF<$GZ/^", stringBuilder0);
      assertEquals("gF<$GZ/^ and gF<$GZ/^", stringBuilder0.toString());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.7769347489611231
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SQLUtil.normalize("/lYi5at5Bi|s*%y", true);
      SQLUtil.isDDL("/ lYi5at5Bi | s * % y");
      DBCatalog dBCatalog0 = new DBCatalog("/ lYi5at5Bi | s * % y");
      dBCatalog0.getSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(";LJSbEG", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "Parameter index out of^bounds: ";
      Boolean boolean0 = Boolean.TRUE;
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Parameter index out of^bounds: ");
      int int0 = (-241865555);
      String string1 = "DATE";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DATE");
      int int1 = 1089;
      DBDataType dBDataType0 = DBDataType.getInstance(1089, "Parameter index out of^bounds: ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("DATE", defaultDBTable0, dBDataType0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-241865555), (Object) defaultDBColumn0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -241865555
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBSchema dBSchema0 = new DBSchema("}4KZ'U0B");
      dBSchema0.getTable("}4KZ'U0B");
      DBDataType dBDataType0 = DBDataType.getInstance((-5040), "}4KZ'U0B");
      Integer integer0 = new Integer((-5040));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("}4KZ'U0B", (DBTable) null, dBDataType0, integer0);
      defaultDBColumn0.toString();
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("1F](rk#=w2a.}3*?", true, "}4KZ'U0B : }4KZ'U0B(-5040)", "1F](rk#=w2a.}3*?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Syntax error after 1
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select", false, "select", "select");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK select", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "exec";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("exec", true, "exec", "exec");
      StringBuilder stringBuilder0 = new StringBuilder("exec");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      StringBuilder stringBuilder2 = stringBuilder1.append(charArray0);
      int int0 = 3721;
      // Undeclared exception!
      try { 
        stringBuilder2.append(charArray0, 3721, 3721);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter table", true, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create table9f]", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object object0 = new Object();
      String[] stringArray0 = new String[8];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "D", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , , , , )", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("sjJnUR$", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = SQLUtil.renderValue("<~:");
      assertEquals("'<~:'", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("caql");
      String string0 = SQLUtil.typeAndName(tableContainer0);
      assertEquals("container caql", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[10];
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("SELECT * FROM ", (DBTable) null, (DBDataType) null, integer0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("SELECT * FROM ", (DBTable) null, (DBDataType) null, integer0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("SELECT * FROM ", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join((String) null, (String) null, stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("null as null on ", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "80220011-010c-bc85-060d-000000109ab8";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("tg'!_Tl$1qU[");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("tg'!_Tl$1qU[", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.renderColumnListWithTableName("select into", stringArray0);
      assertEquals("select into.null, select into.null, select into.null, select into.null, select into.null, select into.null", string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.9389355707834581
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.normalize("SQ`@/w}SB", false);
      assertEquals("SQ ` @ / w } SB", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/Y8f8X-)QR} ");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "SQ`@/w}SB";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "SQ ` @ / w } SB", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (SQ`@/w}SB)", string1);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.7887666007588374
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SQLUtil.normalize("SQ`@/w}SB", true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "1$EX|W`";
      SQLUtil.join("SQ`@/w}SB", "1$EX|W`", stringArray0, "1$EX|W`", "1$EX|W`", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(554, "D*ysg{a6`q} <w(a");
      Integer integer0 = new Integer(554);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rename", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("rename D*YSG{A6`Q} <W(A(554) NULL", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = SQLUtil.normalize("+uE.*'j", true);
      assertEquals("+ uE.* 'j'", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("getcurrentd", stringBuilder0);
      assertEquals("getcurrentd", stringBuilder0.toString());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("Op#(SQAT$");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = SQLUtil.removeComments("}4KZ'U0B");
      assertEquals("}4KZ'U0B", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "/lYi5at5Bi|s*%y";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "/lYi5at5Bi|s*%y");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      stringBuilder1.append(855L);
      boolean boolean0 = false;
      DBCatalog dBCatalog0 = new DBCatalog("/lYi5at5Bi|s*%y");
      DBSchema dBSchema0 = new DBSchema("/lYi5at5Bi|s*%y", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/lYi5at5Bi|s*%y", dBSchema0);
      String[] stringArray0 = new String[0];
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(2660, (CharSequence) "SELECT * FROM /lYi5at5Bi|s*%y WHERE ", 42, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 2660
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create tablealter tableparameter index out of^bounds:");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(" 0amw", (String[]) null, "K6", " 0amw", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = "/=XxN(r@VK";
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("/=XxN(r@VK", compositeDBObject0);
      // Undeclared exception!
      try { 
        tableContainer0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.TableContainer", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "call";
      DBDataType dBDataType0 = DBDataType.getInstance((-1624), "call");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, dBDataType0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.innerJoin("&i", stringArray0, "left", "G;'N1W", stringArray0);
      assertEquals("left as G;'N1W on &i.null = G;'N1W.null", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("create materialized view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("jq$*0+t7", "selecst", stringArray0, "jq$*0+t7", "selecst", stringArray0);
      assertEquals("jq$*0+t7 join jq$*0+t7 as selecst on selecst.null = selecst.null", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.join("*/", "into", stringArray0, "into", "into", stringArray0);
      assertEquals("*/ join into as into on into.null = into.null and into.null = into.null and into.null = into.null", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("=kFS3cHBfq}P}g$p(?", stringArray0, "`Ivy0BR]XN;K\"8S=uy", "=kFS3cHBfq}P}g$p(?", stringArray0);
      assertEquals("left join `Ivy0BR]XN;K\"8S=uy as =kFS3cHBfq}P}g$p(? on ", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join("POWER", "POWER", stringArray0, "POWER", "POWER", stringArray0);
      assertEquals("POWER join POWER as POWER on POWER.null = POWER.null and POWER.null = POWER.null and POWER.null = POWER.null and POWER.null = POWER.null and POWER.null = POWER.null and POWER.null = POWER.null", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("Failed to create a non-pooled connection for ", "Failed to create a non-pooled connection for ", (String[]) null, "Failed to create a non-pooled connection for ", "Failed to create a non-pooled connection for ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("qh{", stringArray0, "qh{", "drop materialized view", stringArray0);
      assertEquals("left join qh{ as drop materialized view on ", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("ROW_NUMBER", false, "ROW_NUMBER", "ROW_NUMBER");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT ROW_NUMBER ", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("SELECT * FROM ", true, "SELECT * FROM ", "SELECT * FROM ");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"SELECT * FROM \" ", string0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create table9f]", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create table9f]", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Q,}pi?@r`TJ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Q,}pi?@r`TJ", dBSchema0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "jdbc:postgresql://";
      stringArray0[1] = "jdbc:postgresql://";
      stringArray0[2] = "jdbc:postgresql://";
      stringArray0[3] = "jdbc:postgresql://";
      stringArray0[4] = "Q,}pi?@r`TJ";
      stringArray0[5] = "Q,}pi?@r`TJ";
      stringArray0[6] = "Q,}pi?@r`TJ";
      stringArray0[7] = "jdbc:postgresql://";
      stringArray0[8] = "Q,}pi?@r`TJ";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("jdbc:postgresql://", false, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (jdbc:postgresql://, jdbc:postgresql://, jdbc:postgresql://, jdbc:postgresql://, Q,}pi?@r`TJ, Q,}pi?@r`TJ, Q,}pi?@r`TJ, jdbc:postgresql://, Q,}pi?@r`TJ) REFERENCES Q,}pi?@r`TJ()", string0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("alter materialized viewwstlnga(");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("org.databene.commons.Parser");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materialized viewrpad");
      assertTrue(boolean0);
  }
}
