/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 21:34:01 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean.valueOf(true);
      SQLUtil.isDML("updateqldata still null in writ)sqldatum:");
      System.setCurrentTimeMillis((-1L));
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-3332), "Dt-");
      Integer integer0 = RawTransaction.COMMIT;
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Dt-");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Dt-", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.removeComments("Dt-");
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "alter table", true, "Dt-");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("Dt- DT-(0) NOT NULL", string0);
      
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.constraintSpec(dBNotNullConstraint0, nameSpec0);
      assertEquals("Dt- NOT NULL", string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("*(%>HC$QCDK')Hf");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"%>HC$QCDK'\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "sparc";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      stringArray0[1] = "sparc";
      stringArray0[2] = "sparc";
      stringArray0[3] = "sparc";
      stringArray0[4] = "sparc";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "sparc";
      stringArray1[1] = "sparc";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("sparc", stringArray0, "sparc", "sparc", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(columnDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("beginNestedTransaction", "", versionNumber0);
      defaultDatabase0.getTable("?4&;oED", false);
      DBDataType dBDataType0 = DBDataType.getInstance(704, "WC");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0, integer0, integer1);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("WC");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "select into";
      SQLUtil.isQuery("select into");
      Random.setNextRandom(2127);
      VersionNumber versionNumber0 = VersionNumber.valueOf((String) null);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase((String) null, "}M<68QJlRS lYb|g0;I", versionNumber0);
      String string1 = "KJ";
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable("KJ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'KJ'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("I_3z");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("y\"*gk>cEHLW&7", stringArray0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("I_3z", (DBTable) null, 6545, "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized view");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("CHECK ", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorMessages errorMessages1 = new ErrorMessages();
      ErrorMessages errorMessages2 = new ErrorMessages();
      assertFalse(errorMessages2.equals((Object)errorMessages1));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = SQLUtil.normalize("--", false);
      assertEquals("--", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("//", 127);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("^", (DBTable) null, 996, "] data leaf overflow parent:");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("] DATA LEAF OVERFLOW PARENT:", stringBuilder0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SQLUtil.removeComments("");
      SQLUtil.isProcedureCall("org.ap");
      ArrayList<DefaultDBColumn> arrayList0 = new ArrayList<DefaultDBColumn>();
      Vector<DBColumn> vector0 = new Vector<DBColumn>(arrayList0);
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("O0#QGa8-#YV2\f/,tO", compositeDBObject0);
      tableContainer0.getTable("org.ap");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, 4885, "create table");
      vector0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = " 3!S=+f7JGp^";
      stringArray0[2] = "O0#QGa8-#YV2\f/,tO";
      stringArray0[3] = " 3!S=+f7JGp^";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(389, "alter maerialized view");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("`V'D2(4", (DBTable) null, dBDataType0, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      String string0 = defaultDBColumn0.toString();
      assertEquals("`V'D2(4 : ALTER MAERIALIZED VIEW(1,1)", string0);
      
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("`V'D2(4, `V'D2(4, `V'D2(4, `V'D2(4, `V'D2(4", string1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("setMaxRows");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("setMaxRows", dBSchema0);
      String string0 = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      SQLUtil.normalize("*/", true);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("01J04", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("executecreate tablecreate unique indexw:#2~= x;as&}");
      tableContainer0.getTable("YR4+RB$8m");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("YR4+RB$8m", (DBTable) null, (DBDataType) null, integer0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderValue(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = null;
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Lu?j\"f6aaIh&$_/#=", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("drop materialized view", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder2.insert(90135, (double) 90135);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 90135
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      String string0 = "k";
      DBSchema dBSchema0 = new DBSchema("k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      int int0 = 2481;
      Character.isIdeographic(2481);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "k";
      stringArray0[1] = "k";
      stringArray0[2] = "k";
      stringArray0[3] = "k";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "k", true, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      Character.isAlphabetic(5543);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, false);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      DBNotNullConstraint dBNotNullConstraint0 = null;
      try {
        dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "k", true, "k");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'k' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("AUTC=KOMIT");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("AUTC=KOMIT", dBSchema0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("AUTC=KOMIT", true, "AUTC=KOMIT", "AUTC=KOMIT");
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "drop materialized view_\"^off)!zqbl";
      stringArray0[1] = "drop materialized view_\"^off)!zqbl";
      stringArray0[2] = "AUTC=KOMIT";
      stringArray0[3] = "AUTC=KOMIT";
      stringArray0[4] = "AUTC=KOMIT";
      stringArray0[5] = "drop materialized view_\"^off)!zqbl";
      stringArray0[6] = "drop materialized view_\"^off)!zqbl";
      stringArray0[7] = "AUTC=KOMIT";
      stringArray0[8] = "AUTC=KOMIT";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop materialized view_\"^off)!zqbl", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "AUTC=KOMIT");
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals("AUTC=KOMITCONSTRAINT \"drop materialized view_\"^off)!zqbl\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) "I]=Iua+;w+HtGZ^-]i");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("AUTOC=KOMIT", false, "AUTOC=KOMIT", "AUTOC=KOMIT");
      SQLUtil.removeComments("AUTOC=KOMIT");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "AUTOC=KOMIT";
      stringArray0[1] = "AUTOC=KOMIT";
      stringArray0[2] = "AUTOC=KOMIT";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "AUTOC=KOMIT";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("}");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("}", false, defaultDBTable0, "RDB$GENERATORS");
      String string0 = SQLUtil.ownerDotComponent(dBCheckConstraint0);
      assertEquals("}.}", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character.isAlphabetic(5543);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, false);
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBSchema dBSchema0 = new DBSchema("_`ap");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("_`ap", dBSchema0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, mockPrintWriter0);
      Integer integer0 = new Integer(5543);
      assertEquals(5543, (int)integer0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("GzCD}P6RE&P$v", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = ")";
      String string1 = "callcallseect r=b$view_ouce from rdb$elations were rdb$elation_name = ?";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("callcallseect r=b$view_ouce from rdb$elations were rdb$elation_name = ?");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("calseect r=bmEiew_oucef$oy rb$elati9s ere rdb$elai}n_nae = ?", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4642567260559776
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character.isAlphabetic(5543);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, true);
      mockPrintWriter0.append((CharSequence) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals(24, dynamicByteArrayOutputStream0.getUsed());
      
      Integer integer0 = new Integer(2481);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "c@w2s9#=";
      stringArray0[1] = "c@w2s9#=";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("c@w2s9#=", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (c@w2s9#=, c@w2s9#=) REFERENCES null(c@w2s9#=, c@w2s9#=)", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("k", dBSchema0);
      Character.isIdeographic(2481);
      Character.isAlphabetic(5543);
      Character.isIdeographic(90096);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SQLUtil.normalize("vP/\"}pj^Y", false);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("47'w+q]}Aqy{A^u");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "vP/\"}pj^Y";
      stringArray0[1] = "k";
      stringArray0[2] = "47'w+q]}Aqy{A^u";
      stringArray0[3] = "vP / \"}pj^Y\"";
      stringArray0[4] = "47'w+q]}Aqy{A^u";
      stringArray0[5] = "k";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("vP / \"}pj^Y\"", true, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      FileUtil fileUtil0 = FileUtil.getDefaultInstance();
      OutputStream outputStream0 = fileUtil0.openOutputStreamElement("k");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0, true);
      PrintWriter printWriter0 = mockPrintWriter0.printf("delete", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertNotSame(defaultDBTable0, defaultDBTable1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "z^#`}m8C3,-f}<9|8A";
      stringArray0[1] = "z^#`}m8C3,-f}<9|8A";
      stringArray0[3] = "'xTlmjsQPiZ";
      stringArray0[4] = "\u0001\u0088\r\uFFFF\u0001\u0087";
      stringArray0[5] = "z^#`}m8C3,-f}<9|8A";
      stringArray0[6] = "\u0001\u0088\r\uFFFF\u0001\u0087";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "\u0001\u0088\r\uFFFF\u0001\u0087", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (z^#`}m8C3,-f}<9|8A, z^#`}m8C3,-f}<9|8A, , 'xTlmjsQPiZ, \u0001\u0088\r\uFFFF\u0001\u0087, z^#`}m8C3,-f}<9|8A, \u0001\u0088\r\uFFFF\u0001\u0087)", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("AUTOC=DKOuQMI", true, "AUTOC=DKOuQMI", "AUTOC=DKOuQMI");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK AUTOC=DKOuQMI", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, "YJ/ilpnqW", "YJ/ilpnqW");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[22];
      String string0 = " ?}Mo(\"4R?g";
      String string1 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" ?}Mo(\"4R?g");
      boolean boolean0 = true;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " ?}Mo(\"4R?g", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      int int0 = (-2841);
      // Undeclared exception!
      try { 
        stringBuilder0.replace(34, (-2841), "rename]ftwklbqlj");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("AUTOC8=KOMIT");
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema AUTOC8=KOMIT", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Random.setNextRandom((-81821202));
      DBSchema dBSchema0 = new DBSchema("");
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("`*;Hs#u;'y");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'b/,SlO[8#w", (DBSchema) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "`*;Hs#u;'y";
      stringArray0[1] = "`*;Hs#u;'y";
      stringArray0[2] = "'b/,SlO[8#w";
      stringArray0[3] = "'b/,SlO[8#w";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("insertcallselect rdb$view_source from rdb$relations where rdb$relation_name = ?");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "C");
      SQLUtil.addOptionalCondition("C", stringBuilder0);
      assertEquals("C or C", stringBuilder0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("bo$", stringBuilder0);
      assertEquals("bo$", stringBuilder0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "org.h2.index.PageBtree");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(")(f'F;d");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(")(f'F;d", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize(">RL-\"hz");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = ">RL-\"hz";
      stringArray0[1] = ">RL-\"hz";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ">RL-\"hz", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (>RL-\"hz, >RL-\"hz)", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "h2.socketConnectTimeout";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("h2.socketConnectTimeout", defaultDBTable0, (DBDataType) null);
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers(";VZXyYSNHP/7", (String) null, ";VZXyYSNHP/7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("alter maerialized view", false, "alter maerialized view", " columnDelimiter");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"alter maerialized view\" ", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("GzCDJ}P6E&$v", (DBTable) null, (DBDataType) null, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = SQLUtil.normalize(";>?BD'du5;\"e=7+`", false);
      assertEquals("; > ? BD 'du5;\"e=7+`'", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      String[] stringArray0 = new String[5];
      stringArray0[0] = "bo$";
      stringArray0[2] = "inner";
      stringArray0[3] = "bo$";
      stringArray0[4] = "bo$";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("rename", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID();
      dBForeignKeyConstraint0.setName("drop materialized view");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      Boolean boolean0 = new Boolean("inner");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema(",&f:SaT,ydj@O4v");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(",&f:SaT,ydj@O4v", dBSchema0);
      defaultDBTable0.getReferrers();
      boolean boolean0 = Character.isAlphabetic(547);
      defaultDBTable0.getCheckConstraints();
      StringBuilder stringBuilder0 = new StringBuilder("QLug]m UQ%q1h%~[>");
      Boolean boolean1 = new Boolean("(df<&");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("-0.");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable1, ".wE,z", true, (String[]) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("-0.", true, defaultDBTable1, (String[]) null, defaultDBTable0, (String[]) null);
      dBSchema0.isIdentical(dBUniqueConstraint0);
      dBForeignKeyConstraint0.setName((String) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      Boolean boolean2 = new Boolean("k#xR7");
      assertFalse(boolean2.equals((Object)boolean0));
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("REFEMENCES ", compositeDBObject0);
      tableContainer0.getTable("exec");
      Integer integer1 = new Integer((-2111));
      DBDataType dBDataType0 = DBDataType.getInstance(40, "CONSTRAINT ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("update", (DBTable) null, dBDataType0, integer1, integer1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("update CONSTRAINT (-2111,-2111) NULL", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = SQLUtil.normalize("gPf%tw/S^5-0tUh$4gT", true);
      assertEquals("gPf % tw / S ^ 5 - 0tUh $ 4gT", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = SQLUtil.normalize("]`cEz,@J", false);
      assertEquals("] ` cEz, @ J", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setNClNb(it, Redde)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"it\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Random.setNextRandom((-1972353181));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "drop indexs{zkob]4fe9l";
      stringArray0[1] = "drop indexs{zkob]4fe9l";
      String[] stringArray1 = new String[1];
      String string0 = "execute";
      stringArray1[0] = "execute";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("drop indexs{zkob]4fe9l", stringArray0, "drop indexs{zkob]4fe9l", "drop indexs{zkob]4fe9l", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "/*";
      stringArray0[1] = "/*";
      stringArray0[2] = "/*";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "/*";
      stringArray1[1] = "/*";
      stringArray1[2] = "/*";
      stringArray1[3] = "/*";
      stringArray1[4] = "alter indexcreate mater";
      stringArray1[5] = "/*";
      stringArray1[6] = "alter indexcreate mater";
      String string0 = SQLUtil.innerJoin("/*", stringArray0, "/*", "alter indexcreate mater", stringArray1);
      assertEquals("/* as alter indexcreate mater on /*./* = alter indexcreate mater./* and /*./* = alter indexcreate mater./* and /*./* = alter indexcreate mater./*", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("g,n3sV6S+");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("g,n3sV6S+", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = SQLUtil.normalize("`{+PWpg+* abN6", true);
      assertEquals("` { + PWpg + * abN6", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = new Boolean("sqldata still null in writ)SQLatum: ");
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-3332), "Dt-");
      Integer integer0 = RawTransaction.COMMIT;
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Dt-");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Dt-", defaultDBTable0, dBDataType0, integer0);
      String string0 = defaultDBColumn0.toString();
      assertEquals("Dt- : DT-(0)", string0);
      
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, (String) null, true, "Dt-");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.constraintSpec(dBNotNullConstraint0, nameSpec0);
      assertEquals("Dt- NOT NULL", string1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("AUTOC=KOMIT", false, "AUTOC=KOMIT", "AUTOC=KOMIT");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT AUTOC=KOMIT ", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "and";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("and");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "u7'(r_$8UDs", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(233);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = stringBuilder1.append(233);
      // Undeclared exception!
      try { 
        stringBuilder2.insert(39, (CharSequence) stringBuilder1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 39
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4572637190629707
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "GzCDJ}P6E&$v";
      stringArray0[4] = "GzCDJ}P6E&$v";
      stringArray0[6] = "float";
      stringArray0[7] = "GzCDJ}P6E&$v";
      stringArray0[8] = "GzCDJ}P6E&$v";
      String string0 = SQLUtil.join("float", "float", stringArray0, "GzCDJ}P6E&$v", "GzCDJ}P6E&$v", stringArray0);
      assertEquals("float join GzCDJ}P6E&$v as GzCDJ}P6E&$v on float.null = GzCDJ}P6E&$v.null and float.GzCDJ}P6E&$v = GzCDJ}P6E&$v.GzCDJ}P6E&$v and float.null = GzCDJ}P6E&$v.null and float.null = GzCDJ}P6E&$v.null and float.GzCDJ}P6E&$v = GzCDJ}P6E&$v.GzCDJ}P6E&$v and float.null = GzCDJ}P6E&$v.null and float.float = GzCDJ}P6E&$v.float and float.GzCDJ}P6E&$v = GzCDJ}P6E&$v.GzCDJ}P6E&$v and float.GzCDJ}P6E&$v = GzCDJ}P6E&$v.GzCDJ}P6E&$v", string0);
      
      DBSchema dBSchema0 = new DBSchema("float");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "GzCDJ}P6E&$v", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, GzCDJ}P6E&$v, , , GzCDJ}P6E&$v, , float, GzCDJ}P6E&$v, GzCDJ}P6E&$v)", string1);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create tablealter table");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create tablealter table", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("callselect r=b$view_souce from rdb$relaions where rdb$relation_name = ?");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callseect r=b$view_ouce from rdb$elations were rdb$elation_name = ?");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = SQLUtil.normalize("c@W2s9#=.ca/-", true);
      assertEquals("c @ W2s9 # =.ca / -", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = SQLUtil.normalize("(}L7p1)\"D>r", false);
      assertEquals("(} L7p1) \"D>r\"", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter table");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select intoreferencedcolumns join as on h9). = . and h9). = . and h9). = . and h9). = . and h9).select rdb$view_source from rdb$relations where rdb$relation_name = ? = .select rdb$view_source from rdb$relations where rdb$relation_name = ? and h9). = . and h9). = .");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = "getRowLocationTemplate";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("@p", (String[]) null, "exec", "exec", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DBDataType dBDataType0 = DBDataType.getInstance(4, ":^5aPbz# ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, (DBTable) null, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals(":^5APBZ# ", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "sqldata still null in writ)SQLDatum: ";
      String string0 = SQLUtil.leftJoin("pVFZ]x?0D9Xm", stringArray0, "sqldata still null in writ)SQLDatum: ", "sqldata still null in writ)SQLDatum: ", stringArray0);
      assertEquals("left join sqldata still null in writ)SQLDatum:  as sqldata still null in writ)SQLDatum:  on pVFZ]x?0D9Xm.sqldata still null in writ)SQLDatum:  = sqldata still null in writ)SQLDatum: .sqldata still null in writ)SQLDatum: ", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[36];
      String string0 = SQLUtil.renderColumnListWithTableName("5'!", stringArray0);
      assertEquals("5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null, 5'!.null", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("Ddr=>ghaY(+f^841", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "exec;8ig,=\"?|^z)d-yq";
      String string0 = "drop materialized viewcreate materialized view";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("i", stringArray0, "exec;8ig,=\"?|^z)d-yq", "drop materialized viewcreate materialized view", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      String string0 = SQLUtil.renderValue(integer0);
      assertEquals("3", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-852), "ebZ");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("ebZ", (DBTable) null, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("ebZ EBZ(2) NULL", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materializd @ew");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter materialized view");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("'g@m4_");
      assertNull(boolean0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectorg.apache.derby.impl.sql.execute.privilegeinfo");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("drop materialized viewcreate mater");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessioncreate mater");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(425, "{e,u^l^qQbOfP");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("@Z}^$#yy%!,", defaultDBTable0, dBDataType0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("=lzLV|");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("=lzLV|", dBSchema0);
      DBTrigger dBTrigger0 = new DBTrigger("1*2cP]*pn!", dBSchema0);
      dBSchema0.addTrigger(dBTrigger0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("=lzLV|", defaultDBTable0, 15, "=lzLV|");
      defaultDBColumn0.toString();
      vector0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("1*2cP]*pn!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.join(stringArray0[0], stringArray0[1], stringArray0, stringArray0[0], stringArray0[1], stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.join("float", "float", (String[]) null, "float", "float", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.normalize(")@0}%tZ>.|n=%1dSx2}", false);
      assertEquals(") @ 0 } % tZ >.| n = % 1dSx2 }", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = SQLUtil.normalize("callselect r=b$view_source from rdb$relations where rdb$relation_name = ?", false);
      assertEquals("callselect r = b $ view_source from rdb $ relations where rdb $ relation_name = ?", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[6];
      boolean boolean0 = SQLUtil.isQuery("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery(" and ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("EXTERNAL NAME 'class.method(<signature>)'");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.innerJoin("-{m", stringArray0, "wyP4&ygE?$<vM{Ur", "selectselect intoreferencedcolumns join as on h9). = . and h9). = . and h9). = . and h9). = . and h9).select rdb$view_source from rdb$relations where rdb$relation_name = ? = .select rdb$view_source from rdb$relations where rdb$relation_name = ? and h9). = . and h9). = .", stringArray0);
      assertEquals("wyP4&ygE?$<vM{Ur as selectselect intoreferencedcolumns join as on h9). = . and h9). = . and h9). = . and h9). = . and h9).select rdb$view_source from rdb$relations where rdb$relation_name = ? = .select rdb$view_source from rdb$relations where rdb$relation_name = ? and h9). = . and h9). = . on -{m.null = selectselect intoreferencedcolumns join as on h9). = . and h9). = . and h9). = . and h9). = . and h9).select rdb$view_source from rdb$relations where rdb$relation_name = ? = .select rdb$view_source from rdb$relations where rdb$relation_name = ? and h9). = . and h9). = ..null", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[22];
      String string0 = SQLUtil.join("create tablek`zsakbq<rfm54oxd", "create tablek`zsakbq<rfm54oxd", stringArray0, "mk8b%M%{.5JG=5JHmG", "create tablek`zsakbq<rfm54oxd", stringArray0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join(",g\"X6HI-(0;tS", "create materi", stringArray0, ",g\"X6HI-(0;tS", "create materi", stringArray0);
      assertEquals(",g\"X6HI-(0;tS join ,g\"X6HI-(0;tS as create materi on create materi.null = create materi.null", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[22];
      String string0 = SQLUtil.join("MLOE+wk.R*!lj>bN", "MLOE+wk.R*!lj>bN", stringArray0, "MLOE+wk.R*!lj>bN", "Wj<NV", stringArray0);
      assertEquals("MLOE+wk.R*!lj>bN join MLOE+wk.R*!lj>bN as Wj<NV on MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null and MLOE+wk.R*!lj>bN.null = Wj<NV.null", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("", "", stringArray0, "", "}+L7!g[,=%hGk58au", stringArray0);
      assertEquals(" as }+L7!g[,=%hGk58au on ", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("Ez@U%Zt", "Ez@U%Zt", (String[]) null, "\u0001\u01FF", "Ez@U%Zt", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("y[H", "drop tablealter maerialized view", stringArray0, "y[H", "drop tablealter maerialized view", stringArray0);
      assertEquals("y[H join y[H as drop tablealter maerialized view on ", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Character character0 = Character.valueOf('n');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'n'", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "GzCDP6RE&Pv");
      SQLUtil.addRequiredCondition("GzCDP6RE&Pv", stringBuilder0);
      assertEquals("GzCDP6RE&Pv and GzCDP6RE&Pv", stringBuilder0.toString());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("GzCD}P6RE&P$v", stringBuilder0);
      assertEquals("GzCD}P6RE&P$v", stringBuilder0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("?%1r9*1#d7n5N");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("AUT/OCOMMIT");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("AUT/OCOMMIT", dBSchema0);
      Character.isIdeographic(2481);
      Character.isAlphabetic(2481);
      defaultDBTable0.getPrimaryKeyConstraint();
      String string0 = SQLUtil.substituteMarkers("", "I-", "HpCYu7%xPOC");
      assertEquals("", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("calland", "8&", "8&");
      assertEquals("calland", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = SQLUtil.renderValue("localenc");
      assertEquals("'localenc'", string0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = "lmHjQsL+xoIl;@6!=tN";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
