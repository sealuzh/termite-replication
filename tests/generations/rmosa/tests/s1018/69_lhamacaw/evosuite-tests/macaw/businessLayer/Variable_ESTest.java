/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 21:44:48 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.585160100417138
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("(G");
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("(G");
      rawVariable0.setName("variable.label.label");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      assertEquals("(G", rawVariable0.getYear());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.setName((String) null);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getYear();
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.139786465613918
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1721258694));
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertEquals("-1721258694", rawVariable1.getDisplayItemIdentifier());
      
      rawVariable0.questionNumber = "8rY18q-C";
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.18533335482316
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("3Ipj,t1`~");
      rawVariable0.setIdentifier((-393));
      rawVariable1.setAvailability("");
      User user0 = new User("3Ipj,t1`$", "variable.name.label");
      User user1 = new User("3Ipj,t1`~", "3Ipj,t1`$");
      user1.setPhone("3Ipj,t1`$");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      User user2 = new User();
      user2.setCity("");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      assertEquals(2, arrayList0.size());
      
      RawVariable rawVariable4 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
      assertEquals("Unknown", rawVariable4.getAvailability());
      assertEquals("-393", rawVariable4.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable4.getCategory());
      assertFalse(rawVariable4.isCleaned());
      assertEquals("3Ipj,t1`~", rawVariable4.getDisplayName());
      
      rawVariable1.getAvailability();
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier((-1841290235));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean1 == boolean0);
      
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(arrayList0.isEmpty());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setIdentifier((-2004318069));
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getYear();
      derivedVariable0.createVariableSummary();
      derivedVariable0.removeSourceVariable((Variable) null);
      assertEquals("-2004318069", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.6304437108786445
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName((String) null);
      User user0 = new User();
      rawVariable1.getName();
      rawVariable1.cloneAttributes(rawVariable0);
      user0.setPassword("^0U d.Q.N}B'");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.052754235510318
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setCleaningDescription("*y");
      rawVariable0.questionNumber = "*y";
      rawVariable0.columnStart = ".Y~abEq";
      rawVariable0.setYear("variable.year.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isCleaned();
      rawVariable0.getLabel();
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getOntologyTerms();
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getLabel();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.7889875509358366
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("28N");
      supportingDocument0.setIdentifier(1354);
      supportingDocument0.setFilePath((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("zknJjMrTK-6iQf<");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      
      rawVariable0.getAvailability();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.updateOntologyTerm(ontologyTerm0);
      Variable.validateFields(rawVariable0);
      rawVariable3.getYear();
      assertFalse(rawVariable3.isCoded());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.539760532961517
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("user.password.saveChanges", "user.password.saveChanges");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setCoded(true);
      rawVariable0.notes = "user.password.saveChanges";
      rawVariable0.getColumnEnd();
      rawVariable0.getColumnEnd();
      User user1 = new User("user.password.saveChanges", "DUPLICATE_VARIABLE");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      assertEquals("user.password.saveChanges", rawVariable0.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1965);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.columnStart = null;
      derivedVariable0.setColumnEnd("(K_J0S");
      derivedVariable0.getOntologyTerms();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      arrayList1.clone();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getColumnStart();
      assertEquals("(K_J0S", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis(2173L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-2028178998));
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.710401248597012
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.columnStart.label");
      supportingDocument0.setFilePath("NON_EXISTENT_VARIABLE_ASSOCIATION");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getForm();
      User user0 = new User();
      rawVariable0.cloneAttributes(derivedVariable0);
      User user1 = new User("gw48Bdu$YI@cUw", "cyf#L4=Y@g>sXt@K");
      user1.setLastName((String) null);
      user0.setCity("UNABLE_TO_UPDATE_CLEANING_STATE");
      User user2 = new User();
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user1, user1, user2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("a[f5<%i;[E");
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      user0.setPhone(".hf3[G$Ba!~5G.");
      rawVariable0.setColumnStart((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.setCoded(false);
      String string0 = rawVariable0.getAvailability();
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9178202487429137
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.columnEnd.label";
      rawVariable0.setName("c");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability("3Ipj,t1`$");
      User user1 = new User();
      rawVariable0.setLabel("c");
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      user1.setPhone("<fA8m0!X!15=");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("c", rawVariable0.getDisplayName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9178202487429137
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability("3Ipj,t1`$");
      User user1 = new User();
      rawVariable0.setLabel("c");
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable1.notes = "?";
      user1.setPhone("<fA8m0!X!15=");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("?", rawVariable1.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.questionNumber = "8rY18q-C";
      rawVariable1.addOntologyTerm((OntologyTerm) null);
      User user0 = new User();
      rawVariable1.setCleaningStatus("8rY18q-C");
      user0.setPhone("8rY18q-C");
      RawVariable rawVariable2 = new RawVariable();
      User user1 = new User();
      user1.setUserID("^&+8o;6PQT");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getDisplayName();
      assertEquals("8rY18q-C", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      rawVariable0.setForm((String) null);
      rawVariable0.setAvailability("3Ipj,t1`$");
      rawVariable0.setAlias("[");
      User user1 = new User();
      User user2 = new User("-", "U1;");
      user1.setPhone("-");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4903559294679694
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("GiA*S");
      rawVariable0.form = "c~Xgh6oR7M2Rq";
      supportingDocument0.getDisplayName();
      rawVariable0.setAvailability("GiA*S");
      supportingDocument0.setFileName("c~Xgh6oR7M2Rq");
      User user0 = new User();
      User user1 = new User("c~Xgh6oR7M2Rq", "c~Xgh6oR7M2Rq");
      user1.clone();
      user1.setPhone("c");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      assertEquals("GiA*S", rawVariable0.getAvailability());
      
      rawVariable1.notes = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.getNotes();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6877020590587954
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("a[f5<%i;[E");
      user0.setPhone("}+L7!g[,=%hGk58au");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("}+L7!g[,=%hGk58au");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("}+L7!g[,=%hGk58au", rawVariable0.getQuestionNumber());
      assertFalse(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.673780326074442
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getYear();
      rawVariable0.getYear();
      rawVariable0.setIdentifier((-2070787801));
      User user0 = new User("", "f`3rbqS&<");
      user0.clone();
      user0.setAddressLine1("!=Dm5uHzRk");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getAvailability();
      rawVariable1.isCoded();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(">kIrsc~>HY");
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setCleaningDescription("!=Dm5uHzRk");
      derivedVariable0.setAlias("variable.isCoded.label");
      derivedVariable0.removeSourceVariable(rawVariable1);
      rawVariable0.getIdentifier();
      derivedVariable0.getSourceVariables();
      rawVariable1.getFilePath();
      rawVariable0.getColumnEnd();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getAlias();
      rawVariable1.getCategory();
      rawVariable0.getYear();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("variable.isCoded.label", derivedVariable0.getAlias());
      
      rawVariable1.isCleaned();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(0, ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2073));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.7471887452860035
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      rawVariable0.columnEnd = "c";
      rawVariable0.setAvailability("3Ipj,t1`$");
      User user1 = new User();
      User user2 = new User("-", "U1;");
      user1.setPhone("-");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setQuestionNumber("UFBLEfTO_CHCK_ONTOLOY_TERM_ASSOCIATION_DULICATE");
      rawVariable0.setQuestionNumber("user.postCode.l*abel");
      rawVariable0.createVariableSummary();
      assertEquals("user.postCode.l*abel", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(0, ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability("3Ipj,t1`$");
      User user1 = new User();
      rawVariable0.setLabel("c");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      rawVariable0.getLabel();
      assertEquals("c", rawVariable0.getName());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.659037556219115
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("GiA*S");
      rawVariable0.form = null;
      rawVariable0.setAvailability("GiA*S");
      User user0 = new User("c~Xgh6oR7M2Rq", "c~Xgh6oR7M2Rq");
      user0.setPhone("c");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setFilePath("\" (V=@");
      rawVariable0.getFilePath();
      rawVariable0.getColumnStart();
      assertEquals("\" (V=@", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("a[f5<%i;[E");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertNotSame(variable0, rawVariable0);
      assertEquals("0", variable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      rawVariable0.setAvailability("3Ipj,t1`$");
      User user1 = new User();
      User user2 = new User("-", "U1;");
      user1.setPhone("-");
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.isCoded();
      Variable.validateFields(rawVariable0);
      assertEquals("c", rawVariable0.getDisplayName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8061799453510106
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      rawVariable0.setAvailability("3Ipj,t1`$");
      User user1 = new User();
      rawVariable0.setForm("user.addressLine2.label");
      User user2 = new User("-", "U1;");
      user1.setPhone("-");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.862981898596878
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      rawVariable0.setAvailability("3Ipj,t1`$");
      rawVariable0.setColumnStart("c");
      User user1 = new User();
      User user2 = new User("-", "U1;");
      user1.setPhone("-");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setYear("variable.label.label");
      rawVariable0.getCategory();
      rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setAlias("general.fieldValue.blank");
      rawVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      assertEquals("variable.label.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=4.281231054036609
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.setIdentifier((-1));
      User user0 = new User();
      user0.setCounty("variable.notes.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getForm();
      RawVariable rawVariable1 = new RawVariable();
      user0.setEmail("macaw.businessLayer.Variable");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      user0.setCounty("variable.notes.label");
      derivedVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getOntologyTerms();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getForm();
      rawVariable0.getColumnEnd();
      rawVariable0.getQuestionNumber();
      rawVariable0.getSupportingDocuments();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.630117871843128
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      user0.setPhone("<fA8m0!X!15=");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCategory("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      User user1 = new User((String) null, "<fA8m0!X!15=");
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable2);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable2.getCategory());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.name.label";
      String string0 = rawVariable0.getFilePath();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaningDescription("-Z=[$m?6Qa\"-{");
      derivedVariable0.setYear("-");
      rawVariable0.setForm("c~Xgh6oR7M2Rq");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1841290235));
      rawVariable1.form = "-";
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, derivedVariable0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getForm();
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertEquals("-1841290235", rawVariable1.getDisplayItemIdentifier());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setForm("i)`");
      derivedVariable0.getNotes();
      derivedVariable0.createVariableSummary();
      assertEquals("i)`", derivedVariable0.getForm());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "pr'wU";
      derivedVariable0.setCodeBookNumber("pr'wU");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("%Kcs*C^^");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("macaw.businessLayer.Variable");
      derivedVariable0.getDisplayName();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "user.email.label";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.getName();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable1.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user0.setIdentifier(4608);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setUserID("YlI(R5.4DSD:`!$<");
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      arrayList0.add(0, ontologyTerm0);
      ontologyTerm1.setIdentifier(4608);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(1);
      ontologyTerm1.clone();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "jZxxuEevoj>p\\~_6";
      User user0 = new User((String) null, "jZxxuEevoj>p~_6");
      user0.setCity("jZxxuEevoj>p~_6");
      rawVariable0.setName("Odz/l.u7*,GCEX0jco1");
      rawVariable0.setAvailability("jZxxuEevoj>p~_6");
      User user1 = new User();
      rawVariable0.setLabel((String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.585991948307809
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c~Xgh6oR7M2Rq");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("GiA*S");
      supportingDocument0.getDisplayName();
      supportingDocument0.setFileName((String) null);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      User user0 = new User("}X0S;3sDbl<", "!2T>!<;Ju%a]/49^3Q");
      User user1 = new User();
      user1.setPassword("'B[VNHX^\"");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaned(true);
      rawVariable0.setAvailability("Unknown");
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setPhone("a[f5<%i;[E");
      RawVariable rawVariable4 = new RawVariable();
      User user2 = new User("c-7~Xgh6oR7IM2Rq", "GiA*S");
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable2);
      assertTrue(rawVariable2.isCleaned());
      
      rawVariable4.getCodeBookNumber();
      assertEquals("Unknown", rawVariable4.getCategory());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "NZxBkS~e~";
      derivedVariable0.setName("");
      derivedVariable0.setName("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setAvailability("");
      ontologyTerm0.setNameSpace("c-7~Xgh6oR7IM2Rq");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.codeBookNumber = "variable.category.label";
      ontologyTerm0.setDescription("variable.category.label");
      rawVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c~Xgh6oR7M2Rq");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("GiA*S");
      String string0 = null;
      rawVariable0.form = null;
      supportingDocument0.getDisplayName();
      rawVariable0.setAvailability("GiA*S");
      supportingDocument0.setFileName("c~Xgh6oR7M2Rq");
      User user0 = new User();
      User user1 = new User("c~Xgh6oR7M2Rq", "c~Xgh6oR7M2Rq");
      user1.clone();
      user1.setPhone("c");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.9546744333580732
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      User user0 = new User("c", "i}/a6e*G/Q=kV#n[");
      RawVariable rawVariable0 = new RawVariable();
      user0.setStatus("macaw.businessLayer.VariableSummary");
      user0.setAddressLine1("i}/a6e*G/Q=kV#n[");
      user0.setPassword("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      rawVariable0.setAvailability("i}/a6e*G/Q=kV#n[");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.6215302838442707
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      
      rawVariable0.questionNumber = "8rY18q-C";
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName((String) null);
      rawVariable0.setLabel((String) null);
      user0.setPhone("}+L7!g[,=%hGk58au");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("i}/a6e*G/Q=kV#n[", "i}/a6e*G/Q=kV#n[");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      User user1 = new User("i}/a6e*G/Q=kV#n[", "INVALID_ALIAS_FILE_PATH");
      user1.setPhone("INVALID_ALIAS_FILE_PATH");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("i}/a6e*G/Q=kV#n[");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("i}/a6e*G/Q=kV#n[", rawVariable0.getYear());
      
      rawVariable1.getAlias();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.632848713283647
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      User user0 = new User();
      user0.setAddressLine1("Aek30nQu-a;AODLE");
      user0.setUserID("Aek30nQu-a;AODLE");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      user0.setCity("Aek30nQu-a;AODLE");
      derivedVariable0.getYear();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      arrayList0.add((Variable) rawVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      user0.setIdentifier((-2058530005));
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getName();
      derivedVariable0.getName();
      derivedVariable0.getNotes();
      derivedVariable0.setIdentifier(1717);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getAvailability();
      derivedVariable0.getLabel();
      rawVariable0.getNotes();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getSupportingDocuments();
      assertEquals(1717, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.898238801780497
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "EDIT";
      supportingDocument0.clone();
      supportingDocument0.setFileName("EDIT");
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setIdentifier(847);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = "EDIT";
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.columnStart = "variable.availability.label";
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setColumnStart("k_a<G");
      derivedVariable0.getColumnEnd();
      derivedVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.getCleaningDescription();
      derivedVariable1.setAvailability("");
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("5HWt]!i");
      rawVariable0.columnStart = "5HWt]!i";
      rawVariable0.createVariableSummary();
      assertEquals("5HWt]!i", rawVariable0.getNotes());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_CHECK_CLEANING_STATE_EXISTS");
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("UNABLE_TO_CHECK_CLEANING_STATE_EXISTS", variableSummary0.getDisplayName());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("NON_EXISTENT_VALUE_LABELS");
      derivedVariable0.getAlias();
      assertEquals("NON_EXISTENT_VALUE_LABELS", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UNABLE_TO_GET_CATEGORIES");
      derivedVariable0.getCodeBookNumber();
      assertEquals("UNABLE_TO_GET_CATEGORIES", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.clone();
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable1.setNotes("or3q>");
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable1.setNotes("o/]");
      derivedVariable0.form = "!2T>!<;Ju%a]/49^3Q";
      derivedVariable0.removeSourceVariable(derivedVariable1);
      long long0 = 3065L;
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.codeBookNumber = "OB7P,QDC\ff'Sa";
      derivedVariable0.columnEnd = "OB7P,QDC\ff'Sa";
      derivedVariable0.isCleaned();
      derivedVariable0.getCategory();
      derivedVariable0.getForm();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.columnStart = "*<0y@3jnF`QmP{\"";
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "macaw.businessLayer.SupportingDocument";
      derivedVariable0.form = "macaw.businessLayer.SupportingDocument";
      derivedVariable0.columnStart = "macaw.businessLayer.SupportingDocument";
      derivedVariable0.getYear();
      derivedVariable0.notes = "";
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("Unknown");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getYear());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.questionNumber = "8rY18q-C";
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      String string0 = rawVariable0.getNotes();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("s,a#");
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("s,a#", rawVariable0.getForm());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "UNABLE_TO_GET_CHANGES_FOR_USER";
      rawVariable0.notes = "UNABLE_TO_GET_CHANGES_FOR_USER";
      rawVariable0.getCleaningStatus();
      rawVariable0.getQuestionNumber();
      String string1 = "general.fieldValue.blank";
      rawVariable0.columnStart = "UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM";
      User user0 = new User("", "general.fieldValue.blank");
      user0.setIdentifier((-2147483645));
      user0.setPostCode("general.fieldValue.blank");
      // Undeclared exception!
      try { 
        User.checkValidEmail((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "74v{ZE";
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.questionNumber = "8rY18q-C";
      User user0 = new User();
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("NON_EXISTENT_DOCUMENT_ASSOCIATION");
      rawVariable0.getCleaningDescription();
      assertEquals("NON_EXISTENT_DOCUMENT_ASSOCIATION", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.questionNumber = "8rY18q-C";
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "u3PX#%<";
      String string0 = derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.codeBookNumber = "a[f5<%i;[E";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "0qz%+|vd.5L*'#Kfy";
      User user0 = new User("0qz%+|vd.5L*'#Kfy", "CXOwdYIS)>zW#Nr");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = null;
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.557902746889237
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("a[f5<%i;[E");
      user0.setPhone("}+L7!g[,=%hGk58au");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable0.isCoded();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = ")K2&/u";
      rawVariable0.getYear();
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue((String) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("DUPLICATE_ONTOLOGY_TERM");
      derivedVariable0.setColumnStart("DUPLICATE_ONTOLOGY_TERM");
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("DUPLICATE_ONTOLOGY_TERM", derivedVariable0.getColumnStart());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getOntologyTerms();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      String string0 = rawVariable0.getCategory();
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.5578332976219267
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("a[f5<%i;[E");
      user0.setPhone("}+L7!g[,=%hGk58au");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "~R#:{]r5wEJ}MbX+i";
      rawVariable0.setCleaningDescription("UNABLE_TO_CREATE_ONTOLOGY_TERM");
      rawVariable0.codeBookNumber = "\"-lyzFpFiy{tFL>";
      rawVariable0.clone();
      assertEquals("UNABLE_TO_CREATE_ONTOLOGY_TERM", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5590409663181477
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User();
      user0.setIdentifier(74);
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("a[f5<%i;[E");
      user0.setPhone("}+L7!g[,=%hGk58au");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "Zn)QnkcY o:";
      derivedVariable0.clone();
      assertEquals("Zn)QnkcY o:", derivedVariable0.getNotes());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "rBffT@dN-HODDOQj";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "5j";
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.setCleaningStatus("mT>F)Sg");
      derivedVariable1.setIsNewRecord(false);
      derivedVariable1.form = null;
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.columnEnd = "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS";
      ontologyTerm0.setNewRecord(true);
      rawVariable0.clone();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("4XRIJEU,,)chq{8i/");
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("4XRIJEU,,)chq{8i/", rawVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.alternativeVariable.label");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ontologyTerm0.setIdentifier(0);
      arrayList0.add(0, ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(arrayList1.contains(ontologyTerm0));
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setUserID("YlI(R5.4DSD:`!$<");
      ontologyTerm0.clone();
      arrayList0.add(0, ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = arrayList0.remove(0);
      arrayList1.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        arrayList1.add(477, ontologyTerm2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 477, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      arrayList0.add((OntologyTerm) null);
      arrayList0.clone();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable1.setCoded(true);
      rawVariable0.hasSameDisplayName(rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.3203928312357034
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      System.setCurrentTimeMillis((-2087L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.codeBookNumber = "OB7P,QDC\ff'Sa";
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      // Undeclared exception!
      try { 
        arrayList0.add(170, ontologyTerm0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 170, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("general.error.invalidEmail");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("general.error.invalidEmail", rawVariable0.getFilePath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "variable.columnStart.label";
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.year.label";
      rawVariable0.setFilePath((String) null);
      rawVariable0.codeBookNumber = "variable.name.label";
      String string0 = rawVariable0.getFilePath();
      assertNull(string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("@JG=");
      derivedVariable0.getColumnEnd();
      derivedVariable0.getLabel();
      derivedVariable0.getForm();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("a[f5<%i;[E");
      user0.setPhone("}+L7!g[,=%hGk58au");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "}+L7!g[,=%hGk58au";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("}+L7!g[,=%hGk58au", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("}+L7!g[,=%hGk58au", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.questionNumber = "@8wX!(MAz(";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean1 = rawVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(boolean1 == boolean0);
      assertFalse(rawVariable1.isNewRecord());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "u2m$P";
      derivedVariable0.setCodeBookNumber("E0FV(]!b89");
      derivedVariable0.setQuestionNumber("u2m$P");
      derivedVariable0.getNotes();
      derivedVariable0.createVariableSummary();
      assertEquals("E0FV(]!b89", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.questionNumber = "8rY18q-C";
      User user0 = new User();
      rawVariable0.getAlias();
      rawVariable0.getQuestionNumber();
      assertEquals("8rY18q-C", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "w?w\"}LPD$nr>SolE>q";
      rawVariable0.setCleaningStatus("w?w\"}LPD$nr>SolE>q");
      rawVariable0.setColumnEnd("JPSm{z\r:A%H:e_h_}");
      rawVariable0.setQuestionNumber("blank");
      rawVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("JPSm{z\r:A%H:e_h_}", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "nVvI@Un6p-^h_l";
      rawVariable0.getColumnEnd();
      assertEquals("nVvI@Un6p-^h_l", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("c");
      rawVariable0.columnStart = "macaw.system.MacawException";
      rawVariable0.getColumnStart();
      assertEquals("macaw.system.MacawException", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("I");
      rawVariable0.setCleaningDescription(" 'q \"d");
      rawVariable0.setQuestionNumber("NON_EXISTENT_DOCUMENT_ASSOCIATION");
      rawVariable0.getCleaningDescription();
      assertEquals("I", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("3:}{j1");
      rawVariable0.getYear();
      assertEquals("3:}{j1", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setYear((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      User user0 = new User("variable.questionNumber.label", "variable.questionNumber.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(0, ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }
}
