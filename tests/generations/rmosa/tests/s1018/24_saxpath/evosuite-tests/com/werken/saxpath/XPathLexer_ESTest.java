/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 21:35:14 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-3150));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4411482442934083
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("ozefN;51O})\"V=GBO6M");
      xPathLexer1.div();
      xPathLexer1.operatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.consume((-68));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6933486083439715
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<=_e)rL/*e");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(8, token1.getTokenType());
      assertEquals("<=", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("_e", token2.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.331960211224136
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
      
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("");
      xPathLexer0.consume();
      xPathLexer0.consume(7);
      xPathLexer0.or();
      xPathLexer0.setXPath("!A%.UD2='~*d}0B1");
      Token token1 = xPathLexer0.slashes();
      assertEquals("!", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.div();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.colon();
      assertEquals("2", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals("=", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals("'", token7.getTokenText());
      assertEquals(1, token7.getTokenType());
      
      xPathLexer0.identifier();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("~", token8.getTokenText());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("*", token9.getTokenText());
      
      xPathLexer0.operatorName();
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.at();
      assertEquals("d", token11.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token12 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token12.getTokenType());
      assertNotNull(token12);
      
      Token token13 = xPathLexer0.minus();
      assertEquals("}", token13.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.206852768267869
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume((-1200));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.consume((-3726));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3591));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-952));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?z-F+o\r6");
      xPathLexer0.consume((-1506));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.slashes();
      xPathLexer0.consume((-282));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-178));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6903752622677266
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.getXPath();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-504));
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.^nx6%E]G3cs0TO");
      xPathLexer0.and();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.583593228769696
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-2186));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t%{wVzo]N+Xv']F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g)*rJQ\"D");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("g", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1323));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.consume((-1052));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      Token token0 = xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      XPathLexer xPathLexer1 = new XPathLexer("*6dh/MR%.^qTCD$o&");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" Nmg@Wq@(%?0W5A");
      xPathLexer0.consume((-24));
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.equals();
      xPathLexer0.consume((-3652));
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<:{@3|N7tNNu");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      assertNotNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P`(b8uV$dD0o6G");
      Token token0 = xPathLexer0.number();
      xPathLexer0.consume((-1952));
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"V#");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4412372518590515
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"^1+O");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      Token token0 = xPathLexer0.star();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(".", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("i9", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L@,Cw");
      XPathLexer xPathLexer1 = new XPathLexer("z]j*Yay1/&NSZ@y");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("z", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4sI1>5jF ?F$UivxJ;G");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]--9B5`h:_[a&#m:v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/K}^4*LaD{^$");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.consume();
      assertEquals("/K}^4*LaD{^$", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".--i9%aZ?H8");
      xPathLexer0.consume((-2268));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0216254390087391
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("i", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8:N%r@(W<yD{");
      xPathLexer0.mod();
      xPathLexer0.consume((-2909));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W#sNLA;R;-:s.;x");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("W", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&L 9g+8HJ&EqXc1lpr");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&L 9g+8HJ&EqXc1lpr", token0.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hpbJ9@^!^{ue's");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("hpbJ9", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w#fdZV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RxU?iBXQs]`Q$}_!1");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("U", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.283562747916579
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`a5;");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.consume((-1333));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2173531152099186
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I:<_e)rL/*e");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("_", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("e)", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      char char0 = xPathLexer0.LA(1608);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D\"cZH>>xC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7201606234867988
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oek{kA;^0CL11'f0G");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      assertEquals("oe", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("k", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oek{kA^0CL11'f0G");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_Yts-N;");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1000039501699495
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oek{kA^0CL11'f0G");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("oek{kA^0CL11'f0G");
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4384474624881487
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P`(b8uV$dD0o6G");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("P`(b8uV$dD0o6G", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.405288906780763
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dots();
      assertEquals(")", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k3zai]\"2YCYWus");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("k3zai", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      XPathLexer xPathLexer1 = new XPathLexer("bB;b");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("bB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("bB;b");
      int int0 = xPathLexer2.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      XPathLexer xPathLexer1 = new XPathLexer("!m9%%rl<");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.240175288683792
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4sI1>5jF ?F$UivxJ;G");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sI1", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H:$46iPRf\"[*)4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9846077523801464
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("i9%caZ?H8", token2.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q?pb>o+xfaT");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">S}WDEq8Kn#");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("S", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      xPathLexer0.setXPath("Q ");
      XPathLexer xPathLexer1 = new XPathLexer("c =Y'7?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M|P;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T2<4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("T2", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.303123719034037
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jF");
      xPathLexer0.consume();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6;5&");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("66PAF!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("66", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9873833480858285
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(".?", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Anv5RI", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0xNWH3{+/}GWM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      Token token0 = xPathLexer0.plus();
      String string0 = token0.toString();
      assertEquals("[ (5) (!)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("7s|Xcvb=4");
      xPathLexer1.mod();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lDY,#%a@'6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lDY", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.9855764724538605
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("<", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("_e", token2.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n2ccCSQ(Zysf>d ");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`a5;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`a5;", token0.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z[|MuL");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Z", token0.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1\"%wE~");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.4405338049692915
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1h|U");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token0 = xPathLexer1.identifier();
      assertEquals("", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.slashes();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(")", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.2105259611036978
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J{G2n<");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xa");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("xa", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h+,");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(",", token1.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#$G1^&ve52m");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#$G1^&ve52m", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><B");
      Token token0 = xPathLexer0.comma();
      String string0 = token0.toString();
      assertEquals("[ (32) (>)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",lp k'N)$gNzil");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.2164264947271934
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I:<_e)rL/*e");
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dots();
      assertEquals("I", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("_e", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@c*wE{7NXZa/J<~W*4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yiRV]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("yiRV", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.3706865898787401
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.451332751698579
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RC");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.setXPath("RC");
      xPathLexer0.identifier();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("RC", token0.getTokenText());
      
      xPathLexer0.star();
      xPathLexer1.operatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.4370114081308643
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L'ECVwH7b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("L", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.consume((-1630));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5780791438596724
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4sI1>5jF ?F$UivxJ;G");
      xPathLexer0.identifier();
      xPathLexer0.literal();
      xPathLexer0.consume((-3636));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.215969521408282
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p:u@367R");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.450198233512118
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RxU?iBXQs]`Q$}_!1");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Rx", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("iBXQs", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.7964122534878726
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("Q ");
      XPathLexer xPathLexer1 = new XPathLexer("fLv[-~[)t}");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer1.or();
      xPathLexer1.consume(23);
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      xPathLexer1.getXPath();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0H`2-qz/m<Ks-b5u");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      XPathLexer xPathLexer1 = new XPathLexer("FP");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("FP", token0.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.437025205839893
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.3124543408027645
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fLv[-~[)t}");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("fL", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("v", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("[", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m..:sdQ-#%m j1P");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("m..", token0.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9@N+tgBS;");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.consume();
      assertEquals("9@N+tgBS;", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$|_4x");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|<T[w");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.283562747916579
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4sI1>5jF ?F$UivxJ;G");
      Token token0 = xPathLexer0.number();
      assertEquals("4", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.3815093697147645
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RxU?iBXQs]`Q$}_!1");
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("U", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.2551917273734097
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I:<_e)rL/*e");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(":", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("_", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("e)", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("rL", token5.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.796560996608503
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.consume((-849));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K%9,bR/*`AaG/9J$p");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("K", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5183515034624562
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      xPathLexer0.setXPath("Q ");
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("fLv[-~[)t}");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("fLv", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(3, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.040870265325692
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c.^nx6%E]G3cs0TO");
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals("c.", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("^nx6%E]G3cs0TO", token1.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.2551917273734097
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I:<_e)rL/*e");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("I:", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("_", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("rL", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("/", token6.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><B");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      assertNotNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1737822853043538
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><B");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("de{rTimnou>N6M8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("de", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q/@g<k8t~");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uHzRk%FOt]%:P)Fp[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("uHzRk", token0.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Xa1`oAe[vZ!~]HlGy");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("a1", token0.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.482066499764066
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.1685768824624785
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J{G2n<");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("G2n", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.7516839002656877
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.endPosition();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.95834379609768
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.0752265500834897
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8,:y/k[HfJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0010047670639863
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2'75T@l0&C|");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.consume();
      assertEquals("2'75T@l0&C|", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.2404459832861416
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4sI1>5jF ?F$UivxJ;G");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("4sI1", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.223616861167868
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".--i9%aZ?H8");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(".8QBPB");
      xPathLexer1.nextToken();
      xPathLexer0.rightParen();
      xPathLexer1.rightParen();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9/_FIG");
      Token token0 = xPathLexer0.slashes();
      assertEquals("9/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("_", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.262925099491003
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.getXPath();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("E", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.7276512158148347
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.consume((-874));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.024763240804259
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      Token token0 = xPathLexer0.at();
      assertEquals(".", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("-i9", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.minus();
      assertEquals("%", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("%caZ?H8", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.588076205143974
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v!;F_;OKwB");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("v", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(";F_;OKwB", token1.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.comma();
      assertEquals("_", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.0520761640938803
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3C+][W}rl");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.consume();
      String string0 = xPathLexer0.getXPath();
      assertEquals("3C+][W}rl", string0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@3foL9'");
      xPathLexer0.comma();
      xPathLexer0.consume((-2609));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.and();
      xPathLexer0.consume((-1738));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.2915474612185824
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8:N%r@(W<yD{");
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.9477745905004258
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifier();
      assertEquals(".-i9", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%caZ?H8", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.9827830077400066
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pY5)7cL^aXvM; J");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.at();
      assertEquals("Y", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("pY5)7cL^aXvM; J");
      xPathLexer1.currentPosition();
      XPathLexer xPathLexer2 = new XPathLexer(".?Anv5RI{5{05*yi");
      xPathLexer1.or();
      Token token1 = xPathLexer2.slashes();
      assertEquals(".", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('Y', char0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.210072060394478
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J{G2n<");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("oJC+!@4XD");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("JC", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("+", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[==^b)>8vv8<#");
      Token token0 = xPathLexer0.equals();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4:]@PqikBUy, !X");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.or();
      xPathLexer0.LA(1);
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.9103943644362601
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.9431937872619043
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.4597267401043093
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u?jO1A{$>nW");
      Token token0 = xPathLexer0.slashes();
      assertEquals("u", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(32);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("O1A", token2.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("$", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      char char1 = xPathLexer0.LA(0);
      assertEquals('$', char1);
      
      xPathLexer0.setXPath("u?jO1A{$>nW");
      xPathLexer0.isIdentifierStartChar('$');
      Token token4 = xPathLexer0.plus();
      assertEquals("u", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-F3f");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('q');
      assertTrue(boolean0);
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("F", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.256554816911676
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<_e)rL/*e");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=2.3023593719354825
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.literal();
      token0.toString();
      xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-4256);
      xPathLexer0.consume((-4256));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 166
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-4652));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-862));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.4476247538967855
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/fB!\"Hph<:@#j*");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("f", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(' ');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.6813634791383447
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.LA(1028);
      XPathLexer xPathLexer1 = new XPathLexer("@3foL9'");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.whitespace();
      xPathLexer2.currentPosition();
      xPathLexer2.number();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("@3foL9'");
      xPathLexer3.comma();
      xPathLexer3.isIdentifierChar('\uFFFF');
      xPathLexer2.or();
      xPathLexer3.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer3.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.937673005399815
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("B", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.937673005399815
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.8956934155292889
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.9467824691114557
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("9", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.8961276317689764
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.3703011145877064
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dots();
      assertEquals(")", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9440880416772854
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("i", token2.getTokenText());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('1');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=0.9431937872619043
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?Anv5RI{5[{05*yi[", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("?", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.939539373447594
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=0.9420393861075032
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(".", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?Anv5RI{5[{05*yi[", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 184
  /*Coverage entropy=0.9809367740342578
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=0.9410649264605612
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.pipe();
      assertEquals(":", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 186
  /*Coverage entropy=0.9354907904516425
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.8983733882361795
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?Anv5RI{5[{05*yi[", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.947480660161916
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.identifier();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1103));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 189
  /*Coverage entropy=0.9438839183868181
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 190
  /*Coverage entropy=0.9361161813209359
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 191
  /*Coverage entropy=0.9833774037813767
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      xPathLexer0.mod();
      char char0 = xPathLexer0.LA(1193);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 192
  /*Coverage entropy=0.9830215952063901
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?Anv5RI{5[{05*yi[", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 193
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 194
  /*Coverage entropy=0.9408486167049912
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 195
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.endPosition();
      xPathLexer0.not();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 196
  /*Coverage entropy=0.9354907904516425
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.nextToken();
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=0.9217185304925299
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 198
  /*Coverage entropy=0.937673005399815
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=0.9819344023383753
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals("i", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 200
  /*Coverage entropy=0.9775135819075997
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(":B", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.consume(5790);
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 201
  /*Coverage entropy=0.9792326124025428
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-i9%caZ?H8");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("i", token2.getTokenText());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=0.937673005399815
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("B", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=0.9496810198360934
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?Anv5RI{5[{05*yi[");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 204
  /*Coverage entropy=0.937673005399815
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token1 = xPathLexer0.minus();
      assertEquals("B", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
  }

  /**
  //Test case number: 205
  /*Coverage entropy=0.8978571371304429
  */
  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.and();
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 206
  /*Coverage entropy=0.8975597835770679
  */
  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 207
  /*Coverage entropy=0.8994823983331363
  */
  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 208
  /*Coverage entropy=0.9388773410080045
  */
  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals(":B", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 209
  /*Coverage entropy=0.9828593887903261
  */
  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
  }

  /**
  //Test case number: 210
  /*Coverage entropy=0.9437241473088527
  */
  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":B");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }
}
