/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 09 05:08:30 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(")");
      simpleNode0.setIdentifier("*");
      simpleNode0.dump(")", stringWriter0);
      simpleNode0.dump(")", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.jjtAddChild(nodeArray0[1], 55);
      nodeArray0[2] = (Node) simpleNode0;
      String string0 = "&";
      // Undeclared exception!
      simpleNode0.dump("&", stringWriter0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("9Ers$", stringWriter0);
      simpleNode0.setIdentifier("=mA");
      simpleNode0.setIdentifier((String) null);
      stringWriter0.write(73);
      simpleNode0.setIdentifier("@E2Os)");
      simpleNode0.dump("z", stringWriter0);
      assertEquals("I<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter1 = new StringWriter();
      Node[] nodeArray1 = new Node[0];
      simpleNode0.children = nodeArray1;
      simpleNode0.dump("E=u^QpYIfW", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(92);
      StringWriter stringWriter0 = new StringWriter(92);
      simpleNode0.setIdentifier(">");
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier("z");
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      SystemInUtil.addInputLine(":");
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(":", stringWriter0);
      assertEquals("<RelationalExpression>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      stringWriter0.flush();
      simpleNode0.children = nodeArray0;
      SystemInUtil.addInputLine("InclusiveOrExpression");
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("InclusiveOrExpression");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(":", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*le</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*rshft</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.parent = (Node) simpleNode0;
      StringBuffer stringBuffer0 = new StringBuffer();
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("z");
      simpleNode0.dump("1(_", stringWriter0);
      assertEquals("<TypeDeclaration>\n  <identifier>*amp</identifier>\n  <identifier>z</identifier>\n</TypeDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("}");
      simpleNode0.dump("mqJ%7SEfI", stringWriter0);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      simpleNode0.dump("ZRc84@", stringWriter0);
      simpleNode0.dump("ZRc84@", stringWriter0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      Node node1 = simpleNode0.parent;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = null;
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SystemInUtil.addInputLine("YeHJ/b$${w0l?");
      arrayList0.add("");
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter1.toString());
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(92);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      charArray0[1] = 'h';
      charArray0[2] = 'z';
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("VariableDeclaratorId", stringWriter1);
      simpleNode0.dump("VariableDeclaratorId", stringWriter1);
      Node node0 = simpleNode0.parent;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild((Node) null, 92);
      assertEquals(93, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      StringWriter stringWriter0 = new StringWriter(66);
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("zt/jM/AN4A,!V[", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1693));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1693
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      stringWriter0.flush();
      simpleNode0.children = nodeArray0;
      stringWriter0.flush();
      // Undeclared exception!
      try { 
        simpleNode0.dump("$<%!6dPbH'gh'X4s~d", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringBuffer stringBuffer0 = new StringBuffer();
      SimpleNode simpleNode1 = new SimpleNode(73);
      simpleNode0.jjtAddChild(nodeArray0[2], 73);
      assertEquals(74, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.68937906138404
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.setIdentifier("z");
      simpleNode0.setIdentifier("&");
      stringWriter0.write((-1882191265));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("o)y5w");
      simpleNode0.dump((String) null, stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append('u');
      stringWriter1.close();
      stringWriter1.append((CharSequence) "o)y5w");
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[0], (-1882191265));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(1138);
      SimpleNode simpleNode2 = new SimpleNode(2082);
      SimpleNode simpleNode3 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("ForStatement");
      StringReader stringReader1 = new StringReader("ForStatement");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      JavaParser javaParser1 = new JavaParser(stringReader0);
      SimpleNode simpleNode4 = new SimpleNode(javaParser0, 1138);
      SimpleNode simpleNode5 = new SimpleNode(javaParser0, 0);
      Node node0 = simpleNode0.parent;
      simpleNode5.jjtAddChild((Node) null, 0);
      simpleNode5.jjtAddChild(simpleNode1, 0);
      simpleNode5.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode5, (-271));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 73;
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      String string0 = "InclusiveOrExpression";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "InclusiveOrExpression");
      SystemInUtil.addInputLine("InclusiveOrExpression");
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[2], (-84));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -84
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6885673693022826
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      stringWriter0.append((CharSequence) stringBuffer0);
      simpleNode0.dump("ZRc84@", stringWriter0);
      simpleNode0.dump("ZRc84@", stringWriter0);
      Node[] nodeArray0 = new Node[16];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      Node node1 = simpleNode0.parent;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = null;
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.id = 1;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 16);
      assertEquals(17, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(92);
      StringWriter stringWriter0 = new StringWriter(92);
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(">=", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(92);
      simpleNode0.jjtSetParent(simpleNode1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("0");
      simpleNode0.dump("0", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "VariableDeclaratorId");
      simpleNode0.dump("nW", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(simpleNode0, node0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.48509409130221154
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      stringWriter0.append((CharSequence) stringBuffer0);
      simpleNode0.dump("ZRc84>", stringWriter0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[3] = null;
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump("}", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("oAy!8>|1;,h");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.dump("{", stringWriter0);
      simpleNode0.dump("oAy!8>|1;,h", stringWriter0);
      assertEquals("<NameList>\n  <identifier>oAy!8>|1;,h</identifier>\n</NameList>\n<NameList>\n  <identifier>oAy!8>|1;,h</identifier>\n</NameList>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3874);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3874
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 3359);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4059);
      // Undeclared exception!
      try { 
        simpleNode0.toString("PrimarySuffix");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4059
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 10;
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtOpen();
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.rootNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      stringWriter0.append((CharSequence) stringBuffer0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      nodeArray0[1] = null;
      nodeArray0[3] = null;
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = simpleNode0.jjtGetChild(4);
      assertNull(node1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.68937906138404
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.setIdentifier("z");
      simpleNode0.setIdentifier("&");
      stringWriter0.write((-1882191265));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("o)y5w");
      simpleNode0.dump((String) null, stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append('u');
      stringWriter1.close();
      stringWriter1.append((CharSequence) "o)y5w");
      simpleNode0.toString();
      simpleNode0.jjtAddChild(nodeArray0[1], 73);
      assertEquals(74, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3245083869310707
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.id = (-1108452621);
      StringWriter stringWriter0 = new StringWriter(73);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.setIdentifier("z");
      simpleNode0.setIdentifier("&");
      stringWriter0.write((-1882191265));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("o)y5w");
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1108452621
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6248603116943127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<S`tReL", stringWriter0);
      simpleNode0.setIdentifier("Block");
      stringWriter0.write("Block");
      simpleNode0.setIdentifier(";dCfpC?rbM0}iQ5qx(");
      stringWriter0.write((-1882191265));
      simpleNode0.setIdentifier("?");
      simpleNode0.dump(";dCfpC?rbM0}iQ5qx(", stringWriter0);
      assertEquals("Block\u0A5F<Block>\n  <identifier>Block</identifier>\n  <identifier>;dCfpC?rbM0}iQ5qx(</identifier>\n  <identifier>?</identifier>\n</Block>\n", stringWriter0.toString());
      
      simpleNode0.toString();
      String string0 = simpleNode0.toString("Block");
      assertEquals("BlockBlock : Block : ;dCfpC?rbM0}iQ5qx( : ?", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.48439011623800354
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<S`tReL", stringWriter0);
      simpleNode0.setIdentifier("Block");
      stringWriter0.write("Block");
      simpleNode0.setIdentifier(";dCfpC?rbM0}iQ5qx(");
      stringWriter0.write((-1882191265));
      simpleNode0.setIdentifier("?");
      simpleNode0.dump(";dCfpC?rbM0}iQ5qx(", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1882191265));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(92);
      StringWriter stringWriter0 = new StringWriter(92);
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(">=", stringWriter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("0");
      simpleNode0.dump("0", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "VariableDeclaratorId");
      simpleNode0.dump("nW", stringWriter1);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 92);
      simpleNode0.dump(">>", stringWriter1);
      assertEquals(93, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter(73);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.dump("&", stringWriter0);
      stringWriter0.write(73);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("z");
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z");
      stringWriter0.write((-1882191265));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("o)y5w");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.setIdentifier("?");
      simpleNode0.dump(">FA", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(116);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }
}
