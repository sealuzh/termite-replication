/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 04:15:25 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}");
      SimpleNode simpleNode0 = new SimpleNode(18);
      String string0 = "+";
      simpleNode0.setIdentifier("+");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.identifiers = null;
      String string1 = ">=";
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7842842883183225
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(75);
      String string0 = "<=";
      simpleNode0.setIdentifier("<=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ze9Sa6 s");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1030));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode1 = new SimpleNode((-1030));
      simpleNode0.jjtAddChild(simpleNode1, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 63;
      SimpleNode simpleNode0 = new SimpleNode(63);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("*idzp");
      simpleNode0.dump("*le", stringWriter0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2021161078));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("S5zjbc-[\bVibC=", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>");
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser(">=");
      SimpleNode simpleNode1 = new SimpleNode(84);
      simpleNode0.jjtAddChild(simpleNode1, 84);
      stringWriter0.append('Z');
      simpleNode0.dump("YwKr1D;Rr$o|P+", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(84);
      assertEquals(85, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("TyhpeBound", stringWriter0);
      assertEquals("<ClassOrInterfaceBody>\n  <identifier>*lshft</identifier>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1030));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild(simpleNode0, 1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetChild(1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(10);
      stringWriter0.close();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*rshft</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(75);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(";");
      stringWriter0.append('f');
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("f<LocalVariableDeclaration>\n</LocalVariableDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1030));
      SimpleNode simpleNode1 = new SimpleNode(13);
      simpleNode1.jjtOpen();
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode1.setIdentifier("tsS`H<xZou#<m/");
      simpleNode0.jjtAddChild(simpleNode1, 13);
      assertEquals(14, simpleNode0.jjtGetNumChildren());
      
      Node node0 = simpleNode1.jjtGetParent();
      assertEquals(14, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      simpleNode0.dump("ConstructorDeclaration", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*amp</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(49);
      SimpleNode simpleNode1 = new SimpleNode(49);
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(simpleNode0, node0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(10);
      stringWriter0.close();
      simpleNode0.dump("}<Oy6%nY[oX{!D `fw", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*gt</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(51);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter(10);
      stringWriter0.close();
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<MultiplicativeExpression>\n</MultiplicativeExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4975124378109453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(102);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.jjtAddChild(simpleNode0, 102);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("jYJKn\"yr<gP", stringWriter0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1030));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("'0[|E{", stringWriter0);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.7911750535977373
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "FFJ\"rr";
      simpleNode0.setIdentifier("FFJ\"rr");
      StringWriter stringWriter1 = stringWriter0.append('');
      SimpleNode simpleNode1 = new SimpleNode(84);
      StringWriter stringWriter2 = stringWriter0.append('q');
      simpleNode0.dump("Annotation", stringWriter1);
      simpleNode1.dump("<", stringWriter2);
      simpleNode1.dump("FFJ\"rr", stringWriter1);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "FFJ\"rr");
      // Undeclared exception!
      try { 
        stringBuffer0.insert(124, (-3290.0F));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 124
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node[] nodeArray0 = new Node[1];
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      nodeArray0[0] = null;
      simpleNode0.children = nodeArray0;
      String string0 = "bQzjHj)yr";
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("bQzjHj)yr", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8172513212853555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)20;
      byteArray0[5] = (byte) (-94);
      byteArray0[6] = (byte) (-76);
      byteArray0[7] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("");
      stringWriter1.append('\\');
      simpleNode0.dump("u", stringWriter0);
      simpleNode0.dump("*ge", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*lt</identifier>\n</EnumConstant>\n<EnumConstant>\n  <identifier>*lt</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("v", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      assertFalse(stringWriter1.equals((Object)stringWriter0));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.7769347489611231
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      simpleNode0.setIdentifier("|");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter1 = stringWriter0.append('m');
      SimpleNode simpleNode1 = new SimpleNode(18);
      stringWriter1.append('m');
      simpleNode1.dump("|", stringWriter1);
      simpleNode0.dump("{", stringWriter1);
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      charArray0[4] = 'm';
      // Undeclared exception!
      try { 
        stringWriter1.write(charArray0, 1042, 18);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = (-862);
      SimpleNode simpleNode0 = new SimpleNode((-862));
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("eNhq?;#8)dQ,");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("UVH6#Oh/.Z(rp[5F2!");
      // Undeclared exception!
      try { 
        simpleNode0.dump("UVH6#Oh/.Z(rp[5F2!", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -862
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2164));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2164));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1030));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1030));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9807633640066171
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(75);
      simpleNode0.setIdentifier("<=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ze9Sa6 s");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("<=", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(75);
      simpleNode0.jjtAddChild(simpleNode1, 75);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1913020746));
      // Undeclared exception!
      try { 
        simpleNode0.toString("y");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1913020746
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.7887666007588374
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Zm4jrYD", stringWriter0);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter1 = new StringWriter();
      SystemInUtil.addInputLine("&");
      stringWriter1.append('/');
      simpleNode0.dump("\"?\"", stringWriter1);
      assertEquals("/<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : &", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(75);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{e}\r/M9v2@4NR", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 2794);
      simpleNode0.jjtGetChild(0);
      assertEquals(2795, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9426681259113789
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(75);
      String string0 = "<=";
      simpleNode0.setIdentifier("<=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ze9Sa6 s");
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9248749046381198
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("G:}9@m{qdH\"|", stringWriter0);
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m^jW");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("PH");
      simpleNode0.dump("PackageDeclaration", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n  <identifier>PH</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("dHr");
      assertEquals("dHrVariableDeclaratorId : & : PH", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9197466995099146
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("G:}9@m{qdH\"|", stringWriter0);
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m^jW");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("PH");
      simpleNode0.dump("G:}9@m{qdH\"|", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 1096;
      SimpleNode simpleNode0 = new SimpleNode(1096);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump(">>", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1062));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1062
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9389355707834581
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Zm4jrYD", stringWriter0);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append('/');
      simpleNode0.dump("\"?\"", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.014784547108511
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("TyhpeBound");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("TyhpeBound");
      SimpleNode simpleNode1 = new SimpleNode(47);
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter1 = stringWriter0.append('J');
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode0.dump("@GKMz", stringWriter1);
      assertEquals("J<InstanceOfExpression>\n  <identifier>TyhpeBound</identifier>\n  <identifier>TyhpeBound</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>TyhpeBound</identifier>\n  <identifier>TyhpeBound</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
      assertEquals("J<InstanceOfExpression>\n  <identifier>TyhpeBound</identifier>\n  <identifier>TyhpeBound</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>TyhpeBound</identifier>\n  <identifier>TyhpeBound</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-492));
      simpleNode0.jjtClose();
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("");
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append('M');
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      // Undeclared exception!
      try { 
        stringWriter1.write(charArray0, (-492), 5045);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 297);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(47);
      stringWriter1.close();
      simpleNode0.dump("=", stringWriter0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "=");
      stringWriter1.write("=");
      JavaParser javaParser0 = new JavaParser("=");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 16);
      simpleNode1.dump("", stringWriter2);
      assertEquals("==", stringWriter1.toString());
  }
}
