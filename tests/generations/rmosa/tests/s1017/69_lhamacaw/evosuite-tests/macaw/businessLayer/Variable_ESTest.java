/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 19:15:42 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.789343359510823
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("{m2Gy4=_BR");
      rawVariable0.setIdentifier(2147483645);
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable0.getForm();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.5871054454842985
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "#e~");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlias();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user1 = new User("3]./!n3K?2O", "z?i3l^L\"qao*Z9");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(99);
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.updateOntologyTerm(ontologyTerm0);
      Variable.validateFields(rawVariable2);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getAlias();
      Object object0 = new Object();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.233793649291117
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1907));
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getFilePath();
      rawVariable0.getYear();
      rawVariable0.clone();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.05514543589291
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.getColumnEnd();
      User user0 = new User();
      user0.setCity(">");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "#e~");
      User.detectFieldChanges(user0, user0, user0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(159);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      rawVariable0.getAlias();
      Object object0 = new Object();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.829210498199156
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = null;
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCodeBookNumber("FL[$wWE+");
      derivedVariable0.setIdentifier(1556);
      derivedVariable0.setCleaned(true);
      derivedVariable0.getAvailability();
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.clone();
      derivedVariable0.getAvailability();
      derivedVariable0.getName();
      derivedVariable0.getAlias();
      derivedVariable0.clone();
      derivedVariable0.getQuestionNumber();
      assertTrue(derivedVariable0.isCleaned());
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setCategory("LHA");
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      String string0 = "shQ#";
      String string1 = "Ss1hn)}ao>5KW";
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        rawVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm(")O7:SH&d3iRDR$W=");
      User user0 = new User();
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      ontologyTerm1.setIdentifier(343);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("&[J\"S:iKev");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setName("");
      derivedVariable0.setFilePath(")O7:SH&d3iRDR$W=");
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getIdentifier();
      rawVariable0.getAlias();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setColumnStart((String) null);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.form = "-";
      supportingDocument1.setIdentifier((-540));
      supportingDocument1.setIdentifier(139);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.7921872309678335
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      rawVariable0.getFilePath();
      variable0.codeBookNumber = "blank";
      Variable.validateFields(derivedVariable0);
      variable0.getQuestionNumber();
      variable0.getName();
      Variable variable1 = rawVariable0.getAlternativeVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      variable1.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      variable1.addSupportingDocuments(arrayList0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      variable1.getSupportingDocuments();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getValueLabels();
      System.setCurrentTimeMillis((-1L));
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.760750468781551
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.9284926989906412
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.columnEnd.label";
      rawVariable0.setLabel("NON_EXISTENT_USER");
      rawVariable0.getCodeBookNumber();
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setForm("NON_EXISTENT_USER");
      rawVariable0.setLabel((String) null);
      rawVariable0.setColumnEnd("id&^D|v'A");
      derivedVariable0.getNotes();
      rawVariable0.getQuestionNumber();
      derivedVariable0.setCoded(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.codeBookNumber = "id&^D|v'A";
      derivedVariable0.getNotes();
      rawVariable0.getDisplayName();
      derivedVariable0.getSupportingDocuments();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getAvailability();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getAvailability();
      rawVariable0.getLabel();
      assertEquals("id&^D|v'A", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.585547947863809
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertTrue(rawVariable0.isNewRecord());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeValueLabel((ValueLabel) null);
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_GET_CONNECTION");
      user0.setPostCode("general.fieldValue.unknown");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable2);
      derivedVariable0.removeSourceVariable(rawVariable1);
      rawVariable1.getNotes();
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.removeSourceVariable(rawVariable2);
      derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=4.281004920542469
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("n");
      derivedVariable0.setCleaningStatus("u^15%0");
      User user0 = new User();
      user0.setPhone("'RXX/n?R");
      user0.setAffiliation("jRt9J8rG+v/)/Lp$hi");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.isNewRecord();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getForm();
      derivedVariable0.setForm("");
      derivedVariable0.getCleaningDescription();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable1.getLabel();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("u^15%0", derivedVariable0.getCleaningStatus());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-1484));
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.setQuestionNumber("AjBp!`dKX:;iB0%m_");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.930227805988906
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("6 W3KpP>v`g~WP", "6 W3KpP>v`g~WP");
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setName("macaw.businessLayer.RawVariable");
      derivedVariable0.clone();
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getYear();
      derivedVariable0.getCleaningDescription();
      rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.754446902984987
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("LHA");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.getValueLabels();
      rawVariable0.setCategory("LHA");
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      User user0 = new User("shQ#", "Ss1hn)}ao>5KW");
      user0.setStatus("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlias();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setAvailability("");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      rawVariable1.hasSameDisplayName(derivedVariable0);
      rawVariable0.getCleaningDescription();
      rawVariable1.getAlias();
      derivedVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getColumnEnd();
      rawVariable0.getAvailability();
      assertEquals("LHA", rawVariable0.getColumnEnd());
      
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8096859530398572
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "-LHA");
      User.checkValidUserIDField("-LHA");
      ontologyTerm0.setOntologyName("3]./!n3K?2O");
      user0.setStatus("G gzX1> g");
      user0.setPhone("@Pnk");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("UNABLE_TO_REGISTER_CHANGE_EVENTS");
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      derivedVariable1.getSourceVariables();
      assertEquals("UNABLE_TO_REGISTER_CHANGE_EVENTS", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Object object0 = new Object();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = null;
      derivedVariable1.getAlias();
      derivedVariable1.setYear("#cnO5VC|(z{%3k-n");
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      assertEquals("#cnO5VC|(z{%3k-n", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setFileName("s^+_v=gLS[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("s^+_v=gLS[", "5.3_d");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      derivedVariable0.getCodeBookNumber();
      rawVariable0.isCleaned();
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      user0.setStatus("-LHA");
      user0.setPhone("EzP{P!IIz4I");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("NON_EXISTENT_SUPPORTING_DOCUMENT");
      rawVariable1.setLabel("NON_EXISTENT_SUPPORTING_DOCUMENT");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      assertEquals("NON_EXISTENT_SUPPORTING_DOCUMENT", rawVariable1.getLabel());
      
      derivedVariable1.getSourceVariables();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1732406386974072
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("LHA");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.iterator();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus("LHA");
      rawVariable0.getValueLabels();
      rawVariable0.setCategory("LHA");
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user0.setStatus("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      user0.setPhone("-p}3rQ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("0");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getForm();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAlias("0A<c_P8@)2");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getIdentifier();
      System.setCurrentTimeMillis(2106L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      derivedVariable0.setAvailability("");
      user0.setEmail("Be0_G2B1B3qm(WF");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCodeBookNumber();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.325750657489052
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setAvailability((String) null);
      User user0 = new User();
      user0.setIdentifier((-2477));
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("Unknown");
      int int0 = (-1797141489);
      derivedVariable0.setIdentifier((-1797141489));
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getIdentifier();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add((OntologyTerm) null);
      arrayList1.containsAll(arrayList0);
      arrayList1.iterator();
      // Undeclared exception!
      try { 
        arrayList1.removeIf((Predicate<? super OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.addAll(127, (Collection<? extends OntologyTerm>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 127, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = "z?i3l^L\"qao*Z9";
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.492738261577943
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "-LHA");
      ontologyTerm0.setOntologyName("3]./!n3K?2O");
      user0.setStatus("G gzX1> g");
      user0.setPhone("@Pnk");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ontologyTerm0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "G gzX1> g";
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      derivedVariable1.getSourceVariables();
      assertEquals("G gzX1> g", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.265546468718654
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = null;
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "!QB:XzKO0~a");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("&");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("-LHA");
      rawVariable0.setForm("general.fieldValue.unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("general.fieldValue.unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getValueLabels();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.setForm("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCoded(true);
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable2, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "#e~");
      User.detectFieldChanges(user0, user0, user0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setLabel((String) null);
      user0.setCounty("?/yD%R=H~");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setIdentifier(781);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm(")");
      rawVariable0.setForm((String) null);
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setCategory("general.fieldValue.blank");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getValueLabels();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.setForm("ontologyTerm.term.saveChanges");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable1.getValueLabels();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertEquals("general.fieldValue.blank", rawVariable0.getCategory());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.934294604446195
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("LHA");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.getValueLabels();
      rawVariable0.setCategory("LHA");
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      User user0 = new User("shQ#", "Ss1hn)}ao>5KW");
      user0.setStatus("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      user0.setPhone("-p}3rQ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("0");
      derivedVariable0.codeBookNumber = "7dv3q";
      rawVariable0.setCleaningStatus("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getForm();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getForm());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setName("oe6[e~G");
      rawVariable0.getForm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getDisplayName();
      assertEquals("oe6[e~G", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.notes = "UNABLE_TO_CHECK_VARIABLE_DUPLICATES";
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_CHECK_VARIABLE_DUPLICATES", derivedVariable0.getNotes());
      
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("UNABLE_TO_CREATE_CLEANING_STATE");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "UNABLE_TO_CREATE_CLEANING_STATE");
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user1, (User) null, (User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.754107018863361
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "-LHA");
      ontologyTerm0.setOntologyName("3]./!n3K?2O");
      user0.setStatus("G gzX1> g");
      user0.setPhone("@Pnk");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("0", rawVariable1.getLabel());
      
      derivedVariable1.removeSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.getValueLabels();
      rawVariable0.getForm();
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      User user0 = new User("shQ#", "Ss1hn)}ao>5KW");
      user0.setStatus("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.getYear();
      User user0 = new User();
      derivedVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      user0.clone();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("Zj1$v=T}8Q@nZ");
      derivedVariable1.getYear();
      User user0 = new User();
      derivedVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      user0.clone();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.809720556313327
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "-LHA");
      ontologyTerm0.setOntologyName("3]./!n3K?2O");
      user0.setStatus("G gzX1> g");
      user0.setPhone("@Pnk");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("3]./!n3K?2O");
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      derivedVariable1.getSourceVariables();
      rawVariable1.getCodeBookNumber();
      assertEquals("0", rawVariable1.getLabel());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.981746940333519
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("LHA");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.getValueLabels();
      rawVariable0.setCategory("LHA");
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      User user0 = new User("shQ#", "Ss1hn)}ao>5KW");
      user0.setStatus("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      user0.setPhone("-p}3rQ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("0");
      derivedVariable0.codeBookNumber = "7dv3q";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getForm();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("-p}3rQ");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("-p}3rQ", rawVariable1.getForm());
      
      derivedVariable0.getSupportingDocuments();
      assertEquals("", derivedVariable0.getYear());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.3838782514026584
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      boolean boolean0 = rawVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.752349411584702
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setTerm("z'9f)E_.G\"H");
      ontologyTerm0.setNameSpace("");
      ontologyTerm0.setIdentifier(781);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("-LHA");
      rawVariable0.setForm("geneal.fieldValue.unknown");
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.setCategory("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getValueLabels();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      derivedVariable2.setForm("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      assertEquals("geneal.fieldValue.unknown", derivedVariable1.getForm());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("$iJ|3FNb9\"D wG+ ");
      derivedVariable0.questionNumber = "variable.questionNumber.label";
      derivedVariable0.columnStart = "S]-m+Ea2_,,;Cyyoa";
      derivedVariable0.setFilePath("variable.label.label");
      derivedVariable0.getCleaningDescription();
      assertEquals("variable.label.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "^{g+A_Hr";
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.columnStart.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.columnStart.label");
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.809819674164452
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "-LHA");
      ontologyTerm0.setOntologyName("3]./!n3K?2O");
      user0.setStatus("G gzX1> g");
      user0.setPhone("@Pnk");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("3]./!n3K?2O");
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      derivedVariable1.getSourceVariables();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("<KEf");
      User user0 = new User("<KEf", "<KEf");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.setIdentifier(175);
      rawVariable0.setColumnStart("<KEf");
      ontologyTerm0.setTerm("UNABLE_TO_GET_ORIGINAL_USER");
      ontologyTerm0.setIdentifier(175);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(175);
      valueLabel0.clone();
      valueLabel0.setLabel("Pv");
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setNotes("variable.cleaningStatus.label");
      rawVariable0.getColumnStart();
      rawVariable0.getQuestionNumber();
      rawVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("<KEf");
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("175", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.form = "-";
      supportingDocument1.setFileName("-");
      supportingDocument1.setIdentifier((-540));
      supportingDocument1.setIdentifier(139);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.getColumnStart();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(34);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("-LHA");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable0.getQuestionNumber();
      assertEquals("-LHA", derivedVariable0.getForm());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("< oGn");
      rawVariable0.getIdentifier();
      rawVariable0.columnStart = "mF$]7t6^U&#w9Hb{";
      rawVariable0.getQuestionNumber();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.8096142298912112
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "-LHA");
      ontologyTerm0.setOntologyName("3]./!n3K?2O");
      user0.setStatus("G gzX1> g");
      user0.setPhone("@Pnk");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      rawVariable1.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      assertEquals("0", rawVariable1.getLabel());
      
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User("#e~", "#e~");
      User user1 = null;
      User.detectFieldChanges((User) null, user0, user0);
      user0.setUserID(" Gv?U_|RuXP^S)9");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "z?i3l^L\"qao*Z9");
      User.detectFieldChanges(user0, user0, user0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setUserID("0l;4.1");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "#e~");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      user0.setUserID(" Gv?U_|R~uXP^S)9");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "#e~");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      user0.setUserID(" Gv?U_|RuXP^S)9");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<MacawChangeEvent> arrayList1 = User.detectFieldChanges(user0, user0, user0);
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.6306398469971106
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "UNABLE_TO_DISASSOCIATE_DOCUMENT";
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setFilePath("OM>{'");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getFilePath();
      assertEquals("OM>{'", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "TdIm)sw");
      ontologyTerm0.setOntologyName("DUPLICATE_CATEGORY");
      User user1 = new User();
      user1.setStatus(")b");
      user0.setPhone("G gzX1> g");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.notes = "&";
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("LHA");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      assertEquals("LHA", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.spliterator();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setAlias("C?$Gb1I^/VtM9");
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getAlias();
      rawVariable0.getSupportingDocuments();
      User user0 = new User();
      assertEquals(0, user0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber(".X");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      assertEquals(".X", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "UNABLE_TO_GET_CLEANING_STATES";
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("!XsTdL");
      rawVariable0.setForm("!XsTdL");
      rawVariable0.getColumnEnd();
      assertEquals("!XsTdL", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.clone();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setQuestionNumber("variable.availability.label");
      rawVariable0.codeBookNumber = "variable.availability.label";
      rawVariable0.getQuestionNumber();
      rawVariable0.setCleaningDescription("nITvJgu&");
      rawVariable0.setCleaningDescription("`=Oi]!{IGg j~XO");
      rawVariable0.getColumnStart();
      assertEquals("`=Oi]!{IGg j~XO", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("variable.year.label");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCleaningDescription("k,");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setNotes("*7ck<&-bL");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      arrayList0.clear();
      derivedVariable0.setQuestionNumber("3vh");
      ontologyTerm1.setIdentifier(0);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getSourceVariables();
      assertEquals("*7ck<&-bL", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.notes = "LYQqmc*T8Fgt\"/xqI?y";
      rawVariable0.form = "TQJ|";
      rawVariable0.setAlternativeVariable((Variable) null);
      rawVariable0.setCodeBookNumber("=y");
      rawVariable0.createVariableSummary();
      assertEquals("=y", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "Q2<rHl";
      derivedVariable0.getForm();
      derivedVariable0.getCleaningStatus();
      assertEquals("Q2<rHl", derivedVariable0.getForm());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.5909928649421685
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.8618013244919664
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isNewRecord();
      derivedVariable0.setIdentifier((-1558));
      derivedVariable0.questionNumber = "-";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setQuestionNumber("SHBKs[<Iq$Y");
      derivedVariable0.setCleaningDescription("user.phone.label");
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setIdentifier(716);
      derivedVariable0.getColumnStart();
      derivedVariable0.createVariableSummary();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      rawVariable0.clone();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("SHBKs[<Iq$Y", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.5415984611152345
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "#e~");
      User.detectFieldChanges(user0, user0, user0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(arrayList0.isEmpty());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", variable0.getCategory());
      assertEquals("Unknown", variable0.getAvailability());
      assertEquals("Unknown", variable0.getCleaningStatus());
      assertFalse(variable0.isCoded());
      assertEquals(0, variable0.getIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setPostCode((String) null);
      user0.setFirstName("variable.form.label");
      user0.setPostCode("DUPLICATE_SOURCE_VARIABLE_EXISTS");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.form = "h_g{8;kh*Q~";
      derivedVariable0.setIdentifier(2062);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getAvailability();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("49kgD");
      rawVariable0.setQuestionNumber("h_g{8;kh*Q~");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getName();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getOntologyTerms();
      System.setCurrentTimeMillis(2062);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1621667395));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("-1621667395", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.6703615226556385
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setColumnStart("gp|nGPAq*S-3}[t");
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setYear("T_m-D^tWeA=l");
      rawVariable0.setYear("%5>E7Q\u000BC9$H1:1E");
      rawVariable0.clone();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("gp|nGPAq*S-3}[t", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "&2vAgD]_sq3C:";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getYear());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("&2vAgD]_sq3C:", rawVariable1.getQuestionNumber());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnStart());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "vu^";
      String string0 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "q |P8AjOf3li)%c$";
      String string0 = derivedVariable0.getNotes();
      assertEquals("", string0);
      
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("LHA");
      rawVariable0.setNotes("LHA");
      rawVariable0.getNotes();
      rawVariable0.getColumnStart();
      assertEquals("LHA", rawVariable0.getNotes());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("LHA");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getNotes();
      assertEquals("LHA", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setNotes("LHA");
      rawVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("YkvOo4(#C;hW|pKX");
      derivedVariable0.getYear();
      assertEquals("YkvOo4(#C;hW|pKX", derivedVariable0.getYear());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("z?i3l^L\"qao*Z9", "#e~");
      User.detectFieldChanges(user0, user0, user0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIdentifier((-103));
      rawVariable0.containsSupportingDocument(supportingDocument0);
      user0.setUserID(" Gv?U_|RuXP^S)9");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      rawVariable0.createVariableSummary();
      assertEquals("-103", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(781);
      rawVariable0.setColumnStart("-LHA");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getAlias();
      assertEquals("-LHA", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("L5b~j");
      User user0 = new User("L5b~j", "L5b~j");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getAlias();
      assertEquals("L5b~j", rawVariable0.getForm());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8988327955119217
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.name.label");
      User user0 = new User("#e~", "lB4;pgL}N2:^G{;,`");
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      user0.setUserID(" Gv?U_|RuXP^S)9");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      ArrayList<MacawChangeEvent> arrayList1 = User.detectFieldChanges(user0, user0, user0);
      assertNotSame(arrayList1, arrayList0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.name.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "ontologyTerm.term.label";
      rawVariable0.setName("ontologyTerm.term.label");
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("ontologyTerm.term.label");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "wBOt";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "jxcidl7s+ch";
      rawVariable0.setCategory("4`p]L%sIq!");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "t";
      derivedVariable0.setCategory("UNABLE_TR_CHECK_DATABASE_EXISTS");
      derivedVariable0.setName("dN>_fK3$u/H");
      derivedVariable0.createVariableSummary();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.getAlias();
      assertEquals("dN>_fK3$u/H", derivedVariable0.getName());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setColumnEnd("BmI");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.createVariableSummary();
      assertEquals("BmI", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.7540708007579298
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "-LHA");
      ontologyTerm0.setOntologyName("3]./!n3K?2O");
      user0.setStatus("G gzX1> g");
      user0.setPhone("@Pnk");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("0");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      assertEquals("0", rawVariable1.getLabel());
      
      derivedVariable1.getSourceVariables();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "\"]FWMYe`D";
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnStart();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getColumnStart();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.alias.label");
      rawVariable0.createVariableSummary();
      assertEquals("variable.alias.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "(";
      String string0 = rawVariable0.getColumnEnd();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("_qb+W:KkS/K3\"");
      ontologyTerm0.setOntologyName("s@0&c");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setLabel("Unknown");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getLabel();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("Unknown");
      valueLabel0.getDisplayName();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIdentifier((-413));
      derivedVariable0.getName();
      derivedVariable0.getColumnStart();
      derivedVariable0.setCodeBookNumber("Unknown-");
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      assertEquals("-413", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(2096);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("-LHA");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getLabel();
      assertEquals("-LHA", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("-LHA");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      assertEquals("-LHA", rawVariable0.getForm());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("variable.cleaningStatus.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setNotes("GYSROcj87 ");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      assertEquals("GYSROcj87 ", rawVariable0.getNotes());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("^aoe<0'E");
      derivedVariable0.notes = "Unknown";
      derivedVariable0.clone();
      User user0 = new User("", "variable.saveChanges.valueChanged");
      user0.setAddressLine2("");
      user0.setCity("variable.saveChanges.valueChanged");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "UNABLE_TO_DELETE_USER";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setYear("u1JS-ub");
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("u1JS-ub", rawVariable0.getYear());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5822705235337526
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("general.fieldValue.unknown");
      rawVariable0.setLabel("general.fieldValue.unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.clone();
      assertEquals("general.fieldValue.unknown", rawVariable0.getForm());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.5360478614522353
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("CHA");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.getValueLabels();
      rawVariable0.setCategory("CHA");
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      User user0 = new User("shQ#", "Ss1hn)}ao>5KW");
      user0.setStatus("ENABLE_TO_DELETE_UPPORTING_DOCUMENT");
      user0.setPhone("-p}3rQ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("0");
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.codeBookNumber = "variable.availability.label";
      rawVariable0.getQuestionNumber();
      rawVariable0.setCleaningDescription("nITvJgu&");
      rawVariable0.setCleaningDescription("-");
      assertEquals("-", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      rawVariable0.setYear((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setLabel((String) null);
      User user0 = new User("~GaIb", "variable.availability.label");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      boolean boolean1 = rawVariable0.isCoded();
      assertTrue(boolean1 == boolean0);
      
      rawVariable1.getFilePath();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setIdentifier(0);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("", "");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel1);
      rawVariable1.addValueLabel(valueLabel1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
      
      rawVariable1.getYear();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      supportingDocument0.clone();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.5343183560907687
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      rawVariable0.codeBookNumber = ")9Q{'+jO4SR%N";
      Variable.validateFields(rawVariable0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.isCoded();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.5347185161547943
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.codeBookNumber.label");
      rawVariable0.columnEnd = null;
      Variable.validateFields(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5338841398510814
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.setForm("-LHA");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getName();
      assertEquals("-LHA", rawVariable0.getForm());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("CsmhRzDeYf';'pe");
      Variable.validateFields(derivedVariable0);
      assertEquals("CsmhRzDeYf';'pe", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }
}
