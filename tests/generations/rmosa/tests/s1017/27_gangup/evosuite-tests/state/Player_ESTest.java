/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 19:22:24 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = true;
      Player player1 = new Player((-3863), (String) null, "", (short)4919);
      player0.next = (Party) player1;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      player0.setY((-2422.0F));
      float float0 = player0.getY();
      assertEquals((-2422.0F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(6166);
      player0.reset(true);
      player0.setZ(6166);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player0.setX((-1.0F));
      player0.getX();
      player0.pack();
      assertEquals(6166.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1797, "state.Party", 5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = new Player();
      player0.remove(player1);
      player0.setX(0.0F);
      player0.getSubparty();
      player0.setDead(49L, false);
      player0.setDead((long) 5, true);
      player0.getX();
      player0.pack();
      player0.isJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(731);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.getName());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(758);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player758", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(738);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player738", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.79438837168257
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-2087), "&P@0AM&ky", 0);
      Player player1 = new Player((-2087), "&P@0AM&ky", (-1274));
      player1.pack();
      player1.pack();
      Player player2 = new Player(4919, "&P@0AM&ky", (-1274));
      player2.isDead();
      player2.isDead();
      float float0 = Player.TOLERANCE;
      player1.getMoney();
      Player player3 = new Player(0, "Or8Z", "&P@0AM&ky", (-2087), (-1274));
      Player player4 = (Player)player2.gangBoss();
      player3.remove(player4);
      Player player5 = new Player(22);
      player4.setDead((-4730L));
      Player player6 = new Player((short)4919, "", "6Vug;CY/Y", (-1274), (short)4919);
      player4.remove(player2);
      player6.pack();
      float float1 = Player.MOVE_DISTANCE;
      player4.getTimeOfDeath();
      assertEquals((-4730L), player4.getTimeOfDeath());
      
      player6.pack();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.97547268752385
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-2500), "", (-2176));
      Player player1 = new Player((-2176), "", (-1274));
      byte[] byteArray0 = player1.pack();
      player0.pack();
      player1.isDead();
      player0.isDead();
      player1.getMoney();
      Player player2 = new Player(4);
      player2.isJoinOK(player1, false);
      player1.setMoney(0.1F);
      Player player3 = new Player((-1), "", 23552);
      player3.type();
      player3.unpack(byteArray0);
      player0.setZ((-1));
      player2.setZ(0.1F);
      player1.setZ((-1099.35F));
      player3.getX();
      float float0 = player1.getZ();
      assertEquals((-1099.35F), float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-1274));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)2;
      player0.isDead();
      player0.getMoney();
      Player player1 = new Player((-1), "Or8Z", "\"Awu}", (-18), (-18));
      player0.remove(player1);
      Player player2 = new Player(2);
      player1.isJoinOK(player2, false);
      player0.isJoinOK(player2, true);
      player1.type();
      Player player3 = new Player((-974), "Or8Z", "\"Awu}", 2, (-2696));
      player3.getSubparty();
      player0.unpack(byteArray0);
      player3.setZ((-2696));
      player3.setZ(0.1F);
      Party party0 = player2.head;
      player0.remove(player1);
      player3.getZ();
      assertEquals(0.1F, player3.getZ(), 0.01F);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(5, "VKv", 4919);
      player0.setMoney((-2909.3F));
      player0.getMoney();
      MockFile.createTempFile("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      Player player1 = new Player();
      player1.add(player0);
      assertEquals((-2909.3F), player0.getMoney(), 0.01F);
      assertEquals("Player-1", player1.getName());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(1, "", "", 1);
      player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(1, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(3, (String) null, (String) null, 3);
      player0.getIP();
      Player player1 = new Player();
      player1.setX(3);
      player1.head = (Party) player0;
      player1.pack();
      player1.reset(false);
      player0.setMoney(3);
      player0.setJoinOK(player1, true);
      player0.getName();
      player0.getZ();
      player0.type();
      player0.getTimeOfDeath();
      player0.getName();
      player0.toString();
      player1.getIP();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)17);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Party party0 = player0.prev;
      player0.id = 31905;
      player0.prev = (Party) player0;
      player0.getY();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6890278560247443
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2136, "", "gui.ModuleBrowserDialog$ModuleFilter", (-2475));
      Player player1 = new Player((-1650), "", "Player", 350);
      Player player2 = new Player(1352);
      player2.gangStrength();
      Player player3 = new Player((-1520));
      player3.gangStrength();
      Player player4 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", "}sFj(UdJ^z/zR>2!z %", 1352, 861);
      Party party0 = player4.gangBoss();
      player3.remove(player4);
      Player player5 = new Player((-177), "module.ModuleBrowserDialog$ModuleFilter", "s,ate.Playe$JoinInfo", 2372, 0);
      player3.reset(false);
      player5.pack();
      Party party1 = player0.gangBoss();
      party0.getSubparty();
      player5.remove(party1);
      player2.remove(player3);
      player0.setDead(0L, false);
      assertTrue(player0.isDead());
      
      player5.getStrength();
      player4.setX(1.0F);
      Player player6 = new Player(350, "", (-1002));
      player6.pack();
      player1.pack();
      assertEquals(350, player1.getPictureId());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1650));
      Player player1 = new Player((-24815), "", ".<}\"dN`W52", 4);
      player0.gangStrength();
      player1.gangStrength();
      Party party0 = player0.gangBoss();
      player0.remove(party0);
      Player player2 = new Player(4, "", "", 3023, (-1650));
      player1.reset(false);
      player1.pack();
      player2.gangBoss();
      player1.getSubparty();
      player1.remove(player2);
      player1.remove(party0);
      player2.setDead(301L, false);
      int int0 = player2.getStrength();
      assertTrue(player2.isDead());
      assertEquals((-1650), int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-31590), "Player", "Player", (-31590), (-31590));
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-31590), int0);
      assertEquals((-31590), player0.getPictureId());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(10, "} ,'G ", 964);
      Player player1 = new Player(21716, "CC{K5|[A:j", (-1559));
      player1.pack();
      byte[] byteArray0 = player0.pack();
      player1.isDead();
      player0.isDead();
      player1.setX((-1559));
      player1.toString();
      Player player2 = new Player((-1980), "Or8Z", "Or8Z", (-254));
      player0.isConnected();
      player1.getMoney();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      
      float float0 = player2.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, "Player", "Player", (-2161), 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      int int1 = player0.type();
      assertTrue(player0.isConnected());
      assertEquals(5, int1);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-2161), player0.getPictureId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(16011, (String) null, (String) null, 16011, 16011);
      int int0 = player0.gangStrength();
      assertEquals(16011, int0);
      assertEquals(16011, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0543110595891974
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.next;
      player0.remove((Party) null);
      Player player1 = new Player((-3537), ".vSC", (-3537));
      player0.setJoinOK(player1, true);
      player0.setDead((-829L), true);
      player0.setMoney(3996.5715F);
      player0.isConnected();
      player0.getPictureId();
      assertEquals((-829L), player0.getTimeOfDeath());
      
      Player player2 = new Player((-671), "=)K$", "xw7uP}z<we'KXCIJQ5", 2674);
      player2.reset(true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      player1.unpack(byteArray0);
      player2.pack();
      Player player3 = new Player((-1), "xw7uP}z<we'KXCIJQ5", "state.Player$JoinInfo", (short)4919, 4919);
      player3.getPictureId();
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-1762), "^cF{(#_hO07o;2s,", "^cF{(#_hO07o;2s,", (-1583));
      Player player1 = new Player(2);
      player1.setDead((long) (-1583), true);
      player1.boss = (Party) player0;
      player1.setDead((long) (-1762));
      player0.setJoinOK(player1, false);
      assertTrue(player1.isDead());
      
      player0.pack();
      player0.getPictureId();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(738);
      player0.setX(384.79037F);
      Player player1 = new Player((-1487));
      player0.setJoinOK(player1, true);
      player0.getSubparty();
      player0.setY(1.0F);
      player1.getX();
      player1.setDead((long) (-1487), false);
      player0.setDead(0L, true);
      player1.gangStrength();
      player1.gangStrength();
      player1.getX();
      player1.isJoinOK(player0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.getY();
      player1.getX();
      player0.getY();
      System.setCurrentTimeMillis(738);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 4919, 895);
      Player player1 = new Player((short)4919, "", (short)4919);
      player0.boss = (Party) player1;
      player0.setDead((long) 4919, false);
      player0.getStrength();
      assertEquals(4919L, player0.getTimeOfDeath());
      
      player1.toString();
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-3726), ".*[.]class$", 3955);
      player0.add((Party) null);
      byte[] byteArray0 = new byte[3];
      player0.getSubparty();
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)13;
      player0.unpack(byteArray0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(1280, (String) null, 1280);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(1, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      File file0 = MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player();
      player0.add(player1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      dataOutputStream0.writeInt((short)4919);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.readUTF();
      player0.unpack(dataInputStream0);
      player0.pack(dataOutputStream0);
      Player player2 = new Player((-1057), "module.ModuleBrowserDialog$ModuleFilter", 512);
      player1.isJoinOK(player0, false);
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      float float0 = player2.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(1781);
      MockPrintStream mockPrintStream0 = new MockPrintStream("):s");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player1781", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(1797);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player(5654);
      player0.add(player1);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player5654", player1.toString());
      
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(2, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(4088);
      Party party0 = new Party();
      player0.head = party0;
      player0.getY();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(21755);
      Party party0 = player0.boss;
      player0.next = null;
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(1L, true);
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1L, long0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(0);
      player0.getTimeOfDeath();
      player0.reset(false);
      player0.getZ();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player0", player0.toString());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(895, "", "", 4919);
      Player player1 = new Player((short)4919, "", (short)4919);
      player0.boss = (Party) player1;
      player0.setDead((long) 4919, false);
      player0.getStrength();
      assertEquals(4919L, player0.getTimeOfDeath());
      
      player1.toString();
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fq*B!EZ0]3");
      Player player0 = new Player(1909, "fq*B!EZ0]3", (-1));
      float float0 = player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals((-1), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)85;
      byteArray0[2] = (byte) (-6);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-1));
      Player player1 = new Player((short)4919);
      player1.gangStrength();
      player1.setDead();
      player1.boss = (Party) player0;
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(0, "=)K$", "=)K$", 0);
      Party party0 = player0.next;
      player0.remove((Party) null);
      Player player1 = new Player((-3537), ".vSC", (-1646));
      player0.setDead((-829L), true);
      player0.setMoney(3996.5715F);
      player0.isConnected();
      player0.getPictureId();
      Player player2 = new Player((short)4919, "xw7uP}z<we'KXCIJQ5", (short)4919);
      player1.setMoney(0.1F);
      assertEquals(0.1F, player1.getMoney(), 0.01F);
      
      String string0 = player2.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(740);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-1L));
      player0.setConnected(false);
      player0.getMoney();
      player0.isConnected();
      player0.setDead(1688L);
      assertEquals(1688L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setConnected(true);
      System.setCurrentTimeMillis(5);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 21716;
      Player player0 = new Player(21716);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 2;
      Player player0 = new Player(3137, "FX=21dY~'L$V#OYt[", 2);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      player1.unpack(byteArray0);
      player0.next = (Party) player1;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.markSupported();
      mockFileInputStream0.getChannel();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player1.getSubparty();
      dataInputStream0.skip(218L);
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-4387));
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      System.setCurrentTimeMillis(15000L);
      Player player0 = new Player(3061);
      player0.setY((-3081.49F));
      int int0 = player0.type();
      assertEquals((-3081.49F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-20219));
      Player player1 = new Player((-20219));
      player1.reset(false);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-20219));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(1016);
      String string0 = "PC3|%/{}y=_3NBJ'=5/";
      MockFile mockFile0 = new MockFile("PC3|%/{}y=_3NBJ'=5/");
      File file0 = MockFile.createTempFile("PC3|%/{}y=_3NBJ'=5/", "", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player0.unpack(dataInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1016);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(3918, "T1'yy]$!VI;yBA$", 3918);
      Player player1 = new Player(3918, "T1'yy]$!VI;yBA$", "", (-1094));
      player1.remove(player0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      assertFalse(player0.isDead());
      
      player1.setDead(0L);
      player0.setDead(0L);
      player1.isDead();
      player0.toString();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-1));
      String string0 = player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-252));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      String string0 = "PC3|%/{}y=_3NBJ'=5/";
      MockFile mockFile0 = new MockFile("PC3|%/{}y=_3NBJ'=5/");
      File file0 = MockFile.createTempFile("PC3|%/{}y=_3NBJ'=5/", "", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player0.isDead();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1016);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(248);
      player0.prev = (Party) player0;
      player0.setX(248);
      player0.getName();
      assertEquals(248.0F, player0.getX(), 0.01F);
  }
}
