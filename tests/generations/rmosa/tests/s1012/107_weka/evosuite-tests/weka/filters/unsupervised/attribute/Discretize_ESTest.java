/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 13:02:39 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.ProtectedProperties;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIC4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIC4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[2];
      DenseInstance denseInstance0 = new DenseInstance(1);
      discretize0.convertInstance(denseInstance0);
      assertEquals(10, discretize0.getBins());
      assertTrue(discretize0.isNewBatch());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[1][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "9LlT#e");
      doubleArray1[0] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      DenseInstance denseInstance0 = new DenseInstance(2);
      denseInstance0.setValue(attribute0, (-0.0016286644951140066));
      discretize0.convertInstance(denseInstance0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      discretize0.m_MakeBinary = true;
      Instances instances0 = new Instances(".bNEiw_", arrayList0, 3);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: Class attribute not set!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 3;
      double[][] doubleArray1 = new double[2][7];
      discretize0.m_CutPoints = doubleArray1;
      DenseInstance denseInstance0 = new DenseInstance(0, doubleArray0);
      discretize0.convertInstance(denseInstance0);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.870165328861826
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[19][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.createFolder(evoSuiteFile0);
      discretize0.m_CutPoints = doubleArray0;
      DenseInstance denseInstance0 = new DenseInstance(2);
      denseInstance0.setValue(attribute0, (double) 4);
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A nominal attribute (4[yM#mIj>RIv4&pl) cannot have duplicate labels ('(0-0]').
         //
         verifyException("weka.core.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      boolean boolean0 = discretize0.batchFinished();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 3;
      double[][] doubleArray1 = new double[2][7];
      doubleArray1[0] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      DenseInstance denseInstance0 = new DenseInstance(1);
      discretize0.convertInstance(denseInstance0);
      boolean boolean1 = discretize0.batchFinished();
      assertEquals(10, discretize0.getBins());
      assertFalse(boolean1 == boolean0);
      assertFalse(discretize0.getFindNumBins());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInvertSelection(true);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      boolean boolean1 = discretize0.batchFinished();
      assertTrue(boolean1 == boolean0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      DenseInstance denseInstance0 = new DenseInstance((-13.059396031910712), doubleArray0);
      discretize0.convertInstance(denseInstance0);
      discretize0.getRevision();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertTrue(discretize0.isNewBatch());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_DesiredWeightOfInstancesPerInterval = 4.8;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("weka.filters.Filter", (List<String>) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("integer", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      DenseInstance denseInstance0 = new DenseInstance(0);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(denseInstance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.core.DenseInstance", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7923810113613925
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      boolean boolean1 = discretize0.batchFinished();
      assertTrue(boolean1 == boolean0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      DenseInstance denseInstance0 = new DenseInstance((-1.0), doubleArray0);
      discretize0.convertInstance(denseInstance0);
      discretize0.findNumBins(0);
      discretize0.calculateCutPoints();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setFindNumBins(true);
      Attribute attribute0 = new Attribute("(-inf-");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("0T-b.j", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[19][7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.setUseBinNumbers(false);
      discretize0.calculateCutPointsByEqualFrequencyBinning(2);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      
      Discretize discretize1 = new Discretize("=Z;?Z0oP");
      String string0 = discretize1.useEqualFrequencyTipText();
      assertFalse(discretize1.getUseEqualFrequency());
      assertEquals(10, discretize1.getBins());
      assertFalse(discretize1.getMakeBinary());
      assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize1.getUseBinNumbers());
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
      assertFalse(discretize1.getFindNumBins());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7931511307298944
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_UseEqualFrequency = true;
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      double[][] doubleArray1 = new double[1][7];
      doubleArray1[0] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      doubleArray0[1] = (double) 0;
      DenseInstance denseInstance0 = new DenseInstance(0, doubleArray0);
      discretize0.convertInstance(denseInstance0);
      discretize0.setInputFormat(instances0);
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[2][7];
      discretize0.m_CutPoints = doubleArray1;
      DenseInstance denseInstance0 = new DenseInstance(0, doubleArray0);
      discretize0.convertInstance(denseInstance0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.791946795121705
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 0;
      DenseInstance denseInstance0 = new DenseInstance(0, doubleArray0);
      discretize0.convertInstance(denseInstance0);
      boolean boolean0 = discretize0.input(denseInstance0);
      assertFalse(discretize0.isNewBatch());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[19][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.createFolder(evoSuiteFile0);
      discretize0.m_CutPoints = doubleArray0;
      DenseInstance denseInstance0 = new DenseInstance(2);
      // Undeclared exception!
      try { 
        discretize0.input(denseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      discretize0.setBins((-2588));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.listOptions();
      assertEquals((-2588), discretize0.getBins());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      boolean boolean0 = discretize0.batchFinished();
      assertFalse(boolean0);
      
      String string0 = discretize0.getBinRangesString(0);
      assertEquals("All", string0);
      assertTrue(discretize0.isNewBatch());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("-O", (-2086126969));
      discretize0.m_DesiredWeightOfInstancesPerInterval = (double) 0;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute1 = new Attribute("integer", linkedList0, 3);
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("DSuj", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-48));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Discretize discretize0 = new Discretize("4[yM#mIj>RIv4&pl");
      discretize0.m_ClassIndex = 14;
      discretize0.setUseBinNumbers(false);
      discretize0.m_NumBins = (-2095105995);
      discretize0.m_FindNumBins = false;
      discretize0.getAttributeIndices();
      discretize0.setFindNumBins(true);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      discretize0.findNumBinsTipText();
      discretize0.getFindNumBins();
      try { 
        Filter.makeCopies(discretize0, (-2515));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      instances0.setClass(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      double[][] doubleArray1 = new double[1][7];
      doubleArray1[0] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      // Undeclared exception!
      try { 
        discretize0.findNumBins(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      instances0.setClass(attribute0);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      boolean boolean1 = discretize0.batchFinished();
      assertTrue(boolean1 == boolean0);
      
      Attribute attribute1 = new Attribute("@xENo'?aVy.NXo^N");
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList1.add(attribute1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = 2.0;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 1;
      DenseInstance denseInstance0 = new DenseInstance(0, doubleArray0);
      discretize0.convertInstance(denseInstance0);
      assertEquals(10, discretize0.getBins());
      assertTrue(discretize0.isNewBatch());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      boolean boolean0 = discretize0.batchFinished();
      assertFalse(boolean0);
      
      double[] doubleArray0 = new double[2];
      DenseInstance denseInstance0 = new DenseInstance(0, doubleArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 484;
      intArray0[4] = 1;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-561), intArray0, 0);
      discretize0.convertInstance(binarySparseInstance0);
      assertTrue(discretize0.isNewBatch());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute0 = new Attribute("'", (List<String>) null, protectedProperties0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("string", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "@data");
      DenseInstance denseInstance0 = new DenseInstance(2);
      denseInstance0.setValue(attribute0, (double) 4);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 4;
      DenseInstance denseInstance1 = new DenseInstance((-2487.46272809565), doubleArray0);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(denseInstance1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.StringLocator", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("numeric", arrayList0, 0);
      instances0.setClass(attribute0);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      DenseInstance denseInstance0 = new DenseInstance(0, (double[]) null);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(denseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.DenseInstance", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_DesiredWeightOfInstancesPerInterval = 4.8;
      Attribute attribute0 = new Attribute("ir");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("ir", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute(".~i{ I75ZEH<t ++R", 0);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      Attribute attribute2 = new Attribute("JWX_~5q&ja", arrayList3);
      arrayList2.add(attribute2);
      Instances instances0 = new Instances("@attribute", arrayList2, 1);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      assertFalse(boolean0);
      
      discretize0.calculateCutPoints();
      String string0 = discretize0.makeBinaryTipText();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Make resulting attributes binary.", string0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      double[][] doubleArray0 = new double[19][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.createFolder(evoSuiteFile0);
      discretize0.m_CutPoints = doubleArray0;
      DenseInstance denseInstance0 = new DenseInstance(2);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-1879048189));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1879048189
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Range range0 = new Range();
      discretize0.m_DiscretizeCols = range0;
      assertFalse(discretize0.getMakeBinary());
      
      Attribute attribute0 = new Attribute("[yM#mIj>RIv4&pl", (-2100799218));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("[yM#mIj>RIv4&pl", arrayList0, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      boolean boolean1 = discretize0.batchFinished();
      assertTrue(boolean1 == boolean0);
      
      String string0 = discretize0.attributeIndicesTipText();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertTrue(discretize0.isNewBatch());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertEquals("Specify range of attributes to act on. This is a comma separated list of attribute indices, with \"first\" and \"last\" valid values. Specify an inclusive range with \"-\". E.g: \"first-3,5,6-10,last\".", string0);
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      arrayList0.add(attribute0);
      instances0.setClass(attribute0);
      discretize0.setInputFormat(instances0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "@data");
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: '4[yM#mIj>RIv4&pl' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.649687007448405
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[1][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "9LlT#e");
      doubleArray1[0] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      DenseInstance denseInstance0 = new DenseInstance(2);
      denseInstance0.setValue(attribute0, (double) 4);
      discretize0.setOutputFormat();
      discretize0.setInputFormat(instances0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Consumer<Attribute> consumer0 = (Consumer<Attribute>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("AJrh~NHU}V$DG|=/rZ", arrayList0, 1617);
      Attribute attribute1 = new Attribute("N3*RL", instances0, 1617);
      instances0.setClass(attribute1);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class index: 1617
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mBj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mBj>RIv4&pl", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.getIgnoreClass();
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[20][7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "relational");
      doubleArray1[0] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      DenseInstance denseInstance0 = new DenseInstance(2);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Quote parse error.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("Quote parse error.", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.input((Instance) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, intArray0, 4);
      // Undeclared exception!
      try { 
        discretize0.input(binarySparseInstance0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Instance has no dataset assigned!!
         //
         verifyException("weka.core.RelationalLocator", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      arrayList0.add(attribute0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "relational");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".arff");
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl", (-2100799218));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-2034458190));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2034458190
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      int[] intArray0 = new int[1];
      intArray0[0] = 3;
      discretize0.setAttributeIndicesArray(intArray0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute("real");
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("integer", arrayList0, 4);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid range list at 4
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("kR6`I,Zy=GQz-@FR;Y");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("string", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("|`>q~=]=:{x:", (-2100799218));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("|`>q~=]=:{x:", arrayList0, 1);
      StringTokenizer stringTokenizer0 = new StringTokenizer("@relation", "@attribute", true);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("|`>q~=]=:{x:", (-2100799218));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("|`>q~=]=:{x:", arrayList0, 1);
      StringTokenizer stringTokenizer0 = new StringTokenizer("@relation", "@attribute", true);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      discretize0.setOptions(stringArray0);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("4[yM#mIj>RIv4&pl");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("4[yM#mIj>RIv4&pl", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.findNumBins((-172));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Attribute attribute0 = new Attribute(" Jv=8", (-2087831322));
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 1);
      Discretize discretize0 = new Discretize("%{y=)UhVT4&B");
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid range list at %{y=)UhVT4&B
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-B";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No value given for -B option.
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getFindNumBins();
      double[][] doubleArray0 = new double[2][6];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1287.31401063018;
      doubleArray1[1] = 4.8;
      doubleArray1[2] = 1.7976931348623157E308;
      doubleArray1[3] = 5.3;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 4477.623425188192;
      doubleArray1[6] = 1531.265539109;
      doubleArray1[7] = Double.POSITIVE_INFINITY;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 1.7976931348623157E308;
      doubleArray2[2] = Double.POSITIVE_INFINITY;
      doubleArray0[1] = doubleArray2;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.m_IgnoreClass = false;
      discretize0.getAttributeIndices();
      discretize0.setInvertSelection(true);
      discretize0.getInvertSelection();
      discretize0.makeBinaryTipText();
      System.setCurrentTimeMillis(0L);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.m_MakeBinary = true;
      boolean boolean0 = discretize0.getMakeBinary();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[14][9];
      discretize0.m_CutPoints = doubleArray0;
      double[][] doubleArray1 = new double[6][9];
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) (byte)0;
      doubleArray2[0] = (double) (byte)0;
      doubleArray2[2] = (double) (byte)0;
      doubleArray1[0] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (double) (byte)0;
      doubleArray1[1] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (double) (byte)0;
      doubleArray4[1] = (double) (byte)0;
      doubleArray4[2] = (double) (byte)0;
      doubleArray4[3] = 0.0;
      doubleArray4[4] = (double) (byte)0;
      doubleArray4[5] = (double) (byte)0;
      double[] doubleArray5 = new double[16];
      doubleArray5[1] = (double) (byte)0;
      doubleArray5[2] = 0.0;
      doubleArray5[3] = 635.15553977174;
      doubleArray5[4] = (double) (byte)0;
      doubleArray5[5] = (double) (byte)0;
      doubleArray5[6] = (double) (byte)0;
      doubleArray5[7] = (double) (byte)0;
      doubleArray1[3] = doubleArray5;
      doubleArray1[4] = doubleArray3;
      double[] doubleArray6 = new double[0];
      discretize0.m_CutPoints = doubleArray1;
      Discretize discretize1 = (Discretize)Filter.makeCopy(discretize0);
      discretize1.toString();
      String string0 = discretize0.getBinRangesString((byte)0);
      assertEquals("(-inf-0],(0-0],(0-0],(0-0],(0-0],(0-inf)", string0);
      
      discretize1.getCutPoints((byte)0);
      assertFalse(discretize1.getFindNumBins());
      assertEquals((-1.0), discretize1.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize1.getBins());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6151104036339126
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 296;
      doubleArray0[1] = (double) 296;
      double[][] doubleArray1 = new double[6][9];
      doubleArray1[0] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      discretize0.m_UseBinNumbers = true;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_MakeBinary = true;
      double[][] doubleArray0 = new double[14][9];
      discretize0.m_CutPoints = doubleArray0;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) (byte)0;
      doubleArray1[1] = (double) (byte)0;
      doubleArray1[2] = (double) (byte)0;
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Discretize discretize1 = (Discretize)Filter.makeCopy(discretize0);
      assertFalse(discretize1.getUseEqualFrequency());
      
      discretize0.m_UseEqualFrequency = true;
      discretize0.getBinRangesString(2824);
      discretize0.getOptions();
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 296;
      doubleArray0[1] = (double) 296;
      double[][] doubleArray1 = new double[6][9];
      doubleArray1[0] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      discretize0.setOutputFormat();
      discretize0.setUseBinNumbers(true);
      discretize0.getUseBinNumbers();
      Discretize discretize1 = new Discretize();
      assertFalse(discretize1.getUseBinNumbers());
      
      discretize0.getBinRangesString(7);
      assertTrue(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.listOptions();
      discretize0.m_DesiredWeightOfInstancesPerInterval = 0.0;
      discretize0.getDesiredWeightOfInstancesPerInterval();
      discretize0.getBins();
      discretize0.getBinRangesString((-2040109463));
      discretize0.globalInfo();
      SparseInstance sparseInstance0 = null;
      try {
        sparseInstance0 = new SparseInstance((-1073741842));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[9];
      discretize0.m_IgnoreClass = true;
      doubleArray0[0] = (double) 296;
      doubleArray0[1] = (double) 296;
      double[][] doubleArray1 = new double[6][9];
      doubleArray1[0] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[8][9];
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(3196);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3196
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Discretize discretize0 = new Discretize("\nOK to continue [y/n]? > ");
      discretize0.setDesiredWeightOfInstancesPerInterval(2.0);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      Locale.getISOLanguages();
      discretize0.getDesiredWeightOfInstancesPerInterval();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.m_FindNumBins = false;
      // Undeclared exception!
      try { 
        discretize0.findNumBins((-2088));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("$_W?,=4", arrayList0, 16);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      discretize0.m_MakeBinary = true;
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't ignore class when changing the number of attributes!
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("}Y/H`XDV");
      Range range0 = new Range();
      discretize0.m_DiscretizeCols = range0;
      Filter.makeCopy(discretize0);
      discretize0.getUseEqualFrequency();
      int int0 = 936;
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 272;
      doubleArray0[1] = (double) 272;
      double[][] doubleArray1 = new double[6][9];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      discretize0.m_CutPoints = doubleArray1;
      doubleArray0[2] = (double) 272;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints((-2106));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2106
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.findNumBinsTipText();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[5] = "=========\t==========\t=======\n";
      stringArray0[6] = "OK to continue [y/n]? >";
      Discretize.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "out,4!e0HqHJ";
      stringArray0[1] = "5h@3\"G";
      stringArray0[2] = "-R";
      stringArray0[3] = "N6Wo^2";
      stringArray0[4] = "\nTrain and test folds for 3-fold CV:";
      stringArray0[5] = "9";
      stringArray0[6] = "";
      stringArray0[7] = "\tOptimize number of bins using leave-one-out estimate\n\tof estimated entropy (for equal-width discretization).\n\tIf this is set then the -B option will be ignored.";
      stringArray0[8] = "~]I>z";
      discretize0.setOptions(stringArray0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-B";
      stringArray0[1] = "-B";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-B\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndices((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
      FileSystemHandling.createFolder(evoSuiteFile0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1588;
      intArray0[1] = 10;
      intArray0[2] = (-636);
      intArray0[3] = 5238;
      intArray0[4] = 2261;
      discretize0.setAttributeIndicesArray(intArray0);
      discretize0.m_MakeBinary = true;
      discretize0.getCapabilities();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_MakeBinary = true;
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useBinNumbersTipText();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.binsTipText();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals("Number of bins.", string0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Range range0 = new Range();
      discretize0.m_DiscretizeCols = range0;
      discretize0.getAttributeIndices();
      String string0 = discretize0.makeBinaryTipText();
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Make resulting attributes binary.", string0);
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints((-1073741822));
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[9];
      discretize0.m_FindNumBins = true;
      doubleArray1[7] = 5.3;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[1] = 5.3;
      doubleArray0[3] = doubleArray4;
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getInvertSelection();
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.383329504375038
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getOptions();
      String[] stringArray0 = new String[2];
      discretize0.toString();
      discretize0.m_NumBins = 2177;
      stringArray0[0] = "X~o9}(Are_";
      stringArray0[1] = "%R'>d1,FA}roDNWx";
      discretize0.setOptions(stringArray0);
      discretize0.setOutputFormat();
      discretize0.getRevision();
      discretize0.setDesiredWeightOfInstancesPerInterval((-1118.7185));
      String[] stringArray1 = new String[1];
      stringArray1[0] = "X~o9}(Are_";
      discretize0.setOptions(stringArray1);
      discretize0.m_DiscretizeCols = null;
      discretize0.setMakeBinary(false);
      // Undeclared exception!
      try { 
        discretize0.getAttributeIndices();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      Discretize discretize0 = null;
      try {
        discretize0 = new Discretize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setAttributeIndices("v1G]I>=iw.g`|");
      // Undeclared exception!
      try { 
        discretize0.outputPeek();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getInvertSelection();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getUseEqualFrequency();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(boolean0);
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1874);
      Discretize discretize0 = new Discretize();
      double double0 = discretize0.getDesiredWeightOfInstancesPerInterval();
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), double0, 0.01);
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getUseBinNumbers();
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(boolean0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double double0 = (-1210.937);
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = (-1210.937);
      doubleArray0[4] = 2.0;
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndicesArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getMakeBinary();
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(boolean0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCapabilities();
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.5234532689674727
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[5][9];
      discretize0.m_CutPoints = doubleArray0;
      double[][] doubleArray1 = new double[10][9];
      double[] doubleArray2 = new double[1];
      doubleArray1[0] = doubleArray2;
      discretize0.m_CutPoints = doubleArray1;
      discretize0.getBinRangesString((byte)0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "(-inf-0],(0-inf)";
      stringArray0[1] = "(-inf-0],(0-inf)";
      stringArray0[2] = "(-inf-0],(0-inf)";
      stringArray0[3] = "(-inf-0],(0-inf)";
      stringArray0[4] = "\tSpecifies the (maximum) number of bins to divide numeric attributes into.\n\t(default = 10)";
      stringArray0[5] = "(-inf-0],(0-inf)";
      discretize0.setOptions(stringArray0);
      discretize0.invertSelectionTipText();
      String string0 = discretize0.getBinRangesString((byte)0);
      assertNotNull(string0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals("(-inf-0],(0-inf)", string0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-M";
      stringArray0[1] = "-B";
      stringArray0[2] = "-B";
      stringArray0[3] = "-B";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[1];
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setUseEqualFrequency(false);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }
}
