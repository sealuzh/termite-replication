/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 13:32:46 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "g5J");
      System.setCurrentTimeMillis((-767L));
      Player player0 = new Player(14085, "4EimP", 14085);
      player0.setY(14085);
      File file0 = MockFile.createTempFile("g5J", "]_lz8^<{)nWT:>");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      dataOutputStream0.writeInt((-84));
      dataOutputStream0.writeFloat(0.0F);
      player0.pack(dataOutputStream0);
      player0.reset(false);
      player0.setMoney((-3512.84F));
      player0.getY();
      player0.pack();
      assertEquals((-3512.84F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1), "*vOz", (-1));
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY((-1));
      float float0 = player0.getY();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      int int0 = (-401);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0538382463504266
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1, "", 1);
      player0.setDead(0L);
      player0.setDead(0L);
      player0.setX((-3044L));
      player0.reset(true);
      player0.isDead();
      player0.type();
      player0.getPictureId();
      Player player1 = new Player();
      byte[] byteArray0 = player0.pack();
      player1.setDead(1329L);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4919, 1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player2 = new Player(1372, "state.Player", "0.0.0.0", (-1611), 1);
      player0.getX();
      player0.isBoss();
      assertEquals((-3044.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(1339, "", 3965);
      Player player1 = new Player(1339, "", 0);
      player1.add((Party) null);
      player0.add((Party) null);
      player0.setZ((short)4919);
      player1.setZ((short)4919);
      Player player2 = new Player((-2857), "w=Tgv0#*ffZ{", "ea]@#", 1);
      player2.setJoinOK(player0, true);
      player0.getZ();
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertEquals(4919.0F, player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ROmArBrJ");
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setZ((-674.9937F));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      Player player2 = new Player((-256), "", (String) null, (short)4919, (-103));
      player1.getName();
      Player player3 = new Player((-256));
      player1.setJoinOK(player0, true);
      assertEquals((-674.9937F), player1.getZ(), 0.01F);
      
      player2.toString();
      assertEquals(4919, player2.getPictureId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1479));
      player0.setZ((-1479));
      player0.pack();
      float float0 = player0.getZ();
      assertEquals((-1479.0F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(2096, (String) null, (-1938));
      Player player1 = new Player((-516));
      player0.add(player1);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-516", player1.toString());
      
      player0.setZ(0.0F);
      Player player2 = new Player(1403, (String) null, (String) null, (short)4919);
      player0.getName();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-1938), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setDead((-542L));
      player0.pack();
      player0.getTimeOfDeath();
      player0.toString();
      assertEquals((-542L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-114);
      byteArray0[2] = (byte) (-114);
      byteArray0[3] = (byte) (-8);
      player0.unpack(byteArray0);
      Player player1 = new Player(20);
      Party party0 = player1.head;
      player0.head = null;
      Player player2 = new Player(0);
      player2.boss = null;
      player1.setX(458.1F);
      player0.remove(player2);
      player0.setConnected(false);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 235);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 4919);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player1.unpack(dataInputStream0);
      int int0 = Packable.TEXT_MESSAGE;
      player0.reset(true);
      player0.setMoney(1367.0F);
      boolean boolean0 = player0.isConnected();
      assertEquals(1367.0F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(4919);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-419), 4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "module.ModuleBrowserDialog$ModuleFilter";
      Player player0 = new Player(4, "module.ModuleBrowserDialog$ModuleFilter", 24217);
      Player player1 = new Player();
      player1.setZ(4);
      float float0 = Player.TOLERANCE;
      Party party0 = new Party();
      party0.boss = (Party) player1;
      player1.add(party0);
      Player player2 = new Player();
      boolean boolean0 = false;
      player2.reset(false);
      player2.getPictureId();
      player2.toString();
      Player player3 = new Player();
      int int0 = Packable.PLAYER;
      // Undeclared exception!
      try { 
        player1.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(10, (String) null, "", 10);
      Player player1 = new Player(10, ".#.UCbXn", "@^gg$NX+", 10);
      Player player2 = new Player();
      player2.pack();
      Player player3 = new Player(2, "", "v=", 10);
      byte[] byteArray0 = player3.pack();
      player1.setMoney((short)4919);
      Player player4 = new Player(0, (String) null, (String) null, 10);
      player4.getMoney();
      player1.getMoney();
      player0.setDead((-1497L), false);
      player1.setDead((long) 2, false);
      int int0 = Packable.ACTION;
      player4.type();
      player2.setZ(347.384F);
      player3.setZ(1843L);
      player2.unpack(byteArray0);
      player3.setJoinOK(player0, false);
      player0.setDead();
      player1.setX((-4122.6333F));
      player2.toString();
      int int1 = Packable.GAME_EVENT;
      player4.getIP();
      player1.setDead((long) 10, false);
      assertEquals((-4122.6333F), player1.getX(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(1, "gCK?p", "!a$B#Q6k ;X", 4919);
      Player player1 = new Player((short)4919, "", "!a$B#Q6k ;X", 3);
      player1.pack();
      Player player2 = new Player(24217);
      byte[] byteArray0 = player2.pack();
      Player player3 = new Player(2847, "", "state.Party", 2847);
      player3.setMoney((-3154.4F));
      player2.setMoney(24217);
      player3.getMoney();
      player0.getMoney();
      player1.setDead(1619L, false);
      player2.setDead((long) (short)4919, false);
      player2.type();
      player3.type();
      player1.setZ(1364.8757F);
      player3.setZ((-1.0F));
      Player player4 = new Player(0, "c", 4919);
      player0.unpack(byteArray0);
      player3.setJoinOK(player4, false);
      player2.setDead();
      player0.setX((-884));
      player4.toString();
      player1.gangStrength();
      player3.getIP();
      player4.setDead(1392409296320L, false);
      int int0 = player1.type();
      assertEquals(1364.8757F, player1.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-821));
      Player player1 = new Player((-1220));
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals("Player-1220", player1.toString());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1646));
      Player player1 = new Player((-1646));
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis((-1646));
      System.setCurrentTimeMillis((-1646));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(11837, (String) null, 11837);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(2547, "n", "n", 2547, 2547);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(2547, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(2547, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(278, "", (-1));
      player0.getName();
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-1), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(126, "S+gCK?p", "", 126);
      player0.pack();
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(126, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("S+gCK?p", player0.getIP());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-515));
      player0.setDead((long) (-515));
      player0.getPictureId();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (short)4919, (-515));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      try { 
        bufferedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Resetting to invalid mark
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(1);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      System.setCurrentTimeMillis((-1276L));
      Player player1 = new Player((-237));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-237", player1.getName());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(1, ".*[.]class$", 1);
      player0.setDead(1382L);
      player0.setDead((-3044L));
      player0.setX((-2080.0F));
      boolean boolean0 = player0.isDead();
      assertEquals((-3044L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(31);
      player0.isDead();
      Player player1 = new Player(4980);
      int int0 = Packable.PLAYER;
      assertEquals(5, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-2191));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(32, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(3550);
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      float float0 = player0.getX();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(24217, "gCK?p", "gCK?p", 218);
      int int0 = player0.getPictureId();
      assertEquals(218, int0);
      
      Player player1 = new Player(218, "vbt062tT,", (-1364));
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0);
      float float0 = player0.getY();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(4919, "ft?VcAp:", (-1));
      player0.setZ((-2192.3123F));
      Party party0 = new Party();
      player0.add(party0);
      player0.getPictureId();
      System.setCurrentTimeMillis((-3361L));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(56, ".*[.]class$", ".*[.]class$", 886);
      byte[] byteArray0 = player0.pack();
      player0.setMoney(3883.3345F);
      player0.getMoney();
      player0.setDead((long) 886, false);
      player0.type();
      player0.setZ(1.0F);
      player0.unpack(byteArray0);
      assertEquals(886L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)115;
      byteArray0[2] = (byte) (-48);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((byte)55);
      Player player0 = new Player(861);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player861", player0.getName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(249);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.unpack(dataInputStream0);
      player0.pack();
      assertEquals((-7), player0.getId());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 3;
      Player player0 = new Player(3);
      player0.boss = null;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ROmArBrJ");
      Player player0 = new Player();
      player0.setZ((-674.9937F));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ROmArBrJ");
      Player player1 = new Player((-8267), "._T;?N1s(", "$c.i1Tt{,h<X", (-1258), 0);
      player0.getName();
      Player player2 = new Player(2560);
      player0.setJoinOK(player2, false);
      assertEquals((-674.9937F), player0.getZ(), 0.01F);
      
      Player player3 = new Player((-925), "", 4919);
      player3.toString();
      int int0 = player1.getStrength();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(50);
      Player player1 = new Player(0, "bpc2vx 9nA}iK6[", "Tb.1bh_ZOdxR#tu'!", 1456, 0);
      player1.setX(0);
      player1.gangStrength();
      player0.setDead((long) 1456, false);
      player0.boss = (Party) player1;
      assertEquals(1456L, player0.getTimeOfDeath());
      
      Player player2 = new Player((short)4919, "bpc2vx 9nA}iK6[", "==YQ~`/P,3y[b`", (-1));
      player2.pack();
      assertFalse(player2.isDead());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ROmArBrJ");
      Player player0 = new Player();
      player0.setZ((-674.9937F));
      Party party0 = player0.head;
      player0.head = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(2517, "ROmArBrJ", "ROmArBrJ", (short)4919, (-2655));
      player1.getName();
      Player player2 = new Player((short)4919);
      player1.toString();
      player1.getStrength();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals((-674.9937F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(3);
      Player player1 = new Player(3);
      player0.head = (Party) player1;
      player0.isJoinOK(player1, true);
      player0.gangStrength();
      player0.setMoney(2);
      player0.isJoinOK(player1, false);
      player1.setMoney(0.1F);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(2147340491, "N", "N", 2147340491);
      Player player1 = new Player((short)4919, "N", "N", (-1061), (-1061));
      int int0 = player1.gangStrength();
      assertEquals((-1061), int0);
      
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-1061), player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(232);
      player0.setY(0.0F);
      player0.getSubparty();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player232", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.add(player0);
      player0.remove(player0);
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player3", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-765));
      player0.setDead((long) (-765), false);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1);
      player0.getTimeOfDeath();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-2516));
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(3770);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
