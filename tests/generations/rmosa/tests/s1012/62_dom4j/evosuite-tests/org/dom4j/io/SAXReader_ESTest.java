/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 13:00:10 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URL;
import java.net.URLStreamHandler;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.QName;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1288532479826054
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.setEntityResolver(defaultHandler2_0);
      sAXReader0.getEntityResolver();
      sAXReader0.createContentHandler((XMLReader) null);
      sAXReader0.setProperty("http://xml.org/sax/properties/lexical-handler", defaultHandler2_0);
      StringReader stringReader0 = new StringReader("http://xml.org/sax/properties/lexical-handler");
      try { 
        sAXReader0.read((Reader) stringReader0, "http://xml.org/sax/properties/lexical-handler");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document http://xml.org/sax/properties/lexical-handler : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.createDefaultEntityResolver("=!oBIYhFl#TX");
      try { 
        sAXReader0.setFeature("http://xml.org/sax/features/use-locator2", true);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // Feature 'http://xml.org/sax/features/use-locator2' is read only.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.endPrefixMapping((String) null);
      SAXReader sAXReader1 = new SAXReader(true);
      try { 
        sAXReader1.setProperty("http://xml.org/sax/properties/declaration-handler", sAXReader0);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // The value specified for property 'http://xml.org/sax/properties/declaration-handler' cannot be casted to org.xml.sax.ext.DeclHandler.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.resetHandlers();
      pruningDispatchHandler0.getHandler("file://");
      sAXReader0.setDefaultHandler((ElementHandler) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.isStringInternEnabled();
      sAXReader0.createXMLReader();
      sAXReader0.createDefaultEntityResolver("#t?]f#pdf[NKL<(07");
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory.getInstance();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createDocument("[w8+9)7:]N2bh6J");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      boolean boolean0 = sAXReader0.isValidating();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createDefaultEntityResolver("");
      sAXReader0.createDefaultEntityResolver("/");
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.052754235510318
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("1t");
      SAXReader sAXReader1 = new SAXReader(true);
      sAXReader1.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("//tmp/!3&g>C.wy^^w0/tmp/DOCUMENT_FRAGMENT_NODE0string() takes at most argument.");
      stringReader0.ready();
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.isMergeAdjacentText();
      sAXReader0.getEncoding();
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      SAXReader sAXReader0 = new SAXReader(true);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.127429422638514
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      sAXReader0.setEncoding("!+-Ayn*");
      StringReader stringReader0 = new StringReader("sHcEv5d2-E4`tE bnc");
      try { 
        sAXReader0.read((Reader) stringReader0, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      boolean boolean0 = true;
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      String string0 = "//tmp/[ name: 0/tmp/tmp/tmp/\"+9S8)ME<H|0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u\\.Z6eHN:(8^0/tmp/http:/xml.org/sax/features/namespaces0http:/xml.org/sax/features/namespaces0.tmp";
      try { 
        sAXReader0.read("//tmp/[ name: 0/tmp/tmp/tmp/\"+9S8)ME<H|0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^0/tmp/http:/xml.org/sax/features/namespaces0http:/xml.org/sax/features/namespaces0.tmp");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //tmp/[ name: 0/tmp/tmp/tmp/\"+9S8)ME<H|0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^0/tmp/http:/xml.org/sax/features/namespaces0http:/xml.org/sax/features/namespaces0.tmp Nested exception: no protocol: //tmp/[ name: 0/tmp/tmp/tmp/\"+9S8)ME<H|0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^0/tmp/http:/xml.org/sax/features/namespaces0http:/xml.org/sax/features/namespaces0.tmp
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.setEntityResolver(xMLFilterImpl1);
      File file0 = MockFile.createTempFile("http://xml.org/sax/features/use-locator2", "http://xml.org/sax/features/use-locator2");
      // Undeclared exception!
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", ":8");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLFilterImpl0.setParent(parserAdapter0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("!kmK6bX[/Vnd");
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.removeHandler("");
      StringReader stringReader0 = new StringReader("n=>");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/<P1V0);f6n 5\"rx");
      sAXReader_SAXEntityResolver0.resolveEntity("wq]'c]jMP\"~9", "Q{U#0");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) mockFileInputStream0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("", "");
      QName qName0 = QName.get("//tmp/tmp/tmp/dbA{z-H3XahL0=,c0http:/xml.org/sax/features/use-locator20/tmp/tmp/dbA{z-H3XahL0=,c0http:/xml.org/sax/features/use-locator2", "", "");
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/tmp/Ei(y:V{.)^9wpbU9/|0.tmp1/tmp/org.dom4j.io.SAXReader$SAXEntityResolver0\"M-D");
      sAXReader_SAXEntityResolver0.resolveEntity("//tmp/tmp/Ei(y:V{.)^9wpbU9/|0.tmp1/tmp/org.dom4j.io.SAXReader$SAXEntityResolver0\"M-D", "//tmp/tmp/Ei(y:V{.)^9wpbU9/|0.tmp1/tmp/org.dom4j.io.SAXReader$SAXEntityResolver0\"M-D");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("l%G", "l%G");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      String string0 = "#text";
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException("#text", locatorImpl0);
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "JMAxNPy;");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1582);
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pushbackInputStream0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      File file0 = MockFile.createTempFile("//tmp/tmp/\"+9S8)ME<H|0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^0/tmp/http:/xml.org/sax/features/namespaces0http:/xml.org/sax/features/namespaces", "//tmp/tmp/tmp/\"+9S8)ME<H|0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^0/tmp/http:/xml.org/sax/features/namespaces0http:/xml.org/sax/features/namespaces0/tmp/r`>*/; e0\u0000c@|Y%kjeo");
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      sAXReader0.setErrorHandler(xMLFilterImpl0);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      XMLFilter xMLFilter0 = sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader(xMLFilter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      MockThrowable mockThrowable0 = new MockThrowable("org.jaxen.expr.DefaultTruthExpr");
      MockException mockException0 = new MockException(mockThrowable0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.resolveEntity("//tmp/tmp/DOCUMENT_FRAGMENT_NODE0string() takes at most argument.0.tmp", "KKgoo_CjU");
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      StringReader stringReader0 = new StringReader("GQI5R`M");
      InputSource inputSource0 = new InputSource(stringReader0);
      sAXReader0.getXMLFilter();
      sAXReader0.createContentHandler((XMLReader) null);
      sAXReader0.setFeature("http://xml.org/sax/features/string-interning", true);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "OZ<s?1zRj:");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.974268351915661
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.createDefaultEntityResolver("");
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed Nested exception: Stream closed
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.setXMLReader(parserAdapter0);
      sAXReader0.createDefaultEntityResolver((String) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      String string0 = "\"^";
      try { 
        sAXReader0.setXMLReaderClassName("\"^");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class \"^ not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      StringReader stringReader0 = new StringReader("//tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^");
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.addHandler("//tmp/Failed to parse document for URI: 0Failed to parse document for URI: ", (ElementHandler) null);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLFilterImpl0.setParent(parserAdapter0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("!kmK6bX[/Vnd");
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.removeHandler("");
      StringReader stringReader0 = new StringReader("n=>");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/<P1V0);f6n 5\"rx");
      sAXReader_SAXEntityResolver0.resolveEntity("wq]'c]jMP\"~9", "Q{U#0");
      // Undeclared exception!
      try { 
        sAXReader0.read("//tmp/\"kzb#J4+*8pnmc n]:I0\"kzb#J4+*8pnmc n]:I");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      StringReader stringReader0 = new StringReader("org.dom4j.io.SAXReader$SAXEntityResolver");
      try { 
        sAXReader0.read((Reader) stringReader0, "//tmp/sum0sum");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file://tmp/sum0sum : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      try { 
        sAXReader0.configureReader(parserAdapter0, defaultHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@3b54fd63 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      MockFile mockFile0 = new MockFile("name() requires zero or one argument.");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setStringInternEnabled(false);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      URL uRL0 = MockURL.getFtpExample();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setEncoding("c7SJN[MYq`U\"+OrN");
      dispatchHandler0.resetHandlers();
      String string0 = "q}xmA@?qT0w";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("!t{04~N_e;#5,", "org.dom4j.tree.AbstractElement", 12, "!t{04~N_e;#5,", uRLStreamHandler0);
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "#tHxt", uRLStreamHandler0);
      // Undeclared exception!
      try { 
        sAXReader0.read(uRL1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("5fO!O7UyN76,bw,>-[");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("//tmp/DOCUMENT_FRAGMENT_NODE0string() takes at most argument.");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      DefaultDocumentFactory.getInstance();
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "//tmp/;AfV~HzKbyA3&\"0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      try { 
        sAXReader0.setFeature(",", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: ,
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      sAXReader0.setStripWhitespaceText(true);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("http://xml.org/sax/features/namespaces");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class http://xml.org/sax/features/namespaces not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setValidation(true);
      assertTrue(sAXReader0.isValidating());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setIgnoreComments(false);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("% ", "% ");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      documentFactory0.createQName("% ", "% ", "% ");
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.addHandler("% ", dispatchHandler0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.setDispatchHandler(pruningDispatchHandler0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.resetHandlers();
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      try { 
        sAXReader0.setProperty("=L", xMLFilterImpl0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: =L
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      StringReader stringReader0 = new StringReader("s");
      InputSource inputSource0 = new InputSource(stringReader0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "ends-with");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("quot");
      try { 
        sAXReader0.read((Reader) stringReader0, "quot");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createDefaultEntityResolver("//tmp/sum0sum");
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      sAXReader0.removeHandler("//tmp/http:/xml.org/sax/features/validation0Jx");
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("quot");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0, "quot");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      MockFile.createTempFile("//tmp/dbA{z-H3XahL0http:/xml.org/sax/features/namespaces", "//tmp/tmp/\"+9S8)ME<H|0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^0/tmp/http:/xml.org/sax/features/namespaces0http:/xml.org/sax/features/namespaces");
      try { 
        sAXReader0.read("//tmp/dbA{z-H3XahL0http:/xml.org/sax/features/namespaces");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.getXMLFilter();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, (DefaultHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((String) null);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl0);
      sAXContentHandler0.resolveEntity("Y~7kAQ?UtD", "X*-R'SrI`Y)ybaas");
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      QName qName0 = new QName("/");
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertNotNull(xMLReader0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte)48;
      byteArray0[5] = (byte)97;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.configureReader(xMLReader0, sAXContentHandler0);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertNotNull(documentFactory0);
      
      sAXReader0.configureReader(xMLReader0, sAXContentHandler0);
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(parserAdapter0, defaultHandler2_0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String string0 = null;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createXMLReader();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.installXMLFilter((XMLReader) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.getEncoding();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertNotNull(xMLReader0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertFalse(sAXReader0.isIgnoreComments());
      assertNotNull(documentFactory0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      Object object0 = null;
      sAXReader0.isIgnoreComments();
      MockFile mockFile0 = new MockFile((String) null, "//tmp/EJ'=22|KI[_6NrjIwZW0EJ'=22|KI[_6NrjIwZW");
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "t]u+':-'g", (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      boolean boolean0 = sAXReader0.isMergeAdjacentText();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      SAXReader sAXReader0 = new SAXReader(true);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.isValidating();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.resolveEntity("ih%72@V0G8\"dm^KOj", "Z5JV,dF@>u|>hKtQQ");
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.getExternalSubset("//tmp/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^0/tmp/tmp/tmp/);f6n 5\"rx00/tmp/);f6n 5\"rx00B3'&1#u.Z6eHN:(8^", " [Document: name ");
      // Undeclared exception!
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException("org.dom4j.tree.DefaultCDATA", locatorImpl0);
      xMLFilterImpl0.warning(sAXParseException0);
      InputSource inputSource0 = new InputSource("//tmp/2zJ2ZF0M|");
      // Undeclared exception!
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.resolveEntity("KKgoo_CjU", "KKgoo_CjU");
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      MockFile.createTempFile("http://xml.org/sax/features/namespaces", "http://xml.org/sax/features/namespaces");
      // Undeclared exception!
      try { 
        sAXReader0.read("http://xml.org/sax/features/namespaces");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
