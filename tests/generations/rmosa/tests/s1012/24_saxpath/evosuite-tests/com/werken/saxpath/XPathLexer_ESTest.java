/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 13:41:55 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3354659257668526
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1953));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.059573013375516
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.consume((-2208));
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-2601));
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.693520873632516
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QB0gP456/<#c^%F\"");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.dollar();
      token1.toString();
      xPathLexer0.star();
      token0.toString();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.relationalOperator();
      assertNull(token2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4382178413630053
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4='H");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume((-2460));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^^6}#k=BFz,!UE%");
      xPathLexer0.consume((-2));
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.354198952040615
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D9M-k>AUPytZ");
      xPathLexer0.notEquals();
      xPathLexer0.consume((-2386));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9807744183830427
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.plus();
      assertEquals("Q", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (14) (R.)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer0.setXPath("tZ@_q\"U*n7{j{");
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("t", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Z@_q\"U*n7{j{", token4.getTokenText());
      
      xPathLexer0.comma();
      Token token5 = xPathLexer0.comma();
      assertEquals("@", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7986480851200297
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.consume((-1008));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.equals();
      xPathLexer1.consume((-2422));
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6950219341644135
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q9pZK*Zj@-!");
      Token token0 = xPathLexer0.identifier();
      assertEquals("Q9pZK", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Zj", token2.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7993592865424324
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      assertEquals("!:", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(">", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("m", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(9, token4.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("S", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      XPathLexer xPathLexer1 = new XPathLexer("b*9J");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-3021));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O`)mF;Rf\"e");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("O", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mu^+@reXlQO1pD5");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eZ|lN4rJ}M$Y^Zwd");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.283284892956868
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.consume((-2422));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4421507505590725
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"/5}^4");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1*B3B<V_WN>p?P} $");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6117278661071115
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("')B)%3+p@+Is 'TY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(27, token0.getTokenType());
      assertEquals(")B)%3+p@+Is ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("TY", token2.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.950707817906361
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<CxY");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("<C", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("xY", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9265737788050805
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<CxY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("CxY", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&EnCF^o.tN@5\"+&Y");
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-353));
      xPathLexer0.consume();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-968));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4900088631832036
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k!<LJSjVL-y'o0");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("k", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("LJSjVL-y'o0", token4.getTokenText());
      
      char char0 = xPathLexer0.LA(14);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("L", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7022757393160943
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("!:", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("im", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$OMG:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.2154745559562397
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KfiU2u<OjQ_hA\"mOQ");
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("KfiU2u", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1904860573382625
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3_w:h~");
      Token token0 = xPathLexer0.number();
      assertEquals(".3", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("_w", token1.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4348236646450028
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`a#4m}3}k1nJb,=>");
      xPathLexer0.star();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      xPathLexer0.consume((-1145));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3659942524957092
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D9M-k>AUPytZ");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("9M-k", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("AUPytZ", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.2386157384909002
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("GN", token0.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("p", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3899223414576551
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".4='H");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(".", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("=", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.314449524841292
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BK0!z");
      Token token0 = xPathLexer0.minus();
      assertEquals("B", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("K0", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("!", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("z", token3.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.consume((-1740));
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8290669988307178
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">5ZFlW");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6950219341644135
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WxYY|BQ2~");
      Token token0 = xPathLexer0.identifier();
      assertEquals("WxYY", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(17, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("BQ2", token2.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9!>^tM$e,Om<sG1c,0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.2279321180511338
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9853536964831346
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">5ZFlW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4046307496632817
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0JUf;8}a?a9O:%");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(115);
      xPathLexer1.notEquals();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer2.and();
      Token token1 = xPathLexer2.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4253603403026938
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (Q)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("R.", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(114);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.548163571967389
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "<CxY";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-754));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1743780540400965
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BK0!z");
      Token token0 = xPathLexer0.identifier();
      assertEquals("BK0", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("z", token2.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J[g!Zcl6A1vMw");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("g", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fD*'O");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("fD", token0.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\t`");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`", token0.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0694134890959457
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">5ZFlW");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals(">5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ZFlW", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9836980707687104
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-971));
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yh+wemEj#H+r]");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("yh", token0.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5105880343749845
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wjPru");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("U[:+aiNA4ts4_;v5");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2768909046015064
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BK0!z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("BK0", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("!", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6474561600747957
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P?d_%2");
      XPathLexer xPathLexer1 = new XPathLexer("P?d_%2");
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.operatorName();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("?d_%2", token2.getTokenText());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals("?", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6932245773362196
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v*Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8652758290255833
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k!<LJSjVL-y'o0");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("k", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("JSjVL-y", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(14);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("'", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.2969391627432962
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":8");
      xPathLexer0.setXPath("D'^vaLtbm-,;v*!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",K@.?=");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.2658880407007465
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".68", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3235251314539191
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68q");
      Token token0 = xPathLexer0.not();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("68", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.828726153240074
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.equals();
      assertEquals("", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("(7", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      xPathLexer0.consume((-1145));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t>LBkF4($G!DJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3753078904544855
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">5ZFlW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("Z", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("FlW", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e'@qq^|jI|K.");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3883643486824564
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2cmas]bn=]`[3C");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.not();
      assertEquals("m", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("2", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7296564106195564
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("!:", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("im", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("PLMKNmRJm", token4.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.6929510730627153
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">ZFl");
      Token token0 = xPathLexer0.at();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'J%2");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.2811211713557142
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("R.", token1.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5582820599580236
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2cmas]bn=]`[3C");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("2", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.at();
      assertEquals("m", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8182383021212294
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.consume();
      xPathLexer0.consume((-2732));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8132969902051181
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.dollar();
      token0.toString();
      Token token1 = xPathLexer0.star();
      token1.toString();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.div();
      assertNull(token2);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.2778246114175662
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`a#4m}3}k1nJb,=>");
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("d`a#4m}3}k1nJb,=>");
      xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.3835549588605607
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BK0!z");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("K", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("!", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("z", token4.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Jn$B5&7M>/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7640070325575437
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      Token token0 = xPathLexer0.equals();
      assertEquals("w", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(".(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("7", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("I", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-E?T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5585943539307499
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2cmas]bn=]`[3C");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("as]bn=]`[3C", token3.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.2408474284888715
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.consume();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer1.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("N", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.4572118978220265
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2cmas]bn=]`[3C");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("2cmas", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.equals();
      assertEquals("n", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals("=", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ox2/a");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ox2", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l+,8");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("l", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{0vSyUQ/");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{0vSyUQ/", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.2676443834035676
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wjPru");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.314067863661005
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`a#4m}3}k1nJb,=>");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("d`a#4m}3}k1nJb,=>");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("d", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("`a#4m}3}k1nJb,=>", token3.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8392853949915264
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.dollar();
      String string0 = token0.toString();
      assertEquals("[ (15) (N)", string0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      String string1 = token1.toString();
      assertEquals("[ (20) (u)", string1);
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("d", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("nXz!$\"(c@hb6", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("nX", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.7480612956907104
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3_w:h~");
      Token token0 = xPathLexer0.at();
      assertEquals(".", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("h", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WC?vbB0D*](uI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("WC", token0.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M%E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.399328733994308
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("udnXz", token2.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5762968875917855
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|] rzXR#7wLg`U");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("rzXR", token0.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.205086955846986
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2cmas]bn=]`[3C");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.2640671917851507
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^^6}#k=BFz,!UE%");
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.LA(1);
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.985033029495801
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<<&SpE|I{l@Ib.V?9p");
      xPathLexer0.and();
      Token token0 = xPathLexer0.literal();
      assertNotNull(token0);
      assertEquals(27, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&SpE|I{l@Ib.V?9p", token1.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.2652372376780225
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".68q");
      xPathLexer0.not();
      xPathLexer0.LA(1);
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.2374985760834152
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c;13*?vl%EdBAUB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("c", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(110);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.390765743039547
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k!<LJSjVL-y'o0");
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.LA(14);
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.891228606131704
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]:J");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.setXPath("");
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1265));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V^NV*iR@kZbrI>=Ovw");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("V", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1904));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3142692228354322
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.328897354107446
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D9M-k>AUPytZ");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("D", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("M-k", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("A", token4.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      xPathLexer0.consume((-2422));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.consume((-3063));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-2422));
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.3730737114489537
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^^6}#k=BFz,!UE%");
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.7842283034609654
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("')B)%3+p@+Is 'TY");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B)%3+p@+Is 'TY", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1673609446844255
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("i", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.760534095659235
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("')B)%3+p@+Is 'TY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")B)%3+p@+Is ", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token0);
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("Y", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.2957527836795948
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^^6}#k=BFz,!UE%");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^^6}#k=BFz,!UE%");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("^^6}#k=BFz,!UE%", token1.getTokenText());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^^6}#k=BFz,!UE%");
      XPathLexer xPathLexer1 = new XPathLexer("^^6}#k=BFz,!UE%");
      xPathLexer1.consume((-887));
      XPathLexer xPathLexer2 = new XPathLexer("d/s9m,iA,KE~nI P}");
      // Undeclared exception!
      try { 
        xPathLexer1.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.7938131631694842
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      int int0 = (-2976);
      xPathLexer0.not();
      xPathLexer0.consume((-2976));
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      int int0 = (-2374);
      xPathLexer0.consume((-2374));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.061189958965297
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer1.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer1.literal();
      xPathLexer1.leftParen();
      xPathLexer0.consume();
      xPathLexer0.consume((-2441));
      xPathLexer1.mod();
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.792781171425418
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]:J");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer1.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.3188898069012005
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2cmas]bn=]`[3C");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('m', char0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3304));
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jGN=udnXz!$\"(c@hb6");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1888050876841882
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3_w:h~");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1951));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.8929447777488657
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.currentPosition();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.equals();
      xPathLexer0.number();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m_T&[");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.6234363302129795
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (Q)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      xPathLexer0.setXPath("tZ@_q\"U*n7{j{");
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("t", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Z@_q\"U*n7{j{", token3.getTokenText());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals("_q", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.9794121442934958
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath(") (");
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-2677));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2~YUIOh");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\\');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2~YUIOh");
      boolean boolean0 = xPathLexer0.isIdentifierChar('\\');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.2611152101732725
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3_w:h~");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.consume((-1953));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",xs#3a%3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("xs", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.9836980707687104
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.9836980707687104
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("'", token2.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.7022394482618393
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals(":>", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("im>PLMKNmRJm", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.9741919971080961
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.0229068002862234
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<<&SpE|I{l@Ib.V?9p");
      Token token0 = xPathLexer0.not();
      assertEquals("<", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.2566839990339433
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3_w:h~");
      Token token0 = xPathLexer0.dots();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("_", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.plus();
      assertEquals("w", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.6703351402681963
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BK0!z");
      xPathLexer0.consume();
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-868));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.009830390234283
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";j/Az.XVC@i");
      xPathLexer0.or();
      xPathLexer0.consume(136);
      xPathLexer0.setXPath(";j/Az.XVC@i");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(";j/Az.XVC@i", token0.getTokenText());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.2243137252793663
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3_w:h~");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".3", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("_w:h~", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("_", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.9474265914947086
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('e');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.9461798001489072
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.928556591403401
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%?J%2");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("%?J%2");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("%?J%2", token1.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9836980707687104
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("'", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.9456357897039068
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0145110296195095
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.star();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.0675003675158172
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("[", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(" (", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(" ", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("(", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9843764047803778
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.star();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.9836980707687104
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.9810989804503218
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=2.6910517378300467
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      xPathLexer0.hasMoreChars();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.9753091595155812
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      String string0 = xPathLexer0.getXPath();
      assertEquals(") (", string0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.227700770451365
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.star();
      assertEquals("[", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.0235317895389429
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.062528616264503
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.9455123176703224
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("'", token2.getTokenText());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.9788404851514181
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=0.9753091595155812
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9382530416275
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.9459756560231546
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=0.9832042436082165
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.8965277918330019
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]:J");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=0.9740188369349358
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(">", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=0.9746614072160604
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:>im>PLMKNmRJm");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=0.9849204152253782
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.div();
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("'", token2.getTokenText());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=0.9449574556922394
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.9414619882036623
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!+Fat#y%");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(110);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.9466257906939077
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".='H");
      xPathLexer0.setXPath("Q5*5D!Pi~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Q5", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=0.8947038064248852
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":8");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }
}
