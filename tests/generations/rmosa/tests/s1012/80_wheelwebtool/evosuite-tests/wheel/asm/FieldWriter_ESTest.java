/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 13:18:31 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-395));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-395), "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)");
      fieldWriter0.visitAnnotation("LmOe5!.\"zQoC)", true);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(3627);
      ByteVector byteVector2 = byteVector1.putByteArray((byte[]) null, 3627, (-1741));
      byteVector2.putByteArray((byte[]) null, (-920), (-3311));
      classWriter0.visitAnnotation("LmOe5!.\"zQoC)", true);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-395));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-395), "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)");
      fieldWriter0.visitAnnotation("LmOe5!.\"zQoC)", true);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(3627);
      ByteVector byteVector2 = byteVector1.putByteArray((byte[]) null, 3627, (-1741));
      byteVector2.putByteArray((byte[]) null, (-920), (-3311));
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("yHj(RZy*", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-395));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-395), "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)");
      fieldWriter0.visitAnnotation("P%lEG4.", false);
      fieldWriter0.getSize();
      classWriter0.version = 48;
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByte(48);
      byteVector0.putInt(511);
      byteVector0.length = 1193;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 48, "HMrLD!", "", "", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-38));
      classWriter0.index = (-38);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 251658240, "", "7^NI5i#s4=Hqaz", "", "");
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      classWriter0.index = (-2105);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 22, "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs");
      ByteVector byteVector0 = new ByteVector(22);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6), "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs");
      Attribute attribute0 = new Attribute("2]~YDCh[>2Vm~6.YRs");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "t4J^O)";
      stringArray0[1] = "2]~YDCh[>2Vm~6.YRs";
      stringArray0[2] = "2]~YDCh[>2Vm~6.YRs";
      stringArray0[3] = "LocalVariableTypeTable";
      stringArray0[4] = "2]~YDCh[>2Vm~6.YRs";
      stringArray0[5] = "LocalVariableTypeTable";
      stringArray0[6] = "2]~YDCh[>2Vm~6.YRs";
      stringArray0[7] = "2]~YDCh[>2Vm~6.YRs";
      stringArray0[8] = "2]~YDCh[>2Vm~6.YRs";
      classWriter0.visit((-6), 69, "?Ll", "t4J^O)", "LocalVariableTypeTable", stringArray0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-395));
      classWriter0.version = (-1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-395), "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3691);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3691, "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)", "LmOe5!.\"zQoC)");
      Attribute attribute0 = new Attribute("wheel.asm.FieldWriter");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552693);
      String string0 = "org.apache.commons.io.filefilter.NotFileFilter";
      classWriter0.index = 292552693;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "tBk,PxXOE8*^F<Z");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3723);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3723, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      fieldWriter0.visitAnnotation("wheel.asm.FieldWriter", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-412));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-412), "LmgOe5!.\"zQoC)", "LmgOe5!.\"zQoC)", "LmgOe5!.\"zQoC)", "LmgOe5!.\"zQoC)");
      fieldWriter0.visitAnnotation("LmgOe5!.\"zQoC)", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-347), "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 286;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-366));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-366), "*)u,7(~", "*)u,7(~", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65191);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-219), "java/lang/Throwable", "java/lang/Throwable", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6), "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-366));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-366), "*)u,7(~", "*)u,7(~", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 22, "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs", "2]~YDCh[>2Vm~6.YRs");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2562);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2562, ":WB=", ":WB=", ":WB=", ":WB=");
      fieldWriter0.visitAnnotation(":WB=", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-347));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-347), (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 196, "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter", "org.apache.commons.iM.filefilter.NotFileFilter");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-347), "", "", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "i*I#_B?_", "i*I#_B?_", "i*I#_B?_", "i*I#_B?_");
      fieldWriter0.visitAnnotation("i*I#_B?_", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-395));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-395), "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-347), "", "", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 55, ";.[.#qyo", ";.[.#qyo", ";.[.#qyo", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
