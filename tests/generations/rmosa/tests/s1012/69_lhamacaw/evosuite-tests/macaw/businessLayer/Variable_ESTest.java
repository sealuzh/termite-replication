/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 13:19:18 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "7jh";
      rawVariable0.setAvailability("ke5hu~%z+");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("OfMd*%Q<;+~", ".EEM%4\"<+kyI,Am[O");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setCoded(true);
      rawVariable0.getLabel();
      rawVariable0.questionNumber = "variable.form.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getOntologyTerms();
      rawVariable0.getValueLabels();
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-3105));
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.211109012517119
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.category.label");
      derivedVariable0.removeSourceVariable(rawVariable0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      User user0 = new User();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel0, valueLabel1);
      valueLabel0.setMissingValue(true);
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.notes = null;
      derivedVariable0.containsSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable1.getYear();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("xF1q[):g~!cC F");
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.clone();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getNotes();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "UNABLE_TO_DELETE_RAW_VARIABLE";
      stringArray0[5] = "variable.questionNumber.label";
      arrayList0.toArray(stringArray0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setForm((String) null);
      derivedVariable0.codeBookNumber = null;
      String string0 = derivedVariable0.getFilePath();
      assertNotNull(string0);
      
      String string1 = derivedVariable0.getCodeBookNumber();
      assertNull(string1);
      
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(arrayList1);
      derivedVariable0.addSourceVariables(arrayList2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getSupportingDocuments();
      String string0 = "N:25^XSd#_[cc!G";
      derivedVariable0.setNotes("N:25^XSd#_[cc!G");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(" %w`X=&Y)Ej6vXE");
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        derivedVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      derivedVariable0.clone();
      String string0 = derivedVariable0.getName();
      assertNull(string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("rs$vsI1r?{%c");
      ontologyTerm0.setTerm("");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setIdentifier((-1908874351));
      rawVariable1.setCodeBookNumber("Z3)T");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable2);
      assertEquals("-1908874351", rawVariable0.getDisplayItemIdentifier());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      System.setCurrentTimeMillis(5056L);
      derivedVariable1.getIdentifier();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.588249157268929
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.questionNumber = ";e%:";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setFilePath("user.addressLine1.saveChanges");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle(";e%:");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.containsSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      rawVariable0.notes = ";e%:";
      User user0 = new User("UNABLE_TO_INITIALISE_CONNECTION", "user.addressLine1.saveChanges");
      supportingDocument0.setDescription((String) null);
      user0.setPassword("user.addressLine1.saveChanges");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.getCodeBookNumber();
      User user1 = new User();
      user1.setPostCode("");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable1);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.getColumnEnd();
      rawVariable0.getValueLabels();
      assertEquals(";e%:", rawVariable0.getNotes());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3818971816249785
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("0'");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCleaned(false);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setIdentifier((-2021161078));
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getNotes();
      Variable.validateFields(rawVariable1);
      Variable.validateFields(rawVariable1);
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      assertEquals("-2021161078", derivedVariable0.getDisplayItemIdentifier());
      
      User user0 = new User("", "");
      user0.setAddressLine1("");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.931097031074742
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnEnd();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setAvailability("");
      rawVariable0.getColumnEnd();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ontologyTerm0.setOntologyName("");
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.removeValueLabel((ValueLabel) null);
      String string0 = rawVariable0.getAvailability();
      derivedVariable0.containsSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-1789569704));
      ontologyTerm2.setNewRecord(false);
      ontologyTerm2.setIdentifier(2050);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getCodeBookNumber();
      derivedVariable0.clone();
      rawVariable0.clone();
      String string1 = rawVariable0.getForm();
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("K5vP+b]H");
      rawVariable0.setCodeBookNumber("K5vP+b]H");
      rawVariable0.questionNumber = null;
      rawVariable0.getCleaningStatus();
      rawVariable0.getQuestionNumber();
      assertEquals("K5vP+b]H", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getQuestionNumber();
      rawVariable0.setColumnStart((String) null);
      String string0 = rawVariable0.getColumnStart();
      assertNull(string0);
      
      User user0 = new User();
      user0.setCounty((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, arrayList0.size());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.325966967244622
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      derivedVariable0.setName("user.firstName.label");
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.711629448056604
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("rs$vsI1r?{%c");
      derivedVariable0.setIdentifier(898);
      ontologyTerm0.setTerm("");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("Z3)T");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable2);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.clone();
      assertEquals("898", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("t$ai");
      derivedVariable0.getCategory();
      derivedVariable0.setFilePath("supportingDocument.fileName.label");
      derivedVariable0.setIdentifier((-1801165454));
      derivedVariable0.getAvailability();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getForm();
      assertEquals("supportingDocument.fileName.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.6695792540767598
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.clone();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isNewRecord());
      
      boolean boolean0 = rawVariable0.isNewRecord();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAvailability((String) null);
      rawVariable0.setAlias((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = derivedVariable0.getAvailability();
      assertNull(string0);
      
      rawVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable2.getSourceVariables();
      derivedVariable2.setSourceVariables(arrayList1);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, int0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2648964145474735
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getAvailability();
      User user0 = new User("-", (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setAlias("#B?s\"VF2K%");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("#B?s\"VF2K%", "]");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getAlias();
      assertEquals("#B?s\"VF2K%", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setFilePath((String) null);
      rawVariable0.getCleaningDescription();
      User user0 = new User((String) null, "");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      rawVariable0.getFilePath();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getAvailability();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = "80{_hBO$ek4r";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4390626350804188
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ontologyTerm1.setIdentifier((-1886892847));
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      User user0 = new User("`-S&9.o?|zMbam%8", "`-S&9.o?|zMbam%8");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getAvailability();
      derivedVariable0.getCleaningStatus();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.760750468781551
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setLabel((String) null);
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("-", "-");
      user0.setPostCode("CT1j[v;{S4&YcLM");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      derivedVariable0.setIdentifier((-713));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      rawVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("", (String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCleaningStatus();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.4925064671023778
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "";
      User user0 = new User("_yI0YJ+5:P>S._`%KZ", "_yI0YJ+5:P>S._`%KZ");
      user0.setPassword("5tg9y0>NG6}G>/7rk");
      derivedVariable0.questionNumber = "5tg9y0>NG6}G>/7rk";
      user0.setIdentifier(1720);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      user0.setStatus("_yI0YJ+5:P>S._`%KZ");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getValueLabels();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("5tg9y0>NG6}G>/7rk", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument1);
      supportingDocument2.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        arrayList0.add(2819, supportingDocument1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2819, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("rs$vsI1r?{%c");
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setTerm("");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.setIdentifier(1081);
      rawVariable1.setCodeBookNumber("Z3)T");
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      System.setCurrentTimeMillis(5056L);
      int int0 = derivedVariable1.getIdentifier();
      assertEquals("1081", derivedVariable1.getDisplayItemIdentifier());
      assertEquals(1081, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("rs$vsI1r?{%c");
      ontologyTerm0.setTerm("");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setCodeBookNumber("Z3)T");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.getAlternativeVariable();
      assertEquals("Z3)T", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.844593750644847
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      User user0 = new User();
      derivedVariable0.notes = "j";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("#B?s\"VF2K%", "]");
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("j", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("5tg9y0>NG6}G>/7rk");
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("-", "-");
      user0.setPostCode("RpCp*C");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCategory("0");
      derivedVariable0.setName("supportingDocument.fileName.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("0", derivedVariable0.getCategory());
      
      Variable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.9620321990960212
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setAvailability("b-(g*z^&;w_d9");
      derivedVariable0.getFilePath();
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setAffiliation("macaw.businessLayer.Variable");
      user0.setPhone("s");
      rawVariable0.addOntologyTerms(arrayList0);
      valueLabel0.setValue("variable.isCoded.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCoded(true);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getName();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.clone();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.clone();
      rawVariable0.isCoded();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.842433123445637
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("#B?s\"VF2K%", "]");
      derivedVariable0.columnStart = "UNABLE_TO_DELETE_DERIVED_VARIABLE";
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("UNABLE_TO_DELETE_DERIVED_VARIABLE", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.708162022610063
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("-", "-");
      rawVariable0.notes = "6hc>v";
      user0.setPostCode("RpCp*C");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setColumnEnd("#B?\"VF2K%");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("2GTJD");
      ontologyTerm1.setNameSpace("#B?\"VF2K%");
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.questionNumber = "#B?\"VF2K%";
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.questionNumber.label");
      derivedVariable0.getFilePath();
      assertEquals("variable.questionNumber.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.896934599451277
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setForm("user.phone.saveChanges");
      User user0 = new User("#B?s\"VF2K%", "]");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("user.phone.saveChanges", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8954915980082756
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm((String) null);
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("#B?s\"VF2K%", "]");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("rs$vsI1r?{%c");
      ontologyTerm0.setTerm("");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAddressLine1("\nWrai,b;Ga}='8n");
      rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        arrayList0.add((-1), supportingDocument0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.clone();
      User user0 = new User("", "");
      supportingDocument0.setIsNewRecord(false);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      supportingDocument0.clone();
      // Undeclared exception!
      try { 
        arrayList0.add((-1), supportingDocument0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("variable.label.label");
      rawVariable0.columnStart = "variable.label.label";
      rawVariable0.createVariableSummary();
      rawVariable0.getCleaningDescription();
      assertEquals("variable.label.label", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.326364028987723
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("-", "-");
      derivedVariable0.codeBookNumber = "Unknown";
      user0.setPostCode("RpCp*C");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.1296233673511074
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("");
      rawVariable0.setCodeBookNumber((String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.150950739936087
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("rs$vsI1r?{%c");
      ontologyTerm0.setTerm("");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("Z3)T");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable2);
      // Undeclared exception!
      try { 
        derivedVariable1.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.265342345428187
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      derivedVariable0.columnEnd = "general.fieldValue.unknown";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getAvailability();
      User user0 = new User("-", "");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("Unknown", "Unknown");
      derivedVariable0.setName("OfMd*%Q@;+~");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "zU8]B93VOR~Rpcm'\"a`";
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.842433123445637
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("#B?s\"VF2K%", "]");
      user0.setEmail("{R(^ru}+%Cg");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("]", derivedVariable0.getName());
      
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("x5'JO3@w");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getName();
      assertEquals("]", derivedVariable0.getName());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("=message==");
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("]", "]");
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(157);
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      assertEquals(157, derivedVariable0.getIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setName("]");
      derivedVariable0.questionNumber = "Ywi";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.89916024574472
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("K];5=R:&`");
      User user0 = new User("#B?s\"VF2K%", "]");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      DerivedVariable.validateFields(derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("K];5=R:&`", derivedVariable1.getAvailability());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.897130735569743
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("]");
      User user0 = new User("#B?s\"VF2K%", "]");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      DerivedVariable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("]", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.clone();
      derivedVariable0.codeBookNumber = "3_$(Acm";
      Variable variable0 = null;
      derivedVariable0.form = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "MISSING_DISPLAY_LIST_VIEWER";
      rawVariable0.setAvailability("T!mW");
      rawVariable0.columnStart = "T!mW";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.createVariableSummary();
      assertEquals("T!mW", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("',.z?7*=");
      ontologyTerm0.clone();
      ontologyTerm0.setNameSpace("s\"M|Gd4D");
      ontologyTerm0.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnEnd();
      Variable.validateFields(rawVariable0);
      rawVariable0.getOntologyTerms();
      User user0 = new User();
      String string0 = "U|\\-N)>HgE%n-[S/";
      // Undeclared exception!
      try { 
        User.checkValidUserIDField((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "user.addressLine2.label";
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setColumnEnd("macaw.businessLayer.Variable");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      assertEquals("macaw.businessLayer.Variable", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setCleaned(true);
      derivedVariable0.columnEnd = "DUPLICATE_ONTOLOGY_TERM";
      User user0 = new User("DUPLICATE_ONTOLOGY_TERM", "DUPLICATE_ONTOLOGY_TERM");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("DUPLICATE_ONTOLOGY_TERM", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7672980670051834
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      rawVariable0.setColumnEnd("blank");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("-", "-");
      user0.setPostCode("RpCp*C");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setYear("UNABLE_TO_CHECK_USER_DUPLICATE");
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_CHECK_USER_DUPLICATE", derivedVariable0.getYear());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.isCleaned.saveChanges.changedToNotClean";
      rawVariable0.getQuestionNumber();
      rawVariable0.createVariableSummary();
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "Ylf5Y[ju%)k~h";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.7101452415269205
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      rawVariable0.setAlias("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("-", "-");
      user0.setPostCode("RpCp*C");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("-", rawVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.866691927712004
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setLabel("-");
      User user0 = new User("m`#t+`rY&BnW", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.getCleaningStatus();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("=message==");
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable1.setForm((String) null);
      derivedVariable1.clone();
      assertEquals("=message==", derivedVariable1.getColumnStart());
      
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningDescription((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.clone();
      User user0 = new User("", "");
      supportingDocument0.setIsNewRecord(false);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("AG%%7U`cE|Ogfa");
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      supportingDocument0.clone();
      // Undeclared exception!
      try { 
        arrayList0.add((-1), supportingDocument0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("_0CO'k3BD!^&)n-]");
      derivedVariable0.clone();
      assertEquals("_0CO'k3BD!^&)n-]", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("user.addressLine2.label");
      rawVariable0.columnStart = "cHX4";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.clone();
      assertEquals("user.addressLine2.label", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.558172426370796
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("-");
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      User user0 = new User("-", "-");
      user0.setStatus("jJC7a1OT)<p");
      user0.setPostCode("RpCp*C");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.5347185161547943
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("#B?s\"VF2K%");
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument0.getDisplayName();
      derivedVariable0.setFilePath("-");
      supportingDocument0.setDocumentCode("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument0.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.setName("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getColumnStart();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      UnaryOperator.identity();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList0.removeAll(linkedList0);
      derivedVariable0.columnEnd = "Rat>w@Ie#C&}pG>001";
      derivedVariable0.addSourceVariables(arrayList0);
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string1);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2666);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]");
      derivedVariable0.setFilePath("*Z5zm!Tvlrr=^inw");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getFilePath();
      assertEquals("]", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("[mc8EH;@&/:k");
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "]JI#";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clone();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getNotes();
      derivedVariable0.getColumnEnd();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.isCoded.label";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("variable.isCoded.label", derivedVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.questionNumber = "variable.isCleaned.saveChanges.changedToNotClean";
      rawVariable0.getQuestionNumber();
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.label.label");
      ontologyTerm0.setNameSpace("$Gh=Zd");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.columnEnd = "$Gh=Zd";
      derivedVariable0.form = null;
      derivedVariable0.getNotes();
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.notes = "uEj^cm#0#:/;";
      derivedVariable0.getForm();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("UNABLE_TO_GET_STUDY_YEARS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getForm();
      assertEquals("UNABLE_TO_GET_STUDY_YEARS", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("8^Hsq9J");
      rawVariable0.setLabel("-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAvailability();
      rawVariable0.getForm();
      assertEquals("8^Hsq9J", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setAlias((String) null);
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getAlias();
      assertEquals(0, rawVariable0.getIdentifier());
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.availability.label";
      rawVariable0.getColumnStart();
      assertEquals("variable.availability.label", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "macaw.businessLayer.Variable";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability(",&h'pH__ajOI@mL");
      assertEquals(",&h'pH__ajOI@mL", derivedVariable0.getAvailability());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.form = "!bOs4'FNI";
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setForm("UNABLE_TO_GET_ORIGINAL_VARIABLE");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("UNABLE_TO_GET_ORIGINAL_VARIABLE", derivedVariable0.getForm());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setYear("F");
      derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getYear();
      assertEquals("F", derivedVariable0.getYear());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.altMrnativeVariable.label");
      rawVariable0.getLabel();
      int int0 = (-2361);
      ArrayList<Variable> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<Variable>((-2361));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2361
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "iTq~kj";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5343183560907687
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("UNABLE_TO_CHECK_USER_DUPLICATE");
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.3203928312357034
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setYear((String) null);
      derivedVariable0.setCleaned(true);
      User user0 = new User("i]J3h9jI# H/", (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "general.fieldValue.blank";
      derivedVariable0.form = "_N9";
      derivedVariable0.codeBookNumber = "Sj#)#TS9~YIbaf";
      derivedVariable0.setColumnStart("general.fieldValue.blank");
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("n!}c5;^?0BRjc?|$(Bi");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.getIdentifier();
      rawVariable0.getForm();
      assertEquals("n!}c5;^?0BRjc?|$(Bi", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "\"";
      derivedVariable0.notes = "\"";
      derivedVariable0.getForm();
      derivedVariable0.getSourceVariables();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      // Undeclared exception!
      try { 
        linkedList0.pop();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }
}
