/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 13:30:25 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.util.Calendar;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.Delayed;
import java.util.regex.PatternSyntaxException;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.compile.QueryTreeNode;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.DeleteConstantAction;
import org.apache.derby.impl.store.access.btree.BTreeController;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBLocalTransaction;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.AbstractConnection;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.engine.SessionRemote;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbc.jdbcPreparedStatement;
import org.hsqldb.jdbc.jdbcResultSet;
import org.hsqldb.jdbc.jdbcStatement;
import org.hsqldb.jdbcDriver;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.postgresql.Driver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DBUtil.checkReadOnly("select count(*) from ", true);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqllen);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/OFk_.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Y");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/databene");
      FileSystemHandling.createFolder(evoSuiteFile1);
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.getStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) jdbcConnection0, "WpQS*^.#\"@#~':", "WpQS*^.#\"@#~':", false, true, true, false, "There are unclosed database resources: ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("");
      Result result0 = Result.newSetSavepointRequest("Expected exactly one row, found more.");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0, result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Object object0 = new Object();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = xSQLVAR1.deepCopy();
      Date date0 = xSQLVAR3.decodeDate((byte[]) null);
      ResultSet resultSet0 = DBUtil.executeQuery((String) null, jdbcConnection0);
      Calendar calendar0 = MockCalendar.getInstance();
      xSQLVAR3.encodeDate(date0, calendar0);
      xSQLVAR3.encodeDate(date0, calendar0);
      DBUtil.close((Connection) jdbcConnection0);
      Class<Integer> class0 = Integer.class;
      DBUtil.queryScalarArray((String) null, class0, (Connection) jdbcConnection0);
      Statement statement0 = DBUtil.getStatement(resultSet0);
      assertEquals(1, statement0.getResultSetHoldability());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("l/", "l/", "l/", "l/");
      SQLWarning sQLWarning0 = new SQLWarning();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection(jdbcConnection0, true);
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.autoReconnect((-22701868));
      ErrorHandler errorHandler0 = new ErrorHandler("|\"~@[,jV7/A!URh");
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("|\"~@[,jV7/A!URh", (Connection) proxy0, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Internal exception in method: public int org.databene.jdbacl.proxy.LoggingStatementHandler.executeUpdate(java.lang.String) throws java.sql.SQLException
         //
         verifyException("org.databene.commons.ExceptionMapper", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("");
      Result result0 = Result.newSetSavepointRequest("Expected exactly one row, found more.");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Object object0 = new Object();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBUtil.executeUpdate("&GTg%uJKSQ|`pMq`gU@", jdbcConnection0);
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      assertEquals(0, xSQLVAR1.sqlsubtype);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      Class<jdbcStatement> class0 = jdbcStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(true);
      DBUtil.runScript("COMMENT", (Connection) null, true, errorHandler0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Class<FBConnection> class0 = FBConnection.class;
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection(jdbcConnection0, true);
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("y--zeL", class0, (Connection) proxy0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Internal exception in method: public java.sql.ResultSet org.databene.jdbacl.proxy.LoggingStatementHandler.executeQuery(java.lang.String) throws java.sql.SQLException
         //
         verifyException("org.databene.commons.ExceptionMapper", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DBUtil.available("}Q+ldg1?V\\#", (String) null, "hGUet{;Q_", "hGUet{;Q_");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      int int0 = 2080;
      int int1 = 10;
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, (String) null, false, 2080, 10, 10);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000004
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Result result0 = Result.newReleaseSavepointRequest(";~7KanQEv");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) simpleResultSet0;
      objectArray0[1] = (Object) ";~7KanQEv";
      objectArray0[2] = (Object) ";~7KanQEv";
      objectArray0[4] = (Object) ";~7KanQEv";
      objectArray0[5] = (Object) simpleResultSet0;
      objectArray0[6] = (Object) ";~7KanQEv";
      objectArray0[7] = (Object) ";~7KanQEv";
      objectArray0[8] = (Object) simpleResultSet0;
      result0.setParameterData(objectArray0);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      DBUtil.querySingleRow(";~7KanQEv", jdbcConnection0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("-->");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '-->.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Result result0 = Result.newReleaseSavepointRequest(";~7KanQEv");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) simpleResultSet0;
      objectArray0[1] = (Object) ";~7KanQEv";
      objectArray0[2] = (Object) ";~7KanQEv";
      objectArray0[3] = (Object) result0;
      objectArray0[4] = (Object) ";~7KanQEv";
      objectArray0[5] = (Object) simpleResultSet0;
      objectArray0[6] = (Object) ";~7KanQEv";
      objectArray0[7] = (Object) ";~7KanQEv";
      objectArray0[8] = (Object) simpleResultSet0;
      result0.setParameterData(objectArray0);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      DBUtil.querySingleRow(";~7KanQEv", jdbcConnection0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("-->");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '-->.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = "#\"@&GqU,N|J}7";
      Class<Driver> class0 = Driver.class;
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("#\"@&GqU,N|J}7", class0, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = null;
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "t;&]do9`kK{j0:Imll", "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = "org.apache.derby.iml.sql.compile.SetSchemNode";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.derby.iml.sql.compile.SetSchemNode");
      DBUtil.getOpenResultSetCount();
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("BEFORE BIT", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: BEFORE BIT
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Class<Long> class0 = Long.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      org.h2.Driver.load();
      int[] intArray0 = new int[2];
      intArray0[0] = 6;
      intArray0[1] = 6;
      Result result0 = new Result(90114, intArray0, 6);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      // Undeclared exception!
      try { 
        DBUtil.queryLong((String) null, jdbcConnection0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a row.
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Class<Long> class0 = Long.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      org.h2.Driver.load();
      int[] intArray0 = new int[2];
      intArray0[0] = 6;
      intArray0[1] = 6;
      Result result0 = new Result(90114, intArray0, 6);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      // Undeclared exception!
      try { 
        DBUtil.queryLong((String) null, jdbcConnection0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a row.
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int[] intArray0 = new int[0];
      Result result0 = new Result((-179381889), intArray0, 90114);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      // Undeclared exception!
      try { 
        DBUtil.queryLong((String) null, jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)96;
      byteArray0[4] = (byte)24;
      String string0 = null;
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection(jdbcConnection0, false);
      // Undeclared exception!
      try { 
        DBUtil.query((String) null, (Connection) proxy0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Internal exception in method: public java.sql.ResultSet org.databene.jdbacl.proxy.LoggingStatementHandler.executeQuery(java.lang.String) throws java.sql.SQLException
         //
         verifyException("org.databene.commons.ExceptionMapper", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      Result result0 = Result.newSetSavepointRequest("Expected exactly one row, found more.");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0, result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      DBUtil.queryAndSimplify("x[g.F", jdbcConnection0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      xSQLVAR1.decodeDate((byte[]) null);
      DBUtil.executeQuery((String) null, jdbcConnection0);
      DBUtil.close((Connection) jdbcConnection0);
      assertFalse(jdbcConnection0.isClosed());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction(fBManagedConnection0, (AbstractConnection) null);
      InternalTransactionCoordinator.AutoCommitCoordinator internalTransactionCoordinator_AutoCommitCoordinator0 = new InternalTransactionCoordinator.AutoCommitCoordinator((AbstractConnection) null, fBLocalTransaction0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_AutoCommitCoordinator0);
      internalTransactionCoordinator0.getConnection();
      DBUtil.close((Connection) null);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".env.properties");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)24;
      byteArray0[4] = (byte)24;
      byteArray0[5] = (byte)96;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("", true, false, true, true, "yxs ", true, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for ''
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      ErrorHandler errorHandler0 = new ErrorHandler(",(#1sPE\"");
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      DBUtil.escape("");
      GDSHelper gDSHelper0 = null;
      int int0 = (-438);
      int int1 = (-256348308);
      int int2 = 82;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z0Hm?OOl38PUU}ip");
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      ErrorHandler errorHandler0 = new ErrorHandler("One-row database query returned multiple rows: ");
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      BTreeController bTreeController0 = new BTreeController();
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      DBUtil.escape("lT6X@.?");
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      try { 
        DBUtil.runScript("", "Using driver ", '/', (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 11 result set(s), 19 statement(s)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/.env.properties");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)96;
      byteArray0[4] = (byte)24;
      byteArray0[5] = (byte)24;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.connect("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "U<uc\"+4", true, 32, 32, 47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: U<uc\"+4
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      String string0 = ";~7KanQEv";
      Result result0 = Result.newReleaseSavepointRequest(";~7KanQEv");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow(";~7KanQEv", jdbcConnection0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Database query did not return a result: ;~7KanQEv
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = DBUtil.executeUpdate("", (Connection) null);
      assertEquals(0, int0);
      
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.decodeDate((byte[]) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.close((Connection) null);
      try { 
        DBUtil.currentLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("");
      Result result0 = Result.newSetSavepointRequest("");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("", jdbcConnection0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a row.
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--s+8]:6G-I`}BkdS", (DBSchema) null);
      String[] stringArray0 = new String[10];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "T", false, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'null' not found in table '--s+8]:6G-I`}BkdS'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      simpleResultSet0.getStatement();
      DBUtil.close((Statement) null);
      DBUtil.createLoggingResultSet(simpleResultSet0, (Statement) null);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.queryScalar((String) null, (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      simpleResultSet0.getStatement();
      DBUtil.close((Statement) null);
      DBUtil.parseResultRow(simpleResultSet0);
      FromVTI fromVTI0 = new FromVTI();
      assertFalse(fromVTI0.isFlattenableJoinNode());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      Result result0 = Result.newFreeStmtRequest(61);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0, result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      ErrorHandler errorHandler0 = new ErrorHandler("E)ULT_CLOSE");
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("p2C^EvS6SCq%W!qR", (Connection) jdbcConnection0, true, errorHandler0);
      DBUtil.runScript("p2C^EvS6SCq%W!qR", 'z', (Connection) jdbcConnection0, (boolean) dBExecutionResult0.changedStructure, errorHandler0);
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      simpleResultSet0.getStatement();
      DBUtil.available("org.apache.derby.impl.sql.compile.ResultColumnList", "--;)", "org.apache.derby.impl.sql.compile.ResultColumnList", "preparing statement: ");
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      Object[] objectArray0 = DBUtil.currentLine(simpleResultSet0);
      assertEquals(0, objectArray0.length);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      Result result0 = Result.newFreeStmtRequest(61);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0, (Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      ErrorHandler errorHandler0 = new ErrorHandler("E)ULT_CLOSE");
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler.setDefaultLevel(level0);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("p2C^EvS6SCq%W!qR", (Connection) jdbcConnection0, true, errorHandler0);
      DBUtil.currentLine(simpleResultSet1);
      // Undeclared exception!
      try { 
        DBUtil.runScript("p2C^EvS6SCq%W!qR", 'z', (Connection) jdbcConnection0, (boolean) dBExecutionResult0.changedStructure, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      ErrorHandler errorHandler0 = new ErrorHandler("org.firebirdsql.jdbc.field.FBBigDecimalField");
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "--Zu1+cz<U8H", '@', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("--k{");
      // Undeclared exception!
      try { 
        DBUtil.runScript("j^%A89Q'#B", 'd', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7JTv6Pad|[[9>", (DBSchema) null);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "7JTv6Pad|[[9>", true, stringArray0);
      DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
      FromVTI fromVTI0 = new FromVTI();
      assertEquals(0, QueryTreeNode.AUTOINCREMENT_START_INDEX);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--s+8]:6G-I`}BkdS", (DBSchema) null);
      String[] stringArray0 = new String[5];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "T", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'null' not found in table '--s+8]:6G-I`}BkdS'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("D");
      // Undeclared exception!
      try { 
        DBUtil.runScript("+E#C2\"", "org.firebirdsql.jdbc.field.FBBigDecimalField", '{', (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: +E#C2\"
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      try { 
        DBUtil.parseAndSimplifyResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("--k{");
      ErrorHandler errorHandler1 = new ErrorHandler("----:J.EiYFnslYF4");
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("----:J.EiYFnslYF4", (Connection) null, false, errorHandler1);
      assertNotNull(dBExecutionResult0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object object0 = new Object();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      Result result0 = Result.newFreeStmtRequest(59);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      ErrorHandler errorHandler0 = new ErrorHandler("RESULT_CLOSE");
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler.setDefaultLevel(level0);
      DBUtil.runScript("RESULT_CLOSE", (Connection) jdbcConnection0, false, errorHandler0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      assertFalse(constantActionActivation0.getScrollable());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("");
      Result result0 = Result.newSetSavepointRequest("");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Object object0 = new Object();
      DBUtil.query("zH", jdbcConnection0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqlscale);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object object0 = new Object();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      Result.newFreeStmtRequest(59);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("!=BhEw{h^\"'QJIlne", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("preparing statement: ");
      // Undeclared exception!
      try { 
        DBUtil.runScript("preparing statement: ", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-91);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-113);
      byteArray0[4] = (byte)52;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)15;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      ErrorHandler errorHandler0 = new ErrorHandler("preparing statement ");
      FromVTI fromVTI0 = new FromVTI();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("preparing statement ", 'S', (Connection) jdbcConnection0, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/OFk_.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      boolean boolean0 = DBUtil.existsEnvironment("OFk_");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      String string0 = "(3b'";
      sessionRemote0.autoReconnect((-22701868));
      int[] intArray0 = new int[7];
      intArray0[1] = 3;
      intArray0[2] = 5;
      intArray0[3] = 0;
      intArray0[4] = 12;
      intArray0[5] = 8;
      intArray0[6] = 11;
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "";
      DBUtil.executeUpdate("", (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("l/", "l/", "l/", "l/");
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("l/", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Integer integer0 = new Integer(6);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultRow(simpleResultSet0);
      DBUtil.available("u0Kq('@", (String) null, (String) null, "U6vW2!| PI6O");
      DBUtil.close((ResultSet) simpleResultSet0);
      assertTrue(simpleResultSet0.isClosed());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = null;
      DBUtil.available((String) null, (String) null, (String) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      DBUtil.available((String) null, "Connecting ", "Connecting ", "Connecting ");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) jdbcDataSource0);
      // Undeclared exception!
      try { 
        jdbcConnectionPool0.getConnection();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DBUtil.executeUpdate((String) null, (Connection) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqllen);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a~");
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema((String) null, dBCatalog0);
      dBCatalog0.getSchemas();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(dBSchema0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DBUtil.available((String) null, "org.databene.jdbacl.DBUtil", "I-TD?>CeNEIG omM#T", "7sUQ2Dk>,U=9");
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      assertEquals(1, HsqlProperties.NO_VALUE_FOR_KEY);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--s+8]:6G-I`}BkdS", (DBSchema) null);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "T", false, stringArray0);
      boolean boolean0 = DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
      assertFalse(boolean0);
      
      boolean boolean1 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(",b#1stPE\"", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("(V)js\"", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.countRows("#,lW6hj", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DBUtil.available((String) null, (String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "K?['q-", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: K?['q-
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      System.setCurrentTimeMillis(8);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      Class<jdbcCallableStatement> class0 = jdbcCallableStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "--K%WiPhf/D6Em d\"-", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("preparing statement: ", "preparing statement: ", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: preparing statement: 
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("(V)js\"");
      // Undeclared exception!
      try { 
        DBUtil.runScript("(V)js\"", "X#T", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: (V)js\"
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("--k{");
      // Undeclared exception!
      try { 
        DBUtil.runScript("--k{", "F", '=', (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --k{
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      try { 
        DBUtil.runScript("", "", (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      FBArray fBArray0 = new FBArray();
      HashMap<jdbcPreparedStatement, jdbcResultSet> hashMap0 = new HashMap<jdbcPreparedStatement, jdbcResultSet>();
      fBArray0.getResultSet((Map) hashMap0);
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Class<FBConnection> class0 = FBConnection.class;
      String string0 = null;
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray((String) null, class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      DeleteConstantAction deleteConstantAction0 = new DeleteConstantAction();
      deleteConstantAction0.getTargetProperties();
      FormatableProperties formatableProperties0 = new FormatableProperties((Properties) null);
      jdbcDriver0.connect("UR", formatableProperties0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "UR", true, 3, (-1602), (-1602));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: UR
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "w";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "w", false, (-1), (-1), (-4233));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("");
      Connection connection0 = null;
      String string0 = "U<uc\"+4";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "U<uc\"+4", false, (-1), (-1569), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      DBUtil.getOpenStatementCount();
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "";
      String string1 = "user";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "L(lw}|,Tp(&)K", "user", "--", "user");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.query(" failed: ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.query("bg+", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      List<Object[]> list0 = new LinkedList<Object[]>();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = "$&=0D-^@d@Z";
      boolean boolean0 = false;
      try { 
        DBUtil.connect("STDDEV_SAMP", "org.databene.jdbacl.model.DBIndex", "STDDEV_SAMP", "$&=0D-^@d@Z", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting STDDEV_SAMP failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      DBSchema dBSchema0 = new DBSchema("");
      MockThrowable mockThrowable0 = new MockThrowable("");
      Result result0 = new Result(mockThrowable0, "");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0, (Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      result0.iterator();
      jdbcConnection0.setSavepoint("`*");
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Result result0 = Result.newSetSavepointRequest("");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      DBUtil.queryAndSimplify("", jdbcConnection0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      DBSchema dBSchema0 = new DBSchema("");
      Result result0 = Result.newSetSavepointRequest("Expected exactly one row, found more.");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn(result0).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      DBUtil.queryAndSimplify("RCOM./u9TT ~%;2", jdbcConnection0);
      TableContainer tableContainer1 = new TableContainer("--uiPHjNs=C8.x@*]+t");
      tableContainer1.getTable("dSYX2`");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqllen);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Statement statement0 = jdbcConnection0.createStatement();
      DBUtil.close(statement0);
      TableContainer tableContainer0 = new TableContainer("hj");
      tableContainer0.getTable("hj");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqltype);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".env.properties");
      byte[] byteArray0 = new byte[11];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        DBUtil.getMetaData("", true, false, false, true, "yXs ", true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      try { 
        DBUtil.getMetaData((Connection) null, "", "AYy*Hd2mHY", false, false, false, false, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "h2.enableAnonymousSSL", "UxX9ddxizWn|<h/", false, true, false, true, ")$", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')'
         // )$
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      int int0 = DBUtil.getOpenResultSetCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      DBCatalog dBCatalog0 = new DBCatalog("opening connection to ");
      DBSchema dBSchema0 = new DBSchema("'wXeTE.", dBCatalog0);
      dBCatalog0.addSchema(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("]", dBSchema0);
      DBTrigger dBTrigger0 = new DBTrigger("]", (DBSchema) null);
      dBSchema0.addTrigger(dBTrigger0);
      DBCatalog dBCatalog1 = defaultDBTable0.getCatalog();
      DBSchema dBSchema1 = new DBSchema("opening connection to ", dBCatalog1);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("opening connection to ", dBSchema0);
      defaultDBTable1.getPrimaryKeyConstraint();
      FromVTI fromVTI0 = new FromVTI();
      List<Object[]> list0 = DBUtil.parseResultSet(simpleResultSet1);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.format(simpleResultSet0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqlscale);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      Class<Delayed> class0 = Delayed.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jbhjhKF)XU!hX6*b_z");
      SQLWarning sQLWarning0 = new SQLWarning(" prepared statement(s)", "jbhjhKF)XU!hX6*b_z", (-2821));
      org.h2.Driver.load();
      Level level0 = Level.trace;
      ErrorHandler.setDefaultLevel(level0);
      Integer integer0 = new Integer((-1309));
      try { 
        DBUtil.parseResultRow(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultRow(simpleResultSet0);
      FromVTI fromVTI0 = new FromVTI();
      assertFalse(fromVTI0.markAsCursorTargetTable());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorHandler errorHandler0 = new ErrorHandler("o7;p");
      try { 
        DBUtil.parseResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler(":zNlOCjM{.Ug{8V1");
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      boolean boolean0 = DBUtil.available("\".\"", (String) null, (String) null, "k!Hh[QpRoA");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("$x@~msv_T^=7^A,", "$x@~msv_T^=7^A,", "$x@~msv_T^=7^A,", "p>E3(*lPT");
      boolean boolean0 = false;
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting $x@~msv_T^=7^A, failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = "";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "9e-WBLqOT-KE@~\"?S<", "", "9e-WBLqOT-KE@~\"?S<");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect((JDBCConnectData) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      boolean boolean0 = DBUtil.existsEnvironment((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = "k$F-2[>X&FGxGd'6";
      // Undeclared exception!
      try { 
        DBUtil.connect("k$F-2[>X&FGxGd'6", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'k$F-2[>X&FGxGd'6.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect("/~q<cUK-<.:", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '/~q<cUK-<.:.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("Z", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/OFk_.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Y");
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.getStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DBUtil.checkReadOnly("org.hsqldbtTrace", false);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqllen);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("org.hsqldbtTrace", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: org.hsqldbtTrace
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = ";N61.!8}[kIKqhY=";
      try { 
        DBUtil.connect("I", ";N61.!8}[kIKqhY=", ";N61.!8}[kIKqhY=", "I", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting I failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7JTv6Pad|[[9>", (DBSchema) null);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      DBUtil.getOpenStatementCount();
      String string0 = DBUtil.escape("7JTv6Pad|[[9>");
      assertEquals("7JTv6Pad|[[9>", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = DBUtil.getOpenPreparedStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.close((ResultSet) errorMessages0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryString((PreparedStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("Ag");
      DBSchema dBSchema0 = new DBSchema("Ag", dBCatalog0);
      dBSchema0.isIdentical(dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Ag", dBSchema0);
      dBSchema0.removeTable(defaultDBTable0);
      dBSchema0.getDatabase();
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      DBSchema dBSchema0 = new DBSchema("|-z xaz~v\"");
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(dBSchema0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("");
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(dBSchema0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.createLoggingStatementHandler((Statement) null, false);
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      Object[] objectArray0 = DBUtil.nextLine(simpleResultSet0);
      assertNull(objectArray0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object[] objectArray0 = DBUtil.nextLine(simpleResultSet0);
      assertNull(objectArray0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DBUtil.available((String) null, (String) null, (String) null, (String) null);
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DBUtil.available("--RESULT_CLOSE", "--RESULT_CLOSE", "--RESULT_CLOSE", "--RESULT_CLOSE");
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      Properties properties0 = new Properties();
      jdbcDriver0.connect("--RESULT_CLOSE", properties0);
      try { 
        DBUtil.getMetaData((Connection) null, ";R64'", "--RESULT_CLOSE", false, false, false, false, "--RESULT_CLOSE", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "h2.enableAnonymousSSL", "UxX9ddxizWn|<h/", false, true, false, false, ")$", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')'
         // )$
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = "CREATE DOMAIN ";
      try { 
        DBUtil.connect("CREATE DOMAIN ", "CREATE DOMAIN ", "5", "5", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting CREATE DOMAIN  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".env.properties");
      byte[] byteArray0 = new byte[11];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        DBUtil.getMetaData("", false, false, false, true, "yxs ", true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      try { 
        DBUtil.getMetaData((Connection) null, "AYy*Hd2mHY", "AYy*Hd2mHY", false, false, true, true, "AYy*Hd2mHY", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.connect("--Connected to", (String) null, (String) null, "--cC=!eX/.SU <sJ/~", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting --Connected to failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("}", false, false, false, false, "}", false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '}.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = "yxQs ";
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("", true, true, true, true, "yxQs ", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
