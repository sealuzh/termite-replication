/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 09 10:49:46 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("(");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.dump("t", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("'");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "'");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      stringWriter1.append('R');
      simpleNode0.setIdentifier("4");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write("CompilationUnit");
      simpleNode0.setIdentifier(")");
      simpleNode0.dump("'", stringWriter0);
      assertEquals("'R<VariableDeclaratorId>\n  <identifier>'</identifier>\n  <identifier>4</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("*lt", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier("t");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(91);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("InstanceOfExpression");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("suF}I5j=kf.s<e,_");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParserTokenManager0.curChar = 'Y';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L>");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 'Y');
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 105);
      Node node0 = simpleNode0.jjtGetChild(105);
      SimpleNode simpleNode2 = new SimpleNode(105);
      simpleNode2.jjtAddChild(simpleNode0, 0);
      String string0 = "<";
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("suF}I5j=kf.s<e,_");
      simpleNode2.dump("", stringWriter0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(node0, (-65));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(11);
      simpleNode0.setIdentifier("<<");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("|");
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<TypeParameters>\n  <identifier>*lshft</identifier>\n  <identifier>|</identifier>\n</TypeParameters>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(47);
      stringWriter0.write(";");
      simpleNode0.setIdentifier((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump("U)U", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(11);
      simpleNode0.setIdentifier("w");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("{");
      stringWriter0.write("w");
      stringWriter0.flush();
      simpleNode0.dump("AN/p72m%", stringWriter0);
      assertEquals("w<TypeParameters>\n  <identifier>w</identifier>\n</TypeParameters>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("}");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter(546);
      simpleNode0.dump("(", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)81;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "T/^LFy]G");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)81, 2220, 318);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      String string0 = "<";
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("<");
      simpleNode0.dump("<", stringWriter0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.rootNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0223670722663725
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5uF}I5~=kf.s<e,_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParserTokenManager0.curChar = 'Y';
      javaParser0.ConditionalOrExpression();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 'Y');
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, '}');
      SystemInUtil.addInputLine("5uF}I5~=kf.s<e,_");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.jjtAddChild(simpleNode0, 105);
      SystemInUtil.addInputLine("5uF}I5~=kf.s<e,_");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write("~X");
      // Undeclared exception!
      simpleNode0.dump("/", stringWriter1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.setIdentifier("|");
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*gt</identifier>\n  <identifier>*gt</identifier>\n  <identifier>|</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((byte)84);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "&&");
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("&&<ForInit>\n  <identifier>*amp</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("suF}I5j=kf.s<e,_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParserTokenManager0.curChar = 'Y';
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2652));
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 82);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(simpleNode0, 10);
      simpleNode1.jjtAddChild(simpleNode0, 1);
      SystemInUtil.addInputLine("<=");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode1.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.write("<=");
      // Undeclared exception!
      try { 
        simpleNode0.dump("<=", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("suF}I5j=kf.s<e,_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParserTokenManager0.curChar = 'Y';
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, (-1));
      SimpleNode simpleNode3 = (SimpleNode)javaParser0.currNode;
      simpleNode2.parent = (Node) simpleNode3;
      simpleNode0.jjtAddChild(simpleNode3, 0);
      simpleNode2.jjtAddChild(simpleNode0, 25);
      simpleNode2.jjtGetParent();
      SimpleNode simpleNode4 = new SimpleNode(javaParser0, (-2005267917));
      simpleNode4.setIdentifier("suF}I5j=kf.s<e,_");
      // Undeclared exception!
      try { 
        simpleNode2.jjtAddChild(simpleNode3, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.7188008609386548
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5uF}I5~=kf.s<e,_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaParserTokenManager0.curChar = 'Y';
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 'Y');
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 'Y');
      simpleNode0.jjtAddChild(simpleNode1, 491);
      SystemInUtil.addInputLine("5uF}I5~=kf.s<e,_");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode1.jjtAddChild(simpleNode0, 105);
      SystemInUtil.addInputLine("5uF}I5~=kf.s<e,_");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      simpleNode2.jjtGetParent();
      simpleNode1.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("/");
      // Undeclared exception!
      simpleNode0.dump(">", stringWriter0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9104860899598425
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("suF}I5j=kf.s<e,_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 'Y');
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 105);
      simpleNode1.jjtGetParent();
      SimpleNode simpleNode2 = new SimpleNode(105);
      simpleNode2.jjtAddChild(simpleNode0, 0);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write("<");
      simpleNode0.toString();
      assertEquals(106, simpleNode0.jjtGetNumChildren());
      
      simpleNode1.setIdentifier("TypeParameters");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o-&p]EhpOWn");
      char[] charArray0 = new char[3];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      stringWriter1.write(charArray0);
      simpleNode1.toString();
      simpleNode2.dump("Vr", stringWriter1);
      String string0 = simpleNode2.toString();
      assertEquals("AnnotationTypeMemberDeclaration", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1105729685));
      SimpleNode simpleNode1 = new SimpleNode(103);
      simpleNode0.parent = (Node) simpleNode1;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
      
      simpleNode0.jjtGetParent();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((byte)84);
      SimpleNode simpleNode1 = new SimpleNode((byte)84);
      simpleNode1.jjtAddChild(simpleNode0, (byte)84);
      simpleNode1.setIdentifier("~a\"awMY[mHEUXHk");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "~a\"awMY[mHEUXHk");
      simpleNode1.dump("~a\"awMY[mHEUXHk", stringWriter0);
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(85, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier("g");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(91);
      stringWriter1.write("g");
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump(">>", stringWriter1);
      assertEquals("g<SynchronizedStatement>\n  <identifier>g</identifier>\n  <identifier>*rshft</identifier>\n</SynchronizedStatement>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8544116950152294
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("suF}I5j=kf.s<e,_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 105);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 105);
      simpleNode1.jjtGetParent();
      simpleNode0.setIdentifier("suF}I5j=kf.s<e,_");
      simpleNode0.setIdentifier("");
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode2.parent = (Node) simpleNode1;
      SimpleNode simpleNode3 = new SimpleNode((-1));
      stringReader0.close();
      simpleNode0.jjtAddChild(simpleNode3, 732);
      simpleNode3.jjtAddChild(simpleNode2, 0);
      simpleNode1.jjtAddChild(simpleNode2, 0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("");
      // Undeclared exception!
      simpleNode0.dump("suF}I5j=kf.s<e,_", stringWriter0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.jjtGetChild(1);
      assertNotNull(node0);
      
      String string0 = simpleNode0.toString();
      assertEquals("PackageDeclaration", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 10);
      SimpleNode simpleNode1 = new SimpleNode(0);
      assertFalse(simpleNode1.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.id = 1041;
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.close();
      // Undeclared exception!
      try { 
        simpleNode0.dump("t", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-38));
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      int int0 = 558;
      StringWriter stringWriter1 = stringWriter0.append('');
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      char[] charArray0 = new char[15];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '';
      charArray0[3] = '';
      charArray0[4] = '';
      charArray0[5] = '';
      stringWriter0.write(charArray0);
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("h|O>cQz?ZgR!}LDNq", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode((-1106552649));
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier("(");
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("t", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>(</identifier>\n  <identifier>(</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(829);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 829
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtAddChild((Node) null, 10);
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-370));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -370
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1724800154383195
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(105);
      simpleNode0.setIdentifier(">=");
      SimpleNode simpleNode1 = new SimpleNode(105);
      SystemInUtil.addInputLine(">=");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Node node0 = simpleNode1.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) ">=");
      stringWriter0.write(">=");
      simpleNode0.dump(">=", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 105);
      simpleNode0.toString(">=");
      simpleNode0.jjtGetChild(105);
      simpleNode0.jjtGetNumChildren();
      assertEquals(106, simpleNode0.jjtGetNumChildren());
      
      String string0 = simpleNode1.toString();
      assertEquals("AnnotationTypeMemberDeclaration", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("t", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(464);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.close();
      stringWriter0.close();
      simpleNode0.dump("t", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("3qQ6r~q^={}wj~");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtOpen();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Qt");
      simpleNode0.setIdentifier("t");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(91);
      stringWriter0.flush();
      stringWriter0.write("t");
      simpleNode0.dump(";", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 2096);
      assertEquals(2097, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("t", stringWriter0);
      simpleNode0.dump("\",\"", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 18);
      assertEquals(19, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode1 = new SimpleNode(1472);
      Node node0 = simpleNode1.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("t", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("'");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "'");
      stringWriter0.append('\\');
      simpleNode0.setIdentifier("4");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.write("4");
      simpleNode0.setIdentifier("4");
      simpleNode0.dump("'", stringWriter2);
      SimpleNode simpleNode1 = new SimpleNode((-1458739054));
      stringWriter1.append((CharSequence) "'");
      SimpleNode simpleNode2 = new SimpleNode((-1458739054));
      simpleNode2.dump("AnnotationTypeMemberDeclaration", stringWriter0);
      Node node0 = simpleNode2.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(775);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
      
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.8222900060250078
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte byte0 = (byte)123;
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)81;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "T/^Ly]G");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)81, 2220, 318);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.setIdentifier("?");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("?");
      simpleNode0.setIdentifier("?");
      String string0 = "";
      simpleNode0.dump("", stringWriter0);
      // Undeclared exception!
      try { 
        javaParser0.EnumConstant();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 81, column 2224.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("(");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)108;
      byteArray0[5] = (byte)93;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.identifiers = arrayList0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("t", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append('n');
      simpleNode0.dump("(", stringWriter1);
      assertEquals("n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1655));
      // Undeclared exception!
      try { 
        simpleNode0.toString("4QT7M/.8cHaK");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1655
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("t", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>(</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      simpleNode0.toString("t");
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : (", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("(");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump(">=", stringWriter0);
      stringWriter0.close();
      stringWriter0.close();
      simpleNode0.dump("t", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n  <identifier>(</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n  <identifier>(</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : >= : (", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 105);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte byte0 = (byte)123;
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)81;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "T/^Ly]G");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)81, 2220, 318);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.setIdentifier("?");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("?");
      simpleNode0.setIdentifier("?");
      simpleNode0.dump("", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
