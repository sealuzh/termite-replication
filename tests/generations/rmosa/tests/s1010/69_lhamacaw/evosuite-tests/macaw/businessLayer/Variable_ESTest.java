/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 10:06:23 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=4.211349844482089
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setAlias("z2i");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setLabel("0Jd~");
      rawVariable0.getCleaningStatus();
      rawVariable0.getCategory();
      System.setCurrentTimeMillis((-616L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setIdentifier(2993);
      derivedVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getAlias();
      derivedVariable0.getYear();
      derivedVariable0.getSourceVariables();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.notes = "Unknown";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getIdentifier();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.259254590401737
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setCodeBookNumber((String) null);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setYear("2fDb{J");
      derivedVariable0.setForm("");
      derivedVariable0.columnEnd = "general.fieldValue.blank";
      rawVariable0.setCleaningStatus("$VALUES");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("general.fieldValue.blank", "$VALUES");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getAlias();
      rawVariable0.getAlternativeVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user1 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable1);
      derivedVariable0.clone();
      rawVariable0.clone();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.clone();
      assertEquals("general.fieldValue.blank", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.673199461415907
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setIdentifier(2187);
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.columnStart = "variable.columnStart.label";
      User user2 = new User("variable.alternativeVariable.label", (String) null);
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable1);
      derivedVariable0.getAlias();
      derivedVariable1.getValueLabels();
      derivedVariable0.createVariableSummary();
      assertEquals("2187", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4390626350804188
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setName("<Kgzft^_@]~c3/5y!");
      User user0 = new User();
      derivedVariable1.setAvailability((String) null);
      rawVariable0.columnEnd = "variable.columnStart.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.getCategory();
      derivedVariable1.getAvailability();
      derivedVariable1.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.columnEnd = null;
      rawVariable0.setForm((String) null);
      rawVariable0.getAlias();
      rawVariable0.createVariableSummary();
      rawVariable0.setCategory((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getValueLabels();
      rawVariable0.getForm();
      rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_CREATE_VARIABLE");
      user0.setCounty((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setForm("general.error.blankField");
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.setCoded(true);
      derivedVariable0.getForm();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("general.error.blankField", derivedVariable0.getForm());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add((SupportingDocument) null);
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setColumnEnd("2_an_6");
      derivedVariable0.questionNumber = "6glu!tGCaV<+4";
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      // Undeclared exception!
      try { 
        derivedVariable0.removeValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ontologyTerm0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.notes = null;
      String string0 = derivedVariable0.getColumnEnd();
      assertNotNull(string0);
      
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAvailability();
      derivedVariable0.getSourceVariables();
      String string1 = derivedVariable0.getForm();
      assertNotNull(string1);
      
      String string2 = derivedVariable0.getNotes();
      assertNull(string2);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.setName((String) null);
      derivedVariable0.getDisplayName();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string0 = derivedVariable0.getName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setIdentifier(108);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getForm();
      User user0 = new User();
      user0.setStatus("");
      String string0 = "";
      User.checkValidUserIDField("");
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5879368632962025
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(" l9'loX%F0hC", " l9'loX%F0hC");
      user0.setAddressLine2((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.setCategory((String) null);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getValueLabels();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      
      rawVariable0.getCategory();
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      String string1 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string1);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.7143713203636937
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("variable.alternativeVariable.label", (String) null);
      derivedVariable0.cloneAttributes(rawVariable0);
      ontologyTerm0.setIdentifier((-1359));
      arrayList0.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      rawVariable1.setCleaningStatus("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("NR2 9Ipvd", rawVariable1.getCleaningStatus());
      
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = null;
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertTrue(arrayList1.isEmpty());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.669857109036471
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("macaw.businessLayer.Variable");
      rawVariable0.isCoded();
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      User user0 = null;
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("macaw.businessLayer.Variable");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.326364028987723
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = null;
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      rawVariable0.getQuestionNumber();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument1.setIdentifier((-30));
      derivedVariable0.setNotes("k\"p#m>,;:,v<RG18nG");
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      valueLabel0.setIdentifier(3645);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.setCleaned(false);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      valueLabel0.clone();
      supportingDocument1.setIdentifier(1);
      User user0 = new User("eA*", "variable.isCleaned.saveChanges.changedToNotClean");
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      rawVariable0.addValueLabel(valueLabel0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      System.setCurrentTimeMillis((-2687L));
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("M>w9EGRo/0>wmC8");
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      Variable variable0 = null;
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.setLabel("M>w9EGRo/0>wmC8");
      derivedVariable0.setLabel((String) null);
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.getLabel();
      derivedVariable0.removeSourceVariable((Variable) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User user1 = new User("f", "f");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setFirstName("M%n;@8:cCyb\"_Z");
      derivedVariable0.setName("w");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.retainAll(arrayList1);
      arrayList0.iterator();
      rawVariable0.setLabel("M%n;@8:cCyb\"_Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User.checkValidUserIDField("w");
      derivedVariable1.form = null;
      user0.setLastName("M%n;@8:cCyb\"_Z");
      rawVariable0.setName("w");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(118);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(99);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(99);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.824512202482896
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      
      derivedVariable0.setName("");
      derivedVariable0.setFilePath((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.isCoded();
      derivedVariable0.getForm();
      derivedVariable0.getColumnEnd();
      String string0 = derivedVariable0.getFilePath();
      assertNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      User user1 = new User((String) null, "*mYr}o4 k{z.");
      user1.setFirstName("Y");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("Y");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      user0.setFirstName("*mYr}o4 k{z.");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("");
      derivedVariable0.setNotes("i_");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.getLabel();
      derivedVariable0.getAvailability();
      assertEquals("i_", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.isCoded.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setTitle("variable.isCoded.label");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.getSourceVariables();
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
      assertNotSame(variable0, derivedVariable0);
      assertFalse(variable0.isNewRecord());
      assertEquals("0", variable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.isCleaned();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("Ydh=f[b+$'", "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setYear("G!");
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable1);
      assertEquals("G!", rawVariable2.getYear());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.getYear();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setYear((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCodeBookNumber("!o");
      supportingDocument0.getDisplayName();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-3145));
      rawVariable0.setColumnEnd("J?XC1g\"T0x%");
      supportingDocument0.setDescription(":a5^7>287");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      supportingDocument0.setTitle("-");
      rawVariable0.form = "variable.alias.label";
      rawVariable0.createVariableSummary();
      rawVariable0.setCodeBookNumber("1l8.Jf!vdYU0");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.questionNumber = "";
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.getCleaningDescription();
      Variable.validateFields(derivedVariable0);
      rawVariable0.getYear();
      System.setCurrentTimeMillis((-3145));
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("1l8.Jf!vdYU0", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.900285164574433
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      derivedVariable0.setColumnEnd("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getOntologyTerms();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("{T)h:be7");
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.columnEnd = "*mYr}o4 k{z.";
      user0.setFirstName("*mYr}o4 k{z.");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      rawVariable0.setIdentifier(1766);
      User user1 = new User("!o", "!o");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      rawVariable1.setCoded(true);
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setIdentifier((-3105));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getYear();
      User user0 = new User("", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertEquals("-3105", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("?NCaN^g,b;!O");
      derivedVariable0.createVariableSummary();
      assertEquals("?NCaN^g,b;!O", derivedVariable0.getForm());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.627801908236842
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.clone();
      valueLabel0.setLabel("macaw.businessLayer.RawVariable");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCleaningDescription("7\"@0O%8D`b5");
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("7\"@0O%8D`b5", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.1995756248310236
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAddressLine1((String) null);
      User user1 = new User("f", "f");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("w");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.iterator();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      derivedVariable1.setCleaned(true);
      derivedVariable1.codeBookNumber = null;
      User.checkValidUserIDField("w");
      user0.setLastName("l/7bHv'Y$ ");
      rawVariable0.setName("l/7bHv'Y$ ");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("Y");
      derivedVariable1.columnStart = "Y";
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      user0.setFirstName("*mYr}o4 k{z.");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-3606));
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      derivedVariable0.getNotes();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("M-;9=9jHZ{$lJbKWf7");
      rawVariable0.setYear(")=u|QroL^?@O#\"");
      rawVariable0.clone();
      assertEquals(")=u|QroL^?@O#\"", rawVariable0.getYear());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6852661909001596
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.questionNumber = "Y";
      derivedVariable1.setLabel("Y");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      user0.setFirstName("*mYr}o4 k{z.");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.getCleaningStatus();
      assertEquals("Y", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.isCleaned.saveChanges.changedToNotClean";
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setQuestionNumber(")zdky}wn");
      derivedVariable0.getLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      assertFalse(arrayList0.contains(valueLabel0));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=4.020984180530142
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.columnStart = "variable.category.label";
      derivedVariable0.setAlias("variable.category.label");
      derivedVariable0.setAlias("variable.cleaningStatus.label");
      derivedVariable0.setQuestionNumber("variable.category.label");
      derivedVariable0.getAlias();
      derivedVariable0.getFilePath();
      User user0 = new User("", "");
      User.detectFieldChanges(user0, user0, user0);
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.isNewRecord();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("variable.category.label");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getCleaningDescription();
      derivedVariable0.getColumnStart();
      derivedVariable0.clone();
      derivedVariable1.setAvailability("variable.category.label");
      derivedVariable0.getValueLabels();
      derivedVariable1.getAlias();
      derivedVariable0.getCleaningStatus();
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getAlias());
      
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "user.lastName.saveChanges";
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string1);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.getYear();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.getDisplayName();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getAvailability();
      derivedVariable0.createVariableSummary();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.setName("U53E?JJ!+");
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.iterator();
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      user0.setLastName((String) null);
      rawVariable0.setName("E0|it+");
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Unknown", "Unknown");
      User user1 = new User("yT", "mJoIL>2a;,pYjY*;x!");
      User user2 = new User("Q+_", "mJoIL>2a;,pYjY*;x!");
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      User user3 = new User("]Gtr)-l", "yT");
      User user4 = new User();
      User.detectFieldChanges(user4, user3, user3);
      Variable.detectFieldChanges(user1, derivedVariable1, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      rawVariable1.setAvailability("NR2 9Ipvd");
      user0.setLastName("_%xL,*|`aV]JH-J\"O");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("NR2 9Ipvd", rawVariable1.getAvailability());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.384753780368075
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.setAvailability((String) null);
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User.detectFieldChanges(user1, user0, user1);
      derivedVariable0.getCategory();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "#LjAK";
      rawVariable0.setCleaningDescription("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      user0.setPostCode("NR2 9Ipvd");
      rawVariable0.setAlias("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE");
      user0.clone();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE", rawVariable0.getAlias());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "cU";
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setAlias("&E(5`i)}Qc~d}-53");
      rawVariable0.getAlias();
      assertEquals("&E(5`i)}Qc~d}-53", rawVariable0.getAlias());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.8438127965129296
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.setName("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.659484317201989
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user0 = new User();
      rawVariable1.setCategory("NR2 9Ipvd");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("NR2 9Ipvd", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setAvailability("DUPLICATE_AVAILABILITY_STATE");
      derivedVariable1.getCleaningDescription();
      User user0 = new User("a>?-sWiX1g4", "UNABLE_TO_GET_CHANGES_FOR_USER");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setPassword("a>?-sWiX1g4");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("D$G");
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.getAlias();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.getColumnEnd();
      assertEquals("variable.columnStart.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getColumnStart();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("Dk(E~d4`;3,'");
      derivedVariable0.getCategory();
      derivedVariable0.getColumnStart();
      assertEquals("Dk(E~d4`;3,'", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("XlH. dm");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      assertEquals("XlH. dm", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber(";;}/9Lu{=HR{");
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      assertEquals(";;}/9Lu{=HR{", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.setColumnStart("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.createVariableSummary();
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setQuestionNumber((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      rawVariable0.setIdentifier((-445));
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      arrayList2.removeAll(arrayList0);
      derivedVariable1.removeSourceVariables(arrayList2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      assertEquals((-445), rawVariable0.getIdentifier());
      
      derivedVariable0.getQuestionNumber();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("8");
      rawVariable0.setLabel("k1Z%vUtE0");
      rawVariable0.createVariableSummary();
      assertEquals("8", rawVariable0.getYear());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.codeBookNumber.label";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add((ValueLabel) null);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getColumnEnd();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setNotes("NR2 9Ipvd");
      arrayList1.stream();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setFilePath("NR2 9Ipvd");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      rawVariable0.questionNumber = "NR2 9Ipvd";
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable4.setSourceVariables(arrayList2);
      derivedVariable3.getFilePath();
      derivedVariable4.removeSourceVariable(rawVariable0);
      derivedVariable1.containsSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("NR2 9Ipvd", derivedVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      boolean boolean0 = true;
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      derivedVariable1.getCleaningDescription();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-622));
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.codeBookNumber = "Jz";
      rawVariable0.isCoded();
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFilePath("user.lastName.label");
      rawVariable0.columnStart = "user.lastName.label";
      supportingDocument0.setFilePath("^G+Gj~Rrb");
      supportingDocument0.clone();
      rawVariable0.setNotes("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument0.clone();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getName();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.columnEnd = "MISSING_DISPLAY_WIST_A+DXR";
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getForm();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm(".]+ \u0002G8L");
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable1.getAlias();
      assertEquals(".]+ \u0002G8L", derivedVariable1.getForm());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("jzp");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("j,mAV7xl@e/");
      derivedVariable0.setColumnEnd("jzp");
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getColumnStart();
      assertEquals("jzp", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      User user0 = new User();
      user0.setLastName("j");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("user.phone.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getFilePath();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getTitle());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setForm((String) null);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      User user0 = new User();
      user0.setCity((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertFalse(derivedVariable2.isNewRecord());
      
      derivedVariable2.setIsNewRecord(true);
      assertTrue(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      User user0 = new User("8", ";!FL^.=?tpPgcD");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("macaw.businessLayer.VariableSummary");
      rawVariable0.getColumnEnd();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("macaw.businessLayer.VariableSummary", rawVariable0.getAvailability());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("jzp");
      rawVariable0.getYear();
      assertEquals("jzp", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("<NxFh7Qa'gl('");
      rawVariable0.getCodeBookNumber();
      rawVariable0.getQuestionNumber();
      assertEquals("<NxFh7Qa'gl('", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("NR2 9Ipvd", rawVariable1.getNotes());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      derivedVariable0.columnEnd = "variable.name.label";
      User user0 = new User("", "");
      user0.setPostCode("variable.cleaningDescription.label");
      user0.setStatus("?DqmUavvAyE{T<3>+VF");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("Y");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      derivedVariable1.form = "<Kgzft^_@]~c3/5y!";
      User.detectFieldChanges(user0, user0, user0);
      user0.setFirstName("*mYr}o4 k{z.");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "p";
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setCoded(false);
      derivedVariable0.questionNumber = null;
      String string0 = derivedVariable0.getColumnStart();
      assertNotNull(string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("sO'{b.$");
      rawVariable0.codeBookNumber = "sO'{b.$";
      rawVariable0.getCodeBookNumber();
      assertEquals("sO'{b.$", rawVariable0.getNotes());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("y-!");
      derivedVariable0.setCleaningStatus("y-!");
      derivedVariable0.setQuestionNumber("Unknown");
      System.setCurrentTimeMillis(1L);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningDescription();
      assertEquals("Unknown", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("eFavGV*");
      rawVariable0.getYear();
      assertEquals("eFavGV*", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      rawVariable0.setColumnStart((String) null);
      rawVariable0.getLabel();
      System.setCurrentTimeMillis((-598L));
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        valueLabel0.hasSameDisplayName((ValueLabel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setColumnEnd("variable.label.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("o{5b`Ekn~ET1U");
      derivedVariable1.setColumnEnd("variable.label.label");
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      int int0 = derivedVariable1.getIdentifier();
      assertEquals("variable.label.label", derivedVariable1.getColumnEnd());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      user0.setFirstName("6@v");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("sO'{b.$");
      rawVariable0.getCodeBookNumber();
      rawVariable0.getNotes();
      assertEquals("sO'{b.$", rawVariable0.getNotes());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "*OV_mT:c Db\"f)";
      ontologyTerm0.getDisplayName();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setName("%");
      User.checkValidUserIDField("Gmeg");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable2);
      assertEquals("%", derivedVariable2.getName());
      assertEquals("%", derivedVariable2.getDisplayName());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "";
      derivedVariable0.setLabel("Y");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Y", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "{M";
      rawVariable0.setAlias("variable.saveChanges.valueChanged");
      rawVariable0.clone();
      User user0 = new User("{M", "user.email.label");
      try { 
        User.checkValidUserIDField("!eGCzt6{E#&icxuV");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"!eGCzt6{E#&icxuV\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "UNABLE_TO_CREATE_CHANGE_EVENT";
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.notes = "('mDX'5>CU,";
      ontologyTerm0.setOntologyName("('mDX'5>CU,");
      User user0 = null;
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges((User) null, ontologyTerm0, ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      derivedVariable0.setCoded(false);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "DELETE";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("DELETE", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setColumnEnd("NON_EXISTENT_AVAILABILITY_STATE");
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      arrayList0.addAll((Collection<? extends Variable>) linkedList0);
      derivedVariable0.clone();
      derivedVariable0.clone();
      try { 
        User.checkValidEmail("general.fieldValue.unknown");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"general.fieldValue.unknown\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.580404155485974
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.alias.label";
      derivedVariable0.cloneAttributes(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("variable.alias.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "W";
      derivedVariable0.setCleaningDescription("W");
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("W", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.columnEnd = "variable.columnStart.label";
      User user0 = new User();
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.ensureCapacity(80);
      ontologyTerm0.setTerm("variable.alternativeVariable.label");
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = null;
      arrayList0.listIterator();
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User((String) null, "");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      User user2 = new User("2", "variable.alternativeVariable.label");
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user0, user1, user2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.spliterator();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      valueLabel0.setMissingValue(false);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAlias("-b15b2bG5zxr<th7A");
      derivedVariable0.setAvailability((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      ontologyTerm0.setTerm("gf$C*tFV");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getIdentifier();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList2.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      arrayList2.add(valueLabel1);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.setValueLabels(arrayList2);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      derivedVariable0.setNotes("gf$C*tFV");
      arrayList1.stream();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setFilePath("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getFilePath();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      assertEquals("gf$C*tFV", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add((SupportingDocument) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.stream();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.5543914566255155
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals(0, arrayList0.size());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      rawVariable0.setCategory((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "user.status.saveChanges";
      rawVariable0.form = "";
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.columnStart = "";
      User user0 = new User("CANCEL", "user.status.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getValueLabels();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      String string0 = derivedVariable0.getFilePath();
      assertNotNull(string0);
      
      derivedVariable0.removeSourceVariable((Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("zwjy`\"Sps;Q[,&6`");
      rawVariable0.getName();
      assertEquals("zwjy`\"Sps;Q[,&6`", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.5338841398510814
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = null;
      user0.setAddressLine2("UNABLE_TO_GET_ORIGINAL_VARIABLE");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(rawVariable0.isNewRecord());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("variable.isCoded.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("variable.isCoded.label", derivedVariable0.getAvailability());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getLabel();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }
}
