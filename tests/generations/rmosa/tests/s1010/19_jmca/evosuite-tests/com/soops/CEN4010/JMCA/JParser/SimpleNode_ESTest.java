/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 10:15:40 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.jjtOpen();
      String string0 = "";
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode1 = new SimpleNode(17);
      simpleNode1.jjtAddChild(simpleNode0, 2138);
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter0 = new StringWriter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      stringWriter0.append((CharSequence) "|8<H");
      SimpleNode simpleNode2 = new SimpleNode(2124);
      Node node0 = null;
      simpleNode1.identifiers = null;
      simpleNode0.jjtGetParent();
      simpleNode2.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('f');
      simpleNode0.dump(".", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump("w`P:t(", stringWriter1);
      assertEquals("f<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
      assertEquals("f<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode1.toString("|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append(',');
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals(",<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      assertEquals(",<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("+", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>*amp</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = new StringWriter(18);
      StringWriter stringWriter2 = stringWriter1.append('/');
      simpleNode0.dump("*ge", stringWriter2);
      assertEquals("/<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter2.toString());
      assertEquals("/<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "|";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*amp</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("|ZTMqe;B9ZdYGf", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*lshft</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('-');
      simpleNode0.dump("FdwNhU%z'=", stringWriter0);
      assertEquals("-<EnumConstant>\n  <identifier>*rshft</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1);
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.dump("FormalParameters", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 2009);
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode((-1436197818));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter2 = stringWriter1.append('*');
      simpleNode0.dump("FormalParameters", stringWriter2);
      simpleNode1.jjtAddChild((Node) null, 1);
      simpleNode1.jjtAddChild((Node) null, 2009);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-1436197818));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1436197818
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(" ");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtAddChild(simpleNode0, 573);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetChild(0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(574, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("jyYu%3A", stringWriter0);
      Node node0 = simpleNode0.parent;
      assertNull(node0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9989882219111638
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1);
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.toString();
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = 'P';
      charArray0[2] = 'M';
      charArray0[3] = '~';
      charArray0[4] = '1';
      stringWriter0.write(charArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.jjtAddChild(simpleNode0, 1);
      simpleNode0.setIdentifier(">");
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtAddChild(simpleNode0, 97);
      assertEquals(98, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9248749046381198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode1.setIdentifier("<");
      simpleNode1.setIdentifier(">=");
      simpleNode0.id = 1824;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('6');
      stringWriter1.write("");
      simpleNode1.dump(";NlJLdwKC_K?1:4", stringWriter1);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump(">=", stringWriter1);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("2(", stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-450));
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.identifiers = arrayList0;
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)20;
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)122;
      simpleNode0.jjtAddChild(simpleNode0, (byte)2);
      byteArray0[3] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.parent = (Node) simpleNode0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -450
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(94);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      simpleNode0.jjtAddChild(nodeArray0[3], 6);
      assertEquals(7, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      SimpleNode simpleNode1 = new SimpleNode((-2013990159));
      simpleNode0.jjtSetParent(simpleNode1);
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.parent;
      simpleNode0.jjtAddChild(simpleNode2, 9);
      simpleNode0.jjtGetChild(9);
      assertEquals(10, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.83823771269426
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "X&");
      SimpleNode simpleNode0 = new SimpleNode(37);
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode1.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.setIdentifier("=");
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("X&", stringWriter0);
      simpleNode1.dump((String) null, stringWriter1);
      assertEquals("<NameList>\n  <identifier>*lt</identifier>\n  <identifier>=</identifier>\n</NameList>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("NameList : =", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1380);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1380);
      simpleNode0.jjtGetChild(0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1381, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4971098265895954
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      int int0 = 120;
      simpleNode0.jjtAddChild(simpleNode0, 120);
      simpleNode0.jjtAddChild(simpleNode0, 120);
      StringWriter stringWriter0 = new StringWriter(10);
      String string0 = ";fgu'K&+VrHSL1a)nv?";
      // Undeclared exception!
      simpleNode0.dump(";fgu'K&+VrHSL1a)nv?", stringWriter0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1);
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.toString();
      char[] charArray0 = new char[5];
      charArray0[1] = 'P';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      stringWriter0.write(charArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.jjtAddChild(simpleNode0, 1);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("xN", stringWriter1);
      assertEquals(2, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(94);
      simpleNode0.toString();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append('&');
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      charArray0[0] = '&';
      charArray0[2] = '&';
      stringWriter1.write(charArray0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("RSIGNEDSHIFT", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 591;
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 591);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.parent = (Node) simpleNode0;
      Node node0 = simpleNode0.jjtGetParent();
      assertSame(simpleNode0, node0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('f');
      simpleNode0.dump(".", stringWriter1);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump("8LRFm", stringWriter1);
      Node node1 = simpleNode0.jjtGetParent();
      assertNull(node1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(119);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-251));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2561));
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(77);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 77
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 108;
      SimpleNode simpleNode0 = new SimpleNode(108);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      String string0 = "\"?\"";
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"?\"", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 108
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9686421518854049
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      String string0 = ">=";
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "<=");
      simpleNode0.dump(">=", stringWriter2);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1103981311));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2322);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      String string0 = "jc!90Ysu";
      simpleNode0.setIdentifier("jc!90Ysu");
      SimpleNode simpleNode1 = new SimpleNode((-1654));
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "jc!90Ysu", (-85), (-4693));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(110);
      // Undeclared exception!
      try { 
        simpleNode0.toString("*ge");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 110
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9877809078662663
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<J=");
      Node node0 = simpleNode0.parent;
      simpleNode0.dump("E':m#d_67", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n  <identifier><J=</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      simpleNode0.toString();
      simpleNode0.toString("LMx-_L*c<X41l~>]&");
      String string0 = simpleNode0.toString("LMx-_L*c<X41l~>]&VariableDeclaratorId : < : <J=");
      assertEquals("LMx-_L*c<X41l~>]&VariableDeclaratorId : < : <J=VariableDeclaratorId : < : <J=", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9510567829046702
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      SimpleNode simpleNode1 = new SimpleNode(9);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtOpen();
      simpleNode0.setIdentifier("u");
      simpleNode1.parser = null;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode1.dump("u", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>u</identifier>\n</EnumBody>\n", stringWriter0.toString());
      
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append('H');
      StringReader stringReader0 = new StringReader(".");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      simpleNode0.dump(".", stringWriter2);
      Node node0 = simpleNode0.parent;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(".");
      simpleNode0.dump("m", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1969457512));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-764));
      Node[] nodeArray0 = new Node[1];
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -764
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(119);
      simpleNode0.jjtAddChild(simpleNode0, 119);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-816));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -816
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
