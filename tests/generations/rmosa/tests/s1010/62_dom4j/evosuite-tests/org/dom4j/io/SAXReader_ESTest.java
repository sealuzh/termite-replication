/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 10:15:29 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.SyncFailedException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEncoding("GOYXf{IVi/5*wv");
      sAXReader0.getEncoding();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.343589323928488
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("//tmp/MQ!5&[;80.tmp");
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) null, "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("k:W)Br}bu@Z5/RFQC");
      URL uRL0 = MockURL.getHttpExample();
      // Undeclared exception!
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler((XMLReader) null);
      sAXReader1.setErrorHandler(sAXContentHandler0);
      sAXReader0.setIgnoreComments(true);
      sAXReader1.getErrorHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEncoding("//home/ubuntu/termite/projects/62_dom4j/whkWjsD6Bh[|iPK9/whkWjsD6Bh[|iPK90whkWjsD6Bh[|iPK9");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      MockURL.getFileExample();
      String string0 = "XPath expression uses unbound namespace prefix ";
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.setProperty("XPath expression uses unbound namespace prefix ", xMLFilterImpl1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.isStringInternEnabled();
      sAXReader0.getDocumentFactory();
      try { 
        MockURI.URI("", "", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEncoding("//tmp/V4\"k|TzXccKAg7znu0http:/xml.org/sax/features/use-locator2");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      String string0 = "y3Ei\\9DXLM7&gTJ";
      String string1 = "b'aTIt:%_cY;]jb";
      // Undeclared exception!
      try { 
        sAXReader0.read("Validation not supported for XMLReader: ");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEncoding("//tmp/V4\"k|TzXccKAg7znu0http:/xml.org/sax/features/use-locator2");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      DefaultDocument defaultDocument0 = new DefaultDocument("//tmp/V4\"k|TzXccKAg7znu0http:/xml.org/sax/features/use-locator2");
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      File file0 = MockFile.createTempFile("y3Ei9DXLM7&gTJ", "b'aTIt:%_cY;]jb");
      // Undeclared exception!
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createDefaultEntityResolver("/");
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      StringReader stringReader0 = new StringReader(")");
      InputSource inputSource0 = new InputSource(stringReader0);
      inputSource0.setPublicId("|H");
      inputSource0.setSystemId(")");
      defaultDocumentFactory0.createElement("BLfN,");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/) : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      Object object0 = new Object();
      Object object1 = new Object();
      try { 
        sAXReader0.setProperty("http://xml.org/sax/properties/lexical-handler", object1);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // The value specified for property 'http://xml.org/sax/properties/lexical-handler' cannot be casted to org.xml.sax.ext.LexicalHandler.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.052754235510318
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      String string0 = "http://xml.org/sax/features/use-locator2";
      StringReader stringReader0 = new StringReader("http://xml.org/sax/features/use-locator2");
      HandlerBase handlerBase0 = new HandlerBase();
      sAXReader0.setErrorHandler(handlerBase0);
      InputSource inputSource0 = new InputSource(stringReader0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("gz-+uu)", "gz-+uu)");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("//tmp/tmp/G(&>4|[AvtTWiQ0/tmp/http:/xml.org/sax/features/use-locator20http:/xml.org/sax/features/use-locator20y3Ei9DXLM7&gTJ", "//tmp/tmp/G(&>4|[AvtTWiQ0/tmp/http:/xml.org/sax/features/use-locator20http:/xml.org/sax/features/use-locator20y3Ei9DXLM7&gTJ");
      // Undeclared exception!
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0547452758288847
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLReader();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      sAXReader0.createDefaultEntityResolver("kfI");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byteArray0[0] = (byte)58;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = "http://xml.org/sax/features/namespace-prefixes";
      sAXReader0.setEncoding("http://xml.org/sax/features/namespace-prefixes");
      byteArrayInputStream0.reset();
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"HTTP://XML.ORG/SAX/FEATURES/NAMESPACE-PREFIXES\". Nested exception: Invalid encoding name \"HTTP://XML.ORG/SAX/FEATURES/NAMESPACE-PREFIXES\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "Location path cannot end with //");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.setFeature("http://xml.org/sax/features/namespaces", false);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(":}nypM");
      sAXReader_SAXEntityResolver0.resolveEntity(":}nypM", ":}nypM");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      String string0 = " : ";
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, " : ");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      URL uRL0 = MockURL.getFileExample();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@11f7a827 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@11f7a827 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      try { 
        sAXReader0.read("org.dom4j.dom.DOMDocument");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.setMergeAdjacentText(true);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.1982462795335826
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.getDocumentFactory();
      dispatchHandler0.removeHandler(";#i-(|]CC:aVg~Eb0d(");
      dispatchHandler0.getHandler(";#i-(|]CC:aVg~Eb0d(");
      sAXReader0.addHandler(";#i-(|]CC:aVg~Eb0d(", (ElementHandler) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("QHwUJ+g>w");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("QHwUJ+g>w", "QHwUJ+g>w");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: QHwUJ+g>wQHwUJ+g>w Nested exception: no protocol: QHwUJ+g>wQHwUJ+g>w
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, (DefaultHandler) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@1af8e259 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      try { 
        sAXReader0.setProperty("//http:/xml.org/sax/features/string-interning/.4jN'C#yvbtL8~OV4s0http:/xml.org/sax/features/string-interning", xMLFilterImpl0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: //http:/xml.org/sax/features/string-interning/.4jN'C#yvbtL8~OV4s0http:/xml.org/sax/features/string-interning
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      StringReader stringReader0 = new StringReader("xmlns=\"");
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      sAXReader0.setEncoding("//tmp/tmp/http:/xml.org/sax/features/validation0/home/ubuntu/termite/projects/62_dom4j/org.dom4j.io.SAXReader$SAXEntityResolver/org.dom4j.io.SAXReader/org.dom4j.io.SAXReader$SAXEntityResolver0http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/namespace-prefixes");
      stringReader0.read(charArray0);
      try { 
        sAXReader0.read((Reader) stringReader0, "tTW?lE#Ns[L\"e[");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document tTW?lE#Ns[L\"e[ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setStringInternEnabled(true);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      try { 
        sAXReader0.read("7%W@O");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read("http://xml.org/sax/features/validation");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getErrorHandler();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.isValidating();
      sAXReader0.isIncludeInternalDTDDeclarations();
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.getDocumentFactory();
      sAXReader0.isValidating();
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType("If8Ff8AEO&/z>", "2.0");
      DOMDocument dOMDocument0 = new DOMDocument(dOMDocumentType0);
      sAXReader0.installXMLFilter((XMLReader) null);
      sAXReader0.getDocumentFactory();
      sAXReader0.createXMLReader();
      String string0 = "<?";
      try { 
        sAXReader0.setFeature("<?", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature '<?' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      sAXReader0.getEncoding();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      sAXReader0.setDocumentFactory(documentFactory0);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      try { 
        sAXReader0.setXMLReaderClassName("//org.dom4j.DocumentException/org.dom4j.DocumentException0");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //org.dom4j.DocumentException/org.dom4j.DocumentException0 not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      String string0 = "hCO$ZnhA8n";
      StringReader stringReader0 = new StringReader("org.dom4j.io.SAXReader$SAXEntityResolver");
      try { 
        sAXReader0.read((Reader) stringReader0, "hCO$ZnhA8n");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/hCO$ZnhA8n : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getErrorHandler();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("-->");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@1c282ddc Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@1c282ddc Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jaxen.dom4j.DocumentNavigator$Singleton");
      MockFile mockFile0 = new MockFile("org.jaxen.dom4j.DocumentNavigator$Singleton", "$<KpJdN[E_f<;");
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.addHandler("http://xml.org/sax/features/namespaces", pruningDispatchHandler0);
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockFile mockFile1 = new MockFile(uRI1);
      try { 
        sAXReader0.read((File) mockFile1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("Error on line ");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity(" asC&@pe1Id", "UC_~hY}7j-H>W");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("sZh)%6}");
      sAXReader_SAXEntityResolver0.resolveEntity("sZh)%6}", "sZh)%6}");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("http://xml.org/sax/handlers/LexicalHandler");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("http://xml.org/sax/handlers/LexicalHandler", "http://xml.org/sax/handlers/LexicalHandler");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.getDispatchHandler();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      assertNotNull(dispatchHandler0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("=TH|&fXcl7 '", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class =TH|&fXcl7 ' not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      try { 
        sAXReader0.read((Reader) null, "(\"mNbo5?B");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      MockURL.getFileExample();
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) null, "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.removeHandler((String) null);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLReader(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      try { 
        sAXReader0.setFeature((String) null, true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: null
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertNotNull(dispatchHandler0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.resetHandlers();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile((File) null, "class");
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      sAXReader0.setValidation(false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)58;
      pipedInputStream0.close();
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)8;
      try { 
        pipedOutputStream0.write((int) (byte) (-64));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe closed
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      URL uRL0 = MockURL.getFileExample();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createDefaultEntityResolver("//org.dom4j.DocumentException/org.dom4j.DocumentException0");
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      StringReader stringReader0 = new StringReader("http://xml.org/sax/features/use-locator2");
      InputSource inputSource0 = new InputSource(stringReader0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      XMLReader xMLReader0 = sAXReader0.createXMLReader();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.configureReader(xMLReader0, defaultHandler0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.configureReader(xMLFilterImpl0, defaultHandler0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertNotNull(documentFactory0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.isMergeAdjacentText();
      String string0 = "//home/ubuntu/termite/projects/62_dom4j/V&zdYc/hCgO!]nx3p/home/ubuntu/termite/projects/62_dom4j/http:/xml.org/sax/features/string-interning/ of document /http:/xml.org/sax/features/string-interning00<NAk}db-Z+`";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("//home/ubuntu/termite/projects/62_dom4j/V&zdYc/hCgO!]nx3p/home/ubuntu/termite/projects/62_dom4j/http:/xml.org/sax/features/string-interning/ of document /http:/xml.org/sax/features/string-interning00<NAk}db-Z+`");
      char[] charArray0 = new char[4];
      charArray0[0] = '|';
      charArray0[1] = '[';
      charArray0[3] = '*';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-2307), 3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isValidating());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createXMLReader();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      File file0 = MockFile.createTempFile("processing-instruction", "processing-instruction");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      InputSource inputSource0 = new InputSource("Text nodes cannot have children");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      InputSource inputSource0 = new InputSource();
      // Undeclared exception!
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile("GYac'Mfc3$b&at+|E&");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("X}8,se'");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class X}8,se' not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createDefaultEntityResolver("");
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createDefaultEntityResolver("6AmcX;;+qt{!2");
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createDefaultEntityResolver((String) null);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-470));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
