/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 10:05:32 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.consume((-2160));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.894901260822323
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fih6X");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-1122));
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">GJPcT]YU_kt`8ADr+");
      int int0 = (-1320);
      xPathLexer0.consume((-1320));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6947120145221493
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">GJPcT]YU_kt`8ADr+");
      xPathLexer0.whitespace();
      Token token0 = new Token(25, "<xbK#O~", 25, 25);
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">GJPcT]YU_kt`8ADr+");
      xPathLexer0.consume((-1320));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1222));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-58));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("tW<$~q'kVutd0!p$-");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NGCzzF*eXj~;r=bm<h");
      xPathLexer0.consume((-1382));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.891722433292198
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-178));
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer2.consume((-1356));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer2.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.797208748908024
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ d");
      Token token0 = xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.doubleColon();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7964122534878726
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-2145));
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.getPreviousToken();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1986));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8918711764128284
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.consume((-943));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.43570606742266
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-179));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NGCzzF*eXj~;r=bm<h");
      xPathLexer0.number();
      xPathLexer0.consume((-1215));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.identifier();
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(22, token1.getTokenType());
      assertEquals("#:", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("gPeM1");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("eM1", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">GJPcT]YU_kt`8ADr+");
      xPathLexer0.consume((-1320));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[0(");
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-179));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$n=t.");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("n", token1.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3160121893823327
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.setXPath("o5!>2>Wn!U");
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8770548985762503
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.consume((-1187));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3:4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("3", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.endPosition();
      char char0 = xPathLexer0.LA(1);
      assertEquals('4', char0);
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6653274706977697
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("FjtI*]|vO.)Pq;c|");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("tI", token0.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("19n");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6903752622677266
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.setXPath("V");
      Token token0 = xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("1{n");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{n", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.796091586500539
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.consume(102);
      xPathLexer0.consume((-843));
      xPathLexer0.at();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("( lh");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("lh", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fzh)");
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("XkZYB");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ZYB", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3B4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B4", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3K=$xQu.fk88C_C?mRg");
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-1647));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("3EX<U");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("EX<U", token2.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tx-8Qx&/'XA?4?3/G");
      XPathLexer xPathLexer1 = new XPathLexer("=YqI*s8a9+ ");
      Token token0 = xPathLexer1.slashes();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("YqI", token1.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/0Sw ");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|O($*M9+e/{H");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3651475759077356
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NGCzzF*eXj~;r=bm<h");
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("CzzF*eXj~;r=bm<h", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("CzzF", token5.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.576903470613846
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tx-8Qx&/'XA?U?3/G");
      xPathLexer0.setXPath("J(:.6y)~fLw)xssy>");
      XPathLexer xPathLexer1 = new XPathLexer("Tx-8Qx&/'XA?U?3/G");
      xPathLexer0.whitespace();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-2739));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k|w*f");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("k", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&h22>\"XA[N1AXvi");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("j(/-TRVL?;5}n");
      Token token0 = xPathLexer0.slashes();
      xPathLexer2.setPreviousToken(token0);
      assertEquals("&", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer2.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6800059213419716
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5778741435607135
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("i*@h%/7.j");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("o.5KWIoT", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.and();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("j,TUI2<|1GgR*");
      xPathLexer1.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6387984441330472
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer2.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("G", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("G", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.consume((-1222));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = new Token(108, "", (-2203), (-580));
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.currentPosition();
      xPathLexer0.consume((-1));
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.2718609202019353
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("1Q+5y/T5gZ~V&(f");
      xPathLexer1.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer1.endPosition();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token4 = xPathLexer1.plus();
      assertEquals("5", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(12, token5.getTokenType());
      assertEquals("y/", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals("c", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("o", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals("T5gZ", token8.getTokenText());
      
      xPathLexer0.consume();
      Token token9 = xPathLexer0.pipe();
      assertEquals(".", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer2.leftParen();
      assertEquals(1, token11.getTokenType());
      
      Token token12 = xPathLexer2.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      xPathLexer2.setXPath("X;9'-m!");
      Token token13 = xPathLexer0.identifierOrOperatorName();
      assertEquals("werken.saxpath.Token", token13.getTokenText());
      assertEquals(15, token13.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.694579074690717
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.literal();
      xPathLexer0.setXPath("Sz//>3sT/4q-g9N");
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("lsq,@");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("q", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.85465319760332
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NGCzzF*eXj~;r=bm<h");
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("NGCzzF", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Xj~;r=bm<h", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("X", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      assertEquals("j", token6.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.2554536504351737
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.247055484962634
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.or();
      Token token0 = xPathLexer0.dollar();
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("5", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer2.rightBracket();
      xPathLexer2.setPreviousToken(token0);
      assertEquals("G", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertNull(token1);
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("M$w?Aan}tO8C");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4413229930920104
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^T*");
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.LA(1581);
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("$@?mH<uhS`JO");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?mH<uhS`JO", token1.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A#amUJ");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I");
      xPathLexer0.or();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3492497075678926
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.or();
      Token token0 = xPathLexer0.pipe();
      assertEquals("o", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("5", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("KWIoT", token3.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("ADv&^N$,Wu*");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7048646814282158
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      Token token0 = xPathLexer0.equals();
      assertEquals("o", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("KWIoT", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tx-8Qx&/'XA?U?3/G");
      XPathLexer xPathLexer1 = new XPathLexer("J(:.6y)~fLw)xssy>");
      Token token0 = xPathLexer1.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("J", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.2061604931524075
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*0:i[6Y1Z ");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.consume((-152));
      xPathLexer0.at();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.576447529703788
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("X3slVmW[");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("slVmW", token1.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("5WL,o:rwnas]<p");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("L", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.2109897464615507
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.dollar();
      assertEquals(")", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("xHg5a(In9EM");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("g5a", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("iVaFHg4");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("aFHg4", token0.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.913412970625545
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3248052375960606
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer(".7M ");
      xPathLexer1.div();
      xPathLexer1.setXPath("xxG+Ulh|{CXaJ`$");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("xxG", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("Zs` @8OX");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("` @8OX", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("Q@VM*(YiT16^4XAQz");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("VM", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.603027784349623
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("o5!25dUWn{U");
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("/_%gpU|YR[*IS");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%gpU|YR[*IS", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">GJPcT]YU_kt`8ADr+");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("UB=7!US");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.not();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/zh)");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.673877711576594
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.literal();
      xPathLexer0.setXPath("<[U&+D|4yUL|2");
      Token token0 = xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("<[U&+D|4yUL|2");
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.576953979490781
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("Jn$7jN'\"9<");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(26, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("7jN", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.4401630226185316
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dfup,`^BJUhEb");
      xPathLexer0.setXPath("9\"c)");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("h]ZP>n");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("Ha8Bg/$'iiD}");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("J(:.6y)~fLw)xssy>");
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1041));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.316556199827333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.setXPath("o5!>2>Wn!U");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("5!", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("W", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(26);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1900752391253218
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0M ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".0", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M ", token1.getTokenText());
      
      xPathLexer0.operatorName();
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.2046410249662727
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*0:i[6Y1Z ");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("0", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.3652847581837855
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NGCzzF*eXj~;r=bm<h");
      Token token0 = xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("nvP*qv");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("P", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1011942032995437
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("ej1MD]5JVF+mku[");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.4384474624881487
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.endPosition();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("a");
      assertEquals("a", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.7187659506584838
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R.H&%}e");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R.H&%}e");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("R-R.H", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("G", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.6668998100736272
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer2.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals("o.", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("5", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3177620806357537
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.277027544623369
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dfup,`^BJUhEb");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("M_c&0SRw'r/c@$P $uV");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("x7-&'S");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2996064049927107
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("P{.;\"");
      Token token1 = xPathLexer0.comma();
      assertEquals("P", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals(";\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3636712824343258
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NGCzzF*eXj~;r=bm<h");
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("GCzzF*eXj~;r=bm<h", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("G", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("C", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.5772956189330545
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("rFycPi[^xfRlTE");
      xPathLexer1.div();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("o5!25dUWn{U");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("0_X");
      xPathLexer1.consume();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_X", token0.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1707992272539567
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.dollar();
      assertEquals(")", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.setXPath("6:x9,d8{k:d$MH{pPd6");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(":", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.3424068563219858
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]OWSr#`K~B(~");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("z&jzJ{DY]_5@?F#EBy1");
      Token token2 = xPathLexer0.minus();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("z", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.setPreviousToken(token2);
      assertEquals("`", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.6770621983982488
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5466956172845236
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1888050876841882
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.or();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".5", token1.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0998680000909875
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1682874533136112
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.7044278318843382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("f2@8('3");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.3822835632631516
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QDv_U;`w");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1041));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("aAy<{L1kNJ");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.6870204957035666
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.consume(102);
      xPathLexer0.consume((-843));
      xPathLexer0.at();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*");
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.consume((-1081));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Q]DV_U;`w");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("Q", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.3526025342559767
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.getPreviousToken();
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("%OS=7{XakESon0:");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("S", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1719980284527578
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.dollar();
      assertEquals(")", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("B2yzF413P(y6Pf$89");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.number();
      assertEquals("2", token1.getTokenText());
      
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer1.getXPath();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*Xfc5#]^clPwwS9$H%j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pw*");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("pw", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.4006406733082883
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NGCzzF*eXj~;r=bm<h");
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals("NGCzzF*eXj~;r=bm", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(21, int0);
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.or();
      char char0 = xPathLexer0.LA(17);
      assertEquals('h', char0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R.H&%}e");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R.H&%}e");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("G", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("R-R.H&%}e", token1.getTokenText());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HI{/oR,KKK.G)}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("HI", token0.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(5t");
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.dots();
      assertEquals("(", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setXPath("{");
      Token token2 = xPathLexer0.leftParen();
      assertEquals("{", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.setXPath("(5t");
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.consume((-1320));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.1726091820050877
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.and();
      Token token0 = xPathLexer0.dollar();
      assertEquals(")", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1007233460029373
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.minus();
      assertEquals(">", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(103);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5289774164695733
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("Xk,`ZfZi3p'eFh!eS");
      Token token1 = xPathLexer1.rightParen();
      assertEquals("X", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("+R", token2.getTokenText());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(32, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("-R7H", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("&", token6.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setXPath("{Wdk|0bKGBa=G6h@,!");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("dk", token0.getTokenText());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.2841453303229993
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o.5KWIoT>(b?NJ");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("o.5KWIoT", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.140457163545045
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.dollar();
      assertEquals(")", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("mu_Et", token2.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.2560648039875038
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer(".7M ");
      xPathLexer1.div();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".7", token0.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.2886417449818408
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer(".7M ");
      xPathLexer1.div();
      Token token0 = xPathLexer1.minus();
      assertEquals(".", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("7", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.025486196824915
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals("#", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("A", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.7959184263273786
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('<');
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.9824190875989465
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.consume((-3155));
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.5723992881587088
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("*KqtUg");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.setXPath("jWpLDoe?&(>!-n8`");
      XPathLexer xPathLexer1 = new XPathLexer("jWpLDoe?&(>!-n8`");
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.getXPath();
      Token token3 = xPathLexer2.not();
      assertEquals(23, token3.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierChar('R');
      xPathLexer0.setXPath("<MA5 T\"");
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1710));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.7959184263273786
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('8');
      assertFalse(boolean0);
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierStartChar('R');
      xPathLexer0.setXPath("<A5 T");
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1710));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.3528911345445769
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.179266771397816
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(">)", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("u_Et", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.0987133609157298
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9830420371921524
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3:4");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.star();
      assertEquals(":", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("4", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.437138219230752
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("6D2VO<ej:mO");
      xPathLexer1.consume();
      xPathLexer0.number();
      xPathLexer1.setXPath(") (");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.number();
      String string0 = xPathLexer1.getXPath();
      assertEquals(") (", string0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0250421963809144
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.0865974166113779
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(".:ITM4`NqX 7VIwBf=");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(":", token3.getTokenText());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.0641410394960982
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals("#", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("A", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.1795943717254165
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.minus();
      assertEquals(">", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("m", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("u_Et", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.0242075879513692
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals("#", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.0411845001667415
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      String string0 = "[ (";
      xPathLexer0.setXPath("[ (");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-609));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=2.8954322186111785
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~A_0E");
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.currentPosition();
      xPathLexer0.div();
      xPathLexer0.consume((-1526));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.0230740153082558
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.setXPath("#:A");
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.0981208736542059
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.div();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=2.285265962734548
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.hasMoreChars();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.1007624100288758
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.0589930836437873
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.minus();
      assertEquals(">", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.setXPath("(");
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.021102739611269
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.consume(94);
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.0249187243473301
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals("#", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("A", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.9790704059864788
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3:4");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("3:", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("4", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.1047866352018496
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.0236873868069267
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-221));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.137464984014273
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">)mu_Et");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=1.0643141996692582
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals("#", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.0647836097772225
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=1.0234944483542932
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 185
  /*Coverage entropy=1.066134808966503
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("A", token2.getTokenText());
      
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=0.9812341275876326
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3:4");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(":", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.9429349591861339
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3:4");
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 188
  /*Coverage entropy=1.0246543489342435
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(":", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=1.1059466056753284
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 190
  /*Coverage entropy=1.0242075879513692
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.dollar();
      assertEquals("#", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("A", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=1.0245126054898777
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#:A");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(":", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("A", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=0.9422872068866133
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3:4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("3", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
  }
}
