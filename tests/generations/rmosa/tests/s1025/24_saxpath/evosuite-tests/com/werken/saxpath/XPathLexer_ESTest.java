/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 06:53:58 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.20490554701416
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.consume((-2504));
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.892012919857194
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0o?o+\"WSJQD");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-1130));
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.getPreviousToken();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      int int1 = xPathLexer0.currentPosition();
      assertEquals((-1129), int1);
      
      char char0 = xPathLexer1.LA(12);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer1.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer1.getPreviousToken();
      Token token2 = xPathLexer1.identifier();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.consume((-2046));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("9dZdi(OCOZrtC");
      xPathLexer0.endPosition();
      Token token0 = new Token((-1), "9dZdi(OCOZrtC", 13, 13);
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-300));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7964122534878726
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-2844));
      xPathLexer0.star();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4298732448210676
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("9dZdi(OCOZrtC");
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
      
      Token token0 = new Token((-1), "9dZdi(OCOZrtC", 13, 13);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("9", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.76837574741133
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("9dZdi(OCOZrtC");
      xPathLexer0.endPosition();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertEquals("Z", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("i(OCOZrtC", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(83);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.consume((-1119));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4394166425618065
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K![anmJ#F<D");
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.consume((-1303));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o[");
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.consume((-361));
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume((-2844));
      xPathLexer0.star();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1479));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2904623542790858
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7995910810179976
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath(".`-X)^\fAv&");
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token2 = xPathLexer0.star();
      assertEquals(".", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.dots();
      assertEquals("`", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(6, token4.getTokenType());
      assertEquals("-", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("X", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4382178413630053
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("(3Q3L-kyL");
      xPathLexer1.setXPath("7Ow#;D7UxK");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7994795029319337
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!=oL<x_9");
      Token token0 = xPathLexer0.dots();
      assertEquals("!", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("oL", token1.getTokenText());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(21, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("<x", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2974));
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7994404389059953
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W0nm\"@M.");
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.consume((-1429));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      int int0 = xPathLexer0.endPosition();
      assertEquals(8, int0);
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Jw", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(17, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5570290363346173
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1873));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5360918478999213
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      xPathLexer0.consume((-2356));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.694737015147165
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yd,_5Y'4#9#Mk 2s");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifier();
      assertEquals("yd", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("_5Y", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9841362337633477
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) (co)", string0);
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.endPosition();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8J`RmN.d,|0~|A");
      xPathLexer0.setXPath("q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("y^cmj=P,?P~8?<^~/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.operatorName();
      xPathLexer0.consume((-582));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5609628629882408
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N512R!<:BhL");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("N5", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("12", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.dots();
      assertEquals("<", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2573600009653774
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      Token token0 = xPathLexer0.number();
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(".", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("C", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.561201124877607
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      Token token0 = xPathLexer0.dots();
      assertEquals("!", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("ZIz", token1.getTokenText());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("$", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(",Q", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8091902329882668
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      xPathLexer0.mod();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.minus();
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.nextToken();
      xPathLexer0.at();
      Token token0 = xPathLexer3.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("j");
      xPathLexer0.endPosition();
      Token token0 = new Token(88, "9dZdi(OCOZrtC", 99, 99);
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      assertNotNull(token1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVO[");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      xPathLexer0.setXPath("O EucGiy=scYUaR");
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      XPathLexer xPathLexer1 = new XPathLexer("O EucGiy=scYUaR");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("O", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.437138219230752
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1917));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}#,OOb!TMum(l1T*`}");
      xPathLexer0.setXPath("T;kP(*L");
      xPathLexer0.endPosition();
      Token token0 = new Token(0, (String) null, 0, (-1));
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.890202965106063
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer1.mod();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("77s45");
      Token token0 = xPathLexer0.number();
      assertEquals("77", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4072999464879983
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1F6s3V-I7f{&");
      Token token0 = xPathLexer0.equals();
      assertEquals("<", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("1F", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("3", token4.getTokenText());
      
      xPathLexer0.number();
      Token token5 = xPathLexer0.dots();
      assertEquals("V", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("SMYB6*%rMO");
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token0 = new Token(10, "", 742, (-1370));
      Token token1 = xPathLexer0.nextToken();
      assertEquals("SMYB6", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.consume((-35));
      xPathLexer0.rightParen();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("&pUQ5=^ 7:V");
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-3201));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5925333729745597
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.setXPath("FH0<@(<6Ap/!");
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dots();
      assertEquals("H", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("0", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("(", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token6);
      assertEquals("", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1825459192270478
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.setXPath(">C8;Ows,Yhzw?SdG\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5343492122122904
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("o", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.slashes();
      assertEquals("?", token3.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.872015201769295
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hb~5=jk>KsA");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.dollar();
      assertEquals("b", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (h)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.setXPath("hb~5=jk>KsA");
      Token token3 = xPathLexer0.identifier();
      assertEquals("hb", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("~", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.consume((-1470));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.753477912500621
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rhSB4a +p~rB");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.and();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("4", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("a +p~rB", token4.getTokenText());
      
      char char0 = xPathLexer0.LA(1762);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.P>d#=,`v]lg!");
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals("5.", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("KX", token0.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rhSB4a +p~rB");
      xPathLexer0.dots();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("e");
      xPathLexer1.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4406469911605764
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath("tFd7p $");
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("tFd7p $", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(83);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V,;j0y?I1");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("V,;j0y?I1");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("V", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7535141306060518
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rhSB4a +p~rB");
      Token token0 = xPathLexer0.dots();
      assertEquals("r", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.dots();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("p", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4401630226185316
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("FH0<@(<6Ap/!");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("f bJ^fXt:T!uz'H7_");
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      Token token0 = new Token(17, "", 122, (-1));
      Token token1 = xPathLexer0.nextToken();
      assertEquals("f", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.setXPath("bt+4&c[~7u'nz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("bt", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g_/`= QyZIp.");
      Token token0 = xPathLexer0.slashes();
      assertEquals("g", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(12, token1.getTokenType());
      assertEquals("_/", token1.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8934361943424536
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6Ckg4_X aL/K9");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("k", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("g4_X", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("aL/K9", token3.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("a", token4.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5993519285050164
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("dJw:;Y'g");
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifier();
      assertEquals("dJw", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4984788667043731
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("FH0<@(<6Ap/!");
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dots();
      assertEquals("H", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("@", token5.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g_/`= QyZIp.");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume((-35));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%;7$:RE)[ml|%`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%;7$:RE)[ml|%`", token0.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n#4 2nef\"QA");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJ9:MY'g");
      XPathLexer xPathLexer1 = new XPathLexer("dJ9:MY'g");
      xPathLexer1.setXPath("YX+U;j/,3");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("YX", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.9067065704468145
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%[''Hv%");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("%", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("[", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.endPosition();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals(27, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(8, int0);
      
      char char0 = xPathLexer0.LA(8);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("C8", token1.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJ9:MY'g");
      xPathLexer0.setXPath("v3!;\"P>+.]E_B7}3AM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("v3", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U$PAH ^owa");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.3291558810687691
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>C8;Ows,Yhw?SdG\"");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("<>C8;Ows,Yhw?SdG\"");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(">", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.LA(2);
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("C8", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4024746126443481
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xR|Ez+GaT2o");
      Token token0 = xPathLexer0.slashes();
      assertEquals("x", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("R", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.slashes();
      assertEquals("E", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(30);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.444143364603016
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DmU9KrRooCet>0~zT#");
      Token token0 = xPathLexer0.identifier();
      assertEquals("DmU9KrRooCet", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",RURO2NeM~VzvU");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.4094773356622916
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1F6s3V-I7f{&");
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("F", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("6", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("s3V-I7f", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.628025052216338
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      Token token0 = xPathLexer0.identifier();
      assertEquals("dJw", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(":;", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Y", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.star();
      assertEquals("'", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.3015402189725869
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N512R!<:BhL");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("N512R", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]%+RT6|h");
      xPathLexer0.setXPath("]%+RT6|h");
      int int0 = xPathLexer0.endPosition();
      assertEquals(8, int0);
      
      Token token0 = new Token(26, "", 8, 106);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9323314600521833
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%[''Hv%");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("%", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("''", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.setXPath("5QxipQHa*2!}");
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("Hv", token6.getTokenText());
      
      Token token7 = xPathLexer0.colon();
      assertEquals("5", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.LA(1);
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3240739226918627
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      Token token0 = xPathLexer0.colon();
      assertEquals("2", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.setXPath("zx?");
      Token token1 = xPathLexer0.at();
      assertEquals("z", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("x", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("?", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8019942990362092
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ktPG<Pp}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ktPG", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("<", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Pp}", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.endPosition();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.595289523337613
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^mx#xhkAQ6=,_z1-X5");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("^", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("x", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("#xhkAQ6=,_z1-X5", token4.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wji 0]H3DYLpib");
      xPathLexer0.setXPath("Wji 0]H3DYLpib");
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
      
      Token token0 = new Token(14, "9dZdi(OCOZrtC", (-1), (-1));
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Wji", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJ9:MY'g");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("J9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.641566954010485
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("9dZdi(OCOZrtC");
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.dollar();
      assertEquals("9", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = new Token((-1), "9dZdi(OCOZrtC", 13, 13);
      Token token2 = xPathLexer0.nextToken();
      assertEquals("dZdi", token2.getTokenText());
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.literal();
      assertNotNull(token4);
      assertEquals(27, token4.getTokenType());
      assertEquals("OZrt", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('t', char0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5vtN: cz");
      Token token0 = xPathLexer0.number();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.0961464284102855
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (20) (m)", string0);
      
      Token token2 = xPathLexer0.colon();
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer0.endPosition();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.2566839990339433
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      Token token0 = xPathLexer0.colon();
      assertEquals("2", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("8", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("C", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5615036126058037
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("o", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.nextToken();
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.setXPath("-");
      xPathLexer0.endPosition();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?^Bd*FI^$`8 YP|4+l");
      xPathLexer0.setXPath("A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*");
      xPathLexer0.setXPath("*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^mx#xhkAQ6=,_z1-X5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^mx#xhkAQ6=,_z1-X5", token0.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.627601424373398
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("dJw", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";Y'g", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.star();
      assertEquals(";", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.396294756416447
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (m)");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("[ (20) (m)");
      xPathLexer2.nextToken();
      xPathLexer2.at();
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.198482533284913
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.currentPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1361698779320601
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      Token token0 = xPathLexer0.identifier();
      assertEquals("dJw", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=^CD");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5768237406327152
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DHSZ6 @;{/\"C5=");
      XPathLexer xPathLexer1 = new XPathLexer("l<n4dZpU");
      xPathLexer1.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("DHSZ6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5292283732422693
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rhSB4a +p~rB");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.LA(119);
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uj)0hZd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("uj", token0.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1389768039559272
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mW|>$,k\"[jzh8dm`");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("mW", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(">", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.4027483788183783
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rhSB4a +p~rB");
      Token token0 = xPathLexer0.dots();
      assertEquals("r", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("h", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.and();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("a", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(5, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1572));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7086960143629146
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("ZIz", token2.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.consume((-2962));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Gm8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Gm8", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.57613028340169
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|% p\"4j");
      xPathLexer0.setXPath("QIR{]\"Go_'");
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("QIR", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{]\"Go_'", token1.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.650833388792085
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c<wP0\"d;V|5hs");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3333));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5X$An}wRg!Ou");
      xPathLexer0.setXPath("5X$An}wRg!Ou");
      xPathLexer0.endPosition();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.0228557876075088
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("`DuxbmTfEMQ>)x_M`W");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("`DuxbmTfEMQ>)x_M`W", token1.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.6103947204627835
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.095924398920587
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/B");
      xPathLexer0.number();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2844));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.681567354679863
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      xPathLexer0.consume((-2269));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("Iu<-! t5Q+7{");
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
      
      Token token0 = new Token((-1), "Iu<-! t5Q+7{", (-1), (-1));
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Iu", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.315514855525695
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LY\u0005uC.Q`dB");
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      xPathLexer0.consume((-1960));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.consume((-2974));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2962));
      xPathLexer0.comma();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.748750255764031
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      xPathLexer0.setXPath("9dZdi(OCOZrtC");
      xPathLexer0.endPosition();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("dZdi(OCOZrtC", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(83);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.4298732448210676
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJ9:MY'g");
      xPathLexer0.setXPath("9dCdi~(OCOZrtC");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.8302219798277395
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c<wP0\"d;V|5hs");
      xPathLexer0.not();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      xPathLexer0.setXPath("c<wP0\"d;V|5hs");
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token3 = xPathLexer0.colon();
      assertEquals("<", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("wP", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5336758115388895
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertNotNull(token3);
      assertEquals("?", token3.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.241178890518977
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%[''Hv%");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(27, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("H", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("v", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.576877439115733
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dJw:;Y'g");
      XPathLexer xPathLexer1 = new XPathLexer("B90~\",4e&\"b^ok+^");
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("B90~\",4e&\"b^ok+^");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("B90", token0.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ib\u000EL}!BV]9.");
      xPathLexer0.setXPath("E[eU{ZR");
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
      
      Token token0 = new Token((-1), "bN|", (-1000), (-1));
      Token token1 = xPathLexer0.nextToken();
      assertEquals("E", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.7595167627704509
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9mB3IWE-7dh;");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("mB3IWE-7dh;", token1.getTokenText());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.3272222048571458
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0o?o+\"WSJQD");
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer0.nextToken();
      xPathLexer0.LA(12);
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.566352187986638
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^mx#xhkAQ6=,_z1-X5");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("^", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("mx", token2.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('4');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LCX4TLDDDe|YQi@");
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      assertEquals("LCX4TLDDDe|YQi@", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.308861532453384
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1F6s3V-I7f{&");
      XPathLexer xPathLexer1 = new XPathLexer("<1F6s3V-I7f{&");
      xPathLexer1.dots();
      xPathLexer1.and();
      xPathLexer1.identifier();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.2397185783034175
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rAI+!nT97aOSD`");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3201));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.891401766304864
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-1566));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.0646616945352338
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1F6s3V-I7f{&");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.9792326124025428
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".(");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.7849611810172212
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9mB3IWE-7dh;");
      xPathLexer0.consume((-1658));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.2610775917112889
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      Token token0 = xPathLexer0.colon();
      assertEquals("2", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.at();
      assertEquals("c", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.0228443941831122
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("M", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      assertNull(xPathLexer0.getXPath());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.1054615809663617
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1F6s3V-I7f{&");
      Token token0 = xPathLexer0.equals();
      assertEquals("<", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("1", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("6", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('A');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.2578347124331906
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.setXPath(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.not();
      assertEquals("C", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.529747892852455
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("!M", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("l", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("$Z", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.2584010576379001
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(31, token2.getTokenType());
      assertEquals(".8", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("C", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("ts", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.2203822657344554
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.setXPath(">C8;Ows,Yhzw?SdG\"");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("C8;Ows,Yhzw?SdG\"", token2.getTokenText());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.3204872051169467
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      Token token0 = xPathLexer0.colon();
      assertEquals("2", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      xPathLexer0.consume(1534);
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.0661046959782352
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>C8;Ows,Yhw?SdG\"");
      xPathLexer0.setXPath("<>C8;Ows,Yhw?SdG\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(">", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("C", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(2);
      assertEquals(';', char0);
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.9824623270472249
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("Ml", token1.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.2907104727142853
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2@.8Cts");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".8", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("C", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("t", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.2213338310594148
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.setXPath(">C8;Ows,Yhzw?SdG\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("8", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(";", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0898986349271256
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g_/`= QyZIp.");
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("`", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("g_/`= QyZIp.");
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals("g", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.1292346257726669
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/T#+wA1!_/G)noL1");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9855764724538605
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Ml", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      boolean boolean0 = xPathLexer0.isIdentifierChar('a');
      assertTrue(boolean0);
      
      xPathLexer0.and();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.25939222930629
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      Token token0 = xPathLexer0.dollar();
      assertEquals(">", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("C8", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      xPathLexer0.setXPath(">C8;Ows,Yhzw?SdG\"");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.983846813889341
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.slashes();
      boolean boolean0 = xPathLexer0.isIdentifierChar('!');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.9449574556922394
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      Token token0 = xPathLexer0.dots();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.dots();
      assertEquals("o", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.0226244400077402
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath(".>}{Lrm@[m>qgw6x(Ht");
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(">", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(".>}{Lrm@[m>qgw6x(Ht");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.0606211630677527
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.1864531231342517
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.setXPath(">C8;Ows,Yhzw?SdG\"");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.9041945940573852
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("./o?o+\"W%SQD");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("/", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.9426557189272258
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".(");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.9809367740342578
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.065653066987507
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(26, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9842801591777133
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<1F6s3V-I7f{&");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals("<", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.9852041993543146
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!Ml$ZIz,Q=XtkW%Rg^");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Ml$ZIz,Q=XtkW%Rg^", token2.getTokenText());
  }
}
