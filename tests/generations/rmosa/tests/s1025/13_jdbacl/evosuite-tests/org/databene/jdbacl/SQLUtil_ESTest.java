/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 05:55:46 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcDataSource;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("");
      SQLUtil.ownerDotComponent(dBCatalog0);
      String string0 = "left";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?", (DBSchema) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?", defaultDBTable0, (-1764), "Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DBColumn dBColumn0 = defaultDBTable0.getColumn("Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?");
      dBColumnArray0[1] = dBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("p ", defaultDBTable0, (-1764), "p ");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = "NFh;^1Nv7X";
      stringArray0[2] = "NFh;^1Nv7X";
      stringArray0[3] = "p ";
      stringArray0[4] = "NFh;^1Nv7X";
      stringArray0[5] = "Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?, p ";
      stringArray0[6] = "NFh;^1Nv7X";
      String string1 = SQLUtil.join("NFh;^1Nv7X", "Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?, Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?, p ", stringArray0, "Select RDB$PROCEDURE_SOURCE From RDB$PROCEDURES Where RDB$PROCEDURE_NAME = ?, p ", "?%BT]VjkjZ>8K", stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = SQLUtil.normalize("drop materialized view--", false);
      assertEquals("drop materialized view --", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(1370);
      // Undeclared exception!
      SQLUtil.isDDL("!+s)q`5_/*y9");
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "executexq|ks", true, stringArray0);
      SQLUtil.isProcedureCall("executexq|ks");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "'XI~3_LKU4{6_";
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint0.setDoc((String) null);
      String string0 = SQLUtil.typeAndName(dBForeignKeyConstraint0);
      assertEquals("foreign key constraint constraint", string0);
      
      boolean boolean0 = SQLUtil.isDDL("thgLtL2)/f_N");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = SQLUtil.normalize("failerdbpre", true);
      assertEquals("failerdbpre", string0);
      
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("DATABASE_PATH", compositeDBObject0);
      tableContainer0.getTable("rJgAe#gQ9+Z'/Kaz[d");
      DBDataType dBDataType0 = DBDataType.getInstance(3406, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("setFloat(", (DBTable) null, dBDataType0);
      String string1 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "org.databene.jdbacl.model.DBProcedure";
      stringArray0[2] = "";
      stringArray0[3] = "org.databene.jdbacl.model.DBProcedure";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.databene.jdbacl.model.DBProcedure", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance(4, "org.databene.jdbacl.model.DBProcedure");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", dBTable0, dBDataType0, integer0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("alter materialized viewxj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null, xj093.s.null");
      assertFalse(boolean0);
      
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = 2662.384839531181;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("2662.384839531181", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter tablepecification", (DBTable) null, (DBDataType) null);
      defaultDBColumn0.setDoc("alter tablepecification");
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("alter tablepecification, alter tablepecification", string0);
      
      String string1 = SQLUtil.substituteMarkers("", "alter tablepecification", (Object) null);
      assertEquals("", string1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = (double) (-4);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 4", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-693), "lelecp into{h;/Tnate@;5`j3b\"");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("lelecp into{h;/Tnate@;5`j3b\"", (DBTable) null, dBDataType0);
      defaultDBColumn0.toString();
      defaultDBColumn0.setDefaultValue("# hash key columns = ");
      SQLUtil.renderColumn(defaultDBColumn0);
      DBSchema dBSchema0 = new DBSchema("lelecp into{h;/Tnate@;5`j3b\" : LELECP INTO{H;/TNATE@;5`J3B\"");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("lelecp into{h;/Tnate@;5`j3b\" : LELECP INTO{H;/TNATE@;5`J3B\"", dBSchema0);
      String[] stringArray0 = new String[4];
      stringArray0[1] = "lelecp into{h;/Tnate@;5`j3b\" LELECP INTO{H;/TNATE@;5`J3B\" DEFAULT # hash key columns =  NULL";
      stringArray0[2] = "lelecp into{h;/Tnate@;5`j3b\" : LELECP INTO{H;/TNATE@;5`J3B\"";
      stringArray0[2] = "lelecp into{h;/Tnate@;5`j3b\"";
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'lelecp into{h;/Tnate@;5`j3b\" : LELECP INTO{H;/TNATE@;5`J3B\"' has no foreign key with the columns (, lelecp into{h;/Tnate@;5`j3b\" LELECP INTO{H;/TNATE@;5`J3B\" DEFAULT # hash key columns =  NULL, lelecp into{h;/Tnate@;5`j3b\", )
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = (-67.8646537992133);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 67.8646537992133", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "drop indexvrter tablespzcif5cation");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)41;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)41, " = ");
      Integer integer0 = new Integer((byte)41);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select", defaultDBTable0, dBDataType0, integer0, integer0);
      Integer.getInteger("select", (int) (byte)41);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("select  = (41,41) NULL", string1);
      
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("select  = (41,41) NULL");
      assertEquals(3, objectArray0.length);
      
      String string2 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string2);
      
      Random.setNextRandom((-2476));
      String[] stringArray0 = new String[0];
      String string3 = SQLUtil.leftJoin("#Lc{Imuip7b", stringArray0, "select intovrter tablespzcif5cation", "alter materialized view", (String[]) null);
      assertEquals("left join select intovrter tablespzcif5cation as alter materialized view on ", string3);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop materialized viewor", (DBTable) null, (DBDataType) null);
      DefaultDBColumn defaultDBColumn1 = null;
      try {
        defaultDBColumn1 = new DefaultDBColumn("drop materialized viewor", (DBTable) null, 163, "getNClob(int)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"int\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLUtil.normalize("create table", false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "create table";
      stringArray0[1] = "create table";
      stringArray0[2] = "create table";
      stringArray0[3] = ",";
      stringArray0[4] = "create table";
      stringArray0[5] = ",";
      stringArray0[6] = ",";
      stringArray0[7] = "create table";
      stringArray0[8] = "create table";
      String[] stringArray1 = new String[4];
      stringArray1[0] = ",";
      stringArray1[1] = "create table";
      stringArray1[2] = "create table";
      stringArray1[3] = "create table";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(",", stringArray0, "create table", "create table", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SQLUtil.join("xq|ks", "' 3z^O_!", stringArray0, "", "#FpmQ", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "exec", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("#FpmQ", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(738);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(dynamicByteArrayOutputStream0, 1116);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, mockPrintWriter0);
      assertSame(dBTable0, defaultDBTable0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" FROM ", defaultDBTable0, (DBDataType) null);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      mockPrintWriter0.append('g');
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.write(40);
      byteArrayOutputStream0.reset();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(" (");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format:  (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint((String[]) null);
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select into{h;/pn\te;5`j3b\"");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("update");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String[] stringArray0 = new String[7];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = "s";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string1 = "a";
      String[] stringArray0 = new String[9];
      stringArray0[0] = "uwdatefailerd=bpre";
      stringArray0[1] = "uwdatefailerd=bpre";
      stringArray0[2] = "s";
      stringArray0[3] = "s";
      stringArray0[4] = "s";
      stringArray0[5] = "uwdatefailerd=bpre";
      stringArray0[6] = "a";
      stringArray0[7] = "s";
      stringArray0[8] = "uwdatefailerd=bpre";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "a", true, stringArray0);
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Object[] objectArray0 = new Object[0];
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execute;$io");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " or ", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \" or \" ", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 247);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = 60.0;
      SQLUtil.renderNumber(streamTokenizer0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into{h;/pn\te@;5`j3b\"");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "J{@_^WoOs,`,s*-7";
      stringArray0[1] = "J{@_^WoOs,`,s*-7";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "uIp*:F\"TFH%2Y/T";
      // Undeclared exception!
      try { 
        SQLUtil.join("J{@_^WoOs,`,s*-7", "J{@_^WoOs,`,s*-7", stringArray0, "J{@_^WoOs,`,s*-7", "uIp*:F\"TFH%2Y/T", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-M");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      StringWriter stringWriter0 = new StringWriter(7);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "M_[W-M");
      stringWriter1.append((CharSequence) "M_[W-M");
      stringWriter1.append('I');
      TableContainer tableContainer0 = new TableContainer("create materialized view*\"d");
      tableContainer0.getTable("M_[W-M");
      DBDataType dBDataType0 = DBDataType.getInstance((-330), "drop index");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer((-330));
      Integer.compare((-330), 7);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("getFetchSize", (DBTable) null, dBDataType0, integer1);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("F\u0006+R@7z9MV3G/PC.O", dBCatalog0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("getFetchSize", dBSchema0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("F\u0006+R@7z9MV3G/PC.O", defaultDBTable1, dBDataType0);
      defaultDBColumn1.setNullable(false);
      SQLUtil.renderColumn(defaultDBColumn1);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("u,x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      Character character0 = new Character('9');
      constraintDescriptorList0.add((Object) character0);
      constraintDescriptorList0.trimToSize();
      Object object0 = new Object();
      String string0 = "NCLOB";
      constraintDescriptorList0.add((Object) "NCLOB");
      constraintDescriptorList0.add(object0);
      constraintDescriptorList0.parallelStream();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Character cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("t2[");
      SQLUtil.normalize("call*!car|c**m[5v(qn", false);
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = SQLUtil.normalize("-- ERROR: checksum mismatch page: ", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("t2[");
      String string0 = "(3a<[$7J=&oVR-i";
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("t2[", defaultDBTable0, (-265), "(3a<[$7J=&oVR-i");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (3a<[$7J=&oVR-i
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("execr;x/r");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("[^JD`Wfr*,x,k");
      String[] stringArray0 = new String[2];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "[^JD`Wfr*,x,k", true, stringArray0);
      SQLUtil.parseColumnTypeAndSize("[^JD`Wfr*,x,k");
      Integer integer0 = new Integer(3568);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[^JD`Wfr*,x,k");
      mockPrintWriter0.append('l');
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("}-58l20x?t", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals(FKChangeRule.NO_ACTION, dBForeignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("execuwdatefailerd=bpre");
      DBSchema dBSchema0 = new DBSchema("delete78:8");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("cUp19N)9b2!nxL[x", dBSchema0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "execuwdatefailerd=bpre";
      stringArray0[1] = "delete78:8";
      stringArray0[2] = "cUp19N)9b2!nxL[x";
      stringArray0[3] = "delete78:8";
      stringArray0[4] = "execuwdatefailerd=bpre";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = SQLUtil.normalize("=I9E:*-DvG4E", true);
      assertEquals("= I9E : * - DvG4E", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("COO");
      DBSchema dBSchema0 = new DBSchema((String) null, dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R|W|8iJ(~ey857*zU", dBSchema0);
      String[] stringArray0 = new String[4];
      stringArray0[2] = null;
      stringArray0[3] = "R|W|8iJ(~ey857*zU";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertSame(stringBuilder0, stringBuilder1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter tablespccation");
      String[] stringArray0 = new String[8];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter tablespccation", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \"alter tablespccation\" ", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "_V![cxw2G&", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = SQLUtil.normalize("eY',tJv#;_<|,aVl3", true);
      assertEquals("eY ',tJv#;_<|,aVl3'", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("iX4p");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Illegal column type format: ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-1423), "iX4p");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = Integer.getInteger("Illegal column type format: ", integer0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("iX4p", defaultDBTable0, dBDataType0, integer1);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("IX4P(2)", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "U,:oH7#+|crPIbRag/";
      stringArray0[1] = "U,:oH7#+|crPIbRag/";
      stringArray0[2] = "dp,ar6=jpd*H:5c";
      stringArray0[3] = "dp,ar6=jpd*H:5c";
      stringArray0[4] = "dp,ar6=jpd*H:5c";
      stringArray0[6] = "dp,ar6=jpd*H:5c";
      stringArray0[7] = "U,:oH7#+|crPIbRag/";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "U,:oH7#+|crPIbRag/";
      stringArray1[1] = "VAR";
      stringArray1[2] = "VAR";
      stringArray1[3] = "dp,ar6=jpd*H:5c";
      stringArray1[4] = "dp,ar6=jpd*H:5c";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("dp,ar6=jpd*H:5c", stringArray0, "U,:oH7#+|crPIbRag/", "VAR", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "M_[W-\\M";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      String[] stringArray0 = new String[6];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("M_[W-M", stringArray0, "M_[W-M", "M_[W-M", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = SQLUtil.normalize(")_R[n#oiO7(KHt", true);
      assertEquals(") _R [ n # oiO7 (KHt", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = SQLUtil.normalize("e7r)]d$:$1%/i", true);
      assertEquals("e7r) ] d $ : $ 1 % / i", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "setClob(String, Clob)";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setClob(String, Clob)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderColumnListWithTableName("mQ*Y6eR8BX", stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance((-273), "mQ*Y6eR8BX.null");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("mQ*Y6eR8BX", (DBTable) null, dBDataType0, (Integer) null);
      StringBuilder stringBuilder0 = new StringBuilder("igcfHqec,'8W6*lI");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("igcfHqec,'8W6*lIMQ*Y6ER8BX.NULL", stringBuilder0.toString());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("rename", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("select into{h;/pn\te@;5`j3b\"", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = SQLUtil.normalize("10.7", false);
      assertEquals("10.7", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = SQLUtil.normalize("[^JD`Wfr*,x,k", false);
      assertEquals("[ ^ JD ` Wfr *, x, k", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M_[W-M");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "5";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("org.firebirdsql.jca.FBManagedConnectionFactory", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("[ [VDU");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("dh}yuYLX-BXCu", dBSchema0);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "ac", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "[^JD`Wfr*,x,k";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[^JD`Wfr*,x,k");
      stringArray0[0] = "[^JD`Wfr*,x,k";
      stringArray0[1] = "[^JD`Wfr*,x,k";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "[^JD`Wfr*,x,k", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[^JD`Wfr*,x,k", true, dBUniqueConstraint0);
      dBUniqueIndex0.getTable();
      SQLUtil.leftJoin("[^JD`Wfr*,x,k", stringArray0, "drop materialized vieworg.databene.jdbacl.sqlutil", (String) null, stringArray0);
      Character character0 = Character.valueOf('p');
      SQLUtil.renderValue(character0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Character character0 = new Character('t');
      String string0 = SQLUtil.substituteMarkers("/<$", "(`uj&xBGv!M0", character0);
      assertEquals("/<$", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = SQLUtil.normalize("+{CKGnE{|", false);
      assertEquals("+ { CKGnE { |", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Cannotaestablish a sepoint in auto-commit mde.", defaultDBTable0, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[17];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("\u0002\uFFFF\u0001\u0002\u0001\uFFFF\u0001\u0004\u0001\u0001\u0001\u0001\u0005\u0001\u0003o\u0006\u0001\b");
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertNotNull(string0);
      assertEquals("schema \u0002\uFFFF\u0001\u0002\u0001\uFFFF\u0001\u0004\u0001\u0001\u0001\u0001\u0005\u0001\u0003o\u0006\u0001\b", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("callsimblk<");
      assertNull(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into{h;/pn\te@;5`j3b\"");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create materialized view");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter tablesimblk<");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "select into{h;/pn\te@;5`j3b\"";
      stringArray0[1] = "select into{h;/pn\te@;5`j3b\"";
      stringArray0[2] = "select into{h;/pn\te@;5`j3b\"";
      stringArray0[3] = "select into{h;/pn\te@;5`j3b\"";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "select into{h;/pn\te@;5`j3b\"", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT \"select into{h;/pn\te@;5`j3b\"\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "qRZx+(#pxr";
      stringArray0[1] = "HY002";
      stringArray0[2] = "qRZx+(#pxr";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "execute";
      stringArray1[1] = "qRZx+(#pxr";
      stringArray1[2] = "execute";
      stringArray1[3] = "HY002";
      stringArray1[4] = "qRZx+(#pxr";
      stringArray1[5] = "qRZx+(#pxr";
      stringArray1[6] = "alter session_v![cxw2g&";
      stringArray1[7] = ">}Dm-'Ks7N> 3U%";
      stringArray1[8] = "qRZx+(#pxr";
      String string0 = SQLUtil.leftJoin("qRZx+(#pxr", stringArray0, "execute", "alter session_v![cxw2g&", stringArray1);
      assertEquals("left join execute as alter session_v![cxw2g& on qRZx+(#pxr.qRZx+(#pxr = alter session_v![cxw2g&.execute and qRZx+(#pxr.HY002 = alter session_v![cxw2g&.qRZx+(#pxr and qRZx+(#pxr.qRZx+(#pxr = alter session_v![cxw2g&.execute", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = SQLUtil.normalize("select into{h;/pn\te@;5`j3b\"", false);
      assertEquals("select into { h ;  / pn e @ ; 5 ` j3b \"\"", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("savejoint.null", stringArray0, "savejoint.null", "savejoint", stringArray0);
      assertEquals("savejoint.null as savejoint on ", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("}SNDt-/|f6Tr", (String[]) null, "msgi,", "V", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("i=U#O^#'uZ]VcO#xTU", dBCatalog0);
      dBSchema0.toString();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("i=U#O^#'uZ]VcO#xTU", dBSchema0);
      defaultDBTable0.getCatalog();
      String[] stringArray0 = new String[12];
      stringArray0[0] = "DY";
      stringArray0[1] = "`#J'ni6iNHvUidj";
      stringArray0[2] = "inner";
      stringArray0[3] = "`#J'ni6iNHvUidj";
      stringArray0[4] = "inner";
      stringArray0[5] = "inner";
      stringArray0[6] = "inner";
      stringArray0[2] = "i=U#O^#'uZ]VcO#xTU";
      String string0 = SQLUtil.join("inner", "DY", stringArray0, "DY", "GhgBAT9#&'64Dq^J", stringArray0);
      assertEquals("DY as GhgBAT9#&'64Dq^J on DY.DY = GhgBAT9#&'64Dq^J.DY and DY.`#J'ni6iNHvUidj = GhgBAT9#&'64Dq^J.`#J'ni6iNHvUidj and DY.i=U#O^#'uZ]VcO#xTU = GhgBAT9#&'64Dq^J.i=U#O^#'uZ]VcO#xTU and DY.`#J'ni6iNHvUidj = GhgBAT9#&'64Dq^J.`#J'ni6iNHvUidj and DY.inner = GhgBAT9#&'64Dq^J.inner and DY.inner = GhgBAT9#&'64Dq^J.inner and DY.inner = GhgBAT9#&'64Dq^J.inner and DY.null = GhgBAT9#&'64Dq^J.null and DY.null = GhgBAT9#&'64Dq^J.null and DY.null = GhgBAT9#&'64Dq^J.null and DY.null = GhgBAT9#&'64Dq^J.null and DY.null = GhgBAT9#&'64Dq^J.null", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String string0 = SQLUtil.normalize("2xU}1!`* vXtiCD", true);
      assertEquals("2xU } 1 ! `  * vXtiCD", string0);
      
      DBCatalog dBCatalog0 = new DBCatalog("ga|'u3$(vYt'`");
      DBSchema dBSchema0 = new DBSchema(":^e*E3&Y[1O", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("2xU}1!`* vXtiCD", dBSchema0);
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "t+", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT t+ UNIQUE ()", string1);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "[^JD`Wfr*,x,k", true, stringArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, )", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "XSDA1.S", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(343, 1752.89F);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 343
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("IBB<");
      SQLUtil.addOptionalCondition("IBB<", stringBuilder0);
      assertEquals("IBB< or IBB<", stringBuilder0.toString());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "alter materialized view07006";
      String string0 = SQLUtil.join("updateupdate", "NCLOB", stringArray1, "alter materialized view07006", "G+=)0@$@(eJJdR", stringArray0);
      assertEquals("updateupdate join alter materialized view07006 as G+=)0@$@(eJJdR on NCLOB.alter materialized view07006 = G+=)0@$@(eJJdR.null", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.join("", "", (String[]) null, "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("i=U#O^#'uZ]VcO#xTU", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("i=U#O^#'uZ]VcO#xTU", dBSchema0);
      DBCatalog dBCatalog1 = defaultDBTable0.getCatalog();
      dBCatalog1.getTable("inner", false);
      DBDataType dBDataType0 = DBDataType.getInstance(4555, "DY");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("DY", (DBTable) null, dBDataType0, integer0, (Integer) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("DY(1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("^~P%Lf");
      DBDataType dBDataType0 = DBDataType.getInstance((-3023), "drop indexcannotaestablish a sepo");
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter tablespcaion", defaultDBTable0, dBDataType0, integer0, integer1);
      StringBuilder stringBuilder0 = new StringBuilder("drop indexcannotaestablish a sepo");
      StringBuilder stringBuilder1 = stringBuilder0.append((-3023));
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("drop indexcannotaestablish a sepo-3023DROP INDEXCANNOTAESTABLISH A SEPO(3,0)", stringBuilder1.toString());
      assertEquals("drop indexcannotaestablish a sepo-3023DROP INDEXCANNOTAESTABLISH A SEPO(3,0)", stringBuilder0.toString());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-3316), "7Ii8L");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("7Ii8L", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("7Ii8L 7II8L NULL", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("create table|ga[](.@s{zd/", "create table|ga[](.@s{zd/", (String[]) null, "create table|ga[](.@s{zd/", "create table|ga[](.@s{zd/", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("selectr]#a8adl#r^`btkw");
      SQLUtil.addRequiredCondition("selectr]#a8adl#r^`btkw", stringBuilder0);
      assertEquals("selectr]#a8adl#r^`btkw and selectr]#a8adl#r^`btkw", stringBuilder0.toString());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = SQLUtil.isProcedureCall("rename");
      boolean boolean1 = SQLUtil.isQuery("rename");
      assertTrue(boolean1 == boolean0);
      
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("y8QO@Le{oxrM6-zp", (String[]) null, "y8QO@Le{oxrM6-zp", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.join("Hmwks", "Hmwks", stringArray0, "", "", stringArray0);
      assertEquals("Hmwks join  as  on Hmwks.null = .null and Hmwks.null = .null and Hmwks.null = .null", string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "aler index";
      stringArray0[1] = "aler index";
      stringArray0[2] = "aler index";
      stringArray0[3] = "aler index";
      SQLUtil.leftJoin("aler index", stringArray0, "aler index", "", stringArray0);
      SQLUtil.renderValue("aler index");
      DBColumn[] dBColumnArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("sVJf~5nNsc@H{8{s!l|", "a;\"", "a;\"");
      assertEquals("sVJf~5nNsc@H{8{s!l|", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.renderColumnListWithTableName("e7r)]d$:$1%/i", stringArray0);
      assertEquals("e7r)]d$:$1%/i.null, e7r)]d$:$1%/i.null, e7r)]d$:$1%/i.null, e7r)]d$:$1%/i.null, e7r)]d$:$1%/i.null, e7r)]d$:$1%/i.null, e7r)]d$:$1%/i.null", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("simblk<", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("IBB<", stringBuilder0);
      assertEquals("IBB<", stringBuilder0.toString());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" FROM ", defaultDBTable0, (DBDataType) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.renderValue(nameSpec0);
      assertEquals("NEVER", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[7];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("F");
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM F WHERE null = null", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("%^mFu_ Tg:sN4R\"ZC=");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("c16Q", dBSchema0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("W0{2vV4", true, "TRIGGERNAME", "TRIGGERNAME");
      Object object0 = new Object();
      dBCheckConstraint0.setDoc("TRIGGERNAME");
      dBCheckConstraint0.equals(object0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK TRIGGERNAME", string0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = "Hmwks";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("8tE=zuaC=n[-]");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Hmwks", false, defaultDBTable0, "Hmwks");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "8tE=zuaC=n[-]");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      int int0 = 3636;
      // Undeclared exception!
      try { 
        stringBuilder1.insert(3636, (CharSequence) "Hmwks", 3636, 3636);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 3636
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "a;\"", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT a;\" ", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "[^JD`Wfr*,x,k", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "[^JD`Wfr*,x,k", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("[^JD`Wfr*,x,k");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(2518, (CharSequence) stringBuilder1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 2518
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      defaultDBTable0.getUniqueConstraints(true);
      stringArray0[3] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , ) REFERENCES null(, , , )", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(".^~{|;U1O");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "a3#Md`1.HQ";
      stringArray0[1] = ".^~{|;U1O";
      stringArray0[2] = "update";
      stringArray0[3] = ".^~{|;U1O";
      stringArray0[4] = ".^~{|;U1O";
      stringArray0[5] = ".^~{|;U1O";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(".^~{|;U1O", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (a3#Md`1.HQ, .^~{|;U1O, update, .^~{|;U1O, .^~{|;U1O, .^~{|;U1O) REFERENCES .^~{|;U1O(a3#Md`1.HQ, .^~{|;U1O, update, .^~{|;U1O, .^~{|;U1O, .^~{|;U1O)", string0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("199m", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.7598407318671061
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jdbcDataSource1.getLogWriter();
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.normalize("V/svF.Q12", true);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCatalog dBCatalog0 = new DBCatalog("xq|ks");
      String string0 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals("xq|ks", string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "iA7!1/p_H[d&STd12mk";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "iA7!1/p_H[d&STd12mk", false, stringArray0);
      String string0 = SQLUtil.ownerDotComponent(dBPrimaryKeyConstraint0);
      assertEquals("null.iA7!1/p_H[d&STd12mk", string0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.7598407318671061
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource1.getLogWriter();
      jdbcDataSource1.getLogWriter();
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.normalize("V/svF.Q12", true);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = SQLUtil.removeComments("LT");
      assertEquals("LT", string0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("select into{h;/pn\te@;5`j3b\"");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("sImBBh<");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter tablespecification");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("IBB<", stringBuilder0);
      assertEquals("IBB<", stringBuilder0.toString());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join((String) null, (String) null, stringArray0, "`#J'ni6iNHvUidj", (String) null, stringArray0);
      assertEquals("`#J'ni6iNHvUidj as null on null.null = null.null and null.null = null.null", string0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("create materialized view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("[^JD`Wfr*,x,k");
      assertFalse(boolean0);
  }
}
