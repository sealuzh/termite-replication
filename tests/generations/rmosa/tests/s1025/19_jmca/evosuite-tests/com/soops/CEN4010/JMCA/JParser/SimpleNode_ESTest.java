/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 09 15:52:46 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("*ge");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 101);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{8!sO)i-VM`g?*)\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      try { 
        javaParser0.ImportDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: {
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1104420160));
      Node[] nodeArray0 = new Node[4];
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.parent = nodeArray0[1];
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.jjtGetParent();
      assertEquals(4, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.jjtAddChild((Node) null, 3271);
      simpleNode0.jjtGetChild(84);
      assertEquals(3272, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      simpleNode0.jjtGetChild(1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.jjtGetChild(0);
      assertSame(node0, simpleNode0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1074787335));
      // Undeclared exception!
      try { 
        simpleNode0.toString("<=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1074787335
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1826));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1826
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1174));
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-136));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -136
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1106552649));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add((String) null);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("{8!sO)i-VM`g?*)\"", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{8!sO)i-VM`g?*)\"");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.id = 316;
      // Undeclared exception!
      try { 
        simpleNode0.dump("UWLG41c,KD)BSb>", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("@");
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : @", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4634135588264299
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(77);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(77);
      simpleNode1.jjtAddChild(simpleNode0, 77);
      simpleNode1.dump("\"~6oy1>v(MZ", stringWriter0);
      assertEquals(78, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("\"<\"", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(77);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode0, 77);
      // Undeclared exception!
      simpleNode0.dump("\"~6oy1>v(MZ", stringWriter0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("DCf8K^x?y+U* lLA:O", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*amp</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.20619205063323187
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.19144408195771734
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      arrayList0.add(">=");
      simpleNode0.dump(")", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("UWLG41c,KD)BSb>", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*le</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      arrayList0.add(">>");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*rshft</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*lt", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*gt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      arrayList0.add("<");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*lt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      arrayList0.add(")");
      simpleNode0.dump(")", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.1985152433458726
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*lshft</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("<#x7", stringWriter0);
      assertEquals("<InstanceOfExpression>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("UWLG41c,KD)BSb>", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(":", stringWriter0);
      assertEquals("<NameList>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      arrayList0.add("jsE0~9bh,[<z");
      simpleNode0.dump("jsE0~9bh,[<z", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{~", stringWriter0);
      assertEquals("<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("@");
      String string0 = simpleNode0.toString("*amp");
      assertEquals("*ampVariableDeclaratorId : @", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2013265917));
      Node[] nodeArray0 = new Node[8];
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.jjtAddChild((Node) null, 1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.jjtAddChild((Node) null, 44);
      simpleNode0.jjtAddChild((Node) null, 79);
      assertEquals(80, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1174));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-136));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-3022));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.jjtSetParent(simpleNode0);
      Node node0 = simpleNode0.jjtGetParent();
      assertSame(simpleNode0, node0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }
}
