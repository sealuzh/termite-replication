/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 09 15:47:54 GMT 2020
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.modes.Mode;
import freemind.modes.browsemode.BrowseController;
import freemind.modes.common.plugins.MapNodePositionHolderBase;
import freemind.modes.filemode.FileMode;
import freemind.modes.mindmapmode.MindMapController;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.InputEvent;
import java.awt.event.InputMethodListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.time.Instant;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.DebugGraphics;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JButton;
import javax.swing.JTextPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.SwingConstants;
import javax.swing.event.AncestorListener;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.PanelUI;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.plaf.basic.BasicPanelUI;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.bridge.SVGColorProfileElementBridge;
import org.apache.batik.bridge.UserAgentAdapter;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.transferFocusBackward();
      jDayChooser0.setFocus();
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      jDayChooser0.paintImmediately((-1714), 12, 12, (-928));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mb}'cxih47q");
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-1714), 12, 93, 3936, 'L');
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 1370, (-3989L), (-1909), (-1646), '{', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.setEnabled(false);
      Color color0 = Color.RED;
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JButton[] jButtonArray0 = new JButton[3];
      ImageIcon imageIcon0 = MapNodePositionHolderBase.getMapLocationIcon();
      JButton jButton0 = new JButton(imageIcon0);
      jButtonArray0[0] = jButton0;
      JButton jButton1 = new JButton();
      jButtonArray0[1] = jButton1;
      imageIcon0.setDescription("day");
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getRolloverSelectedIcon();
      JButton jButton2 = new JButton((Icon) null);
      jButtonArray0[2] = jButton2;
      jDayChooser0.days = jButtonArray0;
      jDayChooser0.getDayPanel();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      StyleContext styleContext0 = new StyleContext();
      AttributeSet attributeSet0 = styleContext0.getEmptySet();
      Font font0 = defaultStyledDocument0.getFont(attributeSet0);
      int int0 = 100;
      font0.deriveFont(100);
      // Undeclared exception!
      try { 
        jDayChooser0.setFont(font0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.addListeners(0);
      jDayChooser0.addListeners(0);
      jDayChooser0.setMaxDayCharacters(4);
      MockInstant.ofEpochSecond((long) 0, (long) 0);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.setDay(0);
      jDayChooser1.updateUI();
      JDayChooser jDayChooser2 = new JDayChooser(true);
      SystemColor systemColor0 = SystemColor.controlDkShadow;
      jDayChooser2.sundayForeground = (Color) systemColor0;
      jDayChooser0.drawWeeks();
      assertEquals(1, jDayChooser0.getDay());
      
      jDayChooser2.getSundayForeground();
      assertEquals(14, jDayChooser2.getDay());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)17;
      jDayChooser0.setIgnoreRepaint(true);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte)42;
      jDayChooser0.setSize(350, 7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.getMinSelectableDate();
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      
      jDayChooser0.isDayBordersVisible();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.weeks = null;
      Date date0 = jDayChooser0.minSelectableDate;
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Color color0 = Color.lightGray;
      jDayChooser0.getInputMap();
      // Undeclared exception!
      try { 
        jDayChooser0.setMonth((-980));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      jDayChooser0.setMinSelectableDate((Date) null);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.addListeners(0);
      jDayChooser0.addListeners(0);
      jDayChooser0.setMaxDayCharacters(4);
      MockInstant.ofEpochSecond((long) 0, (long) 0);
      jDayChooser0.setDay(3999);
      jDayChooser0.updateUI();
      jDayChooser0.setMaxDayCharacters(0);
      jDayChooser0.initDecorations();
      Color color0 = Color.lightGray;
      jDayChooser0.setMonth(4);
      Color color1 = Color.GREEN;
      assertFalse(color1.equals((Object)color0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7177454112665718
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBordersVisible(true);
      Boolean boolean1 = new Boolean(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "log4j.additivity.");
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 34, (-974), 34, 34, '[');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters(1);
      jDayChooser0.isOpaque();
      jDayChooser0.setDay(1);
      jDayChooser0.getInputVerifier();
      jDayChooser0.setInputVerifier((InputVerifier) null);
      jDayChooser0.getMaxDayCharacters();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "day";
      stringArray0[1] = "day";
      stringArray0[2] = "day";
      stringArray0[3] = "";
      stringArray0[4] = "day";
      stringArray0[5] = "day";
      stringArray0[6] = "day";
      stringArray0[7] = "day";
      stringArray0[8] = "day";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.addListeners(0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(35);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.transferFocusBackward();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, 8, 8, (-255), 39, '6');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.paintImmediately(33, 37, 37, 33);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 33, 0L, 1818, 37, '&');
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, (-668), 0L, 2619, 3601, 't');
      keyEvent1.paramString();
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.keyPressed(keyEvent1);
      assertEquals(13, jDayChooser0.getDay());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = SwingConstants.EAST;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1276, 35, 1276, 40, '3');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(21, jDayChooser0.getDay());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      jDayChooser0.setSundayForeground(color0);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters(1);
      jDayChooser0.isOpaque();
      StyleContext styleContext0 = new StyleContext();
      Locale locale0 = Locale.CANADA_FRENCH;
      jDayChooser0.setLocale(locale0);
      assertEquals(1, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = SwingConstants.EAST;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 3792, 3792, 40, 35, '3');
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      
      jDayChooser0.initDecorations();
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      jDayChooser0.removeAncestorListener(ancestorListener0);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 2910, true);
      focusEvent0.getOppositeComponent();
      focusEvent0.setSource(jDayChooser0);
      jDayChooser0.focusLost(focusEvent0);
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.transferFocusBackward();
      jDayChooser0.setFocus();
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 22;
      floatArray0[1] = (float) 22;
      floatArray0[2] = (float) 22;
      floatArray0[3] = (float) 22;
      floatArray0[4] = (float) 22;
      floatArray0[5] = (float) 22;
      floatArray0[6] = (float) 22;
      floatArray0[7] = (float) 22;
      float[] floatArray1 = systemColor0.getRGBColorComponents(floatArray0);
      systemColor0.getRGBComponents(floatArray1);
      jDayChooser0.setMonth(22);
      jDayChooser0.getDayPanel();
      Font.getFont("2");
      jDayChooser0.setFont((Font) null);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters(1);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.isOpaque();
      String[] stringArray0 = new String[2];
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      jDayChooser0.addAncestorListener(ancestorListener0);
      stringArray0[0] = "day";
      stringArray0[1] = "day";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.addListeners(0);
      jDayChooser0.setDay(0);
      jDayChooser0.updateUI();
      jDayChooser0.addListeners(0);
      jDayChooser0.setMaxDayCharacters(3);
      InputEvent.getModifiersExText(0);
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 359, 0, 41, 1, 'D', 1467);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      assertEquals(14, jDayChooser1.getDay());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.decorationBordersVisible = true;
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.transferFocusBackward();
      // Undeclared exception!
      try { 
        jDayChooser1.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      jDayChooser0.setDay(31);
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser_DecoratorButton0, 31, "day", 31, 31);
      actionEvent0.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.addListeners(0);
      jDayChooser0.setDay(681);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.setEnabled(true);
      Instant instant0 = MockInstant.ofEpochSecond((long) 0, (long) 0);
      Date date0 = Date.from(instant0);
      Date date1 = jDayChooser0.minSelectableDate;
      jDayChooser1.setSelectableDateRange(date1, date0);
      jDayChooser0.getGraphics();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "day";
      jDayChooser0.setEnabled(false);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.setFocus();
      jDayChooser0.setMonth(1238);
      jDayChooser0.setEnabled(false);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setRequestFocusEnabled(true);
      jDayChooser0.validate();
      jDayChooser0.setDecorationBordersVisible(true);
      jDayChooser0.setYear(33);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.getSelectionColor();
      jDayChooser0.firePropertyChange("7rJ5'bt#t0.X&dK],Q", true, false);
      Date date0 = jDayChooser0.setMaxSelectableDate((Date) null);
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setFocus();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxSelectableDate((Date) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("x0[qs6{0+gh_$M", 0, 906);
      jDayChooser0.getFontMetrics(font0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.setFocus();
      MockDate mockDate0 = new MockDate();
      jDayChooser0.setMaxSelectableDate(mockDate0);
      jDayChooser0.setDay(906);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.repaint();
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.getHeight();
      jDayChooser0.setEnabled(true);
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.getLocale();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      jDayChooser0.getDebugGraphicsOptions();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      jDayChooser0.removeInputMethodListener((InputMethodListener) null);
      jDayChooser0.initDecorations();
      jDayChooser0.keyTyped((KeyEvent) null);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-2967), false, jDayChooser0);
      jDayChooser0.focusGained(focusEvent0);
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.setEnabled(false);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      
      jDayChooser0.setDecorationBordersVisible(true);
      jDayChooser0.isWeekOfYearVisible();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7272463499302098
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyListener keyListener0 = AWTEventMulticaster.add((KeyListener) jDayChooser0, (KeyListener) jDayChooser0);
      jDayChooser0.removeKeyListener(keyListener0);
      jDayChooser0.addListeners(0);
      jDayChooser0.setDay(35);
      jDayChooser0.updateUI();
      jDayChooser0.setMaxDayCharacters(35);
      jDayChooser0.initDecorations();
      Color color0 = Color.lightGray;
      jDayChooser0.setMonth(35);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.getLocale();
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.transferFocusBackward();
      jDayChooser0.setFocus();
      SVGColorProfileElementBridge sVGColorProfileElementBridge0 = new SVGColorProfileElementBridge();
      UserAgentAdapter userAgentAdapter0 = new UserAgentAdapter();
      Locale locale0 = Locale.GERMAN;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      
      jDayChooser0.setFocus();
      jDayChooser0.isWeekOfYearVisible();
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters((-1354));
      jDayChooser0.isOpaque();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Rectangle rectangle0 = new Rectangle(47, 47, 22, 47);
      jDayChooser0.scrollRectToVisible(rectangle0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 22, 115L, (-1120), 22, '\\');
      InputEvent.getModifiersExText(27);
      jDayChooser0.keyReleased(keyEvent0);
      try { 
        Color.decode("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7556391777844373
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.transferFocusBackward();
      jDayChooser0.setFocus();
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      jDayChooser0.paintImmediately((-1714), 12, 12, (-928));
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1818, 22, 12, 28, '8');
      JMonthChooser jMonthChooser0 = jDayChooser0.monthChooser;
      jDayChooser0.setMonthChooser((JMonthChooser) null);
      KeyEvent keyEvent1 = new KeyEvent(jDayChooser0, 22, 1073741824L, (-1229), 38, '|');
      keyEvent1.paramString();
      jDayChooser0.keyPressed(keyEvent1);
      jDayChooser0.keyPressed(keyEvent1);
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(7, jDayChooser0.getDay());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7376047233857554
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.setEnabled(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.drawWeeks();
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(0);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setRequestFocusEnabled(true);
      jDayChooser0.validate();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      
      jDayChooser0.setDecorationBordersVisible(true);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      Color color0 = jTextPane0.getSelectionColor();
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.isDecorationBordersVisible();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setVerifyInputWhenFocusTarget(true);
      Color color0 = jDayChooser0.getSundayForeground();
      assertEquals((-6029312), color0.getRGB());
      
      boolean boolean0 = jDayChooser0.isDecorationBordersVisible();
      assertFalse(boolean0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.init();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.removeKeyListener(jDayChooser1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      jDayChooser0.setMaxDayCharacters((-4366));
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = SwingConstants.EAST;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 1399, 40, 3, 1399, '3');
      jDayChooser0.keyPressed(keyEvent0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7177454112665718
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDayBordersVisible(true);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.transferFocusBackward();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 33, (-2148L), 33, 33, '6');
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6717601208463133
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(true);
      Locale locale0 = Locale.FRANCE;
      jDayChooser0.setLocale(locale0);
      jDayChooser0.getPropertyChangeListeners("X8^>j.zko9>gt\"Ac@");
      jDayChooser0.setMonth(5);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6442551993262904
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%Esk!.g(s6~6XNl2>2");
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters(1);
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertEquals(1, jDayChooser0.getMaxDayCharacters());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = SwingConstants.EAST;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setAlwaysFireDayProperty(false);
      jDayChooser0.getInputContext();
      jDayChooser0.getVisibleRect();
      jDayChooser0.getDayPanel();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7376047233857554
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.setEnabled(true);
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      
      Locale locale0 = Locale.CHINESE;
      jDayChooser0.setLocale(locale0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.799517964535027
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.isFocusOwner();
      jDayChooser0.setMaxDayCharacters(2885);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.getDay();
      jDayChooser0.getSelectedDay();
      jDayChooser0.isDecorationBackgroundVisible();
      Locale locale0 = Locale.CANADA;
      jDayChooser0.setLocale(locale0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      MindMapController mindMapController0 = null;
      try {
        mindMapController0 = new MindMapController((Mode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.setForeground((Color) null);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6929037542586003
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.addListeners(0);
      jDayChooser0.setDay(35);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      PanelUI panelUI0 = jDayChooser1.getUI();
      panelUI0.getAccessibleChild(jDayChooser1, 35);
      jDayChooser0.setUI(panelUI0);
      jDayChooser0.updateUI();
      jDayChooser0.getInheritsPopupMenu();
      jDayChooser0.setMaxDayCharacters(35);
      jDayChooser0.initDecorations();
      Color color0 = Color.lightGray;
      jDayChooser0.setMonth(35);
      Color color1 = jDayChooser0.getWeekdayForeground();
      jDayChooser0.setForeground(color1);
      jDayChooser0.drawDays();
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.669576756952125
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.setEnabled(true);
      jDayChooser0.getDaysInMonth();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.setFocus();
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.7039446318508737
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      Color color0 = jTextPane0.getSelectionColor();
      jDayChooser0.setDecorationBackgroundColor(color0);
      Locale locale0 = Locale.CANADA_FRENCH;
      jDayChooser0.setLocale(locale0);
      jDayChooser0.getMinSelectableDate();
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JYearChooser jYearChooser0 = new JYearChooser();
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDayBordersVisible(false);
      jYearChooser0.setDayChooser(jDayChooser0);
      JDayChooser jDayChooser1 = jYearChooser0.dayChooser;
      jDayChooser1.firePropertyChange("day", ')', ')');
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(238, 238, 238);
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      int int0 = (-2059);
      jDayChooser1.firePropertyChange("year", 238, (-2059));
      jDayChooser1.setSelectableDateRange(date0, date0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      StyleContext styleContext0 = new StyleContext();
      // Undeclared exception!
      try { 
        styleContext0.addAttribute((AttributeSet) null, jDayChooser1, defaultStyledDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 63720, false);
      basicComboBoxEditor0.focusLost(focusEvent0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jDayChooser0.addFocusListener(basicComboBoxEditor0);
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.requestFocusInWindow();
      jDayChooser0.setWeekdayForeground((Color) null);
      Color color0 = jDayChooser0.getWeekdayForeground();
      assertNull(color0);
      
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.setDecorationBackgroundVisible(true);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.733603922073186
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      boolean boolean0 = false;
      jDayChooser0.setRequestFocusEnabled(false);
      jDayChooser0.getAccessibleContext();
      BasicPanelUI basicPanelUI0 = new BasicPanelUI();
      jDayChooser0.setUI(basicPanelUI0);
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.isWeekOfYearVisible();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.getSundayForeground();
      jDayChooser1.getSundayForeground();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, 28, 14L, 36, 763, 'w');
      keyEvent0.setKeyCode(36);
      jDayChooser0.keyPressed(keyEvent0);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      JYearChooser jYearChooser0 = new JYearChooser();
      FileMode fileMode0 = new FileMode();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(fileMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "day");
      jDayChooser0.setDay(1);
      jDayChooser0.setForeground((Color) null);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.add((Component) jDayChooser0, (Object) jDayChooser0);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.setFocus();
      jDayChooser0.getSundayForeground();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters(1);
      jDayChooser0.isOpaque();
      ActionEvent actionEvent0 = new ActionEvent(")7wCEM\"(;6/", 25, "day", 148L, 25);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.addListeners(44);
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      assertEquals(14, jDayChooser0.getDay());
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "day");
      jDayChooser0.setDay(1);
      jDayChooser0.getDayPanel();
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      Date date1 = jDayChooser0.setMinSelectableDate(date0);
      assertSame(date1, date0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.isDecorationBackgroundVisible();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-2105), false);
      basicComboBoxEditor0.focusLost(focusEvent0);
      FocusListener focusListener0 = AWTEventMulticaster.add((FocusListener) basicComboBoxEditor0, (FocusListener) jDayChooser0);
      jDayChooser0.addFocusListener(focusListener0);
      jDayChooser0.setWeekOfYearVisible(true);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6527697871323417
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 63720, false);
      basicComboBoxEditor0.focusLost(focusEvent0);
      jDayChooser0.addFocusListener(basicComboBoxEditor0);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.getComponentPopupMenu();
      // Undeclared exception!
      try { 
        MockLocalDateTime.now((ZoneId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // zone
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.60511024750744
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.addListeners(0);
      jDayChooser0.addListeners(0);
      jDayChooser0.setMaxDayCharacters(4);
      MockInstant.ofEpochSecond((long) 0, (long) 0);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.setDay(0);
      jDayChooser1.updateUI();
      int int0 = 1921;
      int int1 = 0;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, 0, 1144L, 247, 1921, '>');
      JDayChooser jDayChooser2 = new JDayChooser(true);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser2.new DecoratorButton();
      boolean boolean0 = false;
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D();
      PDFDocumentGraphics2D pDFDocumentGraphics2D1 = null;
      try {
        pDFDocumentGraphics2D1 = new PDFDocumentGraphics2D(pDFDocumentGraphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.ext.awt.g2d.AbstractGraphics2D", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p5&3ixoj#JY)W ");
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.drawWeeks();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.setFocus();
      jDayChooser0.getMaxSelectableDate();
      assertEquals(14, jDayChooser0.getDay());
  }
}
