/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 09:02:49 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.585018356972772
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      User user0 = new User();
      user0.clone();
      user0.setCity("_cH (~+4yG=i#>n);");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setLastName("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS");
      user0.setCounty("z;c:H&F7hl0K");
      user0.setIdentifier(2573);
      derivedVariable0.setQuestionNumber("7i^Bd3Ze]i9N");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setFilePath((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      derivedVariable0.getFilePath();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.9603595587137033
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("|Xg*],iuJ:!vCgv");
      rawVariable0.setCleaningStatus((String) null);
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("a3i(e0.!9*_");
      derivedVariable0.setYear((String) null);
      derivedVariable0.getOntologyTerms();
      rawVariable0.getFilePath();
      User user0 = new User();
      user0.setAddressLine2((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.getAlternativeVariable();
      user0.setUserID((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getAvailability();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User();
      derivedVariable0.setCleaningStatus((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.7501600300849756
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      linkedList0.add(ontologyTerm0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getAvailability();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setLabel("");
      assertTrue(rawVariable0.isCleaned());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCategory((String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.columnStart = null;
      User user0 = new User("", "");
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable2);
      RawVariable rawVariable3 = new RawVariable();
      assertFalse(rawVariable3.isCleaned());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setColumnStart("general.error.blankField");
      user0.setLastName("4L5$K,:ndu^0");
      rawVariable0.setIsNewRecord(true);
      user0.setPostCode("general.fieldValue.blank");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.columnEnd = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.isNewRecord();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.791771825353923
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription(" I|si7&AzSXn");
      rawVariable0.setFilePath("h");
      rawVariable0.setAvailability("");
      rawVariable0.columnStart = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.clear();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setColumnEnd(":az... ");
      Variable.validateFields(rawVariable0);
      rawVariable0.getOntologyTerms();
      rawVariable0.getAvailability();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      Variable.validateFields(derivedVariable0);
      User user0 = new User("0$K", "UHudz8#sLZb6#$");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("h", rawVariable0.getFilePath());
      
      derivedVariable0.getValueLabels();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.788144558312022
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setLabel("-");
      valueLabel0.setValue((String) null);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clear();
      derivedVariable0.setName((String) null);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.clone();
      derivedVariable0.getAlias();
      derivedVariable0.getFilePath();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "R4:mn:?h";
      User user0 = new User("", "R4:mn:?h");
      try { 
        User.checkValidUserIDField("*G0_");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"*G0_\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.setLabel("variable.availability.label");
      rawVariable0.setCategory("O4f[");
      rawVariable0.getSupportingDocuments();
      rawVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("user.userID.saveChanges");
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getCategory();
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.673199461415907
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("OMg}+{UiOR1B", "OMg}+{UiOR1B");
      user0.setPostCode("OMg}+{UiOR1B");
      rawVariable0.setCodeBookNumber("OMg}+{UiOR1B");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier((-126));
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getName();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getValueLabels();
      assertEquals((-126), derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      User user0 = new User();
      rawVariable0.setLabel((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-987));
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("~", rawVariable0.getName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-4061));
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-4061", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-4061), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.670591143780782
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm1.setDescription((String) null);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.clone();
      rawVariable0.setLabel((String) null);
      rawVariable0.getLabel();
      rawVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      User user2 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(2796);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      assertEquals("2796", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("VRLYIA,d");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCategory("VRLYIA,d");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setQuestionNumber("?D`d");
      rawVariable0.getCleaningDescription();
      rawVariable0.getAlias();
      rawVariable0.getAlternativeVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIdentifier((-2084535520));
      User user0 = new User("S%)DRZ~xu<?~Z", "S%)DRZ~xu<?~Z");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("-2084535520", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-2084535520), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getFilePath();
      User user0 = new User();
      User user1 = new User();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList0);
      user0.setUserID("");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      User user1 = new User();
      rawVariable0.setIdentifier((-4061));
      assertEquals("-4061", rawVariable0.getDisplayItemIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      User user1 = new User();
      derivedVariable0.setFilePath("V");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      assertEquals("V", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.976127006342213
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      User user1 = new User();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-4061));
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("-4061", rawVariable0.getDisplayItemIdentifier());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.750404230329176
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.codeBookNumber = "DDBjZ&@urd~^S";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable2);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getDisplayItemIdentifier();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      
      String string0 = rawVariable0.getDisplayName();
      assertNull(string0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      User user0 = new User();
      rawVariable0.setLabel((String) null);
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable0.getName();
      Variable.validateFields(rawVariable0);
      boolean boolean0 = rawVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("~", rawVariable0.getName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("zqp~HyaF");
      rawVariable0.getFilePath();
      rawVariable0.notes = "zqp~HyaF";
      rawVariable0.getYear();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.createVariableSummary();
      assertEquals("zqp~HyaF", rawVariable0.getYear());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable1.isCleaned());
      
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("");
      User user0 = new User("", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAvailability("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      rawVariable1.questionNumber = null;
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS";
      rawVariable0.setAvailability((String) null);
      derivedVariable0.setCodeBookNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.clone();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.getCodeBookNumber();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.getDisplayName();
      String string0 = derivedVariable0.getCodeBookNumber();
      assertNull(string0);
      
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.929854973080188
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("general.fieldValue.blank");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setQuestionNumber("general.fieldValue.blank");
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      derivedVariable0.getColumnStart();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.clone();
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("general.fieldValue.blank", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      rawVariable0.setNotes("~");
      User user0 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = null;
      User user1 = new User();
      rawVariable1.getQuestionNumber();
      user1.setAffiliation((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.659942989980766
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("A");
      rawVariable0.setYear("A");
      rawVariable0.setCategory((String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.2003578934099024
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "~";
      user0.setPostCode("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      rawVariable0.setLabel("~");
      rawVariable1.setCategory("variable.notes.label");
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3838782514026584
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      User user0 = new User("", "variable.isCoded.label");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.getNotes();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      rawVariable0.setNotes("~");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      rawVariable0.getDisplayName();
      assertEquals("~", rawVariable0.getName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setAlias("4TwyGHA<&OL");
      User user0 = new User("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH", "UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      user0.setCity("-#");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("", "");
      user0.clone();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=4.159802247633402
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("X5NC$Xtz;", "r|$5ed/4Pf*");
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("r|$5ed/4Pf*");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setNotes("variable.isCoded.label");
      derivedVariable0.codeBookNumber = "r|$5ed/4Pf*";
      derivedVariable0.form = "r|$5ed/4Pf*";
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.isCoded();
      rawVariable0.getName();
      derivedVariable0.getForm();
      derivedVariable0.getForm();
      assertEquals("r|$5ed/4Pf*", derivedVariable0.getForm());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "Ql|i0]6IkhRSK.hEQaB";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getYear();
      assertEquals("", string1);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6852661909001596
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setNameSpace((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("A");
      derivedVariable0.columnStart = "-#";
      User user1 = new User("INVALID_ONTOLOGY_TERM", "-#");
      user1.setCity("INVALID_ONTOLOGY_TERM");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFileName());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addSourceVariable(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(1, arrayList0.size());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("+4Y@%");
      rawVariable0.setAlias((String) null);
      rawVariable0.setColumnStart("`O");
      rawVariable0.getFilePath();
      assertEquals("+4Y@%", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setNameSpace((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("A");
      User user1 = new User("INVALID_ONTOLOGY_TERM", "-#");
      derivedVariable0.questionNumber = "DUPLICATE_DOCUMENT_ASSOCIATION";
      user1.setCity("INVALID_ONTOLOGY_TERM");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("I2'9jR}y\"");
      derivedVariable0.getFilePath();
      assertEquals("I2'9jR}y\"", derivedVariable0.getForm());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setNameSpace((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("b:pJ2");
      rawVariable0.setCategory("");
      User user1 = new User("INVALID_ONTOLOGY_TERM", "-#");
      rawVariable0.createVariableSummary();
      assertEquals("b:pJ2", rawVariable0.getLabel());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      user0.setIdentifier((-1));
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.alternativeVariable.label");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.codeBookNumber = "guO;_{u[=Tl<0ELIN";
      derivedVariable0.createVariableSummary();
      assertEquals("variable.alternativeVariable.label", derivedVariable0.getYear());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("~");
      User user0 = new User("~", "~");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = null;
      User user1 = new User();
      rawVariable1.setCleaningStatus("INVALID_RAW_VARIABLE");
      user1.setAffiliation("~");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.0555153951973866
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      rawVariable0.setNotes("~");
      User user0 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("~");
      User user1 = new User("XEMrV", "UNABLE_TO_GET_CATEGORY_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaningStatus((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("mHO");
      derivedVariable0.createVariableSummary();
      assertEquals("mHO", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.6735493258434415
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("variable.codeBookNumber.label");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable1.setName("variable.codeBookNumber.label");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.clone();
      String string0 = "n2@o";
      rawVariable0.setCategory("n2@o");
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription((String) null);
      ontologyTerm1.clone();
      ontologyTerm1.setNameSpace((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("A");
      rawVariable0.setNotes("-#");
      User user1 = new User("INVALID_ONTOLOGY_TERM", "-#");
      user1.setAffiliation((String) null);
      user1.setCity("INVALID_ONTOLOGY_TERM");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFilePath());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1044));
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(2147483645);
      rawVariable0.questionNumber = null;
      User user1 = new User();
      User user2 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getAlias();
      assertEquals("2147483645", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = null;
      derivedVariable0.setName("variable.alias.label");
      derivedVariable0.getCleaningDescription();
      assertEquals("variable.alias.label", derivedVariable0.getName());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_UPDATE_VALUE_LABELS";
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      User user0 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = null;
      rawVariable1.setCoded(true);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "g2C1 %";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(153);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      assertEquals("153", derivedVariable0.getDisplayItemIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = " type=";
      derivedVariable0.setColumnStart(" type=");
      derivedVariable0.clone();
      derivedVariable0.setLabel(" type=");
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "macaw.util.ValidationUtility";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "macaw.util.ValidationUtility";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      
      String string1 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", string1);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("cGf,");
      rawVariable0.getYear();
      assertEquals("cGf,", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm((String) null);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "3/qe";
      rawVariable0.setCoded(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.getSupportingDocuments();
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT";
      rawVariable0.setNotes("~");
      User user0 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.form = "~";
      rawVariable1.questionNumber = null;
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setQuestionNumber("'");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "m 2Z41OJltx0O[i';B";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.form.label");
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("variable.form.label", rawVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("r");
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("r");
      rawVariable0.setLabel((String) null);
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      rawVariable0.setNotes("~");
      User user0 = new User("~", "~");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.codeBookNumber = "~";
      rawVariable1.questionNumber = null;
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("E/VN");
      derivedVariable0.getAlias();
      assertEquals("E/VN", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "}";
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.columnStart.label");
      rawVariable0.columnStart = "variable.columnStart.label";
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setNameSpace((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("A");
      rawVariable0.setCleaned(true);
      rawVariable0.setColumnEnd("-#");
      User user1 = new User("INVALID_ONTOLOGY_TERM", "-#");
      user1.setCity("INVALID_ONTOLOGY_TERM");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFileName());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.3868752543996616
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.label.label";
      derivedVariable0.columnEnd = "w";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("w", derivedVariable0.getColumnEnd());
      assertEquals("variable.label.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCoded(true);
      rawVariable0.notes = "DIs\"qs/";
      rawVariable0.getNotes();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getAvailability();
      rawVariable0.getValueLabels();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      User user0 = new User();
      rawVariable0.getColumnStart();
      assertEquals("DIs\"qs/", rawVariable0.getNotes());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm1.clone();
      ontologyTerm1.setNameSpace((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("A");
      rawVariable0.clone();
      assertEquals("A", rawVariable0.getLabel());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("@&4:L(#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.removeAll(arrayList1);
      derivedVariable1.setNotes((String) null);
      arrayList0.ensureCapacity(36);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable1.getQuestionNumber();
      derivedVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("^=zz'");
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("@&4:L(#", derivedVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      rawVariable0.setNotes("~");
      User user0 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("Yt|Ms=\u0002x5");
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable0.getAlias();
      assertEquals("~", rawVariable0.getName());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setNotes("general.fieldValue.blank");
      derivedVariable0.getYear();
      assertEquals("general.fieldValue.blank", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      supportingDocument0.setFileName("DUPLICATE_DOCUMENT_ASSOCIATION");
      arrayList0.add((SupportingDocument) null);
      arrayList1.add(supportingDocument0);
      rawVariable0.questionNumber = "#jIZi-^b";
      arrayList0.addAll((Collection<? extends SupportingDocument>) arrayList1);
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.addSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isCoded());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5343183560907687
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      rawVariable0.setNotes("~");
      User user0 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "variable.columnStart.label";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("variable.columnStart.label", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "u/G`\"z7~DvE|Y";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getDisplayName());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("u/G`\"z7~DvE|Y", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setDescription("EJ`_e@Bst");
      derivedVariable0.codeBookNumber = "LFA";
      User user1 = new User();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      ontologyTerm0.setDescription("O$7W/");
      derivedVariable0.clone();
      try { 
        User.checkValidEmail("variable.isCoded.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"variable.isCoded.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.setForm((String) null);
      User user0 = new User("DDMjZ&_uad~^S", "1|");
      rawVariable0.codeBookNumber = "-#";
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user1);
      String string0 = rawVariable0.getForm();
      assertNull(string0);
      
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("~");
      rawVariable0.codeBookNumber = "~";
      rawVariable0.setNotes("~");
      User user0 = new User("~", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      rawVariable1.questionNumber = null;
      User user1 = new User();
      rawVariable0.getAlias();
      assertEquals("~", rawVariable0.getNotes());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "sm9C";
      rawVariable0.setIsNewRecord(false);
      User user0 = new User("UNABLE_TO_DELETE_CATEGORY", "\".}@");
      user0.setCity("sm9C");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getColumnEnd();
      assertEquals("sm9C", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "?..>\"";
      derivedVariable0.form = "E";
      derivedVariable0.setCodeBookNumber("variable.notes.label");
      derivedVariable0.getColumnStart();
      assertEquals("?..>\"", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.name.labUe|");
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.iterator();
      User user0 = new User("6.V}=.jIAxA%RU", "3So,>n");
      rawVariable0.getCleaningStatus();
      rawVariable0.setCodeBookNumber("b:pJ2");
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("b:pJ2", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.setIdentifier(38);
      derivedVariable0.getYear();
      assertEquals("38", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("A");
      User user0 = new User("general.fieldValue.unkn~wn", "general.fieldValue.unkn~wn");
      user0.setCity("A");
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getLabel();
      assertEquals("A", rawVariable0.getLabel());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.7122543532420456
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription((String) null);
      ontologyTerm1.clone();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      User user1 = new User((String) null, "pE@uf]q|,#W");
      User user2 = new User();
      user2.setPassword((String) null);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, rawVariable1, rawVariable1);
      assertTrue(arrayList0.isEmpty());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setNameSpace((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("A");
      User user1 = new User("INVALID_ONTOLOGY_TERM", "-#");
      user1.setCity("INVALID_ONTOLOGY_TERM");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFilePath());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      User user0 = new User((String) null, "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getNotes();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.getValueLabels();
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      linkedList0.addFirst(supportingDocument0);
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      Variable variable0 = null;
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.addSourceVariable((Variable) null);
      System.setCurrentTimeMillis((-1L));
      supportingDocument0.setDocumentCode("h6Qf");
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.580404155485974
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.55809797042018
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      User user0 = new User((String) null, "");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      
      Variable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.432811072189696
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.setAlias("variable.name.label");
      System.setCurrentTimeMillis(956L);
      derivedVariable0.getAlias();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("general.fieldValue.blank");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("general.fieldValue.blank", rawVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "";
      rawVariable0.setColumnStart((String) null);
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }
}
