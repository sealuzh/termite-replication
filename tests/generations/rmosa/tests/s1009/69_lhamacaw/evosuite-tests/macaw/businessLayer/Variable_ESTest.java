/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 15:12:42 GMT 2020
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.8501476017100575
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.codeBookNumber = "";
      user0.setStatus("UNABLE_TO_CREATE_CHANGE_EVENT");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2607));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      user0.setFirstName((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable2, rawVariable0);
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable3 = (DerivedVariable)derivedVariable2.clone();
      assertEquals("Unknown", derivedVariable3.getAvailability());
      assertEquals("Unknown", derivedVariable3.getCleaningStatus());
      assertFalse(derivedVariable3.isCleaned());
      assertEquals(0, derivedVariable3.getIdentifier());
      assertEquals("Unknown", derivedVariable3.getCategory());
      
      derivedVariable1.getCleaningDescription();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("!");
      derivedVariable0.setIdentifier(188);
      derivedVariable0.notes = null;
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable0.codeBookNumber = ":cQJzrp_(M!L`";
      derivedVariable0.setCategory("UNABLE_TO_CHECK_CATEGORY_EXISTS");
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      rawVariable0.createVariableSummary();
      user0.setCounty((String) null);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.7376696182833657
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setCoded(true);
      derivedVariable0.form = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.getDisplayName();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.columnEnd = null;
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.columnEnd = null;
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCleaningDescription();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.listIterator();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.clone();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.getColumnEnd();
      derivedVariable0.clone();
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ontologyTerm0.setNameSpace("=}pzw-)zt ");
      ontologyTerm0.setIdentifier((-1718734011));
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4657359027997248
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.questionNumber.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.blank");
      supportingDocument0.setDocumentCode("D@X3UE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier(1123);
      supportingDocument0.setFilePath("user.status.saveChanges");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getNotes();
      assertEquals("1123", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7841896339182655
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.iterator();
      supportingDocument0.setTitle("user.county.label");
      supportingDocument0.setIdentifier((-1273));
      rawVariable0.getCategory();
      rawVariable0.getValueLabels();
      rawVariable0.setSupportingDocuments(arrayList0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(false);
      derivedVariable0.columnStart = "";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.isCoded();
      derivedVariable0.getAlias();
      User user0 = new User("nVaNW", "nVaNW");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getLabel();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "#Zz:tcnn_";
      User user0 = new User("#Zz:tcnn_", (String) null);
      rawVariable0.columnEnd = "#Zz:tcnn_";
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Variable.validateFields(rawVariable0);
      rawVariable0.getLabel();
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.setCoded(true);
      rawVariable0.getSupportingDocuments();
      rawVariable0.isCoded();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.codeBookNumber = "M4;FmN}4 l<93cT9";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.ensureCapacity((-2054114791));
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.getDisplayName();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getCleaningDescription();
      User.checkValidUserIDField("UNABLE_TO_UPDATE_ONTOLOGY_TERM");
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.questionNumber.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.blank");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("D@X3UE");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setFilePath("user.status.saveChanges");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setIdentifier((-206));
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      assertEquals((-206), rawVariable1.getIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.5553480614894135
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      ontologyTerm0.setOntologyName("Unknown");
      supportingDocument0.getDisplayName();
      supportingDocument0.setFilePath("Unknown");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ontologyTerm0.setOntologyName("Unknown");
      derivedVariable0.setCodeBookNumber("Unknown");
      ontologyTerm0.getDisplayName();
      derivedVariable0.setColumnEnd("Unknown");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      derivedVariable0.getForm();
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setFilePath("p");
      rawVariable0.clone();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getDisplayName();
      derivedVariable0.getFilePath();
      assertEquals("Unknown", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.8066624897703174
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "jO?";
      rawVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("jO?");
      supportingDocument0.getDisplayName();
      supportingDocument0.setDocumentCode("D@X3UE");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-2152));
      User user0 = new User("ycqJ", "D@X3UE");
      user0.setAddressLine1("D{aH9:F*NN");
      user0.clone();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.getCategory();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlternativeVariable();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.8712010109078947
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("j?");
      rawVariable0.columnStart = "jO?";
      rawVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("jO?");
      supportingDocument0.getDisplayName();
      supportingDocument0.setDocumentCode("D@X3UE");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("ycqJ", "D@X3UE");
      user0.setAddressLine1("D{aH9:F*NN");
      user0.clone();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.getCategory();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.clone();
      User user1 = new User("~", "variable.alias.label");
      user1.setUserID("jO?");
      user1.setAddressLine2("~");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, variable0);
      rawVariable0.getCodeBookNumber();
      assertEquals("jO?", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getName();
      assertNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.8501476017100575
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("@:iJHkFe", "@:iJHkFe");
      User.detectFieldChanges(user0, user0, user0);
      user0.clone();
      rawVariable0.setLabel(";Bpuuj/}-O>Bvh\"");
      rawVariable0.setAlias("@:iJHkFe");
      user0.setFirstName(")];^Eg=");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getName();
      System.setCurrentTimeMillis((-2039L));
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.clone();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable1.setLabel((String) null);
      rawVariable1.setIdentifier(1);
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.codeBookNumber = "UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER";
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable2);
      derivedVariable0.addSourceVariable(rawVariable1);
      rawVariable1.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ontologyTerm0.setOntologyName("!v^mN{C+so;S>RR");
      ontologyTerm0.setIdentifier(2521);
      ontologyTerm0.setTerm("!v^mN{C+so;S>RR");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ArrayList<MacawChangeEvent> arrayList1 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription(">Xd]<UpW9x");
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-470));
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.7376696182833657
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "zSkq4Y?dQ\"@dBvNV5";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.spliterator();
      derivedVariable0.columnStart = "u>^k";
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.clone();
      derivedVariable0.getDisplayName();
      derivedVariable0.getQuestionNumber();
      User user0 = new User("_BY?7X1Ueq5h%&", "zSkq4Y?dQ\"@dBvNV5");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("6w}");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setCleaned(true);
      rawVariable0.clone();
      rawVariable0.setIdentifier((-3964));
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.clone();
      derivedVariable0.getIdentifier();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCategory();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.8712010109078947
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User((String) null, "0ih.V@Od)mf<#");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getCategory();
      rawVariable2.getAlternativeVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setCleaned(true);
      rawVariable2.clone();
      User user1 = new User("UNABLE_TO_FILTER_ONTOLOGY_TERMS", "Unknown");
      user1.setUserID("?k-dMN3UwZaq<2Jc})=");
      user0.setAddressLine2("ycqJ");
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setCodeBookNumber((String) null);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable4);
      rawVariable4.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, (Variable) null, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.2958368660043296
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "#b{C _Vd";
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getAlias();
      derivedVariable0.questionNumber = "";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2013265917));
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.setNotes("#b{C _Vd");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setLabel("#b{C _Vd");
      User user0 = new User("", (String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getForm();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getIdentifier();
      derivedVariable0.getSourceVariables();
      assertEquals("#b{C _Vd", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("\"RWaRF9]4d_qEWz[;_");
      User user0 = new User();
      derivedVariable1.setColumnEnd("\"RWaRF9]4d_qEWz[;_");
      user0.setStatus("variable.qhestionNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      assertEquals("\"RWaRF9]4d_qEWz[;_", derivedVariable1.getColumnEnd());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getYear();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4657359027997248
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.category.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable1.getCategory();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      rawVariable0.setCleaned(true);
      rawVariable1.clone();
      User user0 = new User("?'", (String) null);
      User user1 = new User("~RBjU", "?'");
      user1.setStatus("?'");
      User user2 = new User("variable.questionNumber.label", "variable.questionNumber.label");
      Variable.detectChangesInAlternativeVariable(user2, variable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("2");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCleaned());
      
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5263605246161633
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.blank");
      supportingDocument0.setDocumentCode("D@X3UE");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertTrue(rawVariable1.isCoded());
      
      rawVariable0.getCategory();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      rawVariable0.getCodeBookNumber();
      Variable.validateFields(variable0);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable2.getYear();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7480673485460891
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.367295829986472
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1840700267));
      derivedVariable1.setCleaningStatus("variable.columnEnd.label");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT", "variable.questionNumber.label");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      user0.clone();
      derivedVariable1.getColumnEnd();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      derivedVariable2.setColumnStart((String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      derivedVariable2.getSourceVariables();
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable2.getQuestionNumber();
      derivedVariable2.getValueLabels();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.getForm();
      derivedVariable1.getAlias();
      assertEquals("variable.columnEnd.label", derivedVariable1.getCleaningStatus());
      
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable3);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2522392503365087
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      User user0 = new User();
      user0.setStatus("variable.qhestionNumber.label");
      rawVariable0.setAvailability(")");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals(")", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3111304404005155
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      derivedVariable0.setCleaningStatus("UNABLE_TO_GET_ORIGINAL_SUPPORTING_DOCUMENT");
      User user0 = new User();
      user0.setStatus("variable.qhestionNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("d2PLI2l^P5Vfw~GiB");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getAlias();
      assertEquals("d2PLI2l^P5Vfw~GiB", rawVariable0.getYear());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.610917912644226
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getValueLabels();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      rawVariable0.setCleaned(true);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setFilePath("8FU?FJSdI!ch.)S#;");
      derivedVariable0.addValueLabel(valueLabel0);
      ontologyTerm1.clone();
      ontologyTerm1.getDisplayName();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      derivedVariable0.isCleaned();
      rawVariable0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.getCategory();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.clone();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.getCategory();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setAlias("DUPLICATE_USER");
      User user0 = new User();
      derivedVariable0.columnStart = ")";
      user0.setStatus("variable.qhestionNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertEquals("DUPLICATE_USER", rawVariable0.getAlias());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel((String) null);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable3, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2522392503365087
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      User user0 = new User();
      user0.setStatus("variable.qhestionNumber.label");
      rawVariable0.setCodeBookNumber("pBkM6'O{");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertEquals("pBkM6'O{", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.getNotes();
      rawVariable0.createVariableSummary();
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("}>6");
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean1 == boolean0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      rawVariable0.getFilePath();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.getOntologyTerms();
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.label.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setCoded(true);
      derivedVariable0.setLabel(")");
      User user0 = new User();
      user0.setStatus("variable.qhestinNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertEquals("variable.label.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("%q..yH70, V");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(3069);
      ontologyTerm1.setOntologyName("variable.cleaningDescription.label");
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart(")");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.setName(")");
      derivedVariable0.isNewRecord();
      derivedVariable1.setLabel("variable.columnStart.label");
      User user0 = new User(")", "variable.columnStart.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getName();
      assertEquals(")", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      derivedVariable0.setLabel("");
      User user0 = new User();
      user0.setStatus("");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = null;
      derivedVariable1.setLabel("Y");
      derivedVariable0.setCategory("T");
      derivedVariable0.setLabel("T");
      User user0 = new User("T", "Y");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CREATE_CLEANING_STATE");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis(1L);
      derivedVariable0.getSupportingDocuments();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "j?";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.blank");
      supportingDocument0.setDocumentCode("D@X3UE");
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.getCategory();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      variable0.setCleaningStatus("D@X3UE");
      rawVariable0.setCleaned(true);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.setName(")");
      derivedVariable0.isNewRecord();
      derivedVariable1.setLabel("variable.columnStart.label");
      User user0 = new User(")", "variable.columnStart.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("variable.columnStart.label", derivedVariable1.getLabel());
      
      rawVariable0.getFilePath();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("ue");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.isNewRecord();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.isNewRecord();
      assertFalse(boolean0);
      
      derivedVariable1.addSourceVariable(derivedVariable0);
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(")");
      rawVariable0.getCleaningStatus();
      derivedVariable0.getDisplayName();
      System.setCurrentTimeMillis((-717L));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CREATE_CLEANING_STATE");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = null;
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertEquals(ChangeEventType.VARIABLE, macawChangeEvent0.getChangeType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName(")");
      User user0 = new User(")", "variable.columnStart.label");
      rawVariable0.getYear();
      Variable.validateFields(derivedVariable0);
      assertEquals(")", derivedVariable0.getName());
      assertEquals(")", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      User user0 = new User((String) null, "");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(3173);
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.setColumnStart("-");
      derivedVariable0.setIdentifier(3173);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.listIterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setName((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.isNewRecord();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable4.isNewRecord();
      DerivedVariable derivedVariable6 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      rawVariable0.createVariableSummary();
      User user0 = new User();
      rawVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals(")", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      User user0 = new User();
      derivedVariable0.setForm("%Z<6");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("variable.label.label");
      derivedVariable0.isNewRecord();
      derivedVariable0.isNewRecord();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      assertEquals("variable.label.label", derivedVariable0.getName());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("JfE{51E/9%z}$Q!C");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      assertEquals("JfE{51E/9%z}$Q!C", rawVariable0.getForm());
      
      String string0 = rawVariable1.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.questionNumber.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("D@X3UE");
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("AcAG,eGCMh?", "AcAG,eGCMh?");
      User user1 = new User("AcAG,eGCMh?", "AcAG,eGCMh?");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setName("SNy>kFlVi");
      derivedVariable1.setLabel((String) null);
      User user0 = new User(" type=", "SNy>kFlVi");
      User user1 = new User("Unknown", " type=");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable2, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2522392503365087
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("UNABLE_TO_GET_ORIGINAL_USER");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      User user0 = new User();
      user0.setStatus("variable.qhestionNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertEquals("UNABLE_TO_GET_ORIGINAL_USER", rawVariable0.getForm());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(")");
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("vu6}p{= ;4$6[z+naS2");
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.995732273553991
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("%Z<6", "%Z<6");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      user0.setAddressLine1("1COr$lmFFrn&Tb");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.label.label", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setForm("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("");
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable1.setForm("");
      derivedVariable0.setColumnStart("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      derivedVariable2.setName((String) null);
      derivedVariable1.isNewRecord();
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.isNewRecord();
      boolean boolean0 = derivedVariable2.isNewRecord();
      boolean boolean1 = derivedVariable0.isCoded();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.833213344056216
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      derivedVariable0.getAlias();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("mUy{c6i@U'm");
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getForm();
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.2580965380214835
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "AwgF*\"!<nL13.HIM";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getCategory();
      rawVariable0.clone();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("AwgF*\"!<nL13.HIM", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getAlias());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("blank");
      derivedVariable0.getCleaningDescription();
      assertEquals("blank", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "blank";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      User user0 = new User();
      user0.setPassword("V7DV1$?]&");
      supportingDocument0.setDocumentCode("UNABLE_TO_UPDATE_RAW_VARIABLE");
      supportingDocument0.clone();
      supportingDocument0.setIdentifier((-5479));
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      supportingDocument0.setFileName("!;Xw");
      arrayList0.add((OntologyTerm) null);
      supportingDocument0.getDisplayName();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "j?";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("j?");
      supportingDocument0.setFileName("general.fieldValue.blank");
      supportingDocument0.setDocumentCode("D@X3UE");
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.getCategory();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, variable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.questionNumber.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("DX3E");
      supportingDocument0.setFilePath("user.status.saveChanges");
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1070));
      rawVariable0.createVariableSummary();
      rawVariable0.getColumnEnd();
      assertEquals("-1070", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.questionNumber.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.blank");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setDocumentCode("D@X3UE");
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setFilePath("user.status.saveChanges");
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = null;
      rawVariable1.containsSupportingDocument(supportingDocument1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setIdentifier((-1080));
      supportingDocument1.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setFilePath("-");
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier((-1080));
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      supportingDocument0.setIdentifier((-1080));
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setFilePath((String) null);
      derivedVariable1.getDisplayName();
      derivedVariable1.setIdentifier((-1080));
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("zqzD8s~q");
      derivedVariable0.setNotes("general.error.blankField");
      derivedVariable0.setCleaningDescription("d2A%3}V7Kiu.K=;,o");
      derivedVariable0.clone();
      derivedVariable0.clone();
      derivedVariable0.getCleaningDescription();
      assertEquals("general.error.blankField", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "user.city.label";
      rawVariable0.columnEnd = "( dCJjxA1BdYX";
      rawVariable0.setAvailability("( dCJjxA1BdYX");
      rawVariable0.clone();
      rawVariable0.setAvailability("ttp~=}NdvC`sCAj");
      rawVariable0.getAlias();
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "G*";
      derivedVariable1.cloneAttributes(derivedVariable0);
      boolean boolean0 = derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("G*", derivedVariable0.getForm());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.191013317336941
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      User user0 = new User();
      rawVariable0.notes = ")";
      user0.setStatus("variable.qhestionNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertEquals(")", rawVariable0.getNotes());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setName((String) null);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.columnEnd = null;
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "XN";
      rawVariable0.setAlias("D@X3UE");
      rawVariable0.setIsNewRecord(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      assertEquals("D@X3UE", rawVariable0.getAlias());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setAvailability("variable.name.label");
      derivedVariable0.questionNumber = "macaw.businessLayer.SupportingDocument";
      derivedVariable0.getForm();
      assertEquals("variable.name.label", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("@cyjBz@N");
      derivedVariable0.getForm();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.addSourceVariable((Variable) null);
      assertEquals("@cyjBz@N", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("JfE{51E/9%z}$Q!C");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.getCleaningDescription();
      assertEquals("JfE{51E/9%z}$Q!C", rawVariable0.getForm());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      String string0 = rawVariable0.getColumnEnd();
      assertNotNull(string0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("c[l359~|nC");
      rawVariable0.setCodeBookNumber("Q/\"vI1}|<{og");
      rawVariable0.form = "g*o";
      rawVariable0.getYear();
      rawVariable0.getColumnEnd();
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      String string0 = "::jB-^lc2hcLFh_$";
      User user0 = new User("::jB-^lc2hcLFh_$", "");
      derivedVariable0.setQuestionNumber("dwmc02Lf.M");
      try { 
        User.checkValidEmail("7$gB");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"7$gB\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("Ey");
      derivedVariable0.getYear();
      assertEquals("Ey", derivedVariable0.getYear());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "{LQM";
      User user0 = new User(")", ")");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("{LQM", rawVariable0.getColumnEnd());
      
      rawVariable1.getAlias();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.1286665613687226
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      User user0 = new User();
      user0.setAddressLine2("M|~r[0");
      user0.setStatus("variable.qhestionNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      derivedVariable0.clone();
      assertEquals(")", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("%Z<6");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("");
      derivedVariable0.isNewRecord();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAvailability("");
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "LHA";
      rawVariable0.columnStart = "variable.questionNumber.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable0.isNewRecord();
      derivedVariable0.isNewRecord();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User((String) null, "");
      user0.setAddressLine1("QQ_.3j_`}SkFguHy[");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      user0.setStatus(")");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("X32r?W?1[alog");
      derivedVariable0.setNotes("UNABLE_TO_FILTER_SUMMARIES");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getYear();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getNotes();
      assertEquals("UNABLE_TO_FILTER_SUMMARIES", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CREATE_CLEANING_STATE");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm(" wv#J?fqv68$\u0007a2XGk");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      assertEquals(" wv#J?fqv68$\u0007a2XGk", derivedVariable0.getForm());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.form = "R-t$";
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getYear();
      derivedVariable0.getForm();
      derivedVariable0.getOntologyTerms();
      assertEquals("R-t$", derivedVariable0.getForm());
      
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("JfE{51E/9%z}$Q!C");
      rawVariable0.setCleaningDescription("^8t29m");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.getCleaningDescription();
      assertEquals("JfE{51E/9%z}$Q!C", rawVariable0.getForm());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("XFMW4GIM");
      rawVariable0.setColumnStart("=N^d$[QuA");
      rawVariable0.getLabel();
      assertEquals("=N^d$[QuA", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.178053830347946
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("y");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setName((String) null);
      rawVariable0.clone();
      assertEquals("y", rawVariable0.getCategory());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.9444389791664403
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setCodeBookNumber("$hZ:m$<?{~a4,n");
      rawVariable0.setFilePath("j'N8p{,w}(WF/7ym-|W");
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "macaw.businessLayer.User";
      derivedVariable0.columnEnd = "macaw.businessLayer.User";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getNotes();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      rawVariable0.columnEnd = "3NEbg%&d\"bDDx$@wm";
      rawVariable0.form = "3NEbg%&d\"bDDx$@wm";
      rawVariable0.questionNumber = null;
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getColumnEnd();
      rawVariable0.getQuestionNumber();
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("3NEbg%&d\"bDDx$@wm", rawVariable0.getColumnEnd());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("tzgM(Bw7JPo$;?r");
      derivedVariable0.getAlias();
      assertEquals("tzgM(Bw7JPo$;?r", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("[Ekwe/M_$peHp");
      rawVariable0.getColumnStart();
      assertEquals("[Ekwe/M_$peHp", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.1272886853327275
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      User user0 = new User((String) null, "");
      user0.setAddressLine1("QQ_.3j_`}SkFguHy[");
      RawVariable rawVariable0 = new RawVariable();
      user0.clone();
      rawVariable0.setCodeBookNumber((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("M7a,m|5;<M'hY");
      derivedVariable0.columnStart = "]$:fvq_nT]";
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getNotes();
      assertEquals("M7a,m|5;<M'hY", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber(" ");
      rawVariable0.getCleaningDescription();
      assertEquals(" ", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel(")");
      rawVariable0.getYear();
      derivedVariable0.getLabel();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals(")", derivedVariable0.getLabel());
      
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.getAlternativeVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      User user0 = new User((String) null, "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getColumnEnd();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.095767137704105
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      User user0 = new User((String) null, "");
      user0.setAddressLine1("QQ_.3j_`}SkFguHy[");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.095767137704105
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      User user0 = new User((String) null, "");
      user0.setAddressLine1("QQ_.3j_`}SkFguHy[");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable0.getAlias();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      
      rawVariable0.getName();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      
      derivedVariable0.createVariableSummary();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("C8fF}Ix;");
      derivedVariable0.getCleaningStatus();
      assertEquals("C8fF}Ix;", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
