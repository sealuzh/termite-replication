/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 08:51:38 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 18;
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.index = 64955;
      String string0 = "Bj`-}";
      classWriter0.newDouble(18);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64955, "L", "BA6[Knhh\"c", "Bj`-}", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)24;
      byteArray1[1] = (byte)24;
      byteArray1[2] = (byte)24;
      byteArray1[3] = (byte)24;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)19;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-694));
      classWriter0.index = (-694);
      classWriter0.addType("K2duQ<:l");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.newInteger((-694));
      classWriter0.invalidFrames = true;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-409), "", "!$+_t-V5ool5z]g", "", "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(36, 2);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-63);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      byteArray0[5] = (byte)58;
      // Undeclared exception!
      try { 
        byteVector1.putByteArray(byteArray0, (-1), 3609);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.index = 64955;
      classWriter0.newDouble(18);
      classWriter0.newConstItem("BA6[Knhh\"c");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64955, "L", "BA6[Knhh\"c", "Bj`-}", (Object) null);
      // Undeclared exception!
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnnotations", true);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.index = 64955;
      classWriter0.newDouble(18);
      classWriter0.newClassItem("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64955, "L", "BA6[Knhh\"c", "Bj`-}", (Object) null);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(629);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 629, "sB`dZ%{*H{}H(T,x", "sB`dZ%{*H{}H(T,x", "sB`dZ%{*H{}H(T,x", "sB`dZ%{*H{}H(T,x");
      Attribute attribute0 = new Attribute("sB`dZ%{*H{}H(T,x");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.index = 64955;
      classWriter0.newDouble(18);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64955, "L", "BA6[Knhh\"c", "Bj`-}", (Object) null);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(123);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 123, "c+<BM]<u", "c+<BM]<u", "c+<BM]<u", "c+<BM]<u");
      fieldWriter0.visitAnnotation("c+<BM]<u", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(629);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 629, "sBu`dZ%{*H{}HT,x", "sBu`dZ%{*H{}HT,x", "sBu`dZ%{*H{}HT,x", "sBu`dZ%{*H{}HT,x");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 629;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4041, "BA6[Knhh\"c", "BA6[Knhh\"c", (String) null, "BA6[Knhh\"c");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 83, "[]", "[]", "[]", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 247, "AI}1~b+]w^", "AI}1~b+]w^", "AI}1~b+]w^", "AI}1~b+]w^");
      fieldWriter0.visitAnnotation("AI}1~b+]w^", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(629);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Synthetic";
      classWriter0.visit(49, 49, "Synthetic", "Synthetic", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "}Ye7?p!1!pZ<Q", "Synthetic", "Y$7\u0006c^Kx3O", "Synthetic");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(104);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "V?Cu";
      stringArray0[1] = "aq``S%wo)S=LGg";
      stringArray0[2] = "j`E4xbY:4!";
      stringArray0[3] = "j`E4xbY:4!";
      stringArray0[4] = "j`E4xbY:4!";
      stringArray0[5] = "V?Cu";
      stringArray0[6] = "The wildcard array must not be null";
      stringArray0[7] = "j`E4xbY:4!";
      stringArray0[8] = "aq``S%wo)S=LGg";
      classWriter0.visit((-359), 131072, "The wildcard array must not be null", "j`E4xbY:4!", "aq``S%wo)S=LGg", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-359), "V?Cu", "aq``S%wo)S=LGg", "aq``S%wo)S=LGg", "V?Cu");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(62);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 62, "%", "%", "%", "%");
      fieldWriter0.visitAnnotation("%", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(629);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 629, "LocalVariableTypeTable", "LocalVariableTypeTable", "LocalVariableTypeTable", "LocalVariableTypeTable");
      fieldWriter0.visitAnnotation("LocalVariableTypeTable", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5, "f' ", "f' ", "f' ", "f' ");
      Attribute attribute0 = new Attribute("f' ");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 66, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.Handler", "wheel.asm.Handler", (String) null, (Object) null);
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(629);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 629, "sB`dZ%lH{}H(Tx", "sB`dZ%lH{}H(Tx", "sB`dZ%lH{}H(Tx", "sB`dZ%lH{}H(Tx");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-191));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-191), "LocalVariableTypeTable", "LocalVariableTypeTable", "LocalVariableTypeTable", "LocalVariableTypeTable");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(629);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 629, "BA6[Knhh\"c", "BA6[Knhh\"c", "BA6[Knhh\"c", "BA6[Knhh\"c");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 24, "%", "%", "%", "%");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 24, "%", "%", "%", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@10b6ac18
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 83, "[]", "[]", "[]", "[]");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "BA6[Knhh\"c", "BA6[Knhh\"c", (String) null, "BA6[Knhh\"c");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-351));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-351), "LocalVariableTypeTable", "LocalVariableTypeTable", "LocalVariableTypeTable", "LocalVariableTypeTable");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "BA6[Knhh\"c", "BA6[Knhh\"c", "BA6[Knhh\"c", "BA6[Knhh\"c");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(629);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 629, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 582, "r;Y<)b~A", "r;Y<)b~A", "r;Y<)b~A", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
