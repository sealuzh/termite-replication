/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 14:02:14 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      StringReader stringReader0 = new StringReader("koKp8{Z");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.parser = javaParser0;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&");
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("X$p:KU6rUSa9Df");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(63);
      simpleNode0.dump("Literal", stringWriter1);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("/u&oV");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&");
      StringReader stringReader1 = new StringReader(")");
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("In_ Lty/%3fM>u9_");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.dump(")", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.dump("Ho{g>/qfE3ld|", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>In_ Lty/%3fM>u9_</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>In_ Lty/%3fM>u9_</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("mXF2%0=]k`o@4h6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[1] = '.';
      charArray0[2] = 's';
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      stringWriter0.write("8[~'e.J(1.v");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode1.dump((String) null, stringWriter0);
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.dump((String) null, stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-2004769444));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6848735471085738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.identifiers = null;
      simpleNode0.jjtGetNumChildren();
      String string0 = "=";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      stringWriter0.write(10);
      stringWriter0.write("iqw6tRW;");
      simpleNode0.dump("iqw6tRW;", stringWriter0);
      assertEquals("\niqw6tRW;<EnumConstant>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[1] = '.';
      charArray0[2] = 's';
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.dump("B", stringWriter0);
      simpleNode1.dump("B", stringWriter0);
      simpleNode1.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode1.jjtGetParent();
      SimpleNode simpleNode2 = new SimpleNode(1);
      simpleNode2.dump("<", stringWriter0);
      simpleNode0.toString();
      simpleNode0.jjtAddChild(simpleNode2, 1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(7);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(7);
      simpleNode0.dump("Literal", stringWriter0);
      assertEquals("<ImplementsList>\n</ImplementsList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("Literal", stringWriter1);
      simpleNode0.dump("Literal", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[1] = '.';
      charArray0[2] = 's';
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.write(0);
      StringWriter stringWriter1 = new StringWriter(4);
      simpleNode0.dump("k.xLgh\"4lq", stringWriter0);
      assertEquals("\u0000<EnumBody>\n  <identifier>*ge</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = null;
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[1] = '.';
      charArray0[2] = 's';
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      String string1 = null;
      simpleNode1.dump((String) null, stringWriter0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode1;
      simpleNode1.children = nodeArray0;
      stringWriter0.write(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8222900060250078
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier("~");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier(">");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("EnumBody", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>~</identifier>\n  <identifier>*gt</identifier>\n</EnumBody>\n<EnumBody>\n  <identifier>~</identifier>\n  <identifier>*gt</identifier>\n</EnumBody>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("EnumBody");
      assertEquals("EnumBodyEnumBody : ~ : >", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(3672);
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*rshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("?", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(47);
      simpleNode0.dump("", stringWriter1);
      assertEquals("<InstanceOfExpression>\n  <identifier>*lshft</identifier>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "\"\\f\"";
      SystemInUtil.addInputLine("\"\f\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 84);
      simpleNode0.setIdentifier("");
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"\f\"", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.847039638507847
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier("~");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("~", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      JavaParser javaParser0 = new JavaParser("Literal");
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 9);
      simpleNode0.jjtGetChild(9);
      assertEquals(10, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      SimpleNode simpleNode0 = new SimpleNode(3711);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(1209);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)57;
      byteArray0[4] = (byte)93;
      byteArray0[5] = (byte) (-89);
      byteArray0[6] = (byte)72;
      byteArray0[7] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 17, (byte) (-89));
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 439);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode1;
      nodeArray0[1] = (Node) simpleNode1;
      nodeArray0[2] = (Node) simpleNode1;
      simpleNode1.children = nodeArray0;
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtGetParent();
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(node0, simpleNode0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[2] = 's';
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode2, 713);
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-57929283));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(975);
      simpleNode0.jjtAddChild(simpleNode0, 975);
      simpleNode0.jjtAddChild(simpleNode0, 975);
      assertEquals(976, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("s=>F(gi", stringWriter0);
      assertEquals("<TypeDeclaration>\n  <identifier>*amp</identifier>\n</TypeDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0254316870339695
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&");
      StringReader stringReader1 = new StringReader(")");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaParser javaParser1 = new JavaParser(stringReader1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, 37);
      simpleNode0.setIdentifier("EmptyStatement");
      simpleNode1.setIdentifier(" ~(e6/=P");
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 37);
      simpleNode2.parent = (Node) simpleNode0;
      simpleNode2.setIdentifier("qI 2?F0rI,");
      simpleNode1.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("qI 2?F0rI,", stringWriter0);
      simpleNode0.toString(" ~(e6/=P");
      Node node0 = simpleNode2.jjtGetParent();
      assertNotSame(node0, simpleNode2);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier("~");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("~", stringWriter0);
      simpleNode0.id = 2321;
      String string0 = ">=";
      // Undeclared exception!
      try { 
        simpleNode0.dump(">=", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2321
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = (-1162);
      SimpleNode simpleNode0 = new SimpleNode((-1162));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1162));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1162
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.id = 47;
      simpleNode0.setIdentifier("um`Ew4o.8P");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Rg:QR8Z-TaN06y", stringWriter0);
      simpleNode0.dump("</identifier>", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(115);
      // Undeclared exception!
      try { 
        simpleNode0.toString(";");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 115
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6248603116943127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(5);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(43);
      SimpleNode simpleNode2 = new SimpleNode(10);
      simpleNode2.setIdentifier("~");
      ArrayList<String> arrayList1 = simpleNode2.identifiers;
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      simpleNode1.setIdentifier("*lshft");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode2.dump("ContinueStatement", stringWriter0);
      simpleNode0.jjtSetParent(simpleNode2);
      simpleNode0.dump("\"const\"", stringWriter1);
      SimpleNode simpleNode3 = new SimpleNode((-3015));
      simpleNode3.dump("dm.+!tS{VK-I#;j", stringWriter1);
      stringWriter1.write("d=");
      simpleNode1.dump("7L'$R{.)@F<6E6I", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>~</identifier>\n</EnumConstant>\n<InclusiveOrExpression>\n  <identifier>*lshft</identifier>\n</InclusiveOrExpression>\n", stringWriter0.toString());
      
      SimpleNode simpleNode4 = new SimpleNode(12);
      simpleNode4.dump((String) null, stringWriter1);
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceDeclaration", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1114610888));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6691825225299436
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(5R8O142t");
      StringReader stringReader1 = new StringReader("]4JR7W");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaParser javaParser1 = new JavaParser(stringReader0);
      JavaParser javaParser2 = new JavaParser("3}V7Kiu.K=;,o");
      SimpleNode simpleNode0 = new SimpleNode(javaParser2, 0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser2, 0);
      SimpleNode simpleNode2 = new SimpleNode(47);
      simpleNode2.jjtAddChild(simpleNode0, 36);
      simpleNode2.setIdentifier("z");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("&");
      simpleNode2.dump("(5bQ;Z4)/77`cu9wT0g", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-2034577607));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6614769771805253
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SystemInUtil.addInputLine("\"\f\"");
      StringReader stringReader0 = new StringReader("&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      simpleNode0.setIdentifier("&");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.setIdentifier("&");
      simpleNode1.setIdentifier("*");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      ArrayList<String> arrayList2 = simpleNode1.identifiers;
      StringWriter stringWriter0 = new StringWriter(412);
      simpleNode0.dump("\"\f\"", stringWriter0);
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode0.dump("\"\f\"", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-883));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[1] = '.';
      charArray0[2] = 's';
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.dump((String) null, stringWriter0);
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.dump((String) null, stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-2004769444));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(18);
      simpleNode0.dump("Literal", stringWriter1);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("dM|tNDY@b86x");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 18;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dM|tNDY@b86x");
      FileSystemHandling.createFolder(evoSuiteFile0);
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("Literal");
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 18);
      StringWriter stringWriter1 = new StringWriter(18);
      simpleNode0.dump("Literal", stringWriter1);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("dM|tNDY@b86x");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.5924028775138872
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SystemInUtil.addInputLine("\"\f\"");
      StringReader stringReader0 = new StringReader("&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      simpleNode0.setIdentifier("&");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("~L}@mcl*Iwf");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 18);
      simpleNode1.dump("</identifier>", stringWriter0);
      simpleNode1.dump("\"\f\"", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-1106052531));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("um`Ew4o.8P");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Rg:QR8Z-TaN06y", stringWriter0);
      simpleNode0.dump("</identifier>", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(24);
      simpleNode0.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add(".P");
      arrayList0.listIterator();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("implements");
      simpleNode0.parent = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("o-h");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode1 = new SimpleNode((-8339742));
      StringWriter stringWriter0 = new StringWriter(451);
      simpleNode0.dump("implements", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8339742
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(70);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "\"\\f\"";
      SystemInUtil.addInputLine("\"\f\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 84);
      simpleNode0.setIdentifier("");
      try { 
        javaParser0.TypeParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.setIdentifier("y");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("y", stringWriter0);
      assertEquals("<TypeDeclaration>\n  <identifier>y</identifier>\n</TypeDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("*rshft");
      assertEquals("*rshftTypeDeclaration : y", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("um`Ew4o.8P");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Rg:QR8Z-TaN06y", stringWriter0);
      simpleNode0.dump("</identifier>", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>um`Ew4o.8P</identifier>\n</InstanceOfExpression>\n<InstanceOfExpression>\n  <identifier>um`Ew4o.8P</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("InstanceOfExpression : um`Ew4o.8P", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.33422114621338295
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("[");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("[");
      String string0 = "&~&?U5";
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(685);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.48439011623800354
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.write(0);
      StringWriter stringWriter1 = new StringWriter(4);
      stringWriter0.append('B');
      simpleNode0.dump("k.xLgh\"4lq", stringWriter0);
      assertEquals("\u0000B", stringWriter0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SystemInUtil.addInputLine("\"\f\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 84);
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("hagsVYcX.");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("\"\f\"", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>hagsVYcX.</identifier>\n</ForInit>\n", stringWriter0.toString());
  }
}
