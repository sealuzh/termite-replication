/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 04:12:20 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.Consumer;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addValueLabel((ValueLabel) null);
      arrayList0.remove((Object) valueLabel0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setQuestionNumber((String) null);
      rawVariable0.setCoded(false);
      rawVariable0.setIsNewRecord(false);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>(0);
      arrayList1.listIterator();
      rawVariable0.setValueLabels(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getOntologyTerms();
      derivedVariable0.getQuestionNumber();
      System.setCurrentTimeMillis(642L);
      String string0 = derivedVariable0.getColumnEnd();
      assertNotNull(string0);
      
      derivedVariable0.getAvailability();
      System.setCurrentTimeMillis(2141L);
      derivedVariable0.getAvailability();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      
      String string1 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setStatus((String) null);
      user0.setPassword("D_2fH>N|FGi");
      user0.setIdentifier((-1117));
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setIdentifier((-1117));
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4910593763577293
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setIdentifier(0);
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.getYear();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getColumnStart();
      derivedVariable0.setNotes(".z4laot3;IepoN");
      User user0 = new User((String) null, (String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(rawVariable0);
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.7111835171758907
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setIdentifier(2276);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getIdentifier();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.codeBookNumber = "K";
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setNotes(".5xtsR]%Gfj");
      rawVariable0.getDisplayItemIdentifier();
      assertEquals(".5xtsR]%Gfj", rawVariable0.getNotes());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("b3Z1N-t0bm1B,t");
      derivedVariable0.setLabel("{LdfLqT");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setLabel("b3Z1N-t0bm1B,t");
      derivedVariable0.getCategory();
      derivedVariable0.form = "=BlzyLBU~MY";
      derivedVariable0.setName("b3Z1N-t0bm1B,t");
      derivedVariable0.setCleaningDescription("b3Z1N-t0bm1B,t");
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("b3Z1N-t0bm1B,t", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      User user2 = new User((String) null, "UNABLE_TO_GET_CATEGORIES");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable1);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable0.getName();
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", (String) null);
      user0.setUserID("}<l,ivE.#A{$#!mHLQ");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getOntologyTerms();
      rawVariable0.getNotes();
      rawVariable0.setAlias("UNABLE_TO_CHECK_VALUE_LABEL_EXISTS");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.subList(1125, 1125);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1125
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.490577634378733
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1412));
      ontologyTerm1.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      User user0 = new User("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE", "variable.alternativeVariable.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      Variable.validateFields(derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, arrayList0.size());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setIdentifier((-2174));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("XDPSynaJc{+twX", "XDPSynaJc{+twX");
      user0.setIdentifier(0);
      User user1 = new User("ONTOLOGY_TERM", "qwdl");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean1 == boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.670807453536352
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setName("q");
      rawVariable0.setColumnStart(":%ORZy=<@$*[");
      User user0 = new User("q", "E0t!#'iGb@xDa7");
      rawVariable0.setIdentifier((-2082512785));
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals(":%ORZy=<@$*[", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.209755272811181
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setStatus((String) null);
      user0.setPassword("D_2fH>N|FGi");
      user0.setIdentifier((-1117));
      RawVariable rawVariable0 = new RawVariable();
      user0.setPassword("|F1r[wz3))");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.columnStart = null;
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCleaned());
      
      rawVariable1.setColumnEnd((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable1.getLabel();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.createVariableSummary();
      rawVariable3.getFilePath();
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setCity("q_;V M_2)a");
      user0.setPostCode("^P`%mf-)");
      rawVariable0.setFilePath("LyM");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setAvailability("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(169);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.673199461415907
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "D_2fH>N|FGi");
      user0.setStatus((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnStart((String) null);
      rawVariable1.setCleaningStatus("9=aS");
      User user1 = new User();
      rawVariable1.setLabel("9=aS");
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setColumnEnd("ly#a~qRo+)G/2dO6");
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("_opLn|kq!wAC");
      rawVariable0.setCoded(true);
      String string0 = null;
      rawVariable0.setLabel((String) null);
      rawVariable0.getLabel();
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        User.checkValidUserIDField((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setStatus("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("9=aS");
      User user1 = new User();
      rawVariable0.setLabel("9=aS");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getLabel();
      assertEquals("9=aS", rawVariable0.getLabel());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getFilePath();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      rawVariable0.setLabel((String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("}R:`aNJrDPnB,", "}R:`aNJrDPnB,");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5066794971566395
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "fC]JkO2.f,w,1&g";
      rawVariable0.setLabel("[");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      ontologyTerm0.setTerm("variable.isCoded.label");
      rawVariable0.setLabel("variable.isCoded.label");
      User user1 = new User();
      rawVariable0.getSupportingDocuments();
      assertEquals("variable.isCoded.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.438944473671935
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "g6/Jixu";
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      rawVariable0.hasSameDisplayName(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable1.isCoded();
      rawVariable0.getCleaningStatus();
      assertEquals("g6/Jixu", rawVariable0.getNotes());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setNotes((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.883700024003989
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setName("m");
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setColumnEnd("Z7>/{nt$%_<]vzH");
      User user0 = new User();
      user0.setPostCode("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      assertEquals("Z7>/{nt$%_<]vzH", rawVariable2.getColumnEnd());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.createVariableSummary();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable3);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getAvailability();
      rawVariable0.getValueLabels();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-2067947214));
      derivedVariable0.createVariableSummary();
      assertEquals((-2067947214), derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.questionNumber = "variable.cleaningStatus.label";
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.clone();
      ontologyTerm0.setNewRecord(false);
      linkedList0.add(ontologyTerm0);
      arrayList0.containsAll(linkedList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      arrayList0.containsAll(arrayList1);
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      // Undeclared exception!
      try { 
        arrayList0.subList(0, 2617);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 2617
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      assertTrue(derivedVariable0.isCleaned());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("[");
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      assertFalse(rawVariable2.isCoded());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertFalse(rawVariable2.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(75);
      derivedVariable0.createVariableSummary();
      assertEquals("75", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "UNABLE_TO_GET_ORIGINAL_VALUE_LABEL");
      user0.setStatus("user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      user0.setIdentifier(6357);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, (Variable) null);
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1995756248310236
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setYear("variable.questionNumber.label");
      rawVariable0.setColumnEnd((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7914120872432675
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(true);
      derivedVariable0.setLabel("K9E|X\"T");
      ontologyTerm0.setDescription("K9E|X\"T");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.getCategory();
      derivedVariable0.getNotes();
      derivedVariable0.isCoded();
      supportingDocument0.setIdentifier((-72));
      derivedVariable1.clone();
      derivedVariable0.getYear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User("user.lastName.label", "BNLIMy");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7512472229529905
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCategory();
      derivedVariable2.getNotes();
      supportingDocument0.setIdentifier((-1879048189));
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getYear();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      User user0 = new User((String) null, "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setStatus((String) null);
      user0.setPassword("D_2fH>N|FGi");
      user0.setIdentifier((-1117));
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "eb6?J?";
      rawVariable1.setColumnEnd("INVALID_ADMINISTRATOR");
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.addAll((-1968526675), (Collection<? extends OntologyTerm>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1968526675, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      rawVariable0.codeBookNumber = "^mE,^";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setFilePath("\"7s:2u:L*y;8");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList2);
      assertEquals("\"7s:2u:L*y;8", derivedVariable0.getFilePath());
      assertEquals("^mE,^", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.676468561049379
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      User user1 = new User("user.phone.saveChanges", "D_2fH>N|FGi");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.7536717592604214
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.notes.label";
      rawVariable0.setCodeBookNumber(";8..+DC}2^Nj3k");
      rawVariable0.getCodeBookNumber();
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      rawVariable0.setYear("OhkaJco");
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.6732919255860415
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable3 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable3.isNewRecord());
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
      assertEquals("Unknown", rawVariable3.getCategory());
      assertEquals("Unknown", rawVariable3.getAvailability());
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
      
      rawVariable1.getQuestionNumber();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("O%[H!");
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("\"i5vn8,S2aSjYMwC");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("[");
      rawVariable0.setAvailability(";8..+XDC}2^Qj3k");
      User user0 = new User("s3{qE/vjhlD", ")pJ;g+690?`ctc)2`");
      user0.setPassword("s3{qE/vjhlD");
      user0.setAffiliation("SELF_REFERENCING_ALTERNATIVE_VARIABLE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd(")pJ;g+690?`ctc)2`");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals(")pJ;g+690?`ctc)2`", rawVariable0.getColumnEnd());
      assertEquals(";8..+XDC}2^Qj3k", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "6{u:";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIsNewRecord(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setDescription("6{u:");
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User("qwdl", "6{u:");
      User user1 = new User("6{u:", "q(&*h");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals("6{u:", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("NON_EXISTENT_CATEGORY");
      User user0 = new User();
      rawVariable0.createVariableSummary();
      assertEquals("NON_EXISTENT_CATEGORY", rawVariable0.getYear());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("~E!");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      supportingDocument0.setTitle("variable.availability.label");
      supportingDocument0.clone();
      derivedVariable1.setCleaningStatus("variable.availability.label");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clone();
      arrayList0.ensureCapacity((-555));
      derivedVariable0.setColumnEnd("~E!");
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setYear("~E!");
      derivedVariable1.getAlias();
      derivedVariable0.getAvailability();
      derivedVariable1.getAvailability();
      derivedVariable0.setCategory("r](LC+&8m>QG");
      derivedVariable0.getColumnStart();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable1);
      derivedVariable1.addSourceVariables(arrayList1);
      assertEquals("variable.availability.label", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("i'#!X");
      derivedVariable0.getAvailability();
      User user0 = new User("`Ll", "Unknown");
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.setIsNewRecord(false);
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.getNotes();
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=4.186657231891718
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.clone();
      rawVariable0.getName();
      User user0 = new User();
      user0.setFirstName("INVALID_VALUE_LABEL");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.codeBookNumber = null;
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      rawVariable0.clone();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      System.setCurrentTimeMillis(1L);
      rawVariable0.getName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.addSourceVariable(rawVariable0);
      User user1 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setFilePath("`]4@");
      rawVariable0.setNotes("`]4@");
      rawVariable0.form = "`]4@";
      rawVariable0.getDisplayName();
      rawVariable0.createVariableSummary();
      rawVariable0.getSupportingDocuments();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("+Re!B-8k");
      derivedVariable1.getSourceVariables();
      derivedVariable1.hasSameDisplayName(rawVariable0);
      assertEquals("`]4@", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("variable.cleaningDescription.label");
      derivedVariable0.getFilePath();
      assertEquals("variable.cleaningDescription.label", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath((String) null);
      rawVariable0.setColumnEnd((String) null);
      RawVariable rawVariable1 = new RawVariable();
      String string0 = rawVariable0.getFilePath();
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "1fk%0";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.notes.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      rawVariable0.setCleaningStatus("");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCategory();
      rawVariable0.getCleaningStatus();
      derivedVariable1.getOntologyTerms();
      rawVariable1.getSupportingDocuments();
      derivedVariable1.getColumnEnd();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9703715548142835
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setName("m");
      rawVariable0.setCleaningStatus("qwdl");
      rawVariable0.setCoded(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setColumnEnd("m");
      User user0 = new User();
      user0.setPostCode("UNABLE_TO_CREATE_DATABASE");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("qwdl", rawVariable0.getCleaningStatus());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = null;
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      arrayList1.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("*YX1/M.B7DXOLgn");
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("*YX1/M.B7DXOLgn", variableSummary0.getDisplayName());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("[");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.name.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setStatus("variable.name.label");
      rawVariable0.setCategory("variable.name.label");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setQuestionNumber("user.status.unverified");
      rawVariable0.getForm();
      System.setCurrentTimeMillis(0L);
      rawVariable0.setQuestionNumber("variable.name.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(244);
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("[");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setStatus((String) null);
      user0.setPassword("D_2fH>N|FGi");
      user0.setIdentifier((-1117));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("D_2fH>N|FGi");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.form = "&I(-G?_O!P/v";
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      User.detectFieldChanges(user0, user1, user0);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.86257310963418
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "D_2fH>N|FGi");
      user0.setStatus((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningStatus("9=aS");
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setLabel("9=aS");
      ArrayList<OntologyTerm> arrayList0 = rawVariable2.getOntologyTerms();
      rawVariable2.removeOntologyTerms(arrayList0);
      rawVariable0.setColumnEnd("ly#a~qRo+)G/2dO6");
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      String string0 = null;
      rawVariable1.setCleaningStatus((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("[");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "m";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("m");
      rawVariable0.form = null;
      rawVariable0.setYear((String) null);
      User user0 = new User();
      rawVariable0.getNotes();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5484704145063404
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "user.phone.saveChanges";
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnStart();
      assertEquals("user.phone.saveChanges", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.548791081493674
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = ";8..+DC}2^Nj3k";
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("L}s`Iv<z");
      rawVariable0.getCleaningDescription();
      rawVariable0.createVariableSummary();
      assertEquals("L}s`Iv<z", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "6{u:";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIsNewRecord(true);
      rawVariable1.columnEnd = "6{u:";
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.getAlternativeVariable();
      assertEquals("", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "n#QcCsRL0vkBOp;G";
      String string0 = derivedVariable0.getLabel();
      assertEquals("", string0);
      
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "2AeMP8gP%";
      String string0 = derivedVariable0.getLabel();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      rawVariable0.getLabel();
      rawVariable0.getFilePath();
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart(")plo]hix0G98NXN[B");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      locale0.getExtensionKeys();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList1.add((String) null);
      locale0.getUnicodeLocaleKeys();
      List<String> list0 = new LinkedList<String>();
      arrayList0.removeAll(list0);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getCleaningStatus();
      rawVariable0.getSupportingDocuments();
      assertEquals(")plo]hix0G98NXN[B", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "6{u:";
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerms(arrayList0);
      rawVariable0.getQuestionNumber();
      ontologyTerm0.setOntologyName("6{u:");
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("Unknown");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getFilePath();
      derivedVariable0.getAlias();
      assertEquals("Unknown", derivedVariable0.getAlias());
      
      rawVariable0.getQuestionNumber();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "3{pru)5";
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User("NON_EXISTENT_VARIABLE_ASSOCIATION", "NON_EXISTENT_VARIABLE_ASSOCIATION");
      user0.setPassword("NON_EXISTENT_VARIABLE_ASSOCIATION");
      RawVariable rawVariable0 = new RawVariable();
      user0.setPhone(";8..+DC}2^Nj3k");
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.getQuestionNumber();
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(";G..+,C}2^Nj3");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      assertEquals(";G..+,C}2^Nj3", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.7132578473401083
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.questionNumber.label";
      rawVariable0.setAlias("user.county.saveChanges");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCoded(true);
      rawVariable0.isNewRecord();
      rawVariable0.setQuestionNumber("user.county.saveChanges");
      rawVariable0.setCleaningDescription((String) null);
      assertTrue(rawVariable0.isCoded());
      
      User user0 = new User("variable.questionNumber.label", "user.county.saveChanges");
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("+");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCodeBookNumber("user.phone.saveChanges");
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getColumnStart();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setMissingValue(true);
      valueLabel0.clone();
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.getAlias();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.isNewRecord();
      assertEquals("user.phone.saveChanges", rawVariable0.getCodeBookNumber());
      
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setNotes("i-R]N2Ar#jccn3 s] z");
      rawVariable0.setIsNewRecord(true);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getNotes();
      assertEquals("i-R]N2Ar#jccn3 s] z", rawVariable0.getNotes());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.columnStart = "R%4m\"Ifm&e7~4W1 ";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.setCoded(false);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      
      String string0 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setStatus("variable.name.label");
      rawVariable0.setCategory("variable.name.label");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setQuestionNumber("user.status.unverified");
      rawVariable0.getForm();
      System.setCurrentTimeMillis(0L);
      rawVariable0.setQuestionNumber("variable.name.label");
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "#oJ-Z:yn *";
      String string0 = rawVariable0.getCategory();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      String string1 = rawVariable0.getColumnEnd();
      assertEquals("", string1);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("n$[!%MF}!T");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.codeBookNumber = "n$[!%MF}!T";
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAlias();
      derivedVariable0.getNotes();
      derivedVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "variable.year.label";
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      rawVariable0.setLabel((String) null);
      rawVariable0.setAlias("]In1'0+3");
      rawVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setStatus("user.phone.saveChanges");
      user0.setPhone("user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      rawVariable0.isCoded();
      rawVariable0.getColumnStart();
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("macaw.businessLayer.Variable");
      derivedVariable0.setColumnEnd("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(0L);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.9175426508896702
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("T");
      rawVariable0.setColumnStart("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.setColumnEnd("T");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerms(arrayList0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      rawVariable1.setCleaningStatus("T");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5395719426739167
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setName(";X5x");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCategory("U3%E&Vy=FWOi$s");
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE";
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      Predicate<Object> predicate1 = predicate0.negate();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      predicate3.or(predicate1);
      arrayList0.removeIf(predicate3);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.listIterator(2588);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2588
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "NON_EXISTENT_CLEANING_STATE";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getName());
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.551562560455629
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.864555230685108
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setQuestionNumber("-LHA");
      rawVariable0.getForm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setQuestionNumber("6{u:");
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("DUPLICATE_ONTOLOGY_TERM");
      supportingDocument0.setDescription("DUPLICATE_ONTOLOGY_TERM");
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.4919394364751883
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals(";8..+DC}2^Nj3k", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-1846111421));
      rawVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.4919394364751883
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setName("<b5b#");
      Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.538812822808883
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      user0.setPassword("E+.6{");
      rawVariable0.setCleaningDescription("^>:VI");
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.5343183560907687
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "fC]JkO2.f,w,1&g";
      rawVariable0.setYear((String) null);
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5387456320543307
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "?";
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      assertEquals(";8..+DC}2^Nj3k", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.5347185161547943
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setColumnStart("DUPLICATE_ONTOLOGY_TERM");
      rawVariable0.setCategory("DUPLICATE_ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.trimToSize();
      rawVariable0.codeBookNumber = "DUPLICATE_ONTOLOGY_TERM";
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getValueLabels();
      rawVariable0.getDisplayItemIdentifier();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.5347185161547943
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("[");
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5343183560907687
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "CXQ\")_2/0?");
      user0.setPassword("D_2fH>N|FGi");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.setNotes("hc");
      rawVariable0.setColumnEnd(";8..+DC}2^Nj3k");
      User.detectFieldChanges(user0, user0, user0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("NS8BU@'R");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getYear();
      assertEquals("NS8BU@'R", rawVariable0.getYear());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setName("qwdl");
      assertEquals("qwdl", rawVariable0.getDisplayName());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.validateFields(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.5338841398510814
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = null;
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("al!+.|Kejcf3oyy");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.listIterator();
      linkedList0.add((Locale.LanguageRange) null);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList3);
      derivedVariable0.addSourceVariable(derivedVariable0);
      assertEquals("al!+.|Kejcf3oyy", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("ji@k\"<MMZ2qS");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCleaned();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
