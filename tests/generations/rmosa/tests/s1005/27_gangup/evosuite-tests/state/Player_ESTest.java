/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 03:20:14 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(344, "", (-1429));
      byte[] byteArray0 = player0.pack();
      player0.getTimeOfDeath();
      player0.toString();
      player0.setJoinOK(player0, true);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = Packable.UNDEFINED;
      Player player1 = new Player();
      player1.isJoinOK(player0, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(1392409296339L);
      Player player2 = new Player(0, "", "_K*^jE{IIpl_A%?d>", (short)4919, (short)4919);
      player0.setJoinOK(player2, false);
      assertEquals(4919, player2.getStrength());
      assertEquals("", player2.getIP());
      
      int int1 = player0.getStrength();
      assertEquals(1, int1);
      
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
      assertEquals((-1429), player0.getPictureId());
      
      player1.pack();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(344, "", (-1429));
      byte[] byteArray0 = player0.pack();
      player0.getTimeOfDeath();
      player0.setZ(0.1F);
      player0.toString();
      player0.setJoinOK(player0, true);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = Packable.UNDEFINED;
      boolean boolean0 = player0.isJoinOK(player0, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(1392409296320L);
      player0.pack();
      Player player1 = new Player(344, "", "", 0);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(boolean1);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals((-1429), player0.getPictureId());
      assertFalse(player1.isDead());
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(1077, ".*[.]class$", ".*[.]class$", (-2259));
      Party party0 = player0.prev;
      player0.setZ((-2283.0017F));
      player0.next = null;
      float float0 = player0.getZ();
      assertEquals((-2283.0017F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 5;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(5);
      Player player1 = null;
      float float0 = 1070.7585F;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(344, "<w[KKg3PqoiIJDy", 344);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-113), (byte)10);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 3);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(4);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      Player player1 = new Player(13568, "", "(?Ji<?", 1141, 0);
      int int1 = player1.getStrength();
      assertEquals(0, int1);
      
      System.setCurrentTimeMillis(1859L);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player4", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      player1.pack();
      assertEquals(1141, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      player0.setY((-1.0F));
      player0.setDead(3570L);
      player0.setDead(3570L, true);
      player0.pack();
      player0.pack();
      Party party0 = player0.prev;
      player0.add((Party) null);
      player0.setDead((-1L), false);
      player0.getStrength();
      player0.getZ();
      player0.getY();
      player0.setConnected(false);
      player0.getZ();
      player0.getZ();
      player0.getStrength();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(344, "", "", 344);
      player0.getZ();
      player0.pack();
      player0.getTimeOfDeath();
      player0.toString();
      player0.getTimeOfDeath();
      int int0 = Packable.UNDEFINED;
      player0.setX((-2108.0F));
      player0.getX();
      player0.getName();
      assertEquals((-2108.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(512, "", 512);
      player0.setMoney(512);
      player0.type();
      float float0 = player0.getMoney();
      assertEquals(512.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(344, "", 344);
      player0.setDead();
      player0.getTimeOfDeath();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player1 = new Player((short)4919, "", 344);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(1);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(12);
      player0.setJoinOK(player0, false);
      Player player1 = new Player(12);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals("Player12", player1.getName());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(14, " ", " ", 14, 14);
      player0.setZ(14);
      player0.getZ();
      int int0 = player0.type();
      assertEquals(14.0F, player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(3, "", (-1));
      player0.setMoney((-1));
      player0.getMoney();
      Player player1 = new Player(5);
      player1.head = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.getTimeOfDeath();
      player0.type();
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      
      System.setCurrentTimeMillis(723L);
      System.setCurrentTimeMillis(0L);
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(4936, (String) null, (String) null, 403);
      player0.getName();
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player(403, (String) null, " ", 4936, 4936);
      assertEquals(4936, player1.getStrength());
      assertEquals(4936, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-2462), "", 128);
      Player player1 = new Player((-2033), "", 27648);
      player1.pack();
      player1.pack();
      Player player2 = new Player();
      Party party0 = new Party(4919);
      Player player3 = new Player((-572), (String) null, 27648);
      player3.toString();
      Player player4 = new Player();
      String string0 = player4.toString();
      assertEquals("Player-1", string0);
      
      player0.type();
      int int0 = player3.type();
      assertEquals(5, int0);
      
      player1.pack();
      assertEquals(27648, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1, (String) null, 1);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-640));
      player0.setDead((long) (-640));
      player0.getTimeOfDeath();
      int int0 = Packable.UNDEFINED;
      float float0 = Player.TOLERANCE;
      Player player1 = new Player(4919, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "module.ModuleBrowserDialog$ModuleFilter", 3);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(5L);
      float float1 = player0.getZ();
      assertEquals((-640L), player0.getTimeOfDeath());
      assertEquals(0.0F, float1, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(344, "", 1);
      player0.getName();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.437138219230752
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1298, "4nQtZ,^*tu1DPtCxM", 1298);
      player0.getSubparty();
      player0.type();
      System.setCurrentTimeMillis(1298);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player();
      player0.add(player1);
      player0.isJoinOK(player1, true);
      byte[] byteArray0 = player0.pack();
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis((short)4919);
      player0.reset(true);
      player0.setMoney(0.1F);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      player0.type();
      player1.pack();
      player0.pack();
      player0.pack();
      player0.pack();
      player0.gangStrength();
      System.setCurrentTimeMillis(152L);
      System.setCurrentTimeMillis(5);
      player1.type();
      player1.pack();
      System.setCurrentTimeMillis((short)4919);
      int int0 = player1.type();
      assertEquals("4nQtZ,^*tu1DPtCxM", player1.getName());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0, "s):DzD$", "s):DzD$", 4919, (-3590));
      Player player1 = new Player();
      player1.setDead((long) (short)4919, true);
      player0.add(player1);
      player0.setZ(0.1F);
      player0.toString();
      Player player2 = new Player((short)4919, (String) null, (String) null, 4919);
      player2.getIP();
      player0.add(player2);
      assertEquals(0.1F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.getSubparty();
      player0.reset(true);
      player0.getX();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, (short)4919);
      player0.setConnected(false);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.skip((-1L));
      Party party0 = player0.prev;
      player0.remove((Party) null);
      player0.unpack(dataInputStream0);
      player0.getName();
      player0.isConnected();
      player0.type();
      player0.getMoney();
      player0.getTimeOfDeath();
      player0.type();
      System.setCurrentTimeMillis((short)4919);
      player0.isConnected();
      player0.pack();
      System.setCurrentTimeMillis(2685L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2176);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player2176", player0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(2147483628);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte) (-41);
      byteArray0[5] = (byte) (-57);
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      
      player0.pack();
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-582), (String) null, (String) null, (-582), (-582));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(1842);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((-1496L));
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(5, "", "", 10, 865);
      Player player1 = new Player(0, "77tY", "", (-2283));
      player1.remove(player0);
      player1.gangStrength();
      player0.pack();
      Party party0 = player1.next;
      player0.setConnected(true);
      player1.head = (Party) player0;
      player1.setDead((long) 865);
      assertEquals(865L, player1.getTimeOfDeath());
      
      player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(344, "", 344);
      player0.toString();
      player0.type();
      System.setCurrentTimeMillis(5);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, ".*[.]class$", ".*[.]class$", 0);
      player0.head = (Party) player1;
      player0.setConnected(true);
      byte[] byteArray0 = new byte[0];
      player0.gangStrength();
      player0.setDead(0L, false);
      player0.setX((-2497.21F));
      player0.unpack(byteArray0);
      player0.setY(3445.0F);
      float float0 = player0.getY();
      assertEquals(3445.0F, float0, 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-689), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (-689), (-689));
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-689), int0);
      assertFalse(player0.isDead());
      assertEquals((-689), player0.getPictureId());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(341);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 341, (-2544));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      player0.unpack(dataInputStream2);
      System.setCurrentTimeMillis((-2544));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(14238);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(32, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals("Player14238", player0.getName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1949), "9<{rcKBnq6Fz@V", "9<{rcKBnq6Fz@V", (-1949), (-1949));
      player0.gangStrength();
      player0.reset(true);
      player0.getIP();
      player0.getPictureId();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      Player player1 = new Player((byte)0, "9<{rcKBnq6Fz@V", 0);
      player0.setJoinOK(player1, true);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.setDead((long) (byte)0);
      float float0 = player0.getX();
      assertTrue(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-1), "E7osw.`", "TaGZks/9rT^~U!NK", (short)4919, (-1));
      player0.getSubparty();
      player0.setJoinOK(player1, true);
      assertEquals(0L, player1.getTimeOfDeath());
      
      player1.setDead((long) (short)4919, true);
      player0.setDead(0L, false);
      player1.setY(0L);
      player1.gangStrength();
      player0.getY();
      player1.isConnected();
      player0.isDead();
      player1.getSubparty();
      player1.getMoney();
      player1.id = (-1);
      player1.getMoney();
      float float0 = Player.TOLERANCE;
      player0.boss = null;
      player0.setDead(2074L, false);
      player0.setDead(1656L);
      int int0 = player1.gangStrength();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(1);
      float float0 = player0.getY();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player1", player0.toString());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(12);
      player0.isDead();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(323);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)4;
      player0.unpack(byteArray0);
      Player player1 = new Player(4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("Player4919", player1.getName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2147483628);
      player0.setDead(13571L);
      Player player1 = new Player(1610612736, ".#epE~T]rf6UDUeFr", 1610612736);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(342);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, "OE!c5", 1912, (-1));
      int int0 = player0.gangStrength();
      assertEquals((-1), int0);
      
      Player player1 = new Player((-1), (String) null, "module.ModuleBrowserDialog$ModuleFilter", (-1), 4);
      player0.isJoinOK(player1, false);
      assertFalse(player1.isDead());
      assertEquals(1912, player0.getPictureId());
      assertEquals(4, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(344);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(12);
      String string0 = player0.getName();
      assertEquals("Player12", string0);
      
      Player player1 = new Player(12);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = false;
      player0.setConnected(false);
      player0.setX(0.0F);
      Player player1 = new Player();
      player0.gangStrength();
      player0.setJoinOK(player1, false);
      player0.getPictureId();
      player0.getX();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, 2851);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(1);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(0, "", "", 1);
      int int0 = player0.getPictureId();
      assertEquals(1, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1);
      player0.isJoinOK(player0, false);
      player0.setX(1);
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(331);
      Player player1 = new Player((-1));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis((short)4919);
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(12);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-9946), "", "", 2503, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2503, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(4831);
      player0.reset(false);
      int int0 = player0.type();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(5, int0);
      assertEquals("Player4831", player0.getName());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(344, "", 344);
      player0.setY(344);
      System.setCurrentTimeMillis(344);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(323);
      Player player1 = new Player(323);
      player1.remove(player0);
      player1.reset(true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player323", player1.toString());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(335);
      byte[] byteArray0 = new byte[1];
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player335", player0.getName());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(14238);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(335);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)112;
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("Player335", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player((-14795));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player(335);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte) (-107);
      player0.unpack(byteArray0);
      boolean boolean0 = player0.isConnected();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player335", player0.toString());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player(10);
      player0.setDead(1295L, false);
      player0.setZ(0.0F);
      assertEquals(1295L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player(2646);
      Player player1 = new Player((short)4919);
      player1.setZ(0.1F);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0.1F, player1.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player(2630);
      player0.getIP();
      String string0 = player0.toString();
      assertEquals("Player2630", string0);
      
      String string1 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string1);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Player player0 = new Player(335);
      float float0 = player0.getMoney();
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("Player335", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Player player0 = new Player((-4));
      player0.setMoney(0.0F);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
