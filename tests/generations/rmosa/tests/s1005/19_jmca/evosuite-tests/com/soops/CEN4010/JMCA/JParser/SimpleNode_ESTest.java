/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 03:41:18 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(78);
      simpleNode0.jjtGetNumChildren();
      stringWriter0.flush();
      char[] charArray0 = new char[6];
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      charArray0[0] = 'h';
      charArray0[1] = '/';
      charArray0[2] = 'h';
      charArray0[3] = '/';
      charArray0[4] = 'h';
      charArray0[5] = 'q';
      stringWriter0.write(charArray0);
      stringWriter0.close();
      simpleNode0.dump("*le", stringWriter0);
      simpleNode0.dump("*le", stringWriter0);
      assertEquals("h/h/hq", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      String string0 = "o";
      simpleNode0.identifiers = null;
      ArrayList<String> arrayList0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">>");
      Node node0 = simpleNode0.parent;
      JavaParser javaParser0 = new JavaParser(":AI>zH99\"!q>Td*4");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*rshft</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier(">");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump(" * Ff:DdZS:/@", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*gt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier(")KtN#BOhSa[YC&");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("", stringWriter1);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*le</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("{");
      Node node0 = simpleNode0.parent;
      JavaParser javaParser0 = new JavaParser("\"}\"");
      simpleNode0.parser = javaParser0;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("\"}\"", stringWriter0);
      assertEquals("<RelationalExpression>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      SimpleNode simpleNode1 = new SimpleNode(18);
      Node node0 = simpleNode1.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("}");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(1951);
      stringWriter1.close();
      simpleNode0.dump(":7 iI", stringWriter1);
      assertEquals("<InstanceOfExpression>\n</InstanceOfExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9533039204583373
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      simpleNode0.setIdentifier("<");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      Node node1 = simpleNode0.parent;
      JavaParser javaParser0 = new JavaParser(">=");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("%8TDLZ", stringWriter0);
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) ">=", 18, 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("&&");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.append((CharSequence) ">=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("&&", stringWriter0);
      assertEquals(">=<ForInit>\n  <identifier>*amp</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(46);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<EqualityExpression>\n</EqualityExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(58);
      SimpleNode simpleNode1 = new SimpleNode(57);
      simpleNode0.jjtAddChild(simpleNode1, 57);
      simpleNode0.jjtAddChild(simpleNode1, 58);
      assertEquals(59, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(117);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      simpleNode0.jjtAddChild(simpleNode0, 117);
      simpleNode0.jjtAddChild(simpleNode0, 117);
      simpleNode0.jjtGetChild(117);
      StringWriter stringWriter0 = new StringWriter();
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      String string0 = "o";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      SystemInUtil.addInputLine("j?mfHi ]zlT:q");
      simpleNode0.setIdentifier("&");
      simpleNode0.setIdentifier("U=");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("", stringWriter1);
      assertEquals("<EnumConstant>\n  <identifier>*amp</identifier>\n  <identifier>U=</identifier>\n</EnumConstant>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString("j?mfHi ]zlT:q");
      assertEquals("j?mfHi ]zlT:qEnumConstant : & : U=", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SimpleNode simpleNode0 = new SimpleNode(1896);
      SimpleNode simpleNode1 = new SimpleNode((-595));
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertFalse(node0.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<<");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">=");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.append((CharSequence) "");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("", stringWriter1);
      assertEquals("<EnumConstant>\n  <identifier>*ge</identifier>\n</EnumConstant>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(13);
      simpleNode0.jjtGetNumChildren();
      StringReader stringReader0 = new StringReader("=");
      JavaParser javaParser0 = new JavaParser("*rshft");
      simpleNode0.jjtAddChild(simpleNode0, 2048);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("<identifier>Literal Value</identifier>\n", stringWriter0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("\"}\"");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(2732);
      Node[] nodeArray0 = new Node[1];
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0105301834040734
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier("");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "");
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 104);
      assertEquals(105, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      simpleNode0.jjtAddChild(simpleNode0, 3);
      simpleNode0.jjtAddChild(simpleNode0, 1532);
      assertEquals(1533, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      SimpleNode simpleNode1 = new SimpleNode(84);
      simpleNode0.id = 84;
      simpleNode1.jjtAddChild(simpleNode0, 10);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("Cj)Uco+#?Of12CM 3", stringWriter0);
      assertEquals(11, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      simpleNode0.setIdentifier("<");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = 'q';
      charArray0[3] = 'h';
      stringWriter1.write(charArray0);
      stringWriter1.close();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(nodeArray0[2], 6);
      assertEquals(9, nodeArray0.length);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      SimpleNode simpleNode0 = new SimpleNode(6);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.dump("6A^q@{2", stringWriter0);
      assertEquals("<ExtendsList></ExtendsList>\n", stringWriter0.toString());
      
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("o", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.jjtAddChild((Node) null, 28);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("o", stringWriter0);
      simpleNode0.toString();
      simpleNode0.jjtGetChild(28);
      assertEquals(29, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtSetParent(simpleNode0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("~");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtSetParent((Node) null);
      stringWriter0.write(84);
      simpleNode0.dump("tLbgXvF!HIuKZ", stringWriter0);
      assertEquals("T<ForInit>\n  <identifier>~</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = (-1106823794);
      SimpleNode simpleNode0 = new SimpleNode((-1106823794));
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1106823794));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1106823794
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-2845));
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[0], (-2845));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2845
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "QbB'AQc>E-O-ce9#~";
      JavaParser javaParser0 = new JavaParser("QbB'AQc>E-O-ce9#~");
      int int0 = 487;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 487);
      simpleNode0.jjtOpen();
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4096);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4096
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9749540746744716
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.close();
      simpleNode0.dump("<", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      int int0 = (-1437);
      simpleNode0.parent = (Node) simpleNode0;
      simpleNode0.parent = (Node) simpleNode0;
      simpleNode0.toString();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-3810));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2605);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("", (Writer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2605
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.16467004250403
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("=");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      simpleNode0.setIdentifier("y");
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = simpleNode0.parent;
      String string0 = "*rshft";
      try { 
        javaParser0.EnumBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1775));
      // Undeclared exception!
      try { 
        simpleNode0.toString("^");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1775
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9510567829046702
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(100);
      StringWriter stringWriter0 = new StringWriter(100);
      simpleNode0.dump("];sg,~RWr?z", stringWriter0);
      simpleNode0.setIdentifier("];sg,~RWr?z");
      Node node0 = simpleNode0.parent;
      JavaParser javaParser0 = new JavaParser("3pGB2R\"E*87");
      Node node1 = javaParser0.currNode;
      StringWriter stringWriter1 = new StringWriter(905);
      simpleNode0.dump("", stringWriter1);
      assertEquals("<MemberValuePair>\n  <identifier>];sg,~RWr?z</identifier>\n</MemberValuePair>\n", stringWriter1.toString());
      
      simpleNode0.toString("3pGB2R\"E*87");
      String string0 = simpleNode0.toString();
      assertEquals("MemberValuePair : ];sg,~RWr?z", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("\"}\"");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("\"}\"", stringWriter0);
      Node node1 = simpleNode0.jjtGetParent();
      assertNull(node1);
  }
}
