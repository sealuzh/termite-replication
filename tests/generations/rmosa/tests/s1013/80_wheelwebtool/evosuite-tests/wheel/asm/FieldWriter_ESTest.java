/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 14:51:45 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2181), "Runim=nvisic@eAnnotations", "Runim=nvisic@eAnnotations", "Runim=nvisic@eAnnotations", "Runim=nvisic@eAnnotations");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 285212673, "GtA", "?e\"->[5:c\"r+ZSK$?af", "S`FMo~]uMDv", "0ha<H8([p2ny[!d");
      Attribute attribute0 = new Attribute("C\"TR");
      fieldWriter1.visitAttribute(attribute0);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(2997);
      fieldWriter0.put(byteVector0);
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = new ByteVector(285212673);
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ClassWriter classWriter0 = new ClassWriter(285212663);
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2181), "Zz(-B'qg0E\"l*x<4#Qw", "Zz(-B'qg0E\"l*x<4#Qw", "Zz(-B'qg0E\"l*x<4#Qw", "Zz(-B'qg0E\"l*x<4#Qw");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte) (-51);
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(36);
      classWriter0.index = (-613);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 36, "`", "`", "`", "`");
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("C;#`cnyyHXS|tg,", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte)5;
      classWriter0.index = 285212673;
      classWriter0.version = 34;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2162), "vbe|<{jnF-WW\"", "vbe|<{jnF-WW\"", "vbe|<{jnF-WW\"", "vbe|<{jnF-WW\"");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Y%*OO,z8G4 O`[h*Oy", "Y%*OO,z8G4 O`[h*Oy", "Y%*OO,z8G4 O`[h*Oy", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-2399);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(36);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 36, "pt", "pt", "pt", "pt");
      Attribute attribute0 = new Attribute("pt");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 40, ".s.IFJDCS", ".s.IFJDCS", (String) null, ".s.IFJDCS");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1174, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2181), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      classWriter0.version = (-2181);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2181), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "DWZ]/", "DWZ]/", "DWZ]/", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1177);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1177, "^8", "^8", "^8", "^8");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(36);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 36, "`", "`", "`", "`");
      fieldWriter0.visitAnnotation("`", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-9), "`", "`", "`", "`");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-5), "D8]", "D8]", "D8]", "D8]");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(35);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 35, "t4", "t4", "t4", "t4");
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation("t4", false);
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1169, "DWZ]/", "DWZ]/", "DWZ]/", "DWZ]/");
      fieldWriter0.visitAnnotation("DWZ]/", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1217);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1217, "D8]/", "D8]/", "D8]/", "D8]/");
      fieldWriter0.visitAnnotation("D8]/", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "InnerClasses", "InnerClasses", "]}IoGs745PEre(;m%", "RuntimeInvisibleAnnotations");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)63;
      fieldWriter0.visitEnd();
      fieldWriter0.next.visitEnd();
      assertSame(fieldWriter0, fieldWriter1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", (String) null, "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-84);
      int int0 = (-1068);
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, 4757, (-1068), 24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1158);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1158, " Q%!/pR7.rjI!=", " Q%!/pR7.rjI!=", " Q%!/pR7.rjI!=", " Q%!/pR7.rjI!=");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-365), " Q%!/pR7.rjI!=", " Q%!/pR7.rjI!=", " Q%!/pR7.rjI!=", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1174, "D8]/", "D8]/", "D8]/", "D8]/");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1677), "", "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
