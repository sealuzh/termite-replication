/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 20:44:55 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Q_u?P", "Q_u?P", "Q_u?P", "Q_u?P");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "yH$zE5z J+xdlz3HB~";
      stringArray0[2] = "";
      stringArray0[3] = "yH$zE5z J+xdlz3HB~";
      stringArray0[4] = "";
      stringArray0[5] = "";
      classWriter0.visit(49, 49, "Q_u?P", "", "gv#gkf}o=..", stringArray0);
      ByteVector byteVector0 = new ByteVector(49);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      classWriter0.index = (-1807);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "4Jnxmsg7Lk", "4Jnxmsg7Lk", "Q_u?P", "Q_u?P");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Q_u?P", "Q_u?P", "Q_u?P", "Q_u?P");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "yH$zE5z J+xdlz3HB~";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      classWriter0.visit(49, 30, "g[v#gkf}o=..", "", "", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      classWriter0.index = (-1533);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "{", "Q_u?P", "{");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "The size must be non-negative", "The suffix must not be null", "Q_u?P", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "The size must be non-negative", "The suffix must not be null", "Q_u?P", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "The size must be non-negative", "The suffix must not be null", "Q_u?P", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 16777228;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "Q_u?P", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByteArray((byte[]) null, 8, (-2129));
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 65535, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5940241655824705
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "The size must be non-negative", "The suffix must not be null", "Q_u?P", (Object) null);
      Attribute attribute0 = new Attribute("vr6[1jLHb2n");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "The size must be non-negative", "The suffix must not be null", "Q_u?P", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("RuntimeVisibleParameterAnnotations", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1533), "", "Signature", (String) null, "Q_u?P");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("T[bwc gos", true);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      classWriter0.version = (-456);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "The size must be non-negative", "The suffix must not be null", "Q_u?P", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "9t<^.", "", "[D}[f", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1533), "", "Signature", (String) null, "Q_u?P");
      fieldWriter0.visitAnnotation("T[bwc gos", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2129));
      classWriter0.version = (-456);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1807), "The size must be non-negative", "The suffix must not be null", "Q_u?P", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Q_u?P", "", "Q_u?P", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6338));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2634, "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", (String) null, classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4026));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 50, "Q_u?P", "Q_u?P", "Q_u?P", "Q_u?P");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1533), "wheel.asm.FieldWriter", "Q_u?P", "wheel.asm.FieldWriter", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5fadc6b0
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "KJaT.v63", "", "KJaT.v63", "");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.7902679680745903
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1533));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Q_u?P", "", "Q_u?P", "");
      fieldWriter0.next = fieldWriter0;
      Attribute attribute0 = new Attribute("Q_u?P");
      fieldWriter0.next.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
