/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 20:40:40 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.DataInputStream;
import java.io.PipedInputStream;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.951108670745811
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter(84);
      stringWriter0.flush();
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter1 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      stringWriter1.write(charArray0);
      simpleNode0.dump("m@4k muTB4", stringWriter0);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("m@4k muTB4", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode1.children = null;
      simpleNode1.jjtGetParent();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.dump("m@4k muTB4", stringWriter1);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.dump("71Zmgw%{%v", stringWriter3);
      assertEquals("<ForInit>\n  <identifier>~</identifier>\n</ForInit>\n", stringWriter3.toString());
      
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      simpleNode0.jjtGetNumChildren();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      SimpleNode simpleNode1 = new SimpleNode(0);
      assertEquals(0, simpleNode1.jjtGetNumChildren());
      
      Node[] nodeArray0 = new Node[4];
      nodeArray0[1] = (Node) simpleNode1;
      nodeArray0[2] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      simpleNode1.children = nodeArray0;
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.jjtGetParent();
      arrayList0.parallelStream();
      simpleNode0.toString();
      String string0 = simpleNode0.toString();
      assertEquals("PackageDeclaration", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("4");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("\\", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>4</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(63);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "g");
      simpleNode0.dump("+J$O[+^a5(<", stringWriter1);
      assertEquals("g<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
      assertEquals("g<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 84;
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter(84);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter1 = new StringWriter(84);
      String string0 = "AllocationExpression";
      simpleNode0.dump("AllocationExpression", stringWriter0);
      int int1 = (-71483102);
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "AllocationExpression", 84, (-71483102));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 68;
      StringWriter stringWriter0 = new StringWriter(68);
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.id = 48;
      byte[] byteArray0 = new byte[1];
      simpleNode0.identifiers = null;
      byteArray0[0] = (byte) (-28);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "BeAJ+VcjSVK0#";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("BeAJ+VcjSVK0#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("H~", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      StringWriter stringWriter0 = new StringWriter(21);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("=", stringWriter1);
      assertEquals("<MethodDeclaration>\n  <identifier>*le</identifier>\n</MethodDeclaration>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      SimpleNode simpleNode1 = new SimpleNode(84);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("3LIVD/J_hKQJ", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.toString("");
      simpleNode0.setIdentifier("-");
      simpleNode0.toString("MethodDeclaration");
      SimpleNode simpleNode1 = new SimpleNode(21);
      simpleNode1.children = simpleNode0.children;
      Node node0 = simpleNode1.jjtGetChild(0);
      assertNotSame(simpleNode1, node0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">>");
      simpleNode0.setIdentifier("4");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("tH", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*rshft</identifier>\n  <identifier>4</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<AdditiveExpression>\n</AdditiveExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&&");
      simpleNode0.toString(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("rp-[*\"tYm'? ;O-", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("<=");
      assertEquals("<=CompilationUnit : &&", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5481178804418445
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5670609309552819
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("4");
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.id = (-1086385980);
      simpleNode1.jjtAddChild(simpleNode0, 18);
      simpleNode1.setIdentifier((String) null);
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("}", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(5);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode1 = new SimpleNode(5);
      simpleNode0.jjtAddChild(simpleNode1, 78);
      assertEquals(79, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString("^8 aPR8");
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit :  : ");
      char[] charArray0 = new char[7];
      charArray0[0] = 's';
      charArray0[1] = 'F';
      charArray0[3] = 'F';
      charArray0[4] = 'S';
      charArray0[5] = '$';
      stringWriter1.flush();
      charArray0[6] = 's';
      stringWriter1.write(charArray0);
      simpleNode0.dump("CompilationUnit : ", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.toString();
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(5);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode1 = new SimpleNode(5);
      simpleNode0.jjtAddChild(simpleNode1, 5);
      assertEquals(6, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(29);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<ReferenceType>\n</ReferenceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.48439011623800354
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("g", stringWriter0);
      assertEquals("<MethodDeclaration>\n  <identifier>g</identifier>\n</MethodDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("MethodDeclaration : g : {", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9732369259683629
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-28);
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) null);
      StringWriter stringWriter1 = new StringWriter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 48);
      simpleNode0.dump("\">>>_=\"", stringWriter0);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump((String) null, stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(2627);
      simpleNode1.jjtGetParent();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.dump("{H<k@6]8h\\d7LG", stringWriter2);
      simpleNode1.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode1.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode1.toString("D#k>If9]bWE;|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2627
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.537368801781397
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      simpleNode0.setIdentifier("{");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("PackageDeclaration");
      arrayList0.add("{");
      simpleNode0.dump("g", stringWriter0);
      assertEquals("PackageDeclaration<MethodDeclaration>\n</MethodDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("{");
      assertEquals("{MethodDeclaration : {", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.41412405687448445
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      simpleNode0.setIdentifier("{");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("g", stringWriter0);
      simpleNode0.dump(">=", stringWriter0);
      Node node0 = simpleNode0.jjtGetChild(2);
      assertNull(node0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.41412405687448445
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      simpleNode0.setIdentifier("{");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("g", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6248603116943127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      simpleNode0.setIdentifier("g");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("g", stringWriter0);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-3143));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3143
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(427);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 427
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.41412405687448445
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      simpleNode0.setIdentifier("{");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("g", stringWriter0);
      assertEquals("<MethodDeclaration></MethodDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("MethodDeclaration", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<AllocationExpression>\n  <identifier>*gt</identifier>\n  <identifier>*ge</identifier>\n</AllocationExpression>\n<AllocationExpression>\n  <identifier>*gt</identifier>\n  <identifier>*ge</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.48439011623800354
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("g", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("]Wo");
      SimpleNode simpleNode0 = new SimpleNode(114);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.id = 1640;
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(10);
      // Undeclared exception!
      try { 
        simpleNode0.dump(">", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 16);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1188));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(68);
      simpleNode0.jjtAddChild(simpleNode1, 5243);
      assertEquals(5244, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-120958784));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">=");
      SimpleNode simpleNode1 = new SimpleNode((-18548323));
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<AllocationExpression>\n  <identifier>*gt</identifier>\n  <identifier>*ge</identifier>\n</AllocationExpression>\n<AllocationExpression>\n  <identifier>*gt</identifier>\n  <identifier>*ge</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.537368801781397
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 21;
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      simpleNode0.setIdentifier("{");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-1969779101));
      simpleNode0.dump("g", stringWriter0);
      JavaParser javaParser0 = new JavaParser("g");
      try { 
        javaParser0.MemberValuePairs();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.5140966973399504
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.id = 68;
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump("<", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-6262915));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.41412405687448445
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[5];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("g");
      simpleNode0.setIdentifier("{");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("g", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
