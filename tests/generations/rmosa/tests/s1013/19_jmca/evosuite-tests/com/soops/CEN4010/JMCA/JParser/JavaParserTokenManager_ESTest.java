/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 15:18:43 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5884082070354566
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"null\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 38, 38);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      javaCharStream0.maxNextCharInd = 1;
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 38, column 44.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5906757807316017
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ilXhW./*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4509), (-4509));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.bufline = javaParserTokenManager0.jjnewLexState;
      javaCharStream0.UpdateLineColumn('s');
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      javaCharStream0.maxNextCharInd = 22;
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -4509, column -4500.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5904155673566343
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ilXhW./*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4509), (-4509));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -4509, column -4501.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}l}X");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)89;
      byteArray0[4] = (byte) (-10);
      byteArray0[5] = (byte) (-111);
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-89);
      StringReader stringReader0 = new StringReader("-9D!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-954), (byte) (-89));
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -954, column -88.  Encountered: \"D\" (68), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"instanceof\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("+=");
      stringReader1.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 15, 34);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(45, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Qjp-+6YRn0uPG/sy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-732), (-732));
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1740), 81);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-731));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".AkQ&?r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6428, (byte) (-89));
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-89), 6428);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.jjimageLen = 6428;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(6431, javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^03T<q4_8q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.endColumn = 4;
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9498034190918982
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<CHARACTER_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-2883);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(17, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O&nEDn");
      stringReader0.reset();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 217, 1091);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lg(Z<UN0G>9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-2), (byte) (-9));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("lg", token0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte) (-89);
      StringReader stringReader0 = new StringReader("usTEvj-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-89), Integer.MAX_VALUE);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-2147483645), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<CHARACTER_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#n/M");
      StringReader stringReader1 = new StringReader("BEm(6@Aa$m/=8y");
      StringReader stringReader2 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 122, 122);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1), (-223), 422);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals((-221), javaCharStream1.getColumn());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MHp'}B2dff_4]e");
      char[] charArray0 = new char[1];
      charArray0[0] = '%';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("p'iF3|");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2169, (-1743));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2169, column -1739.  Encountered: \"B\" (66), after : \"\\'}\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%J?*yOZgx+ ,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, 441);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      MockFile.createTempFile("\"vid\"", "");
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(442, javaCharStream0.getBeginColumn());
      assertEquals("J", token0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A*J!K\"g5oXa@N;}~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, (-900));
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T0x{FP`~;I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, 2782);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("T0x{FP`~;I");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 34, 80);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1406), 34, 2782);
      StringReader stringReader2 = new StringReader("vVA");
      javaCharStream2.BeginToken();
      javaCharStream2.ReInit((Reader) stringReader2);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream2.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1837132182957943
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vd7^q%n?R4;q0~4'H<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1770, 101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(105, javaCharStream0.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%d1V3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1890, 3112);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b;\"*.Ap%.^R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 27);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1240), 1213);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1595, 19);
      int int0 = JavaParserConstants.EXTENDS;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(20, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("implements");
      StringReader stringReader1 = new StringReader("bG=@my%wSx2mOp1[~-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 55, 55);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader2 = new StringReader("bG=@my%wSx2mOp1[~-");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(56, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 67);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("p4");
      stringReader1.read();
      StringReader stringReader2 = new StringReader("MD,fiw(w%D");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 112, 1348);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("MD", token0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)68;
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("K`a[2i<_1h");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4721, 61);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = '!';
      charArray0[2] = 'r';
      charArray0[3] = 'q';
      charArray0[4] = 'a';
      // Undeclared exception!
      try { 
        stringReader1.read(charArray0, 4721, 92);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("implements");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte) (-2);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, (byte) (-9));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'n';
      charArray0[1] = 'C';
      charArray0[2] = 'i';
      charArray0[3] = '$';
      charArray0[4] = 'l';
      charArray0[5] = 'E';
      charArray0[6] = 't';
      charArray0[7] = '^';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-8), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9#Bl9 q");
      StringReader stringReader1 = new StringReader("lPuqCu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 40, 951);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("package");
      char[] charArray0 = new char[5];
      charArray0[1] = '%';
      charArray0[2] = '2';
      charArray0[2] = '!';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-50);
      StringReader stringReader0 = new StringReader("R`4'=wWk<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, (byte) (-50));
      int int0 = JavaParserConstants.EXTENDS;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("R", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1829430989272922
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!R/A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1890, 101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("h:");
      StringReader stringReader2 = new StringReader("D|r.^J7z#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1250), (-1250));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Qjp-+6YRn0uPG/sy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1603), 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-152), 10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a*m+Zxrkv$&");
      stringReader0.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 38, 31, 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.ReadByte();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("m", token0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte)68;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("D", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!R/A");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("&ZlF=SY>|[/L'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1349), 85);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(105, token0.kind);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      char[] charArray0 = new char[4];
      charArray0[0] = 'e';
      charArray0[1] = '(';
      charArray0[2] = ':';
      charArray0[3] = '#';
      stringReader0.read(charArray0);
      int int0 = JavaParserConstants.ABSTRACT;
      StringReader stringReader1 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-861), 1477);
      StringReader stringReader2 = new StringReader("-");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 1691, 113, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*rH[%Q%g79_0Rh");
      StringReader stringReader1 = new StringReader("(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1150, (-573));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(77, token0.kind);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5895213795772005
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)65;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("8+yA)njPZ|#of\u0005G9#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)65, 122);
      stringReader0.mark((byte)65);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 65, column 123.  Encountered: \"+\" (43), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%p%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 132, 132);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-3285), 118);
      javaCharStream1.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(108, token0.kind);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("P>e<5%2}e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-638), (-638));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("P", token0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zk<LOa0LH");
      StringReader stringReader1 = new StringReader("zk<LOa0LH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1018, 107);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("zk", token0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.182036069448834
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/<ciA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 88);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("ciA", token0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c&[^~C{0Z(ft(){?*9");
      StringReader stringReader1 = new StringReader("c&[^~C{0Z(ft(){?*9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 49, 18);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("c", token0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5875011775569985
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#n/M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-365), (-365));
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("void");
      StringReader stringReader1 = new StringReader("void");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 20, 92);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte) (-46);
      byteArray0[6] = (byte) (-126);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals(2, javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1866536740664388
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V0OM.X2*he5<\"6-C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 48, 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 3);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 48, column 115.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1852106726234373
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'{FW%93yClc$*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 3, column 16.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = "\\u";
      StringReader stringReader0 = new StringReader(string0);
      StringReader stringReader1 = new StringReader("$iGuw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 177, 827);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Invalid escape character at line 177 column 828.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("./|qW)Aa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 123, (-404));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(123, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!1");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2472), (-2472));
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(66, token0.kind);
      assertEquals("1", token0.toString());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2cNt2tE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2472), (-2472));
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("cNt2tE", token0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".|qW)Aa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("const");
      StringReader stringReader1 = new StringReader("]]bfaC([Lkh$HwyzFu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1525, 1525);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 1525, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("]", token0.toString());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".'Xy$Zuh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 101);
      stringReader0.read();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte)119;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte)119;
      byteArray0[8] = (byte) (-126);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      StringReader stringReader0 = new StringReader("7LSqXDQZ-jd76n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(36, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T0x{FP`~;I");
      StringReader stringReader1 = new StringReader("!F_ObpyN@r~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 55, 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("!", token0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V0OM.X2*he5<\"6-C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, 48);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*E0K~{h");
      char[] charArray0 = new char[9];
      charArray0[0] = 'B';
      charArray0[2] = ']';
      charArray0[3] = '8';
      charArray0[4] = '&';
      charArray0[5] = '-';
      charArray0[6] = 'l';
      charArray0[7] = 't';
      charArray0[8] = 'I';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 671, 9);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(49, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~~T~,<IxND2<\"6'");
      StringReader stringReader1 = new StringReader("~~T~,<IxND2<\"6'");
      stringReader1.skip((-1321L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1982), (-443));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-443), javaCharStream0.getBeginColumn());
      assertEquals("~", token0.toString());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte) (-89);
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-89), (byte)31);
      javaCharStream0.maxNextCharInd = (-583);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OwKU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, 84, 84);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 88, 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream1.ReadByte();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals("wKU", token0.toString());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)27;
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte)50;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("e2_o5T^qU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, 399);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e^6O");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 123, 12, 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.jjround = 12;
      javaCharStream0.ReadByte();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5kCkJu|~nlrk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1621, 1621);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(1626, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\".\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      javaParserTokenManager1.MoreLexicalActions();
      CharBuffer.wrap((CharSequence) "\"null\"");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\"null\"");
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 55, column 57.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FYvieC-piDPTsU!(T\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 25);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dQy}zprpNOCj`h\"u>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1666), 62);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(64, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("volatile");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte)26;
      byteArray0[6] = (byte) (-50);
      byteArray0[7] = (byte) (-50);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("w", token0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c&[^~C{0Z(ft(){?*9");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 48, 48);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "c&[^~C{0Z(ft(){?*9");
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(105, token0.kind);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-9), 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -9, column 31.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6D@YTI_tA$6W~R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 52, 114);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("D", token0.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7hort");
      StringReader stringReader1 = new StringReader("7hort");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-4063), 78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("7hort", token0.toString());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";%KJXW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 208, 208);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(208, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\u001f\" (31), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!R/A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 43);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(43, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DD=se(awnY'KB>DPEc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 35);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("D", token0.toString());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2346), (-2346), 18);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-2344), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("flVv;Y$|pp49.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 384, 384, 384);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(387, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("=1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 578, 578);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(578, javaCharStream0.getLine());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">7@A4$L");
      StringReader stringReader1 = new StringReader(">7@A4$L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 97, 97);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      File file0 = MockFile.createTempFile("\"void\"", ">");
      assertEquals(1392409281320L, file0.lastModified());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.48717948717948717
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T0x{FP`~;I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 126, 1246);
      StringReader stringReader1 = new StringReader("e&V'e1'l[C\"-9M6+");
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 126, column 1247.  Encountered: \"x\" (120), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".|qW)Aa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getLine());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">7@A4$L");
      StringReader stringReader1 = new StringReader("VW2Hk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 49, 126);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("V", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a*m+Zxrkv$&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 39, 39);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(39, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("flVv;Y$|pp49.");
      StringReader stringReader1 = new StringReader("i/]&}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 18, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("i", token0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}l}X");
      StringReader stringReader0 = new StringReader("\"long\"");
      char[] charArray0 = new char[1];
      charArray0[0] = 'L';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, (-2536));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-2533), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("thr0ws");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 578, 578);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6D@YTI_tA$6W~R");
      StringReader stringReader1 = new StringReader("6D@YTI_tA$6W~R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, (-2002));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 41, column -2001.  Encountered: \"D\" (68), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("abstract");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1246, 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(13, token0.kind);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("implements");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(55, javaCharStream0.getBeginColumn());
      assertEquals(37, token0.kind);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("transient");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1890, 61);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals("transient", token0.toString());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      StringReader stringReader1 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2828), 1018);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1018, javaCharStream0.getBeginColumn());
      assertEquals(1029, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchr?nized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 98, 1045);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("synchr", token0.toString());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wp8\"9f");
      StringReader stringReader1 = new StringReader("\"//\"");
      StringReader stringReader2 = new StringReader("Ba<p@1.$URE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 85, (-2488));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-2487), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@rz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 383, 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(107, javaCharStream0.getBeginColumn());
      assertEquals(107, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 3);
      stringReader0.read();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-50);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 36, 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(87, token0.kind);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"...\"");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("\"...\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 34, 41);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(43, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 61);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(".", token0.toString());
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[");
      StringReader stringReader1 = new StringReader("e{P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1525, 85);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("e", token0.toString());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e^6O");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1116), 12);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("e", token0.toString());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F4NaZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1525, 39);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 52, 1525, 52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("F4NaZ", token0.toString());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("const");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1525, 1525);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte)106;
      byteArray0[6] = (byte) (-72);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(1, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x#/M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1150, (-1534));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("x", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")/H;5[ ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(")", token0.toString());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"tx?>8kV~P$4c_]");
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = '*';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = '5';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 697, (-422));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-421), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<DIGIT>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1260), (-1260), 749);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 196, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}l}X");
      StringReader stringReader1 = new StringReader("after : \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1740), (-2346), 18);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals(5, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/<ciA");
      StringReader stringReader1 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 36, 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a*m+Zxrkv$&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1852106726234373
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("06:=#'c1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-954), (byte) (-89));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -954, column -87.  Encountered: \":\" (58), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1874000541231637
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("243R|e!?7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 93);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 5, column 96.  Encountered: \"R\" (82), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2'-HbN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, (-1996));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 41, column -1995.  Encountered: \"\\'\" (39), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<INTEGER_LITERAL>");
      StringReader stringReader1 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 75, 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("3", token0.toString());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("volatile");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 408);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(64, token0.kind);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("package");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 118, 118);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(46, token0.kind);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("boolean");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3910), 1525);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals("boolean", token0.toString());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hxm^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1150, (-1534));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-1532), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2cNt2tE");
      StringReader stringReader1 = new StringReader("2cNt2tE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 177, 177);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(6, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(183, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o*R(r2b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 578, 578);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lLkO{Tp/+]T!I]-B(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 39, (-1666));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'{FW%93WyClc$*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1666), (-1666));
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "'{FW%93WyClc$*");
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1666), javaCharStream0.getBeginColumn());
      assertEquals("{", token0.toString());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}l}X");
      char[] charArray0 = new char[1];
      charArray0[0] = '2';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("l", token0.toString());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4897959183673469
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wp8\"9f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 886, 47);
      javaCharStream0.FillBuff();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 886, column 53.  Encountered: <EOF> after : \"\\\"9f\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("short");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(54, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b<X>aY,U7wOaw/!?.Cw");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 39, 101);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 101, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("X", token0.toString());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1411, 1411, 1411);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("&&", token0.toString());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3683, 3683);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("&", token0.toString());
      assertEquals(105, token0.kind);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T0x{FP`~;I");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(101, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"...\"");
      StringReader stringReader1 = new StringReader("\"...\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1217), 4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 436, 1);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("I", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<INTEGER_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1666), (-1666), 384);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1666), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte) (-89);
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-89), (byte) (-89));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-86), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wp8\"9f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 886, 886, 886);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream1.ReadByte();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(0, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p'iF3|");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("p", token0.toString());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/<ciA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 36, 11);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b<X>aY,U7wOaw/!?.Cw");
      StringReader stringReader0 = new StringReader("b<X>aY,U7wOaw/!?.Cw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.lengthOfMatch = 0;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(13, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]Z6>ne $0ah@6@3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 86);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(87, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("while");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 782, (-2353));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals((-2353), javaCharStream0.getBeginColumn());
      assertEquals((-2349), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("const");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1525, 1525);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1525, javaCharStream0.getBeginColumn());
      assertEquals(1529, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MAX_VALUE, 76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("goto", token0.toString());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throws");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 384, 31, 384);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(31, javaCharStream0.getBeginColumn());
      assertEquals(59, token0.kind);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#n/M");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("char");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 55, (-1));
      StringReader stringReader3 = new StringReader("char");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, (-1), 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      assertEquals("char", token0.toString());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, (-937));
      stringReader0.read();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)40;
      byteArray0[6] = (byte)90;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte) (-50);
      byteArray0[6] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(1, javaCharStream1.getEndLine());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/<ciA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("<<");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 36, (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(0, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("?", token0.toString());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d`_oH1QHh(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 217, 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("d", token0.toString());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1666), (-1666));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1782), (-2169));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals((-2169), javaCharStream1.getBeginColumn());
      assertEquals("!=", token0.toString());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1250), (-1250));
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1250), javaCharStream0.getBeginColumn());
      assertEquals(110, token0.kind);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      StringReader stringReader1 = new StringReader("synchronized");
      StringReader stringReader2 = new StringReader("y J,;`");
      StringReader stringReader3 = new StringReader("y J,;`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 1, 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals("y", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, (-2648));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-2648), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("void");
      StringReader stringReader1 = new StringReader("void");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(95, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1150, 3683);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("N", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("volatile");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 408);
      int[] intArray0 = new int[4];
      intArray0[0] = 95;
      intArray0[1] = (-1);
      javaCharStream0.bufline = intArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"null\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 35);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(38, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, 122);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("for", token0.toString());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"...\"");
      StringReader stringReader1 = new StringReader("^WC\"5CHh_V@ ?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 55, 94);
      stringReader1.read();
      StringReader stringReader2 = new StringReader("nd6||tLpf");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 94, 91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(95, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$\"/HIiF<nOmD'YS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-732), (-732));
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-732), (-3016));
      javaCharStream1.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(104, token0.kind);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringReader stringReader0 = new StringReader("package");
      StringReader stringReader1 = new StringReader("*rH[%Q%g79_0Rh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*rH[%Q%g79_0Rh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 119, 18);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("rH", token0.toString());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[(>$d_Lj',i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 295, 3279);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("[", token0.toString());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}l}X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(80, token0.kind);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StringReader stringReader0 = new StringReader("implements");
      char[] charArray0 = new char[9];
      charArray0[0] = 't';
      charArray0[1] = 'V';
      charArray0[2] = '2';
      charArray0[3] = 'i';
      charArray0[4] = 'D';
      charArray0[5] = '|';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, 86);
      StringReader stringReader1 = new StringReader("implements");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("s", token0.toString());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"null\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 35);
      stringReader0.read();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2'-HbN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-303), 41);
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 142);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"H\" (72), after : \"\\'-\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("thr0ws");
      StringReader stringReader1 = new StringReader("\"]\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 97, 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(73, token0.kind);
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"!\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 217, 1091);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("\"!\"", token0.toString());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"!\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 217, 1091);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 123, 48);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 217, column 1092.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StringReader stringReader0 = new StringReader("do");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, (byte)50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(51, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V0OM.X2*he5<\"6-C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, 48);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 25, 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("0", token0.toString());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'{FW%93WyClc$*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-638), (-1666));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -638, column -1664.  Encountered: \"F\" (70), after : \"\\'{\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#S53>Z78");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 10, column 10.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StringReader stringReader0 = new StringReader("st");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1525, 1525);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O]dmlnEJPRC'Kx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 18, 18);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("O", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      StringReader stringReader1 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1950), 19);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 20;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`S.s=rj`/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1250), 41);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1250, column 41.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/<ciA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(92, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StringReader stringReader0 = new StringReader("true");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("!K");
      stringReader1.reset();
      int int0 = 120;
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 120, 47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, (byte)31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("*", token0.toString());
      assertEquals(103, token0.kind);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c:i--~;Ky]g\"2qwq&uR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1287), (-1287));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("c", token0.toString());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1666), (-1666));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("!", token0.toString());
      assertEquals(89, token0.kind);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-561), (-561), 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 184
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 185
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-638), (-1666));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 186
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uWkgPgf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 849, 849, 849);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte) (-40);
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)122;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PrintStream printStream0 = javaParserTokenManager0.debugStream;
      javaParserTokenManager0.setDebugStream(printStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 187
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*rH[%Q%g79_0Rh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 121, 257);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 2600);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2600. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 188
  /*Coverage entropy=1.1125075907538098
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",@zP$E(Mf!`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1666), (-1666));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.bufpos = (-1666);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 189
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*rH[%Q%g79_0Rh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 190
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T0x{FP`~;I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 225, 3070);
      int int0 = JavaParserConstants.ABSTRACT;
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 32, 36);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 1347, (-1), 122);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream4);
      Token token0 = new Token();
      javaParserTokenManager0.SwitchTo(0);
  }

  /**
  //Test case number: 191
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(40);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 40. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 192
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StringReader stringReader0 = new StringReader("implements");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 55);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 55. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
