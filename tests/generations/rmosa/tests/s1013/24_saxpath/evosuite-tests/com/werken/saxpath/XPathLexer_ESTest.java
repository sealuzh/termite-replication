/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 14:34:18 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.800020990429943
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(1803);
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath(">=I3oq");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(10, token2.getTokenType());
      assertEquals(">=", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("I3oq", token3.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath(".7oF");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".7", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.687420655767592
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.consume((-2777));
      xPathLexer0.plus();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9792886722599112
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=!;UciXd3R?<-!");
      Token token0 = xPathLexer0.colon();
      assertEquals("=", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("=!;UciXd3R?<-!");
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("a");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(21, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      xPathLexer2.and();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1360633176392105
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.comma();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      int int0 = (-1636);
      xPathLexer0.consume((-1636));
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oy7@cMg+NxncoEz");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-51));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-96));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume((-966));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.consume((-728));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-3939));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%qu|Yz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%qu|Yz", token0.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-922));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume((-966));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = "=!;UciXd3R?<-!";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1383));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-993));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6277271967587486
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.and();
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(")", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.setXPath("2<EUZv");
      Token token3 = xPathLexer0.dollar();
      assertEquals("2", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("E", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("UZv", token6.getTokenText());
      
      Token token7 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token7);
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.leftParen();
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*..k6tsbEg+?^RwyD");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("*", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(31, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w&9b+uFnIv\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1995973132298547
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".s");
      Token token0 = xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("(|6^P1/t<");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$uF'$8~9(V:E{![q");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("$", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("uF", token1.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J'Ywz*pOJfXIa");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8605114054529386
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(">", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("Cq", token4.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5916345535467396
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(")");
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.setXPath("dnCoAH");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.097242790482881
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.consume((-1185));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76!{|L{h$BATLNFqG4");
      xPathLexer0.consume((-1314));
      xPathLexer0.at();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("Snh7;");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.consume((-805));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.576679110740609
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WW4K4lj<|!M>Bg ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("WW4K4lj", token0.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.79709058749954
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",v/#m3EC<Cu");
      XPathLexer xPathLexer1 = new XPathLexer(",v/#m3EC<Cu");
      char char0 = xPathLexer1.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer1.not();
      assertEquals(",", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(",", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("v", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dk<%=$)=L<z~-");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2826685601371457
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".s");
      XPathLexer xPathLexer1 = new XPathLexer(".s");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.setXPath("&NGzyaD");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&NGzyaD", token1.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-3772));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.703944426716008
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2<EUZv");
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("EUZv", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7993592865424324
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p4V]KC]NY%@t)");
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("[ (17) (p)");
      xPathLexer1.whitespace();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N!mG5V]<`9e4wt[");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.694832232838612
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76!{|L{h$BATLNFqG4");
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.setXPath("*V1jK|i");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5754415416798357
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nu0K");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.687420655767592
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5207138924664525
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9j=RZ.jfX#0\"QXB%");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-[");
      XPathLexer xPathLexer1 = new XPathLexer("-[");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("fS#|&).5}`,cp|B");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("fS", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=!;UciXd3R?<-!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`ucduU/\"{we!Ue^m7BH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`ucduU/\"{we!Ue^m7BH", token0.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q~\n?-O}EFX.7$)j0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Q", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.694579074690717
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fYG%pb/R6");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B%D");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1021923706791763
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume(25);
      xPathLexer0.setXPath("zw$Z");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.setXPath("  P0M`dz#;(09");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qR");
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eO`ME~U.zKC4=_");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8198823409017186
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("B", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.not();
      assertEquals(">", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(6, token5.getTokenType());
      assertEquals("-", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("O", token6.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iI-=QIa,fz;*.(#");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.consume((-305));
      Token token0 = new Token((-305), ") (", (-305), (-305));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.798452861589087
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<6-[{");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("<6-[{");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("-", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.3089377408478353
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76!{|L{h$BATLNFqG4");
      xPathLexer0.or();
      Token token0 = xPathLexer0.at();
      assertEquals("7", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{|L{h$BATLNFqG4", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.setXPath(":89h1U]Sm");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("89", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("PTh@'ZR7f9lR|t");
      assertEquals("PTh@'ZR7f9lR|t", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9274068838963543
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(618);
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token7 = xPathLexer0.dollar();
      xPathLexer0.comma();
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.setPreviousToken(token7);
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p4KC]NY%@t)");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (p)", string0);
      
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("j)`j,*nqqnQ?v");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("j)`j,*nqqnQ?v", token1.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.setXPath("I%o68");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
      
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("I", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#^");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#^", token0.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.2772166162815273
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tei[t\"k7/^XJ}Zh");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.2909487125363275
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=!;UciXd3R?<-!");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("=", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("=!;UciXd3R?<-!");
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer1.setXPath("=!;UciXd3R?<-!");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(14, int0);
      
      Token token4 = xPathLexer1.minus();
      assertEquals("=", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7082963091162298
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p4KC]NY%@t)");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (p)", string0);
      
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertNotSame(token2, token0);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("K", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(101);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("C", token4.getTokenText());
      
      char char1 = xPathLexer0.LA(0);
      assertEquals('C', char1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.7975345879435403
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-3296));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.2895813051645777
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("'", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.comma();
      assertEquals("b", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("kq", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Vvr/SM&ITHk'$K`<sE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Vvr", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7959184263273786
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(")", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]/^NC;;A4b");
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("/", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.440959654005808
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.setXPath("Lf6FZ%C!uvER9:?j");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H]t%h@en6U@GTg$q");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("H]t%h@en6U@GTg$q");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.1021923706791763
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume(25);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("exer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("o", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.setXPath("  P0M`dz#;(09");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("P0M`dz#;(09", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2655));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-3939));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("^JN@nw;r`qu2,sr");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("^JN@nw;r`qu2,sr", token0.getTokenText());
      
      xPathLexer1.setXPath("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.div();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.380163685671445
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath(".3oq");
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("3", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals("o", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("q", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.9818010597258895
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r@.M$<_iwk0^");
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer3.whitespace();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("r@.M$<_iwk0^");
      xPathLexer4.nextToken();
      xPathLexer4.hasMoreChars();
      xPathLexer3.leftParen();
      Token token0 = xPathLexer3.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.setXPath(",A`Bso");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@}AWftHW5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.758193613732025
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2<EUZv");
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.LA(86);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7640381483237502
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("+I<?Z");
      xPathLexer0.or();
      xPathLexer0.setXPath("mtSE.5X%5mn+h");
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("mt", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("S", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("E.", token5.getTokenText());
      assertEquals(14, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("5", token6.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_;{k%=b");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("43cX,&<371OeJ~3");
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-2325));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.3215364981867146
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r@.M$<_iwk0^");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("r@.M$<_iwk0^");
      xPathLexer0.dollar();
      xPathLexer1.number();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer2.star();
      xPathLexer1.setXPath("");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.number();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2<EUZv");
      char char0 = xPathLexer0.LA(1);
      assertEquals('2', char0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.442642175199104
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.setXPath("[ey2}^");
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-370));
      Token token0 = new Token((-370), "[ey2}^", 61, (-370));
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3574560774915718
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76!{|L{h$BATLNFqG4");
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.setXPath(":89h1U]Sm");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".s");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0O]}GQ$6j:W1-K|I");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0X$ 39");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5zkoK|6JKCJK*J{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D#dF[.|:+v$Pwo");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7373738845205366
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.LA(86);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5775965232296514
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".\"V:V(f4a(zbx");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.751699383038857
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.identifier();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.consume((-3296));
      xPathLexer0.setXPath("gHp<AhAE`u[");
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("gHp", token6.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.7357600570261584
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p4KC]NY%@t)");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (p)", string0);
      
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("C", token3.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(4, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals("N", token5.getTokenText());
      
      char char0 = xPathLexer0.LA(101);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F6#L$LI99;x-");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath("mivJEYu&.t|1s? cRle");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.4394166425618065
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p4KC]NY%@t)");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (p)");
      xPathLexer1.and();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.2685736328196349
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76!{|L{h$BATLNFqG4");
      Token token0 = xPathLexer0.comma();
      assertEquals("7", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("6", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("L", token3.getTokenText());
      
      xPathLexer0.setXPath(":;91U]@m");
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(";91U]@m", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(";9", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("1", token7.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.3292964919740922
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("+I<?Z");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("I", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals("<", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("?Z", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("?Z", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.007997109790182
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2<EUZv");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("2", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.not();
      assertEquals("<", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("U", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Zv", token4.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.799400379618249
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("bk", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("q/", token3.getTokenText());
      assertEquals(12, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("}<(", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.slashes();
      assertEquals("}", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5762157352282227
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G82A=Cq}GcI");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("G82A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("=", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath("~r,bxe}O/2B");
      assertEquals("~r,bxe}O/2B", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.739577129639552
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(1803);
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("");
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.setXPath("alM<");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("alM<", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("a", token4.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.7394134558458
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("rlak", token4.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.3500597198562008
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tei[t\"k7/^XJ}Zh");
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7639655843253232
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.minus();
      xPathLexer0.LA(86);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1983199327997223
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.colon();
      assertEquals(")", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mh$5?n");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("mh", token0.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.4388007355020298
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.setXPath("d6");
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.8442990655766174
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(1803);
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath(".>3oq");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5571442429514974
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.number();
      xPathLexer0.setXPath("M");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.endPosition();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
      
      Token token0 = xPathLexer0.equals();
      assertEquals(")", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/JOR})(Fx#i|^_|");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.6809071145517378
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p4KC]NY%@t)");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.number();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (p)", string0);
      
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertNotSame(token3, token0);
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("C", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      char char0 = xPathLexer0.LA(101);
      assertEquals('\uFFFF', char0);
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5605806398394173
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p!&#PqEpyx0^.3s");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("p!&#PqEpyx0^.3s");
      xPathLexer1.number();
      xPathLexer0.setXPath("M");
      xPathLexer0.and();
      xPathLexer1.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.setXPath("M");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*x`t@bNm`eEw!r{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.7930430462879539
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals("B", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(">h", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("rlak", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(6, token4.getTokenType());
      assertEquals("-", token4.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.2156126810313836
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7FGu9W`=;BTtkq");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("77JWm~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("77", token0.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.974261963739047
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(1803);
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath(".>3oq");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.3138448622074943
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath(".3oq");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".3", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.7664140273774585
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(85);
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("mivJEYu&.t|1s? cRle");
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals("m", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.setXPath("O#y6fqdneH'\"nxM");
      Token token3 = xPathLexer0.plus();
      assertEquals("O", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.setXPath("mivJEYu&.t|1s? cRle");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("mivJEYu&.t|1s? cRle", token4.getTokenText());
      assertNotSame(token4, token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.576040181135618
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xASCR'a.mv`}@");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("xASCR'a.mv`}@");
      assertEquals("xASCR'a.mv`}@", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.7833575052628872
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.not();
      assertEquals("c", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("om", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.6506405330960725
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2yEaZv");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("2yEaZv");
      Token token0 = xPathLexer1.leftParen();
      assertEquals("2", token0.getTokenText());
      
      xPathLexer1.setXPath("");
      xPathLexer0.div();
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("yEaZv", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer1.identifier();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer1.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1104));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.7101826010788574
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("+I<?Z");
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("I", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.setXPath("mtSE.5X%5mn+h");
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("mtSE.5X", token5.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.314714003478878
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76!{|L{h$BATLNFqG4");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("6", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.not();
      assertEquals("|", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath(":;91U]@m");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals(";9", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.dollar();
      assertEquals("1", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("U", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.6792898638778835
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.setXPath("+I<?Z");
      xPathLexer0.or();
      xPathLexer0.setXPath("mtSE.5X%5mn+h");
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-734));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.consume((-2113));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.0551326830775332
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("8", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.2061914650427306
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      int int0 = xPathLexer0.currentPosition();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.endPosition();
      xPathLexer0.getXPath();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      int int1 = xPathLexer0.endPosition();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.getXPath();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2091));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.0615010815994688
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.setXPath("*vlp^rcThf");
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.or();
      Token token6 = xPathLexer0.star();
      assertEquals("l", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-3419));
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      // Undeclared exception!
      try { 
        xPathLexer1.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.2656959771998422
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.LA(86);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.399041161621913
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("+I<?Z");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("<", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals("?Z", token8.getTokenText());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.3297038405422619
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("+I<?Z");
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("+", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals("I", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(7, token5.getTokenType());
      assertEquals("<", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("?", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.1778771662695469
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("hrlak", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.667919982965517
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2yEaZv");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("2yEaZv");
      xPathLexer0.dollar();
      xPathLexer1.number();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("2yEaZv");
      xPathLexer2.consume();
      xPathLexer1.setXPath("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("v", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer1.endPosition();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.div();
      xPathLexer2.getPreviousToken();
      Token token4 = xPathLexer1.notEquals();
      assertEquals("co", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.isIdentifierChar('\"');
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=3.270673013427521
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.isIdentifierChar('');
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.hasMoreChars();
      xPathLexer0.rightParen();
      xPathLexer0.hasMoreChars();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.2649343285561263
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.setXPath(">+Pig0+]8");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.7918737392488282
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.setXPath(">+Pig0+]8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertNotNull(token2);
      assertEquals("Pig0", token2.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume((-1618));
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      // Undeclared exception!
      try { 
        xPathLexer1.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1750266745597269
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals("B", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(">", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.2135043614626806
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.relationalOperator();
      xPathLexer0.LA(119);
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.0570202974234024
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("82", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.7625189463883841
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yM1?{(ldacf&&C");
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.setXPath("yM1?{(ldacf&&C");
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.consume(61);
      xPathLexer0.rightBracket();
      xPathLexer0.currentPosition();
      xPathLexer0.literal();
      xPathLexer0.number();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.LA(77);
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.LA(25);
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer0.setXPath("LwfrK0:'o'%@OTb");
      xPathLexer0.and();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-438));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.227771267800636
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.setXPath(">+Pig0+]8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
      
      Token token1 = xPathLexer0.not();
      assertEquals("+", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.5284365894168401
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=!;UciXd3R?<-!");
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("=!;UciXd3R?<-!");
      xPathLexer1.not();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.0949231622068631
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.0949231622068631
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("8", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("2", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.227771267800636
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.setXPath(">+Pig0+]8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("+P", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.1750266745597269
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(">", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("h", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.0565569590705701
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.1370200052782238
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.1787150380751605
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
      
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.literal();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=2.283284892956868
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      char char0 = xPathLexer1.LA(1);
      assertEquals('\uFFFF', char0);
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.293796655657433
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("+I<?Z");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("I", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9833298146778321
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<6-[{");
      Token token0 = xPathLexer0.dots();
      assertEquals("<", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\"');
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.2874743011748375
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("76!{|L{h$BATLNFqG4");
      xPathLexer0.identifier();
      xPathLexer0.consume((-2647));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dj");
      Token token0 = xPathLexer0.identifier();
      assertEquals("dj", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('P');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.1744853120372851
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(618);
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.setXPath(".BJB?|%!4y`aCT_l");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("B", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.0538909337961764
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.setXPath("!>\"d|[#.)tkfl%");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.2002651140552483
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      char char0 = xPathLexer0.LA(86);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals(")", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.1399620634367489
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.relationalOperator();
      xPathLexer0.LA(119);
      xPathLexer0.setXPath("B>>hrlak?-OU!!;g");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.1075489912729501
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">82A1Cq}GcI");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(">", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("A1Cq}GcI", token3.getTokenText());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.2902326051595394
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.notEquals();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.not();
      assertEquals("r", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("lak", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("?", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("-O", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals("U", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.1369183717332634
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B>>hrlak?-OU!!;g");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.not();
      assertEquals("B", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.107047738140118
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<6-[{");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("<6", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("-", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=0.9693223825869864
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.setXPath("!>\"d|[#.)tkfl%");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }
}
