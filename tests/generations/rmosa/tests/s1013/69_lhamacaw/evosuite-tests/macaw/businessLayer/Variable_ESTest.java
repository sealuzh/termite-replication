/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 15:16:41 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias((String) null);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAlias();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[5];
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, (String) null, "variable.alternativeVariable.label");
      macawChangeEventArray0[2] = macawChangeEvent2;
      User user0 = new User("H_pRpgQU", "UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER");
      macawChangeEvent2.setUserID("68h{AIG#b/#qa|\"r'K");
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setPassword((String) null);
      macawChangeEventArray0[3] = macawChangeEvent3;
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent(changeEventType0, "sW>A_", "mIHJB-]G:`");
      macawChangeEvent4.setVariableOwnerID(1);
      macawChangeEventArray0[4] = macawChangeEvent4;
      arrayList0.toArray(macawChangeEventArray0);
      derivedVariable0.removeSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.541665294866279
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.codeBookNumber = "user.firstName.saveChanges";
      derivedVariable0.setCodeBookNumber("x]k- O(geP`*Mud>");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getCategory();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(175);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User.checkValidUserIDField("-");
      derivedVariable0.setIdentifier(4);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("-");
      ontologyTerm0.clone();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCategory();
      derivedVariable0.getIdentifier();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("4", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setAddressLine2("variable.availability.label");
      User.checkValidUserIDField("-");
      derivedVariable0.setIdentifier(1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("-");
      ontologyTerm0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCategory();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("1", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=4.185611480257731
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setAddressLine2("]?'560A|NAM/Qv");
      User.detectFieldChanges(user0, user0, user0);
      user0.setEmail("");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.getAvailability();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable1.getSupportingDocuments();
      derivedVariable0.getAvailability();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.861122990480299
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setIdentifier(86);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("0");
      derivedVariable0.setAvailability((String) null);
      derivedVariable1.setForm((String) null);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getAvailability();
      derivedVariable1.setAlias("~skAJ.&f{o+9yr&%");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.getSourceVariables();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getCleaningStatus();
      derivedVariable1.getColumnEnd();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<MacawChangeEvent> arrayList2 = ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      assertTrue(arrayList2.equals((Object)arrayList0));
      
      derivedVariable0.addValueLabel(valueLabel0);
      arrayList1.parallelStream();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.186978313429529
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      User user0 = new User("yRCk9>Fk'~<", "7Xe)=OL^ bwYC5D+");
      derivedVariable0.setColumnStart((String) null);
      user0.setPhone("");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.questionNumber = "lT}{1";
      user0.setStatus("macaw.system.ChangeEventType");
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable1 = new RawVariable();
      arrayList0.add((Variable) rawVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getDisplayName();
      derivedVariable0.getColumnStart();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.clone();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.clone();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7561660360909817
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList0.size());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1279462185041473
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "macaw.businessLayer.SupportingDocument";
      rawVariable0.codeBookNumber = "macaw.businessLayer.SupportingDocument";
      rawVariable0.setAlias("0R\"k`AdLIT");
      rawVariable0.getCodeBookNumber();
      rawVariable0.setIdentifier((-2120));
      rawVariable0.getSupportingDocuments();
      rawVariable0.getColumnEnd();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      ontologyTerm0.setDescription("macaw.businessLayer.SupportingDocument");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaningDescription("variable.form.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      rawVariable0.getColumnStart();
      rawVariable0.getAvailability();
      derivedVariable1.getFilePath();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, (RawVariable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(true);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCoded());
      
      rawVariable1.getDisplayName();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8986067080870246
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2843));
      rawVariable0.setYear("variable.columnStart.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("variable.columnStart.label");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.getIdentifier();
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("variable.columnStart.label");
      derivedVariable0.setForm("variable.columnStart.label");
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.getSupportingDocuments();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable1);
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable1.clone();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = rawVariable1.getOntologyTerms();
      arrayList2.spliterator();
      RawVariable rawVariable2 = new RawVariable();
      arrayList0.add((Variable) rawVariable2);
      rawVariable0.removeOntologyTerms(arrayList2);
      rawVariable1.removeOntologyTerms(arrayList1);
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=4.023401944734506
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getAvailability();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("variable.cleaningStatus.label");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getColumnStart();
      derivedVariable0.setCleaningDescription("Unknown");
      User user0 = new User("", "wl`g5o");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail("Unknown");
      rawVariable0.form = "wl`g5o";
      rawVariable0.setColumnStart("Unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.hasSameDisplayName(derivedVariable1);
      rawVariable0.getAlias();
      rawVariable0.clone();
      derivedVariable1.getCategory();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.getCleaningDescription();
      rawVariable0.clone();
      rawVariable0.getAlternativeVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      rawVariable0.getDisplayName();
      rawVariable0.getAvailability();
      Variable.validateFields(rawVariable0);
      rawVariable0.isCleaned();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1619716567));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("aP:L@No");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("aP:L@No");
      ontologyTerm0.setIdentifier((-788));
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getForm();
      String string0 = derivedVariable0.getLabel();
      assertNull(string0);
      
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      user0.setPostCode((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      rawVariable0.getName();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "u6Kj]9yJW~Yk=Q";
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      ontologyTerm0.setTerm("U");
      ontologyTerm0.setNameSpace("u6Kj]9yJW~Yk=Q");
      ontologyTerm0.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.getFilePath();
      User user0 = new User("variable.label.label", "u6Kj]9yJW~Yk=Q");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getYear();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCleaned();
      rawVariable0.getYear();
      rawVariable0.setCleaned(true);
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setAvailability("");
      Variable.validateFields(rawVariable0);
      rawVariable0.getFilePath();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("y%*Ew-OAWM");
      rawVariable0.setLabel("y%*Ew-OAWM");
      User user0 = new User("y%*Ew-OAWM", "y%*Ew-OAWM");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("y%*Ew-OAWM", rawVariable0.getLabel());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.codeBookNumber = ",k-]aI#OXx\t_}|#";
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      rawVariable0.setCodeBookNumber("Q&EFjT?%");
      User user2 = new User();
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      Variable.validateFields(rawVariable0);
      assertEquals("Q&EFjT?%", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("mD.W#'");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getYear();
      assertEquals("mD.W#'", rawVariable1.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable1.removeSourceVariable(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "u6Kj]9yJW~Yk=Q";
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3838782514026584
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("DUPLICATE_AVAILABILITY_STATE", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCleaned());
      
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable2.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5396680687913826
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCleaned();
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      rawVariable0.setCleaned(true);
      derivedVariable0.setCategory("general.error.promotesSecurityRisk");
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      rawVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("", "`*O0a,4|Ka$6C7{w");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getAvailability();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      derivedVariable0.setForm("variable.codeBookNumber.label");
      rawVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(derivedVariable1);
      User user1 = new User("general.error.promotesSecurityRisk", "variable.codeBookNumber.label");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      rawVariable0.isCoded();
      rawVariable0.createVariableSummary();
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.384198918389992
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.columnEnd = "\"Z|b+R3CXJio8";
      User user0 = new User("N@g:\"^vQ17^>7i", "N@g:\"^vQ17^>7i");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("\"Z|b+R3CXJio8", rawVariable0.getColumnEnd());
      
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable2.containsSupportingDocument(supportingDocument0);
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = "variable.year.label";
      rawVariable1.setLabel("c");
      User user0 = new User("c", "c");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.containsAll(arrayList0);
      assertEquals("variable.year.label", rawVariable1.getColumnEnd());
      
      rawVariable0.removeOntologyTerms(arrayList1);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCoded();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getLabel();
      derivedVariable0.setLabel("JCZ(hY.flBU");
      derivedVariable0.getAlias();
      derivedVariable0.getAvailability();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      ontologyTerm0.setOntologyName("t#(HAHTRR*Zbr0=");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.getLabel();
      rawVariable0.isCleaned();
      derivedVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList2);
      arrayList1.add((Variable) rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getColumnEnd();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.isNewRecord();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.3843476615106227
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "u6Kj]9yJW~Yk=Q";
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("u6Kj]9yJW~Yk=Q", rawVariable0.getForm());
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable2.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setLabel("w");
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.form = null;
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("6WebRr`Gz7OlHtb");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("6WebRr`Gz7OlHtb", rawVariable0.getYear());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("[o", "[o");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_CREATE_DERIVED_VARIABLE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.getDisplayName();
      assertEquals("UNABLE_TO_CREATE_DERIVED_VARIABLE", rawVariable0.getName());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "ONTOLOGY_TERM";
      rawVariable0.getYear();
      rawVariable0.setFilePath("~ uc-|vj~Bt7");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getColumnStart();
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-2876));
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4388210016383502
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail("");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = "Tg1";
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      user0.setPassword("ugN(*#%wU\"#d5zG");
      user0.setPostCode("ugN(*#%wU\"#d5zG");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.notes = "UNABLE_TO_GET_STUDY_YEARS";
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getYear();
      assertEquals("UNABLE_TO_GET_STUDY_YEARS", rawVariable1.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=4.020478171674987
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCodeBookNumber((String) null);
      User user0 = new User("[V=%9te", "[V=%9te");
      user0.setAddressLine1((String) null);
      user0.clone();
      user0.setAffiliation((String) null);
      user0.setFirstName("[V=%9te");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      user0.setCounty((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.isNewRecord();
      rawVariable0.getCodeBookNumber();
      rawVariable0.isCoded();
      rawVariable0.clone();
      rawVariable0.getLabel();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "macaw.system.MacawMessages";
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.columnStart.label");
      derivedVariable0.getAlias();
      assertEquals("variable.columnStart.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("variable.cleaningDescription.label");
      rawVariable0.setFilePath("");
      rawVariable0.getCategory();
      rawVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getAlias();
      assertEquals("variable.cleaningDescription.label", rawVariable0.getAlias());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("macaw.businessLayer.ValueLabel");
      rawVariable0.getCategory();
      rawVariable0.createVariableSummary();
      rawVariable0.getYear();
      assertEquals("macaw.businessLayer.ValueLabel", rawVariable0.getYear());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.form = "nSQ9d<1{f9vy{=ST;";
      derivedVariable0.getSourceVariables();
      derivedVariable0.setCategory("nSQ9d<1{f9vy{=ST;");
      derivedVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.getFilePath();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals("nSQ9d<1{f9vy{=ST;", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.751603031527977
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(105);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("variable.cleaningDescription.label", "variable.cleaningDescription.label");
      user0.setEmail("variable.cleaningDescription.label");
      rawVariable1.setName("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      rawVariable0.setLabel("Unknown");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      rawVariable1.clone();
      rawVariable0.setCoded(false);
      rawVariable1.createVariableSummary();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setCoded(true);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("Unknown", rawVariable0.getLabel());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1908));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      // Undeclared exception!
      try { 
        arrayList0.subList((-24), (-24));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -24
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("0");
      Variable.validateFields(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("variable.cleaningDescription.label");
      rawVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("variable.cleaningDescription.label", "variable.columnEnd.label");
      user0.setEmail("variable.columnEnd.label");
      rawVariable1.setName("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      rawVariable0.setLabel("Unknown");
      rawVariable0.setYear("`@+.");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.getCategory();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(true);
      rawVariable1.getName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.861122990480299
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setIdentifier((-69));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "lf'rWx $R";
      User user0 = new User();
      rawVariable0.setQuestionNumber("UNABLE_TO_DELETE_ONTOLOGY_TERM");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setCategory("aY|H$/*>");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSourceVariable(rawVariable0);
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable1);
      rawVariable1.setColumnEnd("lf'rWx $R");
      derivedVariable0.getCleaningDescription();
      rawVariable1.setNotes("aY|H$/*>");
      rawVariable1.getYear();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.subList((-69), (-69));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -69
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.7118335713470714
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier((-2086126969));
      User user0 = new User();
      user0.setAddressLine1("NON_EXISTENT_CLEANING_STATE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.setCoded(true);
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(false);
      assertEquals((-2086126969), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "X9LwFnt8q]r3216v";
      String string0 = rawVariable0.getColumnEnd();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string1);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("%kQK>P");
      derivedVariable0.createVariableSummary();
      derivedVariable0.createVariableSummary();
      assertEquals("%kQK>P", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("}");
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setColumnEnd("?I/7< '/@{/z#w");
      ontologyTerm0.setTerm("9ztKd}H=+z/U");
      rawVariable0.createVariableSummary();
      User user0 = new User();
      user0.setPassword("9ztKd}H=+z/U");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("<");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("0");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      rawVariable0.columnEnd = "-FRV>o3";
      rawVariable0.getAlias();
      rawVariable0.getLabel();
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("_3i");
      rawVariable0.setIdentifier(98);
      rawVariable0.setCleaningDescription("user.firstName.saveChanges");
      rawVariable0.createVariableSummary();
      User user0 = new User();
      User.checkValidUserIDField("_3i");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = "3t,z/KH|3cF|*;,!";
      derivedVariable1.setAlias(string0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable2);
      derivedVariable2.containsSourceVariable(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("0");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      ontologyTerm0.setNameSpace("variable.columnEnd.label");
      ontologyTerm0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      String string0 = "blank";
      rawVariable0.setColumnEnd("blank");
      rawVariable0.getFilePath();
      User user1 = new User("variable.columnEnd.label", "8)mt|r");
      User user2 = new User("M`[A2p", "");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user2, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      rawVariable0.setYear((String) null);
      RawVariable rawVariable1 = new RawVariable();
      String string0 = rawVariable0.getYear();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.4390626350804188
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(1, arrayList1.size());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "Sn!XIJ";
      rawVariable0.setIdentifier((-2040109463));
      rawVariable0.getAlias();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      user0.setCounty((String) null);
      rawVariable0.setCodeBookNumber((String) null);
      user0.setPassword("ugN(*#%wU\"#d5zG");
      user0.setPostCode("ugN(*#%wU\"#d5zG");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.notes = "UNABLE_TO_GET_STUDY_YEARS";
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS");
      rawVariable0.notes = "UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS";
      rawVariable0.getYear();
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.9173385067639175
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setQuestionNumber("4vEZ(*{WR|JmGCF, ");
      rawVariable1.setFilePath("variable.year.label");
      rawVariable1.setLabel("c");
      User user0 = new User("c", "c");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("4vEZ(*{WR|JmGCF, ", rawVariable0.getQuestionNumber());
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setName(")cr<750i*`4>My[C");
      boolean boolean0 = rawVariable3.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail((String) null);
      rawVariable0.setName("vBG('F*wv$hyy$|a>:");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningStatus("vBG('F*wv$hyy$|a>:");
      rawVariable1.setName("vBG('F*wv$hyy$|a>:");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.6732919255860415
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setColumnEnd("variable.questionNumber.label");
      derivedVariable0.clone();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.set((-1840700267), rawVariable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "TF<X~";
      derivedVariable0.getQuestionNumber();
      assertEquals("TF<X~", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.form = "u6Kj]9yJW~Yk=Q";
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      rawVariable0.getForm();
      assertEquals("u6Kj]9yJW~Yk=Q", rawVariable0.getForm());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("M`[A2p");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getAlias();
      assertEquals("M`[A2p", rawVariable0.getNotes());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "R|:W$l3t/xwBx<qL9";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      assertEquals("R|:W$l3t/xwBx<qL9", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-4040));
      derivedVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.name.label";
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getAvailability();
      derivedVariable0.getAlias();
      derivedVariable0.getDisplayItemIdentifier();
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("variable.name.label", rawVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "valueLabel.label.saveChanges";
      rawVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCategory();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "rM_4Bd";
      rawVariable0.setForm("rM_4Bd");
      rawVariable0.setColumnEnd("rM_4Bd");
      rawVariable0.notes = "rM_4Bd";
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPassword("variable.category.label");
      ontologyTerm0.setNameSpace("\"k#@R8?K~sT");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList0.remove(1107);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1107, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "valueLabel.label.saveChanges";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.826031670669031
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1));
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.setCategory("");
      derivedVariable1.setAlias("");
      derivedVariable1.getYear();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlternativeVariable(rawVariable0);
      derivedVariable2.setColumnStart("?n8A0!");
      derivedVariable1.removeSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setCodeBookNumber("");
      derivedVariable2.getAlternativeVariable();
      assertEquals("?n8A0!", derivedVariable2.getColumnStart());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariables(arrayList0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList2.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList2.addAll(109, (Collection<? extends Variable>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 109, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      User user0 = new User();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayItemIdentifier();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      arrayList1.iterator();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getAvailability();
      String string0 = "";
      rawVariable0.setColumnEnd("");
      derivedVariable0.getNotes();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("macaw.businessLayer.Variable");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCategory();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail((String) null);
      rawVariable0.setName("c");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      assertEquals("c", rawVariable0.getName());
      
      rawVariable1.createVariableSummary();
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("n={");
      rawVariable0.setName("n={");
      rawVariable0.createVariableSummary();
      assertEquals("n={", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "UNABLE_TO_CREATE_ONTOLOGY_TERM";
      rawVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAvailability();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>(arrayList1);
      // Undeclared exception!
      try { 
        arrayList1.addAll((-2045222519), (Collection<? extends OntologyTerm>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2045222519, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.557902746889237
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.parallelStream();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.0020000697417766
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable1.addSourceVariables(arrayList1);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("U[q6X+b%w 8O");
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5574836025748042
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, arrayList1.size());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "\"m-!ut#i4W:DWw>9X";
      String string0 = rawVariable0.getDisplayName();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("}{%]S>");
      derivedVariable0.createVariableSummary();
      assertEquals("}{%]S>", derivedVariable0.getForm());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.557969937643789
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setAddressLine1((String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.parallelStream();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.7109393169316904
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("_)`UFA`faZ");
      rawVariable0.setCodeBookNumber("_)`UFA`faZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_)`UFA`faZ";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = "_)`UFA`faZ";
      stringArray0[3] = "_)`UFA`faZ";
      stringArray0[4] = "_)`UFA`faZ";
      stringArray0[5] = "_)`UFA`faZ";
      stringArray0[6] = "_)`UFA`faZ";
      stringArray0[7] = "_)`UFA`faZ";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes("_)`UFA`faZ");
      rawVariable0.clone();
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      assertEquals("_)`UFA`faZ", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      rawVariable0.form = "ZYk)B";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add((SupportingDocument) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("\"AR!'KOPj!4");
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = null;
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      rawVariable0.clone();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "\"g}=V#e$7pQ";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("\"g}=V#e$7pQ", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getLabel());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("?A");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.clone();
      assertEquals("?A", rawVariable0.getNotes());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.323009262423563
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.setYear("e:X{!zS)^6#");
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setName(";Y|lLn{iAs`;7+5:X'Y");
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "-48byP";
      rawVariable0.setCleaningStatus("-48byP");
      rawVariable0.form = "-48byP";
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.setFilePath("UNABLE_TO_COMMIT_CHANGES");
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getColumnStart();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getFilePath();
      assertEquals("", string1);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "valueLabel.label.saveChanges";
      rawVariable0.setYear("valueLabel.label.saveChanges");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getFilePath();
      derivedVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      assertEquals("valueLabel.label.saveChanges", rawVariable0.getYear());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.5338841398510814
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = rawVariable0.getNotes();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }
}
