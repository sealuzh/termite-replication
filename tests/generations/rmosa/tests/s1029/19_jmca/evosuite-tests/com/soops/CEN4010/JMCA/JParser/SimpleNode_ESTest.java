/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 12:22:42 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7805062184775959
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("6055%okzJqHS_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.add((String) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('t');
      simpleNode0.dump("throw", stringWriter1);
      assertEquals("t<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
      assertEquals("t<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("yJ|5.(67&<}", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*amp</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*lshft</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">");
      arrayList0.add("ConditionalAndExpression");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("y@{ofMH", stringWriter0);
      assertEquals("<SynchronizedStatement>\n  <identifier>*gt</identifier>\n  <identifier>ConditionalAndExpression</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(82);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<DoStatement>\n  <identifier>*ge</identifier>\n</DoStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(57);
      stringWriter0.flush();
      simpleNode0.dump("PostfixExpression", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode0, 57);
      simpleNode0.jjtAddChild(simpleNode0, 57);
      simpleNode0.jjtGetChild(57);
      assertEquals(58, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("5F", stringWriter0);
      assertEquals("<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(57);
      SimpleNode simpleNode1 = new SimpleNode(57);
      simpleNode1.setIdentifier("</");
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter(57);
      simpleNode1.dump("41S~;^", stringWriter0);
      simpleNode1.jjtGetChild(0);
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("}");
      arrayList0.add(">=");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*ge</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(15);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(15);
      simpleNode1.parent = (Node) simpleNode1;
      Node node0 = simpleNode1.jjtGetParent();
      assertSame(node0, simpleNode1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("=");
      arrayList0.add("<=");
      StringWriter stringWriter0 = new StringWriter(84);
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>=</identifier>\n  <identifier>*le</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-126));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("n4j");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("n4j", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(57);
      simpleNode0.toString();
      simpleNode0.jjtAddChild(simpleNode0, 2300);
      StringWriter stringWriter0 = new StringWriter(57);
      // Undeclared exception!
      simpleNode0.dump("PostfixExpression", stringWriter0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(84);
      simpleNode1.jjtAddChild(simpleNode0, 84);
      simpleNode1.dump("An interface cannot have initializers", stringWriter0);
      assertEquals("<ForInit></ForInit>\n", stringWriter0.toString());
      assertEquals(85, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>*rshft</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9989882219111638
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(48);
      simpleNode1.jjtAddChild(simpleNode0, 16);
      simpleNode1.dump("55", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode1, 1503);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(4369);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4369
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("6AR+I9*/0\"xn$H", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("7-\"RHVHEJHe&8MxV", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*lt</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("An interface cannot have initializers", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("XEbxIq*0-", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((-1906));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode1 = new SimpleNode((-1906));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1906));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1906
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      stringWriter0.flush();
      simpleNode0.jjtAddChild((Node) null, 83);
      assertEquals(84, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("z");
      StringWriter stringWriter0 = new StringWriter();
      String string0 = simpleNode0.toString();
      assertEquals("ForInit : z", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1136));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1136
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(94);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2097);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("z");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("z", stringWriter0);
      int int0 = (-513);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-513));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9766893090132731
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "=";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.EnumBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-61920957));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-61920957));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9749540746744716
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<iVentifier>Liteal Value<identifier>\n");
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.jjtSetParent(simpleNode0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringReader stringReader0 = new StringReader("VariableDeclaratorId");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtSetParent((Node) null);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("|");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("|", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>|</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1911119757));
      // Undeclared exception!
      try { 
        simpleNode0.toString("A.qY4q");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1911119757
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>=</identifier>\n</ForInit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("=");
      assertEquals("=ForInit : =", string0);
  }
}
