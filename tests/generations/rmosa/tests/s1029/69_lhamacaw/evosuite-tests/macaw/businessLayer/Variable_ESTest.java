/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 11:42:47 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      rawVariable0.setCoded(true);
      derivedVariable0.setName("F`");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("F`", derivedVariable0.getName());
      
      Variable.validateFields(rawVariable0);
      rawVariable0.isCoded();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ontologyTerm0.setIdentifier(481);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1968526675));
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.897380587769024
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Comparator<OntologyTerm> comparator0 = (Comparator<OntologyTerm>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.notes = "variable.columnEnd.label";
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.setNotes((String) null);
      rawVariable0.form = null;
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setNotes("GSE1X>W}j");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.getForm();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.clone();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>();
      // Undeclared exception!
      try { 
        arrayList1.addAll((-1842221031), (Collection<? extends Variable>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1842221031, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.setIdentifier((-1536));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      int int0 = derivedVariable1.getIdentifier();
      assertEquals((-1536), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("e.!*_1boR");
      supportingDocument0.getDisplayName();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocument(supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("36gW.]o|0");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setIdentifier((-247));
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      derivedVariable0.getOntologyTerms();
      derivedVariable1.getColumnEnd();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.addSourceVariable(derivedVariable3);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable5.updateOntologyTerm(ontologyTerm0);
      derivedVariable4.setCleaningDescription("36gW.]o|0");
      derivedVariable2.getSourceVariables();
      derivedVariable4.getSourceVariables();
      assertEquals("36gW.]o|0", derivedVariable4.getCleaningDescription());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("Unknown");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      derivedVariable0.setLabel("i");
      User user0 = new User();
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("i", derivedVariable0.getName());
      
      boolean boolean0 = derivedVariable1.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("variable.codeBookNumber.label", (String) null);
      User user1 = new User("variable.codeBookNumber.label", "");
      User user2 = new User();
      User.detectFieldChanges(user0, user1, user2);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.setColumnStart("variable.codeBookNumber.label");
      derivedVariable0.setName("x:.,[&x*8&");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getSupportingDocuments();
      supportingDocument0.clone();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      derivedVariable0.setLabel("i");
      User user0 = new User();
      User.checkValidUserIDField("i");
      derivedVariable0.setCleaningStatus("6mzZH;xm");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getDescription());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.6304437108786445
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("9+");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("9+");
      ontologyTerm0.setOntologyName("variable.availability.label");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.notes = "9+";
      rawVariable0.getFilePath();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getForm();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("9+", "9+");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.setYear("9+");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      System.setCurrentTimeMillis(6372L);
      rawVariable0.getFilePath();
      rawVariable0.getYear();
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8297890512380057
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      derivedVariable0.questionNumber = "";
      User user0 = new User();
      user0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.setYear("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable1.setCleaned(true);
      rawVariable0.setAvailability("general.fieldValue.blank");
      derivedVariable1.setColumnStart("");
      derivedVariable0.addSourceVariable(derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable2);
      derivedVariable2.columnEnd = "general.fieldValue.blank";
      derivedVariable2.getOntologyTerms();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.isCoded();
      rawVariable0.getColumnEnd();
      rawVariable0.hasSameDisplayName(derivedVariable2);
      derivedVariable2.getColumnEnd();
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable2);
      derivedVariable0.getSupportingDocuments();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      assertEquals("general.fieldValue.blank", rawVariable0.getAvailability());
      
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("zB+)wC)''4#");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setIdentifier(1701);
      derivedVariable0.createVariableSummary();
      derivedVariable0.createVariableSummary();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.getColumnEnd();
      assertEquals(1701, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5854244758302243
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User("JIu#?O!", "w!f{F");
      user0.setCity("w!f{F");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("JIu#?O!");
      rawVariable0.setIdentifier((-155));
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user0.setEmail("$vs`KY(AW[d9cq5O+}");
      rawVariable0.getCleaningStatus();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("-155", rawVariable0.getDisplayItemIdentifier());
      assertEquals("JIu#?O!", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setName(";P'");
      derivedVariable0.setLabel(";P'");
      User user0 = new User("variable.isCoded.label", "variable.isCoded.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaned(true);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      assertTrue(derivedVariable1.isCleaned());
      
      boolean boolean0 = derivedVariable2.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      derivedVariable1.setCategory("UNABLE_TO_CLOSE_CONNECTION");
      user1.setPassword("^r.i_>JX<p/");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-27));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("pQ+5");
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setColumnStart("i");
      derivedVariable2.containsOntologyTerm(ontologyTerm1);
      User user0 = new User("K(>I2Xk>mpU00Ku*SO", "K(>I2Xk>mpU00Ku*SO");
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      assertEquals("i", derivedVariable2.getColumnStart());
      assertFalse(arrayList2.isEmpty());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.isCleaned();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User("0;ohSU>U;GWu", "UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      user0.setEmail("NEW");
      user0.setPassword("NEW");
      user0.setLastName("*59[");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getAvailability();
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setCategory((String) null);
      rawVariable0.getCategory();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.787362289733143
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.notes = null;
      derivedVariable0.getQuestionNumber();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      
      derivedVariable0.getAvailability();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getNotes();
      assertNull(string0);
      
      derivedVariable0.getSupportingDocuments();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.669857109036471
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "0X~0]MJr6rjCmis:";
      derivedVariable0.setAvailability("0X~0]MJr6rjCmis:");
      derivedVariable0.setLabel("b9oOlm9>]N9%R7AE");
      derivedVariable0.notes = "0X~0]MJr6rjCmis:";
      derivedVariable0.getLabel();
      derivedVariable0.getDisplayItemIdentifier();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      String string1 = "5@(K:F4";
      rawVariable0.setColumnEnd("b9oOlm9>]N9%R7AE");
      rawVariable0.columnEnd = "5@(K:F4";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setLabel((String) null);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.getLabel();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      User user0 = new User("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.805867282505779
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      derivedVariable0.setLabel("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.addSourceVariable(rawVariable0);
      derivedVariable0.isCleaned();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("i", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnStart((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = derivedVariable0.getFilePath();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertNotNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getName();
      // Undeclared exception!
      try { 
        derivedVariable1.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      rawVariable0.getAvailability();
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, "-LHA");
      try { 
        User.checkValidEmail("-LHA");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"-LHA\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7891701993376627
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.setFilePath("variaQNle.notes.lbel");
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      user0.setEmail("variaQNle.notes.lbel");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      derivedVariable0.getColumnEnd();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setName((String) null);
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", (String) null);
      Object object0 = new Object();
      user0.setCity("lha.mrc.ac.uk:LHA");
      derivedVariable0.getDisplayName();
      try { 
        User.checkValidUserIDField("?^XxJfG]X");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"?^XxJfG]X\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.9928579264299833
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getForm();
      User user0 = new User("x.iZXxLL<'hTSZH^q3-", "x.iZXxLL<'hTSZH^q3-");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setFirstName("x.iZXxLL<'hTSZH^q3-");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setIdentifier(80);
      derivedVariable0.setIdentifier((-2078209979));
      user0.setIdentifier(2529);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayName();
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.setFilePath("x.iZXxLL<'hTSZH^q3-");
      derivedVariable1.addSourceVariables(arrayList1);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable1.clone();
      derivedVariable1.getOntologyTerms();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.getQuestionNumber();
      rawVariable0.getColumnEnd();
      derivedVariable1.getAlias();
      rawVariable0.getQuestionNumber();
      derivedVariable0.getAlias();
      derivedVariable1.getAlias();
      assertEquals("x.iZXxLL<'hTSZH^q3-", derivedVariable1.getFilePath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Object object0 = ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) object0);
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.setIdentifier(524);
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("524", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = null;
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.setFilePath("variaQNle.notes.lbel");
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable1.setName("AB");
      DerivedVariable.validateFields(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.44129432507839
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "Kfas9`7 ";
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("Kfas9`7 ", derivedVariable1.getNotes());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(rawVariable0);
      derivedVariable2.isCleaned();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable3, derivedVariable0);
      assertEquals("Unknown", derivedVariable3.getCategory());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setAlias("UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE");
      User user0 = new User("Hvz/<w6D{G})v[?N*xm", "6vuwA&JW");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.addSourceVariable(rawVariable0);
      derivedVariable1.isCleaned();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSourceVariables(arrayList0);
      derivedVariable0.getSourceVariables();
      assertEquals("UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.326171090535089
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias((String) null);
      derivedVariable0.setName("i");
      derivedVariable0.setLabel("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSourceVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("Zl)#`J=#[K%u$Y%!4");
      User user0 = new User("pxlrtZgS1OD_2~", "pxlrtZgS1OD_2~");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Zl)#`J=#[K%u$Y%!4", derivedVariable1.getColumnEnd());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.4903559294679694
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      derivedVariable0.columnStart = "d<rg{HjP]Ipa";
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("d<rg{HjP]Ipa", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("jss");
      derivedVariable1.setLabel("*gZ?Dot3");
      User user0 = new User("*gZ?Dot3", "variable.category.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User("jss", "variable.label.label");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable3.updateOntologyTerm(ontologyTerm0);
      derivedVariable3.setAvailability("variable.category.label");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable3);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1527));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.questionNumber = null;
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getCleaningDescription();
      assertNotNull(string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string1 = derivedVariable0.getQuestionNumber();
      assertNull(string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("i");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertTrue(ontologyTerm0.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.716285151293069
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8{");
      derivedVariable0.getColumnStart();
      derivedVariable0.setCategory("8{");
      derivedVariable0.setColumnStart("");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setFilePath("%_y!@W");
      derivedVariable0.getName();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("E+yn-(8al.{V!", "E+yn-(8al.{V!");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User("", "8{");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getName();
      derivedVariable0.createVariableSummary();
      derivedVariable0.isCoded();
      rawVariable0.getFilePath();
      derivedVariable0.isCleaned();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("8{", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.retainAll(linkedList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(1279);
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(1279);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setCodeBookNumber("");
      user0.setUserID("ontologyTerm.description.saveChanges");
      derivedVariable0.setQuestionNumber("");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.getColumnStart();
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("1279", derivedVariable0.getDisplayItemIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.questionNumber = "3@>";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(3246);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("3@>", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "-LHA";
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      User user0 = new User("", "variable.year.label");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("-LHA", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = " 9KYT";
      derivedVariable0.questionNumber = "";
      derivedVariable1.notes = "1n{ \"^O`VoLL`-";
      derivedVariable1.setIsNewRecord(true);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getValueLabels();
      derivedVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("fos5?CR|YO", "lq5wRX;uS/k_");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable1.getSupportingDocuments();
      assertTrue(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("3.cuV\"A3'_");
      rawVariable0.codeBookNumber = "M}`'C-/zD6O*ILd!)";
      rawVariable0.createVariableSummary();
      assertEquals("3.cuV\"A3'_", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("Z1fSPodz%ZI.sa:*$F");
      derivedVariable0.createVariableSummary();
      assertEquals("Z1fSPodz%ZI.sa:*$F", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("VePa\"y5}mI,");
      derivedVariable0.getFilePath();
      assertEquals("VePa\"y5}mI,", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.notes.label");
      rawVariable0.getLabel();
      rawVariable0.getYear();
      Object object0 = new Object();
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "user.city.label";
      String string0 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "Ck";
      derivedVariable0.setIdentifier(125);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("w25e3{LsGN_O");
      derivedVariable0.removeValueLabel((ValueLabel) null);
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayItemIdentifier();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getAlias();
      assertEquals("125", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      rawVariable0.getLabel();
      rawVariable0.getYear();
      Object object0 = new Object();
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("Yq&p=>wFO35_S");
      rawVariable0.clone();
      assertEquals("Yq&p=>wFO35_S", rawVariable0.getYear());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.322102232945105
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "R$zP>'g^Sl&:#*ma";
      derivedVariable0.notes = "R$zP>'g^Sl&:#*ma";
      derivedVariable0.setCodeBookNumber("R$zP>'g^Sl&:#*ma");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("R$zP>'g^Sl&:#*ma");
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.addValueLabel((ValueLabel) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      user0.setPhone((String) null);
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      User user1 = new User("", "UNABLE_TO_GET_STUDY_YEARS");
      user1.setCity("");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      user1.setUserID("03uZ({Q;AOcdN|CM");
      User.detectFieldChanges(user1, user1, user0);
      rawVariable0.setColumnStart((String) null);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setLabel("S");
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      User user0 = new User("?\"i[An'/VBj#[A", "S");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.columnEnd = "#:1v%OCJKb";
      supportingDocument0.setTitle("S");
      rawVariable0.setAlias("#:1v%OCJKb");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "4NY^e9D^";
      rawVariable0.questionNumber = "general.fieldValue.blank";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("general.fieldValue.blank", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("ym=&r9vr #Q;hrBym");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.clone();
      assertEquals("ym=&r9vr #Q;hrBym", rawVariable0.getName());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.form = "+MOW4q.2O.,";
      rawVariable0.getCleaningStatus();
      rawVariable0.getForm();
      rawVariable0.getAlias();
      rawVariable0.isCleaned();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "O_ztI~i/)<M?'c|QM";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.441213172714827
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("<", "a/C5+`7");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.form = "a/C5+`7";
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("a/C5+`7", derivedVariable1.getForm());
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm((String) null);
      String string0 = "i";
      derivedVariable0.setName("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User();
      assertEquals(0, user0.getIdentifier());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.578423119326123
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("r6D LP$>x`c");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setName(">)>lDc!1-./#@:6");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.notes = ">)>lDc!1-./#@:6";
      rawVariable0.setCategory("");
      rawVariable0.setAlias("");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getQuestionNumber();
      rawVariable0.getCategory();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getValueLabels();
      User user0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("UNABLE_TO_GET_CATEGORY_NAME");
      derivedVariable0.codeBookNumber = "7=olN#:uoY:a,&n9p.";
      derivedVariable0.getQuestionNumber();
      assertEquals("UNABLE_TO_GET_CATEGORY_NAME", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.codeBookNumber = "EQ0wIYqBr";
      derivedVariable0.getYear();
      ArrayList<Variable> arrayList1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.availability.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("%(B$H<y");
      derivedVariable0.setLabel("d<rg{HjP]Ipa");
      User user0 = new User();
      derivedVariable0.codeBookNumber = "P`n>73Ya.YW+^QF`";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.isCleaned();
      assertEquals("P`n>73Ya.YW+^QF`", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.6214584602430353
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("NON_EXISTENT_ONTOLOGY_TERM", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.5338841398510814
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = null;
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      String string0 = "cF?";
      rawVariable0.notes = "cF?";
      rawVariable0.getAlias();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      derivedVariable0.setCoded(false);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setColumnEnd("E|$&HN}TK@+lL;F");
      ontologyTerm0.setDescription("variable.isCleaned.saveChanges.changedToNotClean");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("E|$&HN}TK@+lL;F", derivedVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("hV4D!");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("hV4D!", derivedVariable0.getCleaningStatus());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "X)QnsfHAm(";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      derivedVariable0.codeBookNumber = "0";
      String string1 = derivedVariable0.getNotes();
      assertEquals("", string1);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      derivedVariable0.form = "Unknown";
      String string1 = derivedVariable0.getNotes();
      assertEquals("", string1);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.retainAll(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User("NON_EXISTENT_ONTOLOGY_TERM", "NON_EXISTENT_ONTOLOGY_TERM");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getNotes();
      assertEquals("NON_EXISTENT_ONTOLOGY_TERM", rawVariable0.getNotes());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd(";\u0007;");
      derivedVariable0.getAvailability();
      derivedVariable0.getNotes();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "VJR `:2s -]Aw/$*}";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      User user0 = new User("VJR `:2s -]Aw/$*}", "variable.name.label");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      User user1 = new User("VJR `:2s -]Aw/$*}", "UNABLE_TO_CREATE_VALUE_LABELS");
      user1.setStatus("]*W;");
      user0.setAddressLine2("variable.notes.label");
      User.detectFieldChanges(user1, user0, user0);
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNameSpace("!K_Xp}M");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getForm();
      User user2 = new User();
      user2.setIdentifier((-2075900857));
      user2.setEmail("!K_Xp}M");
      user2.setCity("VJR `:2s -]Aw/$*}");
      try { 
        User.checkValidEmail("/I6{s]gX%Q>kC9M0S3");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"/I6{s]gX%Q>kC9M0S3\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("R{<dUO?t#2");
      derivedVariable0.getForm();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setForm("*'m-X3\")qt");
      derivedVariable0.setFilePath("R{<dUO?t#2");
      // Undeclared exception!
      try { 
        arrayList0.toArray((Integer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("sY~+1_2o}0.=~!");
      User user0 = new User("|(a>DE+S*!wR<}\"*/", "variable.notes.label");
      user0.setFirstName("|(a>DE+S*!wR<}\"*/");
      user0.setCity("W`V$+A)~xzt");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      rawVariable0.getForm();
      assertEquals("sY~+1_2o}0.=~!", rawVariable0.getAlias());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.remove((Object) valueLabel0);
      derivedVariable0.setNotes("");
      derivedVariable0.setName("UNABLE_TO_CLOSE_CONNECTION");
      derivedVariable0.notes = "DUPLICATE_SOURCE_VARIABLE_EXISTS";
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getAlias();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      rawVariable0.codeBookNumber = "variable.cleaningDescription.label";
      rawVariable0.getOntologyTerms();
      String string0 = rawVariable0.getColumnEnd();
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.isCleaned.saveChanges.changedToNotClean";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      String string0 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = "m^r`6A*Fo1d7%6qb.Q.";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "?kc')]O{LVe>!vuMc4";
      rawVariable0.columnStart = null;
      String string0 = rawVariable0.getCleaningStatus();
      assertNotNull(string0);
      
      String string1 = rawVariable0.getColumnStart();
      assertNull(string1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("b&%hjx8m^~Gw(S'et");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getColumnStart();
      assertEquals("b&%hjx8m^~Gw(S'et", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "?kc')]O{LVe>!vuMc4";
      String string0 = rawVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      String string1 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string1);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("dN)?+1Cv#D,{7");
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.questionNumber = null;
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningDescription();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("]");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT", rawVariable0.getColumnStart());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.columnStart = "/[b&~BawsB^3f;px*g";
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.alias.label");
      ontologyTerm0.setTerm(",[");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaningDescription("&<9hj'jd@");
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.getLabel();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "J1:0=";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      rawVariable0.codeBookNumber = "variable.cleaningDescription.label";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("]Q7&KOabj");
      derivedVariable0.getForm();
      derivedVariable0.isCoded();
      derivedVariable0.getYear();
      assertEquals("]Q7&KOabj", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("jrT&2AZ} ik:");
      rawVariable0.getYear();
      assertEquals("jrT&2AZ} ik:", rawVariable0.getNotes());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("VePa\"y5}mI,");
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("VePa\"y5}mI,", rawVariable0.getYear());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, int0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER");
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("QIGl+IA|");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.8297145108407658
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.getDisplayName();
      derivedVariable0.addSourceVariable(derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean1 == boolean0);
      
      derivedVariable0.getCodeBookNumber();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(arrayList1.isEmpty());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      rawVariable0.form = "M}`'C-/zD6O*ILd!)";
      rawVariable0.createVariableSummary();
      rawVariable0.getName();
      User user0 = new User((String) null, "UNABLE_TO_GET_VALUE_LABELS");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "3.\\cuV\"A3'_";
      rawVariable0.setLabel((String) null);
      User user0 = new User("%31Mi\" dX@my2oS^.}", "*U>QXS=g6P");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
