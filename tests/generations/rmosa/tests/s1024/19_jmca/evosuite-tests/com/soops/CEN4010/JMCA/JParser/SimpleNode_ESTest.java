/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 04:26:49 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-102441799));
      SimpleNode simpleNode1 = new SimpleNode((-102441799));
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode0.identifiers = arrayList0;
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " ");
      simpleNode0.children = nodeArray0;
      Node[] nodeArray1 = new Node[0];
      simpleNode1.children = nodeArray1;
      int int0 = 10;
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode0.jjtGetNumChildren();
      simpleNode1.jjtAddChild(simpleNode0, 11);
      Node node0 = simpleNode0.jjtGetChild(10);
      simpleNode1.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(node0, (-1915));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1915
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(";", stringWriter0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode((-1445317426));
      simpleNode0.parent = (Node) simpleNode1;
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode1;
      nodeArray0[4] = (Node) simpleNode1;
      nodeArray0[5] = (Node) simpleNode1;
      nodeArray0[6] = simpleNode0.parent;
      nodeArray0[7] = simpleNode0.parent;
      simpleNode1.children = nodeArray0;
      simpleNode1.setIdentifier("StatementExpressionList");
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      simpleNode0.jjtGetParent();
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : <", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      String string0 = "<";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1));
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtGetParent();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(18);
      simpleNode0.dump("<", stringWriter0);
      assertEquals("\u0012<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("#");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      stringWriter1.write(charArray0);
      simpleNode0.dump("#", stringWriter1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#");
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>#</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("for", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>*lshft</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("...");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[5];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[0] = 'k';
      charArray0[1] = ';';
      charArray0[2] = 'S';
      charArray0[3] = 'J';
      charArray0[4] = '.';
      stringWriter0.write(charArray0);
      stringWriter0.write(2528);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("root", stringWriter0);
      assertEquals("k;SJ.\u09E0<EnumConstant>\n  <identifier>...</identifier>\n  <identifier>*le</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("*amp");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("ReturnStatement");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "ReturnStatement");
      simpleNode0.dump(">", stringWriter1);
      assertEquals("ReturnStatement<EnumConstant>\n  <identifier>*amp</identifier>\n  <identifier>ReturnStatement</identifier>\n  <identifier>*gt</identifier>\n</EnumConstant>\n", stringWriter1.toString());
      assertEquals("ReturnStatement<EnumConstant>\n  <identifier>*amp</identifier>\n  <identifier>ReturnStatement</identifier>\n  <identifier>*gt</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '6';
      charArray0[3] = '6';
      charArray0[4] = '6';
      charArray0[5] = '6';
      stringWriter0.write(charArray0);
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("666666<Modifiers>\n  <identifier>*rshft</identifier>\n</Modifiers>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Ug", stringWriter0);
      assertEquals("<Type>\n</Type>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '6';
      charArray0[3] = '6';
      charArray0[4] = '6';
      charArray0[5] = '6';
      charArray0[6] = '6';
      charArray0[7] = '6';
      stringWriter0.write(charArray0);
      simpleNode0.dump("*amp", stringWriter0);
      assertEquals("66666666<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier("t");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("|");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write("?!x,");
      stringWriter1.getBuffer();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "t");
      simpleNode0.dump(">=", stringWriter2);
      assertEquals("?!x,t<Modifiers>\n  <identifier>t</identifier>\n  <identifier>|</identifier>\n  <identifier>*lt</identifier>\n</Modifiers>\n", stringWriter2.toString());
      assertEquals("?!x,t<Modifiers>\n  <identifier>t</identifier>\n  <identifier>|</identifier>\n  <identifier>*lt</identifier>\n</Modifiers>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("t");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '<';
      charArray0[1] = 'i';
      charArray0[2] = 'L';
      charArray0[3] = '=';
      stringWriter0.write((-1436197818));
      stringWriter0.flush();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("\u5C46<EnumBody>\n  <identifier>t</identifier>\n  <identifier>*ge</identifier>\n</EnumBody>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(78);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode0, 1325);
      StringWriter stringWriter1 = new StringWriter(78);
      // Undeclared exception!
      simpleNode0.dump("*ge", stringWriter1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("gv|<?9\"7C)|", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.jjtAddChild(simpleNode0, 18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("y{fn*'eHC9K\"O{)N9", stringWriter0);
      assertEquals(19, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9686421518854049
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.setIdentifier("&&");
      simpleNode0.setIdentifier("<");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&&", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(44);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-488));
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -488
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4267);
      int int0 = 0;
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.parent = (Node) simpleNode1;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode1.jjtSetParent(simpleNode0.parent);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      simpleNode1.parent = simpleNode0.parent;
      // Undeclared exception!
      try { 
        arrayList0.remove(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = (-1994535174);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1994535174));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-94050379));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-94050379));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode0.setIdentifier("#");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.close();
      char[] charArray0 = new char[6];
      simpleNode0.jjtAddChild((Node) null, 10);
      charArray0[0] = '6';
      stringWriter1.write(charArray0);
      simpleNode0.dump("3o", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(48);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 48
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      Node node1 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 1);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-488));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(nodeArray0[0], 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(",");
      simpleNode0.setIdentifier("Modifiers");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write("Modifiers");
      stringWriter0.getBuffer();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "Modifiers");
      stringWriter1.append('W');
      stringWriter2.write(":.n4\"q=_c#lu+_OYlAM");
      simpleNode0.dump("4}G0ae\"bO0%S1vW", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-488));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9590810588014558
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      String string0 = "#";
      simpleNode0.setIdentifier("#");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(526);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3328));
      // Undeclared exception!
      try { 
        simpleNode0.toString("\t");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3328
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9971762968966938
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ExclusiveOrExpression");
      simpleNode0.setIdentifier(")B");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.setIdentifier("PIb^+Q-{`3&R");
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("ImplementsList");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(")B", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>)B</identifier>\n  <identifier>PIb^+Q-{`3&R</identifier>\n  <identifier>ImplementsList</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9510567829046702
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      String string0 = "t";
      simpleNode0.setIdentifier("t");
      simpleNode0.setIdentifier("ImplementsList");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      simpleNode0.id = 68;
      charArray0[1] = 'U';
      stringWriter0.write(charArray0);
      charArray0[2] = 'l';
      charArray0[3] = 'm';
      charArray0[4] = 'U';
      stringWriter0.write(charArray0);
      simpleNode0.dump("t", stringWriter0);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      SimpleNode simpleNode1 = new SimpleNode(68);
      simpleNode1.dump((String) null, stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(68);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      JavaParser javaParser0 = new JavaParser("\")\"");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 18);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.setIdentifier("#");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      stringWriter1.write(charArray0);
      simpleNode0.dump("#", stringWriter1);
      assertEquals("6<VariableDeclaratorId>\n  <identifier>#</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2308));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2308
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("#");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "#");
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      stringWriter1.write(charArray0);
      simpleNode0.dump("#", stringWriter1);
      assertEquals("#6<VariableDeclaratorId>\n  <identifier>#</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString("#");
      assertEquals("#VariableDeclaratorId : #", string0);
  }
}
