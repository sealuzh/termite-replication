/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 03:00:00 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, "$<pR)8g^P|wWWI", (-1), (-1));
      Player player1 = new Player((short)4919, (String) null, "$<pR)8g^P|wWWI", (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u[4GcRtKF/?m=#9ks[v");
      player1.pack();
      player1.setJoinOK(player0, false);
      player1.setConnected(false);
      player0.isJoinOK(player1, false);
      player1.isJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.next = (Party) player1;
      player1.type();
      player0.getSubparty();
      player0.setZ((-1681.0F));
      player0.pack();
      System.setCurrentTimeMillis(1392409296334L);
      player1.isJoinOK(player0, false);
      assertFalse(player1.isConnected());
      
      Player player2 = new Player((short)4919, "yc~YO4]lf", 1486);
      assertEquals(5, player2.type());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player0.pack();
      Player player1 = new Player((-1805));
      player0.setJoinOK(player1, false);
      player1.setConnected(true);
      player1.isJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u[4GcRtKF/?m=#9ks[v");
      int int0 = Packable.GAME_STATE;
      player1.getSubparty();
      System.setCurrentTimeMillis(4);
      player1.pack();
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean1 = player0.isJoinOK(player1, false);
      assertFalse(boolean1 == boolean0);
      
      player0.pack();
      int int1 = player1.type();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("Player-1805", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(5, int1);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.gangStrength();
      Player player1 = new Player(965);
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-63);
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 271);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)21;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      Player player0 = new Player((byte)3, "", "state.Party", (byte)3);
      player0.setZ((-545.0339F));
      Player player1 = new Player(768, "state.Party", (byte)0);
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, true);
      player0.isJoinOK(player1, false);
      player1.type();
      player0.type();
      float float0 = player0.getZ();
      assertEquals((-545.0339F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(4891);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player4919", player1.toString());
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(4041);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player4041", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(3072);
      player0.setZ(2397.9348F);
      player0.id = 0;
      player0.gangStrength();
      float float0 = player0.getZ();
      assertEquals(2397.9348F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1353), "T<", "T<", 3, (-15105));
      player0.setY(3);
      Player player1 = new Player((-15105), "WM=J", (String) null, (-3956));
      player1.isJoinOK(player0, true);
      assertEquals(3.0F, player0.getY(), 0.01F);
      
      System.setCurrentTimeMillis((-3956));
      player1.toString();
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-638));
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)111;
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte)17;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player1 = new Player(1, (String) null, 1);
      player0.unpack(dataInputStream0);
      Player player2 = new Player((byte)0, "B1jvsF8;TqOF,1", (String) null, (-633), (byte)0);
      player0.isJoinOK(player1, true);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-638", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      
      int int1 = player2.getStrength();
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals((-633), player2.getPictureId());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals(0, int1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(1259, "state.Party", "state.Party", 10);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.pack();
      player0.type();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = new Party((short)4919);
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(14, "", 14);
      player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(14, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(960, "gr{:&=|m1:\"m.ZK&", "gr{:&=|m1:\"m.ZK&", 5143);
      player0.gangStrength();
      player0.setMoney((-764.79F));
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-764.79F), float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      dataInputStream0.close();
      Player player0 = new Player((-1), (String) null, "p", 4041, (-1));
      int int0 = player0.getStrength();
      assertEquals((-1), int0);
      
      int int1 = player0.gangStrength();
      assertEquals((-1), int1);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(4041, player0.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(1456, (String) null, "", 1456);
      player0.setZ(1456);
      player0.setZ((-1.0F));
      player0.getSubparty();
      player0.getName();
      player0.getName();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-122);
      byteArray0[1] = (byte) (-71);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-71), (byte) (-71));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0555153951973866
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player();
      player1.gangStrength();
      player0.gangStrength();
      player0.remove(player1);
      player1.setZ(0.2F);
      Player player2 = new Player((short)4919, "Player.unpack(): *** WARNING *** data is not of proper type!", (-111));
      player2.setX(0.1F);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      player2.reset(true);
      player0.setX(0.1F);
      player1.reset(true);
      player0.pack();
      player1.getX();
      player2.setDead((-1527L), true);
      player1.reset(true);
      player1.getIP();
      Player player3 = new Player((-2213), "G|Gg:hW,c,", "LfzW1'~~a0&Je", 1, 1);
      player3.gangStrength();
      player2.getTimeOfDeath();
      player1.setX(0.1F);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(3745);
      player0.gangStrength();
      player0.gangStrength();
      player0.remove(player0);
      player0.setZ((-385.8F));
      player0.setX((-1.0F));
      player0.setX((-944.1F));
      Player player1 = new Player(1);
      player1.reset(false);
      player1.pack();
      player0.getX();
      player0.setDead((long) (short)4919, true);
      player0.reset(true);
      player0.getIP();
      player1.gangStrength();
      Player player2 = new Player(1037, "state.Player", "5OkiTV", (short)4919, 1);
      player2.getTimeOfDeath();
      player0.setX((-1.0F));
      // Undeclared exception!
      try { 
        player2.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(10);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.gangStrength();
      MockFile mockFile0 = new MockFile("'NJ%Zq+Jp.Z");
      mockFile0.mkdir();
      mockFile0.setWritable(false, false);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "'NJ%Zq+Jp.Z");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 'NJ%Zq+Jp.Z
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(5);
      Player player1 = null;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1100);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)13;
      player0.setZ((byte)0);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1.0F);
      player0.setDead((-1L));
      player0.pack();
      player0.id = 1;
      player0.setY((-1L));
      player0.getY();
      player0.reset(false);
      player0.setY(1);
      player0.setDead(2759L);
      player0.getY();
      player0.setDead((long) 1);
      player0.setMoney(0.0F);
      assertEquals(1L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-3581), (String) null, (-3581));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setMoney(10.0F);
      player0.getMoney();
      assertEquals(10.0F, player0.getMoney(), 0.01F);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-86);
      Player player1 = new Player((short)4919);
      player1.pack();
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, (String) null, 0);
      player0.reset(true);
      player0.setDead((-464L), false);
      player0.getName();
      player0.id = 0;
      player0.setZ(477.54F);
      int int0 = Packable.TEXT_MESSAGE;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-92);
      byteArray0[2] = (byte) (-42);
      Player player1 = new Player(3940, "l3/wv+]9K;M", 0);
      player1.unpack(byteArray0);
      player0.setX(0);
      int int1 = player0.gangStrength();
      assertEquals(477.54F, player0.getZ(), 0.01F);
      assertEquals(1, int1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-36));
      player0.setDead((-2197L));
      System.setCurrentTimeMillis((-1148L));
      player0.setZ(0.0F);
      Player player1 = new Player((-3715), "state.Party", "state.Party", 601);
      player0.setJoinOK(player1, true);
      player0.pack();
      System.setCurrentTimeMillis(601);
      Player player2 = new Player((short)4919);
      player2.isJoinOK(player0, false);
      player0.isDead();
      player2.pack();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals((-2197L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(382, "", "", 382, 382);
      player0.pack();
      player0.boss = null;
      player0.setMoney(382);
      player0.setX(382);
      player0.setZ(0.0F);
      player0.reset(true);
      player0.setMoney((-2555.436F));
      player0.getIP();
      player0.setX(0.0F);
      player0.setX(382);
      float float0 = Player.TOLERANCE;
      player0.pack();
      player0.boss = null;
      player0.setX(0.0F);
      boolean boolean0 = player0.isConnected();
      assertEquals((-2555.436F), player0.getMoney(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-108);
      byteArray0[4] = (byte) (-53);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 16896, (byte) (-1));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      boolean boolean1 = player0.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(10);
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player10", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)45;
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player((-21332), "", (byte)45);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(2835, (String) null, "_T5e^XS{", 2835, (-239));
      String string0 = player0.getIP();
      assertEquals(2835, player0.getPictureId());
      assertNull(string0);
      assertTrue(player0.isConnected());
      assertEquals((-239), player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(4041);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(26);
      int int0 = Packable.GAME_STATE;
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
      
      String string0 = player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player26", string0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-30));
      int int0 = Packable.TEXT_MESSAGE;
      boolean boolean0 = player0.isConnected();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-30", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(1236);
      float float0 = player0.getZ();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player1236", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(862, "'", "'", 1445);
      int int0 = player0.getPictureId();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1445, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-2435), "%D<L/mX2^j};CT", (-2435));
      player0.getPictureId();
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)25;
      byteArray0[0] = (byte)25;
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2576);
      player0.getPictureId();
      int int0 = 0;
      player0.id = 0;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, (short)4919);
      try { 
        pushbackInputStream0.skip(2576);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(5313);
      int int0 = player0.getStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player5313", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-4976), (String) null, (String) null, (-4976), (-4976));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      player0.getName();
      int int0 = Packable.TEXT_MESSAGE;
      assertEquals(1, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-2572), "N$c", 4136);
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4136, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0, "iRl_q1K", "iRl_q1K", 0, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(0, int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1112, "gui.ModuleBrowserDialog$ModuleFilter", "", 1112);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      Player player1 = new Player(1112, "9rwE6UtTGp3($RB%", "", (-1));
      player0.head = (Party) player1;
      assertEquals((-1), player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(2, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("gui.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(0, "", "vJ", 3305);
      player0.setY(0);
      player0.getMoney();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-71);
      byteArray0[5] = (byte) (-86);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)22;
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.getTimeOfDeath();
      player0.setX((byte) (-86));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Player player0 = new Player(2181, "i1-KFV?x%0yltkM", 2181);
      player0.reset(false);
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(2181, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, int0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(0);
      player0.gangStrength();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      dataOutputStream0.writeChar(1);
      player0.pack(dataOutputStream0);
      assertEquals(30, pipedInputStream0.available());
      
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-2572), "N$c", 4136);
      Player player1 = new Player((short)4919);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.boss = (Party) player1;
      assertTrue(player1.isConnected());
      
      player1.setConnected(false);
      float float0 = Player.TOLERANCE;
      float float1 = player1.getX();
      assertFalse(player1.isConnected());
      assertEquals(10.0F, float1, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(10);
      Party party0 = player0.next;
      player0.pack();
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte) (-63);
      byteArray0[6] = (byte) (-84);
      player0.unpack(byteArray0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-4054));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-640));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte) (-60);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-52);
      byteArray0[8] = (byte) (-26);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(0);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-217.92F));
      float float0 = player0.getY();
      assertEquals((-217.92F), player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }
}
