/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 06:18:21 GMT 2020
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.net.InetAddress;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("28'K{h[:P1j");
      String[] stringArray0 = new String[5];
      stringArray0[4] = "28'K{h[:P1j";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " DEFAULT ", true, stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.nval = (double) (-4);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 4", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("$ ; 6 } z) a > d : h / % LW0 ] k", "$;6}z)a>d:h/%LW0]k", (Object) null);
      assertEquals("$ ; 6 } z) a > d : h / % LW0 ] k", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("()8YwND6M.3#!~qu8");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      DBDataType.getInstance(0, "");
      defaultDBColumn0.setDefaultValue("alter table");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("  DEFAULT alter table NULL", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("-(!M:KLRe8!K,n", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      File file0 = MockFile.createTempFile("drop indexaltermaterialize view", "org.apache.derby.iapi.store.raw.xact.TransactionFactory");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      mockPrintWriter0.append('U');
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals("foreign key constraint", dBForeignKeyConstraint0.getObjectType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "%1n>};", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.substituteMarkers(";B#~g4ezl@/dc!\"", ";B#~g4ezl@/dc!\"", stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM  WHERE ", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-1235), "insertaltermaterialize view");
      Integer integer0 = new Integer((-1235));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("insertaltermaterialize view", (DBTable) null, dBDataType0, integer0, integer0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("insertaltermaterialize view", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(105, "select intoaltermaterialize view");
      Integer integer0 = new Integer(8);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0, integer0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = SQLUtil.removeComments("into");
      assertEquals("into", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("/;7C?*3T^DNG5O{.", (DBCatalog) null);
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("/;7C?*3T^DNG5O{.", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("Password to use when authenticating.");
      assertNull(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("", stringArray0, "", "", stringArray0);
      assertEquals("left join  as  on ", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("4?qT@7vSI)O;b", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES null()", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("table null", "table null", defaultDBTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[9];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize(" FOR UPDATE");
      DBSchema dBSchema0 = new DBSchema("alterjmaterialized view%f$}v/w8fj,eo");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alterjmaterialized view%f$}v/w8fj,eo", dBSchema0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("GGo[c", (DBTable) null, (DBDataType) null, integer0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Integer integer0 = RawTransaction.ABORT;
      columnDescriptorList0.add((Object) integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("2;7", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("),0w(+hC#~sO7t");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: ),0w(+hC#~sO7t
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("5A(}dt", stringArray0, (String) null, "5A(}dt", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("~=:8/0R^snr**'>", (String) null, (String[]) null, "~=:8/0R^snr**'>", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String[] stringArray1 = new String[6];
      // Undeclared exception!
      try { 
        SQLUtil.join("E(Hj&B/HQBo", "E(Hj&B/HQBo", stringArray1, "E(Hj&B/HQBo", "E(Hj&B/HQBo", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("*Xlhuco3ntV-|F8q", (String[]) null, "", "No row available for wasNull.", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[4];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("ID", stringArray1, "SERVER_ENCODING", "SERVER_ENCODING", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("*$)v]aj{O8r;=(NDcM", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, stringArray0);
      String string0 = "6}XyJmBi:2";
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "ek<h}W ~");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[8] = "`ROH<};uj$EEq5!2E";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertSame(stringBuilder1, stringBuilder0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execalter$index");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ">q-", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "execalter$index");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("execalter$indexCONSTRAINT >q- ", stringBuilder0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("exec");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "into";
      SQLUtil.join("inner", "alter tableselect", stringArray0, "inner", "into", stringArray0);
      InetAddress inetAddress0 = null;
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      VersionNumber.valueOf("\u0001\u00FE");
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("SELECT * FROM ");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("exec");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select intoi`roh<};uj$egq^2e");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("$ ; 6 } z) a > d : h / % LW0 ] k");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      boolean boolean0 = SQLUtil.isDDL("drop index");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter tablea'ter bateriaiized vjew");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = SQLUtil.renderValue("exec");
      assertEquals("'exec'", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.reverse();
      DBDataType dBDataType0 = DBDataType.getInstance(183, "]T/ (");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("PRIMARY KEY ", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("]T/ ((1)", stringBuilder0.toString());
      
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("]T/ ((1)", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "cU4";
      DBDataType dBDataType0 = DBDataType.getInstance((-474389168), "cU4");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("cU4", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      SQLUtil.addRequiredCondition(string0, stringBuilder0);
      assertEquals("CU4(1,1) and cU4", stringBuilder0.toString());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("  NULL", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = SQLUtil.renderColumnListWithTableName("/eg' ", stringArray0);
      assertEquals("/eg' .null, /eg' .null, /eg' .null, /eg' .null, /eg' .null", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("/eg' .null, /eg' .null, /eg' .null, /eg' .null, /eg' .null");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("drop table:b>2^5t!c,b2)d&", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = 1533.140283703355;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("1533.140283703355", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SQLUtil.normalize("&eT8W-Bk8&sP?zr\"", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = SQLUtil.normalize("*/", false);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SQLUtil.normalize("_D|[?A.qg", false);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("_D|[?A.qg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = SQLUtil.normalize("$;6}z)a>d:h/%LW0]k", false);
      assertEquals("$ ; 6 } z) a > d : h / % LW0 ] k", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table ", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, stringArray0);
      defaultDBTable0.getReferrers();
      SQLUtil.constraintName(dBUniqueConstraint0);
      NameSpec nameSpec0 = NameSpec.NEVER;
  }

  /**
  //Test case number: 90
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[3] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("W;(nk\"i/`Jq)MY:.");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "^[Q >L(kk", true, (String[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[4] = "8";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null);
      assertNull(dBUniqueConstraint0.getDoc());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("update", true, "update", "update");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT update ", stringBuilder0.toString());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("XTPu[[X%Cf:6x;Pwh", stringBuilder0);
      NameSpec nameSpec0 = NameSpec.NEVER;
  }

  /**
  //Test case number: 95
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("K", stringBuilder0);
      assertEquals("K", stringBuilder0.toString());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.965667308330465
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SQLUtil.normalize("-(!M:KLRe8!K,n", false);
      DBSchema dBSchema0 = new DBSchema("^d(");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("- (!  M : KLRe8 ! K, n", dBSchema0);
      String[] stringArray0 = new String[8];
      stringArray0[6] = "-(!M:KLRe8!K,n";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("-(!M:KLRe8!K,n", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      String[] stringArray1 = null;
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8775242811493906
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "|/tA+<g";
      SQLUtil.mutatesDataOrStructure("select into");
      int int0 = (-1619);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("SQLFOREIGNKEYS");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.310783678099714
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("execa:");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.721954449406054
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("SELECT * FROM ");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("SELECT * FROM ");
      assertNotNull(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      Boolean boolean2 = SQLUtil.mutatesDataOrStructure("create table ");
      assertTrue(boolean2);
      assertNotNull(boolean2);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessiondefault");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.6883644225872564
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      SQLUtil.normalize("*$v]&=j{O8r;(NDcMQ", true);
      String[] stringArray0 = new String[2];
      stringArray0[1] = "* $ v ] & = j { O8r ; (N  DcMQ";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBSchema dBSchema0 = new DBSchema("*$v]&=j{O8r;(NDcMQ = '*$v]&=j{O8r;(NDcMQ' AND * $ v ] & = j { O8r ; (N  DcMQ = '* $ v ] & = j { O8r ; (N  DcMQ'");
      assertEquals("*$v]&=j{O8r;(NDcMQ = '*$v]&=j{O8r;(NDcMQ' AND * $ v ] & = j { O8r ; (N  DcMQ = '* $ v ] & = j { O8r ; (N  DcMQ'", dBSchema0.getName());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      dBDataType0.isNumber();
      defaultDBColumn0.setNullable(false);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("  NOT NULL", string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter indexalter materialized iwalter materiaiized vjew", (DBTable) null, (DBDataType) null, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("alter indexalter materialized iwalter materiaiized vjew", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.3114313374732374
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[1];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("alter tablealter ma", false, defaultDBTable0, "pK[Ow");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5832584594204768
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[4];
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SERVER_ENCODING");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "altermateri", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.9470571522825082
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(2752, "-(!M:KLRe8!K,n");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("mhO(V?Lcjl_SN<*i(", defaultDBTable0, dBDataType0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, true);
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setTime(String,Time)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, (String) null, "SSag");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK SSag", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.1274832349932322
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.normalize("428C1", false);
      assertEquals("428C1", string0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "1V)l!.q9{PDQ+}&6i7", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string1);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("drop materialized viewh),9k", stringArray0, "alter tableh),9k", "alter tableh),9k", stringArray0);
      assertEquals("alter tableh),9k as alter tableh),9k on ", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("UELECT * FROM ");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.substituteMarkers("UELECT * FROM ", "UELECT * FROM ", "UELECT * FROM ");
      assertEquals("'UELECT * FROM '", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "NVARCHAR";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("select intoalter$index", (String[]) null, "NVARCHAR", "NVARCHAR", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[1];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }
}
