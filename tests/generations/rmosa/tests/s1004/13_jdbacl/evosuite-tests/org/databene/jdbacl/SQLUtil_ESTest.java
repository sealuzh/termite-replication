/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 03:11:57 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      SQLUtil.mutatesStructure("$b{z&J|_@D/*C");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "/*";
      SQLUtil.parseColumnTypeAndSize("/*");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(80, "dTe");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("dTe", defaultDBTable0, dBDataType0, integer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      defaultDBColumn0.setNullable(false);
      defaultDBColumn0.equals("dTe");
      defaultDBColumn0.toString();
      SQLUtil.renderColumn(defaultDBColumn0);
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCatalog dBCatalog0 = new DBCatalog("ALT");
      assertEquals("ALT", dBCatalog0.getName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      Character character0 = new Character('.');
      constraintDescriptorList0.add((Object) character0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Character cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      SQLUtil.isProcedureCall("~(/*0N@]M");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "FB{i]jO$%.E2h);";
      SQLUtil.join("FB{i]jO$%.E2h);", "/YlK.}ohf>:b[", stringArray0, "FB{i]jO$%.E2h);", "-X$9mO<0C4}g", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SEQUENCE_SCHEMA", (DBSchema) null);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-X$9mO<0C4}g";
      stringArray1[1] = "/YlK.}ohf>:b[";
      stringArray1[2] = "SEQUENCE_SCHEMA";
      stringArray1[3] = "-X$9mO<0C4}g";
      stringArray1[4] = "/YlK.}ohf>:b[";
      stringArray1[5] = "FB{i]jO$%.E2h);";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[19];
      stringArray0[0] = "org.apache.derby.impl.sql.GenericActivationHolder";
      stringArray0[2] = "5G/b~ LmL_-JeS3c";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      stringArray0[3] = "org.apache.derby.impl.sql.GenericActivationHolder";
      stringArray0[4] = "org.apache.derby.impl.sql.GenericActivationHolder";
      stringArray0[5] = "alter table";
      stringArray0[6] = "org.apache.derby.impl.sql.GenericActivationHolder";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "org.apache.derby.impl.sql.GenericActivationHolder", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      File file0 = MockFile.createTempFile("n4yHh~", "c.XW");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.COMMIT;
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary((byte[]) null);
      rowOutputBinary0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("getBigDecimal(");
      SQLUtil.renderValue(defaultDBTable0);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("oZx<bfoG0n!", defaultDBTable0, 0, "getBigDecimal(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: getBigDecimal(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join((String) null, "ALTER TABLE ", stringArray0, "alter maer", "alter maer", stringArray0);
      assertEquals("alter maer as alter maer on ", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      dBPrimaryKeyConstraint0.setTable(defaultDBTable0);
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("getSetAutoincrementValue");
      Integer integer0 = RawTransaction.ABORT;
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary((byte[]) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("s{J63Hn;");
      // Undeclared exception!
      try { 
        SQLUtil.renderValue(rowOutputBinary0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.setDoc("");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)55;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte)99;
      byteArray0[6] = (byte)99;
      byteArray0[3] = (byte)99;
      byteArray0[8] = (byte)99;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(byteArray0);
      rowOutputBinary0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0, true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[0] = "";
      stringArray0[2] = "";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((byte)99);
      StringBuilder stringBuilder1 = stringBuilder0.append(1594.002097552638);
      stringBuilder1.replace(1, 1, "");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals(18, rowOutputBinary0.size());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("TP.xsId~jd>A-;W");
      Object object0 = new Object();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "~E+DHsnZ{H";
      stringArray0[1] = "TP.xsId~jd>A-;W";
      stringArray0[2] = "TP.xsId~jd>A-;W";
      stringArray0[3] = "TP.xsId~jd>A-;W";
      stringArray0[4] = "TP.xsId~jd>A-;W";
      stringArray0[5] = "&0<K1";
      stringArray0[6] = "TP.xsId~jd>A-;W";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "execute";
      stringArray1[1] = "&0<K1";
      stringArray1[2] = "&0<K1";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("Skipping HASH JOIN because optimizable is not materializable", stringArray0, "~E+DHsnZ{H", "execute", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "SELECT ID FROM INFORMATION_SCHEMA.LOBS WHERE TABLE = ?";
      stringArray0[1] = "}4j ##A$Dyg?/RCD*";
      stringArray0[2] = "nN";
      stringArray0[3] = "lQ<y{#%!g$-";
      stringArray0[4] = "fyAC\"<Z5k\u0004b]X";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[5] = "/) ";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "SELECT ID FROM INFORMATION_SCHEMA.LOBS WHERE TABLE = ? = 'SELECT ID FROM INFORMATION_SCHEMA.LOBS WHERE TABLE = ?' AND }4j ##A$Dyg?/RCD* = '}4j ##A$Dyg?/RCD*' AND nN = 'nN' AND lQ<y{#%!g$- = 'lQ<y{#%!g$-' AND fyAC\"<Z5k\u0004b]X = 'fyAC\"<Z5k\u0004b]X' AND /)  = '/) '";
      stringArray1[1] = "/) ";
      stringArray1[3] = "nN";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("lQ<y{#%!g$-", stringArray0, "r2':lmo/#DS/ca,!#j1", "fQPp#bZfT", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " as ", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(" as ");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      int int0 = (-1623);
      StringBuilder stringBuilder1 = null;
      try {
        stringBuilder1 = new StringBuilder((-1623));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("#L", stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "^2t^~G$IPCF";
      SQLUtil.substituteMarkers("", "^2t^~G$IPCF", "");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      DBConstraint dBConstraint0 = null;
      int int0 = 1715;
      StringBuilder stringBuilder0 = new StringBuilder(1715);
      StringBuffer stringBuffer0 = new StringBuffer("#L");
      StringBuilder stringBuilder1 = stringBuilder0.append(stringBuffer0);
      StringBuilder stringBuilder2 = stringBuilder1.append((double) 1715);
      char char0 = 'K';
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        stringBuilder2.insert(1715, (float) 1715);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1715
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("BIR_0Yn6");
      assertNull(boolean0);
      
      TableContainer tableContainer0 = new TableContainer("alter table");
      DBCatalog dBCatalog0 = new DBCatalog();
      tableContainer0.getTable("alter table");
      String string0 = SQLUtil.normalize(" */ ", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("delete");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("deletel'", (DBTable) null, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[17];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("deletel'", (DBTable) null, (DBDataType) null);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("deletel'", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "JyVOWhCeI~[";
      stringArray0[3] = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("l;4rh-\"'gu");
      DBDataType.getInstance(41, "");
      Integer integer0 = RawTransaction.ABORT;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "l;4rh-\"'gu", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("@7");
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      rowOutputBinary0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("bjZ`L)#ZE\"?dH6");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("l;4rh-\"'gu", defaultDBTable0.getName());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(726, "oj ");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("oj ", defaultDBTable0, dBDataType0, integer2);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      Character character0 = new Character('>');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'>'", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callreferences");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBSchema dBSchema0 = new DBSchema("TP.Id~jd>A-;W");
      dBSchema0.getPackages();
      dBSchema0.getTables();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("select", dBSchema0);
      SQLUtil.normalize("QTz ZN%/[ID", true);
      SQLUtil.renderValue("TP.Id~jd>A-;W");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "dOc^^bn HQex`Xaq1D";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("TU5KWV;U}g)", true, defaultDBTable1, stringArray0, defaultDBTable1, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("QTz ZN%/[ID", "z", "D");
      jdbcConnectionPool0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SQLUtil.normalize("+IBit`J2,Y(/vy_", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("into");
      Locale locale0 = Locale.CANADA;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "+IBit`J2,Y(/vy_";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "+ IBit ` J2, Y (/ vy_";
      mockPrintWriter0.format(locale0, "", objectArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(80, "dTe");
      Integer integer0 = new Integer(80);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("dTe", defaultDBTable0, dBDataType0, integer0);
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = new Integer(80);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer1, integer2);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("BH$XT!|b}e[^?");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("ALTER TABLE ", defaultDBTable0, (DBDataType) null, integer0, integer0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ALTER TABLE ");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Oag");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Oag", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("Oag", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "8Jp}9#yZY~", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(156, "delete?w^");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("delete?w^", defaultDBTable0, dBDataType0);
      linkedList0.add((DBColumn) defaultDBColumn0);
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("delete?w^, delete?w^", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("`roh<};u", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = SQLUtil.normalize("m\".\"#.l}8dM,wpVPe!t", false);
      assertEquals("m \".\" #.l } 8dM, wpVPe ! t", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema null", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("PARAM");
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema PARAM", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("=#Cg1PZ~C32=C");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select into");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-327), "cannot re5ad from no");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("cannot re5ad from no", (DBTable) null, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("cannot re5ad from no CANNOT RE5AD FROM NO NULL", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      TableContainer tableContainer0 = new TableContainer("");
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "required (...)+ loop did not match anything at input ";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("required (...)+ loop did not match anything at input ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"...\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("updatesetcharacterstream(stri.g, reade_)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"stri.g\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[19];
      stringArray0[0] = "org.apache.derby.impl.sql.GenericActivationHolder";
      stringArray0[2] = "5G/b~ LmL_-JeS3c";
      stringArray0[3] = "org.apache.derby.impl.sql.GenericActivationHolder";
      stringArray0[4] = "org.apache.derby.impl.sql.GenericActivationHolder";
      stringArray0[5] = "alter table";
      stringArray0[6] = "org.apache.derby.impl.sql.GenericActivationHolder";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "org.apache.derby.impl.sql.GenericActivationHolder", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("alter table", false, dBUniqueConstraint0);
      String string0 = SQLUtil.ownerDotComponent(dBUniqueIndex0);
      assertEquals("null.alter table", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("mWY");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String string0 = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, (String) null, true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder("+'X6Wna2Q_-");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder1 = null;
      try {
        stringBuilder1 = new StringBuilder((-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[13];
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("{X4?W~}\"@c'nj", false, defaultDBTable0, (String[]) null, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT {X4?W~}\"@c'nj FOREIGN KEY () REFERENCES null(, , , , , , , , , , , , )", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("0^!*e-=juQry(L");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: 0^!*e-=juQry(L
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("renameyr'h'js[6in*qxv=(v`");
      String string0 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals("renameyr'h'js[6in*qxv=(v`", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(737, "");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer(737);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer1);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = SQLUtil.normalize("|F(0;N9^,", false);
      assertEquals("| F (0 ; N9 ^,", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("3wuI_sNaQ|J;eZn@k", defaultDBTable0, (DBDataType) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBDataType dBDataType0 = DBDataType.getInstance(8, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("`iAB>\"qp.|4`he%U^", false, "QoG>Z}W9a*2@=y", "updateString");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("create materialized viewselcdt");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = SQLUtil.normalize("#mG)Sr(JwL", false);
      assertEquals("# mG) Sr (JwL", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append('A');
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(353, "select");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create materialized view", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("ASELECT(0,2)", stringBuilder0.toString());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("rename");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("BLOB", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance("BLOB");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("BLOB", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[13];
      // Undeclared exception!
      try { 
        SQLUtil.removeComments(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "Rw#9{USY7D_gVtoF*q}";
      stringArray1[1] = "Rw#9{USY7D_gVtoF*q}";
      // Undeclared exception!
      try { 
        SQLUtil.join("Rw#9{USY7D_gVtoF*q}", "Rw#9{USY7D_gVtoF*q}", stringArray1, "Rw#9{USY7D_gVtoF*q}", "\u0007`G4&", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.derby.impl.sql.compile.TimestampOperatorNode");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("alter sessionselect", true, "update", "select");
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK select", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0685933537043635
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = SQLUtil.normalize("TP.Id~jd>A-;W", true);
      assertEquals("TP.Id ~ jd > A - ; W", string0);
      
      DBSchema dBSchema0 = new DBSchema("TP.Id~jd>A-;W");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("TP.Id ~ jd > A - ; W", dBSchema0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "TP.Id~jd>A-;W";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " (", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \" (\" PRIMARY KEY (TP.Id~jd>A-;W)", string1);
      
      String string2 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM TP.Id ~ jd > A - ; W WHERE TP.Id~jd>A-;W = 'TP.Id~jd>A-;W'", string2);
      
      String string3 = SQLUtil.renderValue("TP.Id ~ jd > A - ; W");
      assertEquals("'TP.Id ~ jd > A - ; W'", string3);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[7];
      NameSpec nameSpec0 = NameSpec.NEVER;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DATE");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "select intoalter tablecall", true, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , , , )", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[4] = null;
      String[] stringArray1 = new String[9];
      stringArray1[0] = "G";
      stringArray1[1] = "G";
      stringArray1[2] = "updater{:*(vhagv";
      stringArray1[3] = null;
      stringArray1[4] = "zve$!&'o1m$KhY|";
      stringArray1[5] = null;
      stringArray1[6] = null;
      stringArray1[7] = null;
      String string0 = SQLUtil.innerJoin((String) null, stringArray0, stringArray0[1], "G", stringArray1);
      assertEquals("null as G on null.null = G.G and null.null = G.G and null.null = G.updater{:*(vhagv and null.null = G.null and null.null = G.zve$!&'o1m$KhY|", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = SQLUtil.normalize("k;;Yq$5Hudr'-.R", true);
      assertEquals("k ; ; Yq $ 5Hudr '-.R'", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = SQLUtil.normalize("/*", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("callreferences");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("$i(s2,,jU>", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = "exec+^<xs";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "exec+^<xs");
      StringBuilder stringBuilder1 = stringBuilder0.append("exec+^<xs");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "exec+^<xs", false, (String[]) null);
      StringBuilder stringBuilder2 = new StringBuilder("exec+^<xs");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1, nameSpec0);
      StringBuilder stringBuilder3 = null;
      try {
        stringBuilder3 = new StringBuilder((-1623));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String[] stringArray0 = new String[12];
      // Undeclared exception!
      try { 
        SQLUtil.join("(XuTQ${)?$In", "(XuTQ${)?$In", stringArray0, (String) null, "(XuTQ${)?$In", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "cl@FR[k9aIc%";
      stringArray0[1] = "cl@FR[k9aIc%";
      stringArray0[2] = "getDate";
      stringArray0[3] = "getDate";
      stringArray0[4] = "cl@FR[k9aIc%";
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("getDate", (String[]) null, stringArray0[5], "cl@FR[k9aIc%", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("P.", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[9];
      String string0 = SQLUtil.renderColumnListWithTableName("3wuI_sNaQ|J;eZn@k", stringArray0);
      assertEquals("3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null, 3wuI_sNaQ|J;eZn@k.null", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("'", stringBuilder0);
      assertEquals("'", stringBuilder0.toString());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[5] = "t;]HrZtsCfd";
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("setbin");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setbin", false, defaultDBTable0, "setbin");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT setbin ", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("create unique index", true, "create unique index", "DEFAULT_LOCK_TIMEOUT");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT \"create unique index\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6)](;GPwTn");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "6)](;GPwTn";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "6)](;GPwTn", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (6)](;GPwTn)", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.7598407318671061
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SQLUtil.normalize("TP.Id~jd>A-;W", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.countProviders();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "T");
      SQLUtil.addOptionalCondition("T", stringBuilder0);
      assertEquals("T or T", stringBuilder0.toString());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "create tablealter materialized vihwtrixgerne8ransitionrows";
      String string0 = SQLUtil.leftJoin("create tablealter materialized vihwtrixgerne8ransitionrows", stringArray0, "create tablealter materialized vihwtrixgerne8ransitionrows", "create tablealter materialized vihwtrixgerne8ransitionrows", stringArray0);
      assertEquals("left join create tablealter materialized vihwtrixgerne8ransitionrows as create tablealter materialized vihwtrixgerne8ransitionrows on create tablealter materialized vihwtrixgerne8ransitionrows.create tablealter materialized vihwtrixgerne8ransitionrows = create tablealter materialized vihwtrixgerne8ransitionrows.create tablealter materialized vihwtrixgerne8ransitionrows", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = null;
      String string0 = "VO~a1";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "VO~a1", false, (String[]) null);
      String string1 = "create unique index";
      StringBuilder stringBuilder1 = new StringBuilder("create unique index");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = null;
      try {
        stringBuilder2 = new StringBuilder((-1623));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("t)sn;");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("t)sn;", false, "t)sn;", "DEFAULT_LOCK_TIMEOUT");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("t)sn;CONSTRAINT t)sn; ", stringBuilder0.toString());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = "`roh<};u";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "`roh<};u", true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder("`roh<};u");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder1 = null;
      try {
        stringBuilder1 = new StringBuilder((-1623));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "`roh<};u";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "`roh<};u", true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder("`roh<};u");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder1 = null;
      try {
        stringBuilder1 = new StringBuilder((-1623));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = "alter session;c";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5350813079469847
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("PCa:", "PCa:", stringArray0, "PCa:", "PCa:", stringArray0);
      assertEquals("PCa: join PCa: as PCa: on PCa:.null = PCa:.null", string0);
      
      DBSchema dBSchema0 = new DBSchema("PCa:");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "n";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("PCa: join PCa: as PCa: on PCa:.null = PCa:.null", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES (n)", string1);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.7432025026337845
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = stringArray0[0];
      stringArray0[2] = stringArray0[0];
      stringArray0[0] = "o?B/a-*okqx]lADy9";
      SQLUtil.normalize("o?B/a-*okqx]lADy9", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-52), "0]Q ");
      Integer.getInteger("<|-Hj~-g3", (Integer) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("o ? B / a - * okqx ] lADy9 ", defaultDBTable0, dBDataType0, (Integer) null, (Integer) null);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "h9*kwKC7<4,(";
      String string0 = SQLUtil.innerJoin("h9*kwKC7<4,(", stringArray0, "exec)4h", "h9*kwKC7<4,(", stringArray0);
      assertEquals("exec)4h as h9*kwKC7<4,( on h9*kwKC7<4,(.h9*kwKC7<4,( = h9*kwKC7<4,(.h9*kwKC7<4,(", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("INOUT", "alter materialized vihwtriXgerne8transitionrows", (String[]) null, "INOUT", "INOUT", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("l5P/Y,a r", (String[]) null, "l5P/Y,a r", "INT8", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("INOUT", (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "inner";
      stringArray0[1] = "execcannot re5ad frow no";
      stringArray0[2] = " (";
      stringArray0[3] = null;
      stringArray0[4] = " (";
      stringArray0[5] = "execcannot re5ad frow no";
      stringArray0[6] = "inner";
      stringArray0[7] = " (";
      // Undeclared exception!
      try { 
        SQLUtil.join("inner", "execcannot re5ad frow no", (String[]) null, (String) null, "inner", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = SQLUtil.removeComments("MD2");
      assertEquals("MD2", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBSchema dBSchema0 = new DBSchema("");
      dBSchema0.toString();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("9Z UE{o,JF{*OTdW", dBSchema0);
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM 9Z UE{o,JF{*OTdW WHERE ", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      tableContainer0.getTable("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "NCLOB";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("method is not supporte", "executetp.id~jd>a-;w", "method is not supporte");
      assertEquals("method is not supporte", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(759, "E`|f9t0*m~M}");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("E`|f9t0*m~M}", defaultDBTable0, dBDataType0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("E`|F9T0*M~M}", stringBuilder0.toString());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[10];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(80, "t");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("t", defaultDBTable0, dBDataType0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder("t");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("tT(1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "alter materialized viewtriXgerne8transitionrows");
      SQLUtil.addRequiredCondition("alter materialized viewtriXgerne8transitionrows", stringBuilder0);
      assertEquals("alter materialized viewtriXgerne8transitionrows and alter materialized viewtriXgerne8transitionrows", stringBuilder0.toString());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("", "org.antlr.runtime.RuleReturnScope", stringArray0, "org.antlr.runtime.RuleReturnScope", "", stringArray0);
      assertEquals("org.antlr.runtime.RuleReturnScope as  on org.antlr.runtime.RuleReturnScope.null = .null", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join((String) null, "(XuTQ${)?$In", stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("null as null on (XuTQ${)?$In.null = null.null and (XuTQ${)?$In.null = null.null and (XuTQ${)?$In.null = null.null and (XuTQ${)?$In.null = null.null and (XuTQ${)?$In.null = null.null and (XuTQ${)?$In.null = null.null and (XuTQ${)?$In.null = null.null", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("unique", "unique", stringArray0, "unique", (String) null, stringArray0);
      assertEquals("unique join unique as null on ", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("update", "org.databene.jdbacl.NameSpec", stringArray0, "org.databene.jdbacl.NameSpec", "org.databene.jdbacl.NameSpec", stringArray0);
      assertEquals("update join org.databene.jdbacl.NameSpec as org.databene.jdbacl.NameSpec on org.databene.jdbacl.NameSpec.null = org.databene.jdbacl.NameSpec.null", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create table");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join("(XuTQ${)?$In", "(XuTQ${)?$In", stringArray0, "(XuTQ${)?$In", "(XuTQ${)?$In", stringArray0);
      assertEquals("(XuTQ${)?$In join (XuTQ${)?$In as (XuTQ${)?$In on (XuTQ${)?$In.null = (XuTQ${)?$In.null and (XuTQ${)?$In.null = (XuTQ${)?$In.null and (XuTQ${)?$In.null = (XuTQ${)?$In.null and (XuTQ${)?$In.null = (XuTQ${)?$In.null and (XuTQ${)?$In.null = (XuTQ${)?$In.null and (XuTQ${)?$In.null = (XuTQ${)?$In.null and (XuTQ${)?$In.null = (XuTQ${)?$In.null", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("n|.p/)zyj7");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("\"=b058zFUIVujQ:");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("@<`|CR/4E1dTlcLxGT");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("|%ZAV0JH");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("+^<Xs");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("+IBit`J2,Y(/vy_");
      assertNull(boolean0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectseparator");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter materialized viewtriXgerne8transitionrows");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session .{ifw\"");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
