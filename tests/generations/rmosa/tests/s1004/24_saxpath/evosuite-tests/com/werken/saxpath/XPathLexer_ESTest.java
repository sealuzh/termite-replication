/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 01:51:43 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.consume((-3570));
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.134783825341754
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.number();
      xPathLexer0.consume((-108));
      xPathLexer0.consume();
      xPathLexer0.getPreviousToken();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6954701913713075
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      Token token1 = xPathLexer0.pipe();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("eD8-9E+p,y$[vu4UV", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("m", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("eD8-9E", token4.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.consume((-1375));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.797321935099309
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.consume((-196));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "aKjIXtcKlMWL*FN|";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.consume((-691));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = ",`>U3!K*,";
      XPathLexer xPathLexer0 = new XPathLexer(",`>U3!K*,");
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-1375));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4390346061048338
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-765));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0966173996135877
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ata}z,I)wmy$X>1F`}C");
      xPathLexer0.number();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-2017));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o}f7ty2");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("}f7ty2", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals("}", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.consume((-195));
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.endPosition();
      xPathLexer0.isIdentifierChar('-');
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2811211713557142
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.consume((-1060));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.798520052343639
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("*O-=9'Uv^K47");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("O-", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("=", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.80023767515367
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<:QMfd;um<w2@h");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.notEquals();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("!<", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Mfd", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~h7P'\r[AlUIA^*-$'d");
      xPathLexer0.setXPath("~h7P'\r[AlUIA^*-$'d");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("h7P", token1.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.800878608352407
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("m.eD8-9E+p,y$[vu4UV");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("m", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("p", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7408828597124437
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",`>U3!K*,");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.star();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      xPathLexer0.setXPath(",`>U3!K*,");
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("`", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("U", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("3", token6.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(",", token9.getTokenText());
      assertEquals(4, token9.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.8876911911657177
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.consume((-2369));
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.387956298958967
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-1064));
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.currentPosition();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.694550780544776
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P@q^8+6&DhE=#Mp");
      Token token0 = xPathLexer0.identifier();
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("98)LA6)*&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("98", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3yl,aSBIKq:+PZ;");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("yl", token1.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9226098695739262
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      xPathLexer0.doubleColon();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4536278647145273
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<:QMfd;um<w2@h");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("!<", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("QMfd", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.7997279501369023
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setXPath("");
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.setXPath("YY]>cp1@z :Ia");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amUe~-");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/LJj44w!c k%ijtqZ");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "[ (";
      XPathLexer xPathLexer0 = new XPathLexer("OL");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("OL");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l/LjuoTwzs@R'U");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.2747632111479428
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.not();
      assertEquals("[", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("amUe~-");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-469));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.301942712215643
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.consume((-353));
      xPathLexer0.not();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-1499));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.285265962734548
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aKjIXFcKlMWL*FN|");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token0 = xPathLexer0.dots();
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('a', char0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L]MV{a A");
      XPathLexer xPathLexer1 = new XPathLexer("79=K");
      Token token0 = xPathLexer1.number();
      assertEquals("79", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5811393442225354
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("=+D\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("h");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("h", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('1', char0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4398860526697708
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2]S\"]*'_6lK+}");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("2]S\"]*'_6lK+}");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*");
      XPathLexer xPathLexer1 = new XPathLexer("*");
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C5Pl");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("C5Pl", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n?-7pXR=%OG{n\"");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("da`\" Ny`2*N -HB5x`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("da", token0.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0634079263568155
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",`>U3!K*,");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(",", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.star();
      Token token2 = xPathLexer0.colon();
      assertEquals(">", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.setXPath(",`>U3!K*,");
      Token token3 = xPathLexer0.star();
      assertEquals(",", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals(">", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("U", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals("3", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("!", token8.getTokenText());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4531953504550725
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<:QMfd;um<w2@h");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.colon();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("Q", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("Mfd", token4.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1#h");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("F^+>vRsv)(Et");
      xPathLexer0.div();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.21315067300076
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.setXPath(".D,G1a&_hC[^=&^");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(".D,G1a&_hC[^=&^");
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(".", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("D", token3.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.439243482388646
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("58H@,J;~hIdd|'kRWC)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("58", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2815553875954016
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{Y3_h=<a]hMs7Vs2");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{Y3_h=<a]hMs7Vs2", token1.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0063339340309176
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B0f_J}bPAkI]N");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.6528293208612266
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("igJ93");
      xPathLexer1.colon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3469258853823667
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<:QMfd;um<w2@h");
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zm~2h7p-/jhH?1c '");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("zm", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_^Dx{q%Ib");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      xPathLexer0.slashes();
      String string0 = "u|z /EY/GahLr{[+$1";
      XPathLexer xPathLexer1 = new XPathLexer("u|z /EY/GahLr{[+$1");
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.consume();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("E7<V.WtO0mY4u5rdn+");
      XPathLexer xPathLexer2 = new XPathLexer("E7<V.WtO0mY4u5rdn+");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("E7", token1.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Y_hB.XB5>rjE^~t");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N(M.TtYX'*!|7UYYD5");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("?WyJbMl&p]'GS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?WyJbMl&p]'GS", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dCG<BY`wvvkPxK]@gx");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.0951521981483863
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dCG<BY`wvvkPxK]@gx");
      xPathLexer0.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("St");
      xPathLexer0.nextToken();
      int int0 = (-2452);
      XPathLexer xPathLexer1 = new XPathLexer("St");
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.3400488367530095
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kx_]%OU~8");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("x_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("yCOz;");
      Token token2 = xPathLexer1.colon();
      assertEquals("y", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4726092713423415
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.equals();
      assertEquals("m", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("p", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.9789833618730888
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B0f_J}bPAkI]N");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|rwNvya<C5y` j]");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1348));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("@M/S=F:-GrC1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b%F}wobfsXk8]`?'}$");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("b", token1.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9362223213232652
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4:>Khyx3ez(h#;_");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.colon();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3361073410336843
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("kC:9}RV95");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("kC", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("}", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4{Q62 S/NM?_Z!<T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("V I=Xbuk 8m?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.9510288363946708
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B0f_J}bPAkI]N");
      xPathLexer0.setXPath(";\"@}d2(^2vw::");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-4899));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5e::CvxszP,U('r{0");
      Token token0 = xPathLexer0.number();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5758444193776775
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("io2#\"l=; 5LMn=");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5975658299253552
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.9515869388463354
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B0f_J}bPAkI]N");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4547769474964112
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=5:D\"NY");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("D", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.2211134303576356
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("mp", token3.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_*Qowk!nV`*A0`");
      XPathLexer xPathLexer1 = new XPathLexer("r");
      xPathLexer1.number();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = "E7<V.WtO0mY4u5rdn+";
      XPathLexer xPathLexer0 = new XPathLexer("L:W(!x@Z");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("L:W(!x@Z");
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3yl,aSBIKq:+PZ;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8489621762061268
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z 8");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.colon();
      xPathLexer0.consume((-1008));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.638237128955339
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath(" !@TBi!.\"UZd>t'IFVsM");
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("!", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("@", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t`,SH#");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RZ%\"wq#uE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("RZ", token0.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer(">");
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.3983086482970086
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">3#&<C<5KU'-");
      Token token0 = xPathLexer0.slashes();
      assertEquals(">", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath(">3#&<C<5KU'-");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#&<C<5KU'-", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X%>x7H*}KthXXym");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w:C;i1{V");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.2815553875954016
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%yTbzGYf_WQ");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%yTbzGYf_WQ", token1.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("7b");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q\"c'w.");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.2405630579164622
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8!88u#<T'b0h13");
      xPathLexer0.number();
      xPathLexer0.setXPath("P");
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("7:o9SF.XjP*fQ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6m");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.6250966515495304
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.621866714283533
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      Token token0 = xPathLexer0.slashes();
      assertEquals(">", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("D", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("8", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.consume((-1008));
      xPathLexer0.not();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.3535313549511703
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.4374355727841266
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5^1Ggs?3Sv]=5iPHSm");
      Token token0 = xPathLexer0.number();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^1Ggs?3Sv]=5iPHSm", token1.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("U}|_\"N6N");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("U", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.896901237013082
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-975));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#-tf,iwHOeuZ>Vyg2");
      xPathLexer0.consume((-3362));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.4031942472174483
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      Token token0 = xPathLexer0.dollar();
      assertEquals("m", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(31, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3457));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.4875718771001254
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<:QMfd;um<w2@h");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.and();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(":Q", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Mfd", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.4731313866552378
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("mp", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("o'Epd)fJAM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.2774429502372793
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("AIRW", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("}", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.5761735678236266
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("II7Lj_");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("I7Lj_", token1.getTokenText());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("v;:C@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6901823238150926
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("1q 7V]Tz^");
      xPathLexer0.currentPosition();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.and();
      xPathLexer2.colon();
      xPathLexer3.number();
      xPathLexer1.div();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Rko7{IH*0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0/^!CPu");
      Token token0 = xPathLexer0.slashes();
      assertEquals(12, token0.getTokenType());
      assertEquals("0/", token0.getTokenText());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.22266386976721
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.2842967826608906
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals("m.", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.5921934959957973
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (21) ())", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.star();
      assertEquals(" ", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.3094321293436144
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("[ (");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("[", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.6492328484239647
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">1#&<C<5KU'-");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("m.eD8-9E+p,y$[vu4UV");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("+", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(",", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.8261036180683006
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$mp");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0194369145970383
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      Token token0 = xPathLexer0.identifier();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(",", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("G1a", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("&_", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.8001927484964377
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("AIRW", token2.getTokenText());
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("R", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token4 = xPathLexer1.notEquals();
      assertEquals("}s", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.getXPath();
      int int0 = xPathLexer1.endPosition();
      assertEquals(17, int0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.2868089741785496
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8!88u#<T'b0h13");
      xPathLexer0.div();
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      assertNotNull(token0);
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals("u", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.441983675392791
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token0 = xPathLexer0.identifier();
      assertEquals("AIRW", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("s", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("W", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(18, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("H", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("'", token6.getTokenText());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.4550274682366604
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-195));
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      boolean boolean0 = xPathLexer0.isIdentifierChar('&');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.div();
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.getXPath();
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.2811211713557142
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<:QMfd;um<w2@h");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.consume((-2163));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2452));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.6600962534366699
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = "E7<V.WtO0mY4u5rdn+";
      XPathLexer xPathLexer0 = new XPathLexer("J:#W(!x@Z");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("J:#W(!x@Z");
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-2452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.4076935662220373
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      Token token0 = xPathLexer0.identifier();
      assertEquals("AIRW", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals("H", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("'", token5.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1008));
      xPathLexer0.not();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.6877906150720685
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      int int0 = (-909);
      xPathLexer0.consume((-909));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.5766482455904502
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("j-8_<h");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.consume((-192));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.74045769554991
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YY]>cp1@z :Ia");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("YY", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("]", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.setXPath("YY]>cp1@z :Ia");
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("Y", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("Y", token6.getTokenText());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("]", token7.getTokenText());
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals("YY]>cp1@z :Ia", token8.getTokenText());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-219));
      xPathLexer0.getXPath();
      boolean boolean0 = xPathLexer0.isIdentifierChar('&');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.2377943086688394
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8!88u#<T'b0h13");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.9809367740342577
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("<", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.0251603577893984
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.9388773410080045
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      Token token0 = xPathLexer0.plus();
      assertEquals("!", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.309961720234651
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.9809367740342577
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('$');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('Z');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=0.9820163961665116
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.9413613334398152
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.0696479874336
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B0f_J}bPAkI]N");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.0192156406915538
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("G1a", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("h", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.hasMoreChars();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=2.284067161535747
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";NOzBWW\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.slashes();
      assertEquals(";", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(";NOzBWW\"");
      xPathLexer1.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer(";NOzBWW\"");
      int int0 = xPathLexer2.endPosition();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.9381072216395023
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.3734774445136932
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIRW}sW:H'\"xHj/G");
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("sW", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("H", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.2698621137235784
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.setXPath("\"!N*.WuF");
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("\"!", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("N", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.at();
      assertEquals("*", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.9820925737251566
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B0f_J}bPAkI]N");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.2344833360205987
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.and();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.8992894598805026
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMQd;u<w2@h");
      Token token0 = xPathLexer0.not();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("}", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.9832151973653126
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("<}", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(":", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.0177148385386787
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals("a", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9809367740342577
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.9828593887903261
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 181
  /*Coverage entropy=0.9415237106420561
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.9415237106420561
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.2108819739578673
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.setXPath(".D,G1a&_hC[^=&^");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(".D,G1a&_hC[^=&^");
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(26);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 185
  /*Coverage entropy=1.017377712537836
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(32, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.consume((-195));
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('3');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 187
  /*Coverage entropy=1.2186690570359378
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.setXPath("m:4&%Z)IuEr/3hp7w%R");
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.9403747953356474
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("}:QMfd;u<w2@h", token2.getTokenText());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=0.9415237106420561
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("1", token4.getTokenText());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=1.2743856032936995
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.not();
      assertEquals("[", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=0.9388773410080045
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMQd;u<w2@h");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 192
  /*Coverage entropy=0.9795225882688123
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("1", token4.getTokenText());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=0.9388773410080045
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMQd;u<w2@h");
      Token token0 = xPathLexer0.comma();
      assertEquals("!", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=0.939539373447594
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=0.9412690497510285
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!<}:QMfd;u<w2@h");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=0.9813605164225299
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".,G1a&_hC[^=&^");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("G1a", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("_", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }
}
