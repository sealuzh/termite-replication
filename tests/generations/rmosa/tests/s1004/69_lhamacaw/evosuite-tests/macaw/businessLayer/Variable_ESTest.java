/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 02:23:32 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.441171005310231
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      rawVariable0.setName((String) null);
      System.setCurrentTimeMillis(1L);
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(0, arrayList2.size());
      
      rawVariable0.getName();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4925475601781946
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("-");
      supportingDocument0.setFileName("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIdentifier(1319);
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User("user.phone.saveChanges", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      rawVariable0.setName("2");
      System.setCurrentTimeMillis(0L);
      User user2 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user2, derivedVariable0, derivedVariable1);
      assertTrue(arrayList2.equals((Object)arrayList1));
      
      rawVariable0.getName();
      derivedVariable1.getForm();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4375896640979473
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      User user0 = new User(";&nGt", ";&nGt");
      user0.setAddressLine1((String) null);
      user0.setFirstName("UNABLE_TO_GET_CLEANING_STATE_NAME");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setForm((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("z*X/|");
      derivedVariable0.notes = null;
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable1.getCleaningDescription();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      String string0 = derivedVariable0.getCleaningDescription();
      assertNotNull(string0);
      
      derivedVariable1.setName("f$xx([Llc\"6!I}S3");
      String string1 = derivedVariable0.getForm();
      assertNotNull(string1);
      
      String string2 = derivedVariable0.getNotes();
      assertNull(string2);
      
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      int int0 = derivedVariable1.getIdentifier();
      assertEquals(0, int0);
      
      String string3 = derivedVariable1.getCategory();
      assertEquals("Unknown", string3);
      
      derivedVariable1.getAlternativeVariable();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIdentifier(2178);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.getSupportingDocuments();
      assertEquals("2178", derivedVariable0.getDisplayItemIdentifier());
      
      rawVariable0.getAlternativeVariable();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(3769);
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("3769", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(3769, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ontologyTerm0.setIdentifier(1);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.326849281793752
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "";
      derivedVariable1.setAvailability("");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable1.getNotes();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable2.removeOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable(derivedVariable2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable3);
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getSourceVariables();
      User user0 = new User("il1AlrA^T^ @Q+hG^\"", "");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable4.addSupportingDocuments(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("");
      derivedVariable4.addValueLabel(valueLabel0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable4, derivedVariable2);
      derivedVariable2.getDisplayItemIdentifier();
      derivedVariable1.getColumnEnd();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getAvailability();
      derivedVariable0.getCleaningStatus();
      System.setCurrentTimeMillis((-923L));
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable3, derivedVariable3);
      assertTrue(arrayList2.isEmpty());
      
      DerivedVariable derivedVariable5 = (DerivedVariable)derivedVariable4.clone();
      assertEquals("Unknown", derivedVariable5.getAvailability());
      assertEquals("Unknown", derivedVariable5.getCleaningStatus());
      assertEquals("Unknown", derivedVariable5.getCategory());
      assertEquals("0", derivedVariable5.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.185229819077444
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      supportingDocument0.getDisplayName();
      User user0 = new User("FDnN\"?", "-");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      supportingDocument0.setTitle("-");
      rawVariable0.setCoded(true);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.columnStart = "_";
      rawVariable0.isCoded();
      rawVariable0.getCategory();
      rawVariable0.isCoded();
      rawVariable0.clone();
      rawVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("_", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue((String) null);
      valueLabel0.setLabel("a:qp#_QTL");
      valueLabel0.setLabel("variable.notes.label");
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable0.addValueLabel(valueLabel1);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.getValueLabels();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable1.getColumnEnd();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.669857109036471
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("general.fieldValue.unknown");
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL");
      derivedVariable0.setQuestionNumber("w(H");
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      assertEquals("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.490469115659254
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = "UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER";
      user0.setAddressLine2("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable2 = null;
      derivedVariable0.getForm();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      String string0 = null;
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.setCleaned(false);
      derivedVariable0.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnStart = null;
      arrayList0.containsAll(linkedList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1298));
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone("fWKVR{du,@]");
      user0.setCity("fWKVR{du,@]");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setNotes("8:.WB");
      derivedVariable0.setNotes("fWKVR{du,@]");
      derivedVariable0.notes = "fWKVR{du,@]";
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setAvailability("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("z. Hb-='1qG.{h", "z. Hb-='1qG.{h");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("UNABLE_TO_COMMIT_CHANGES");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("UNABLE_TO_COMMIT_CHANGES", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7471887452860035
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setLabel("l");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("l", derivedVariable0.getLabel());
      
      rawVariable0.getYear();
      Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("general.fieldValue.blank");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList0);
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("general.fieldValue.blank", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals(1, arrayList0.size());
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.492664788891414
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User();
      User user1 = new User("variable.year.label", "pS bU'16/");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      
      user1.setIdentifier((-2004318069));
      derivedVariable0.setCleaned(true);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAlias();
      derivedVariable0.isCleaned();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getName();
      derivedVariable0.getAvailability();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getYear();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User("I.q82Z", "IVRA3M-F&Gm<");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      user0.setAddressLine2("N590SX");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable1.getForm();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setIdentifier((-3));
      rawVariable2.setAlternativeVariable(rawVariable1);
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable2, rawVariable2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setIdentifier((-1278));
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setOntologyName("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_DUPLICATE");
      rawVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ontologyTerm0.setNameSpace("\"ZqZM0zJ=s~nzu7");
      ontologyTerm0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setQuestionNumber("\"ZqZM0zJ=s~nzu7");
      ontologyTerm1.setIdentifier(3874);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("\"ZqZM0zJ=s~nzu7", rawVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2084322361));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-212));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("-212", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8973122073055206
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("7l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      rawVariable0.setYear("7l");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getColumnEnd();
      rawVariable1.getDisplayName();
      RawVariable.validateFields(rawVariable0);
      assertEquals("7l", rawVariable0.getYear());
      
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      rawVariable0.getDisplayName();
      // Undeclared exception!
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.673199461415907
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      derivedVariable0.setCleaningDescription("Z{JL^-8/f{_'");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "Unknown";
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList0.add(1450, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1450, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("7l");
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getDisplayName();
      assertEquals("7l", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.805754096314494
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("l");
      rawVariable0.setCodeBookNumber("R?IC|sw_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCleaningStatus();
      rawVariable0.getYear();
      rawVariable0.getAlternativeVariable();
      assertEquals("l", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "XLzVOU";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("XLzVOU", derivedVariable1.getColumnEnd());
      
      Variable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2427);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.900551262839473
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("variable.name.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("(5J:TrB!Za|YBv24f`");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals("variable.name.label", derivedVariable0.getName());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("y13b[Kq=P2O%>DaY1");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      Variable.validateFields(derivedVariable0);
      assertEquals("y13b[Kq=P2O%>DaY1", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.6750235273176433
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      user0.setPostCode("variable.cleaningStatus.label");
      user0.setAffiliation("IO=%=Dy_,)0xr7R");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.questionNumber = null;
      user0.setCounty("IO=%=Dy_,)0xr7R");
      derivedVariable0.setCoded(true);
      user0.setAddressLine2("7I_2o+[W3T");
      rawVariable0.setAvailability("7I_2o+[W3T");
      rawVariable0.getAvailability();
      rawVariable0.getSupportingDocuments();
      derivedVariable0.getCleaningDescription();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      Variable.validateFields(variable0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      variable0.getForm();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
      assertEquals("0", variable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.788044244464021
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("V2DtoP5sGt$\b");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("V2DtoP5sGt$\b", derivedVariable0.getNotes());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6855188118424356
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "R@SJ!^05n./NI";
      rawVariable0.setName("l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCleaningStatus();
      rawVariable0.getYear();
      assertEquals("R@SJ!^05n./NI", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.form = "d=cNaGwwA!+b:=&)c n";
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("d=cNaGwwA!+b:=&)c n", derivedVariable0.getForm());
      
      rawVariable0.getNotes();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.265126035672617
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.form = null;
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setCleaningStatus("SELF_REFERENCING_ALTERNATIVE_VARIABLE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("SELF_REFERENCING_ALTERNATIVE_VARIABLE", derivedVariable0.getCleaningStatus());
      
      Variable.validateFields(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setCleaningStatus((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("[X0YW");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("user.password.label", "user.password.label");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      // Undeclared exception!
      try { 
        derivedVariable1.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7471887452860035
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("7l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("7l", rawVariable0.getName());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getColumnEnd();
      rawVariable1.getDisplayName();
      RawVariable.validateFields(rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getCleaningStatus();
      rawVariable0.getYear();
      assertEquals("l", rawVariable0.getName());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      User user0 = new User("$VALUE'", "m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("/");
      derivedVariable0.createVariableSummary();
      assertEquals("/", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("qQ+jI7+");
      derivedVariable0.setAlias("qQ+jI7+");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.getAlias();
      derivedVariable0.setAvailability("5ovPae[Q|;qCV|0,~");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getAvailability();
      assertEquals("qQ+jI7+", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.7139253298186934
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      System.setCurrentTimeMillis(662L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.getFilePath();
      derivedVariable0.codeBookNumber = "";
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("R7'Z;f9Q:]p");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getAlias();
      assertEquals("R7'Z;f9Q:]p", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("w,&L6h SvtO)9AcTR");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.getQuestionNumber();
      assertEquals("w,&L6h SvtO)9AcTR", derivedVariable0.getForm());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.isCoded.label";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("variable.isCoded.label", rawVariable1.getCodeBookNumber());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "),s#%ui]=)C1";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.label.label");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.ensureCapacity((-2004318069));
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis((-4627L));
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "user.lastName.saveChanges";
      derivedVariable0.setYear("/");
      derivedVariable0.getFilePath();
      derivedVariable0.getSourceVariables();
      assertEquals("/", derivedVariable0.getYear());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "2`A(cmQx";
      rawVariable0.setCodeBookNumber("spCf7@#+BrnX");
      rawVariable0.getFilePath();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getCleaningStatus();
      assertEquals("spCf7@#+BrnX", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "Bxw$<(mhOS/<?v^M=m";
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string1);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.questionNumber = "l";
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getSourceVariables();
      rawVariable0.getName();
      assertEquals("l", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.questionNumber = "variable.cleaningStatus.label";
      String string0 = rawVariable0.getName();
      assertEquals("", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("yhvorBBV3!LkzVf C");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "E";
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("general.fieldValue.blank");
      rawVariable0.getYear();
      rawVariable0.getQuestionNumber();
      assertEquals("general.fieldValue.blank", rawVariable0.getYear());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("]*yQ~TyD;");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setColumnStart("]*yQ~TyD;");
      derivedVariable0.setIdentifier(909);
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setColumnEnd("]*yQ~TyD;");
      assertEquals("]*yQ~TyD;", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_GET_VARIABLE_NAMES");
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setCodeBookNumber("variable.alternativeVariable.label");
      derivedVariable0.getForm();
      assertEquals("variable.alternativeVariable.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = derivedVariable1.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      String string1 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("Kfq|:");
      derivedVariable0.getName();
      assertEquals("Kfq|:", derivedVariable0.getForm());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setCategory("lFm(. o-k");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("lFm(. o-k");
      ontologyTerm0.setDescription("");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCategory("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.columnEnd = null;
      supportingDocument0.clone();
      rawVariable0.setYear("lFm(. o-k");
      assertEquals("lFm(. o-k", rawVariable0.getYear());
      
      derivedVariable0.getAvailability();
      derivedVariable0.getCategory();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setCleaningStatus("W'WQHsL|R5");
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.cleaningStatus.label");
      derivedVariable0.setCleaned(true);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("variable.cleaningStatus.label");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getFilePath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setColumnStart(" $5]1[~!EOGGi]LW(");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "/";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.ensureCapacity((-1841660008));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("7I_2o+[W3T");
      derivedVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("7I_2o+[W3T", derivedVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.availability.label");
      derivedVariable0.form = "user.status.saveChanges";
      User user0 = new User();
      derivedVariable0.getCodeBookNumber();
      assertEquals("variable.availability.label", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      String string0 = "SUM6ESVSUH3H W-HF";
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("iko~xZ,{#{Px#}bE");
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnStart();
      assertEquals("iko~xZ,{#{Px#}bE", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.codeBookNumber = "variable.isCoded.label";
      derivedVariable0.addValueLabel(valueLabel0);
      String string0 = derivedVariable0.getNotes();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string1);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("qSIO");
      derivedVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "Bxw$<(mhOS<?v^M=m";
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      System.setCurrentTimeMillis((-1649L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "4#7q6`akAaB78f";
      derivedVariable0.codeBookNumber = "variable.form.label";
      String string0 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm(".N0}QKvLyo59y|%s5");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCleaningDescription();
      assertEquals(".N0}QKvLyo59y|%s5", derivedVariable0.getForm());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = null;
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      String string1 = "-0k:FD}JW?$x}R";
      ontologyTerm0.setNameSpace("-0k:FD}JW?$x}R");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.379260646785054
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      arrayList0.removeAll(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      arrayList0.add(valueLabel0);
      arrayList0.remove((Object) derivedVariable0);
      derivedVariable0.setQuestionNumber("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS");
      arrayList0.add((ValueLabel) null);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setQuestionNumber("");
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      long long0 = (-2158L);
      System.setCurrentTimeMillis((-2158L));
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getCleaningDescription();
      User user0 = new User("V^>OGj<m", "V^>OGj<m");
      user0.setCity("variable.category.label");
      user0.setPhone((String) null);
      user0.setCity("s0./_]FT=&me2#n");
      try { 
        User.checkValidEmail("4#?TTiuBK!gS");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"4#?TTiuBK!gS\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "INVALID_CLEANING_STATE";
      derivedVariable0.getNotes();
      assertEquals("INVALID_CLEANING_STATE", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      String string0 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "/";
      derivedVariable0.setLabel("/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getForm();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setForm("+K\"J:>03P%:kOK@!Int");
      rawVariable0.getForm();
      rawVariable0.getDisplayName();
      assertEquals("+K\"J:>03P%:kOK@!Int", rawVariable0.getForm());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "'lp)K0";
      derivedVariable0.setIdentifier((-1652));
      derivedVariable0.getAlias();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("/~@P4:.Q`?}n$lso/~!");
      derivedVariable0.setCleaned(true);
      derivedVariable0.getAlias();
      assertEquals("/~@P4:.Q`?}n$lso/~!", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.name.label");
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getAlias();
      assertEquals("variable.name.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("rf4");
      derivedVariable0.getAlias();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("rf4", derivedVariable0.getForm());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_CREATE_ALIAS_FILE_PATH";
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.columnEnd = "l";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getColumnEnd();
      assertEquals("l", derivedVariable0.getColumnEnd());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("W3L$8-OD0JbzV'");
      derivedVariable0.createVariableSummary();
      assertEquals("W3L$8-OD0JbzV'", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("INVALID_SUPPORTING_DOCUMENT");
      rawVariable0.getCodeBookNumber();
      assertEquals("INVALID_SUPPORTING_DOCUMENT", rawVariable0.getNotes());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(110);
      derivedVariable0.setName("@GUMW\ns");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("@GUMW\ns");
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getCleaningDescription();
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals(110, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "l";
      rawVariable0.setName("l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.getCleaningStatus();
      rawVariable0.getYear();
      assertEquals("l", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.cleaningStatus.label");
      derivedVariable0.getYear();
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.726634037681537
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.columnEnd = "9P%>VC[%w9~rkza?~m";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals("9P%>VC[%w9~rkza?~m", derivedVariable0.getColumnEnd());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setIdentifier((-2045222519));
      rawVariable0.setLabel("V>SrN]JdC{vsWzS?PD");
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getLabel();
      assertEquals("V>SrN]JdC{vsWzS?PD", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(arrayList1);
      derivedVariable0.setSourceVariables(arrayList2);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("p\"7G.vH8");
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("p\"7G.vH8", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.notes = "m-IC}l";
      derivedVariable0.setForm("m-IC}l");
      derivedVariable0.columnStart = "m-IC}l";
      rawVariable0.setForm("'{|LQ(W*4$}r'VW");
      rawVariable0.form = "m-IC}l";
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setNotes("f?GLUDC&~nj0:`%");
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      assertEquals("f?GLUDC&~nj0:`%", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      rawVariable0.getCodeBookNumber();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE");
      supportingDocument0.setFilePath("variable.questionNumber.label");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string1 = derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "^,Td%wQJYU@,z(|0";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getName());
      
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "Z";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.isCoded.label");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.createVariableSummary();
      assertEquals("variable.isCoded.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "NON_EXISTENT_USER";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getYear());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getLabel());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH";
      derivedVariable0.setColumnEnd("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      derivedVariable0.clone();
      User user0 = new User();
      try { 
        User.checkValidUserIDField("y60iCJPk$^f=5RGq");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"y60iCJPk$^f=5RGq\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("RhD~\"5l#dZdDk");
      derivedVariable0.clone();
      assertEquals("RhD~\"5l#dZdDk", derivedVariable0.getYear());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "WeP/I@e";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "macaw.businessLayer.VariableSummary";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("macaw.businessLayer.VariableSummary", derivedVariable1.getForm());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.notes = "8@AGK&&}";
      rawVariable0.clone();
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setColumnStart("K@OF+! -@Q}I");
      derivedVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("n&-0.[7=,~UT");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.notes = "wzL$TQ8vQe";
      derivedVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("K@OF+! -@Q}I", derivedVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.columnEnd = "UNABLE_TO_GET_CLEANING_STATE_NAME";
      rawVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.4359958941912723
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setAlternativeVariable(rawVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.3210182221049966
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.columnStart = "variable.form.label";
      derivedVariable0.columnStart = "variable.form.label";
      derivedVariable0.setCodeBookNumber("variable.form.label");
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus((String) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
