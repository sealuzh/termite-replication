/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 01:49:32 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1279));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1279), "", "", "", "");
      classWriter0.version = 49;
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter0.version = 2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1287), "U?r5", "U?r5", "U?r5", "U?r5");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)55;
      byteVector0.data = byteArray0;
      ByteVector byteVector1 = classWriter1.pool;
      String string0 = "Synthetic";
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "U?r5", "ConstantValue", "Synthetic", (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1309));
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter0.version = 2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1309), "5r5", "5r5", "5r5", "5r5");
      classWriter1.addUninitializedType("5r5", 44);
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)66;
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1269));
      classWriter0.version = (-1269);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1269), "0udjV!x'r#Q**4PI", "0udjV!x'r#Q**4PI", "0udjV!x'r#Q**4PI", "0udjV!x'r#Q**4PI");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      classWriter0.index = (-1287);
      classWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      ByteVector byteVector1 = classWriter0.pool;
      fieldWriter0.put(byteVector1);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      classWriter0.index = (-1287);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = classWriter0.pool;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "IB=yYD<!r,GZ0i");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "IB=yYD<!r,GZ0i", "", "IB=yYD<!r,GZ0i", "IB=yYD<!r,GZ0i");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      classWriter0.version = (-1287);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1287), "b >&\",v=/DxTVZ", "b >&\",v=/DxTVZ", "b >&\",v=/DxTVZ", "b >&\",v=/DxTVZ");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1269));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "M&:TpsZ1", "M&:TpsZ1", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1583);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1583, "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-1267);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "HLh<WUTa", "HLh<WUTa", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131053);
      classWriter0.newFieldItem("ac", "ac", "ac");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131053, "4@{=H7HKLQhDJK.QEi5", "4@{=H7HKLQhDJK.QEi5", (String) null, "4@{=H7HKLQhDJK.QEi5");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1583);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "M0:-psZ1", "M0:-psZ1", "M0:-psZ1", "M0:-psZ1");
      fieldWriter0.visitAnnotation("M0:-psZ1", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1636);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1636, "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1");
      fieldWriter0.visitAnnotation("0.-psZ{X1", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "\" :TopsZR", "\" :TopsZR", "\" :TopsZR", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1596);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "M&:TpsZ1", "M&:TpsZ1", "M&:TpsZ1", "M&:TpsZ1");
      Attribute attribute0 = new Attribute("M&:TpsZ1");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1585);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1585, "4\"RohBRI'RR+7", "4\"RohBRI'RR+7", "4\"RohBRI'RR+7", "4\"RohBRI'RR+7");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("4\"RohBRI'RR+7", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1549);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "CnstantVadlQe", "CnstantVadlQe", "CnstantVadlQe", "CnstantVadlQe");
      Attribute attribute0 = new Attribute("CnstantVadlQe");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1572);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1572, "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1583);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1583, "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "\" :TopsZR", "\" :TopsZR", "\" :TopsZR", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1287), "U?r5", "U?r5", "U?r5", "U?r5");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "2G]C#HK!(~S&p7", "2G]C#HK!(~S&p7", "SourceFile", "2G]C#HK!(~S&p7");
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.visitEnd();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("2G]C#HK!(~S&p7");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(2);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)0;
      // Undeclared exception!
      try { 
        byteVector1.putByteArray(byteArray0, (byte)119, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1572);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1572, "7", "7", "7", "7");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 1842, "{rr06qLK*61", "{rr06qLK*61", "{rr06qLK*61", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1583);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1583, "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1", "0.-psZ{X1");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1287));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1287), "Uj?r5", "Uj?r5", "Uj?r5", "Uj?r5");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1295));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1295), "0udjV!xr#**4PI", "0udjV!xr#**4PI", "0udjV!xr#**4PI", "0udjV!xr#**4PI");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1295), "0udjV!xr#**4PI", "0udjV!xr#**4PI", "0udjV!xr#**4PI", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@68292177
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
