/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 17:49:58 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("@iCaig{?R", "`%hsfb,H", (Content) null, 1.0F, 0.0F, "`%hsfb,H");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11, homeTexture0, 971, homeTexture0, 11, 11);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      assertEquals(971, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(11, homeEnvironment1.getLightColor());
      assertEquals(11, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(11.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-31), (HomeTexture) null, (-31), (HomeTexture) null, (-31), (-31));
      homeEnvironment0.setPhotoQuality((-31));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-31), int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, (-1979));
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setPhotoQuality((-30));
      homeEnvironment0.setLightColor((-281));
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3706), (HomeTexture) null, (-3706), (HomeTexture) null, (-3706), (-3706));
      homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth((-3706));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-2779), homeEnvironment0.getVideoHeight());
      assertEquals((-3706), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1859), (HomeTexture) null, (-1859), (HomeTexture) null, (-1859), (-1859));
      homeEnvironment0.setVideoQuality((-383));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-3044), (HomeTexture) null, (-3044), (HomeTexture) null, (-3044), (-3527.228F));
      homeEnvironment1.clone();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-383), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(132, (HomeTexture) null, 132, (HomeTexture) null, 132, 132);
      homeEnvironment0.setPhotoQuality(132);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getGroundTexture();
      assertEquals(132, homeEnvironment0.getPhotoQuality());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0.0F, 3555);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3555, homeTexture0, 3555, homeTexture0, 698, 0.0F);
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(698, homeEnvironment0.getLightColor());
      assertEquals(3555, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(3555, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4), (HomeTexture) null, (-4), (HomeTexture) null, (-4), (-4));
      homeEnvironment0.setVideoWidth((-4));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-4), homeEnvironment0.getVideoWidth());
      assertEquals((-3), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("editorSubFolder", "OUTLINE", uRLContent0, (-2129587949), (-2129587949), (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2129587949), homeTexture0, (-2129587949), homeTexture0, (-2129587949), (-4520.2F));
      homeEnvironment0.getSkyTexture();
      assertEquals((-2129587949), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2129587949), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-4520.2F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2129587949), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, (-1.0F), 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, homeTexture0, 17, homeTexture0, 17, 1.0F);
      homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(17, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(17, homeEnvironment0.getLightColor());
      assertEquals(17, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("1}>[.jHvB#X", uRLContent0, 380.8446F, (-739));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-739), homeTexture0, (-739), homeTexture0, 1276, 1911.4159F);
      homeEnvironment0.getGroundTexture();
      assertEquals(1276, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-739), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-739), homeEnvironment0.getSkyColor());
      assertEquals(1911.4159F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 13, homeTexture0, 0, 3322.5F);
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13, homeEnvironment0.getSkyColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13, homeEnvironment0.getGroundColor());
      assertEquals(3322.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, (HomeTexture) null, 3, (HomeTexture) null, 3, 3);
      homeEnvironment0.setVideoQuality(3);
      homeEnvironment0.clone();
      assertEquals(3, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoHeight();
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'>e,`}GGHDdf}");
      List<Camera> list0 = new LinkedList<Camera>();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight((-2013));
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      assertEquals((-2013), homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoHeight((-319));
      homeEnvironment0.setPhotoWidth((-2802));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setSubpartSizeUnderLight((-2802));
      homeEnvironment0.getSubpartSizeUnderLight();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1588), (HomeTexture) null, (-1588), 0.0F);
      homeEnvironment0.setPhotoWidth((-1588));
      homeEnvironment0.setSkyColor((-2146675410));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-1588), int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-5), (HomeTexture) null, (-5), (HomeTexture) null, (-5), (-5));
      homeEnvironment0.setPhotoHeight((-5));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight((-5));
      assertEquals((-5), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-52), (HomeTexture) null, (-52), (HomeTexture) null, (-52), (-52));
      homeEnvironment0.setVideoFrameRate(25);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals((-52.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-52), homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-52), homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals((-52), homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, (HomeTexture) null, 15, (HomeTexture) null, 15, 15);
      homeEnvironment0.setSubpartSizeUnderLight(15);
      homeEnvironment0.clone();
      assertEquals(15.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Random.setNextRandom((-970));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, (-970), (-1.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-970), homeTexture0, (-970), homeTexture0, (-970), (-1.0F));
      homeEnvironment0.getGroundTexture();
      assertEquals((-970), homeEnvironment0.getSkyColor());
      assertEquals((-970), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-970), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, temporaryURLContent0, 5259, 5259);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5259, homeTexture0, 5259, homeTexture0, 5259, 5259);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(5259, homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(5259, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(5259, homeEnvironment0.getGroundColor());
      assertEquals(5259.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoHeight((-319));
      homeEnvironment0.setPhotoWidth(574);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setSubpartSizeUnderLight(574);
      homeEnvironment0.getSubpartSizeUnderLight();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("VIDEO_CAMERA_PATH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.VIDEO_CAMERA_PATH
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1824), (HomeTexture) null, (-1824), (-1824));
      homeEnvironment0.setPhotoHeight((-1824));
      homeEnvironment0.clone();
      assertEquals((-1824), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-21), (HomeTexture) null, (-1979), (HomeTexture) null, (-21), (-1979));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setLightColor((-21));
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor((-21));
      homeEnvironment0.setPhotoHeight(2550);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-21), (HomeTexture) null, (-242), (HomeTexture) null, (-1979), (-21));
      homeEnvironment0.setVideoFrameRate(2532);
      homeEnvironment1.setPhotoHeight((-2001));
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("YAW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.YAW
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8908530192772437
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment0.setGroundColor(8);
      homeEnvironment0.setPhotoQuality((-275));
      homeEnvironment1.setGroundColor(181);
      homeEnvironment0.setGroundColor(8);
      homeEnvironment1.setVideoWidth((-5523));
      homeEnvironment0.setVideoWidth((-275));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(181, (HomeTexture) null, 0, (HomeTexture) null, 8, 400);
      homeEnvironment2.getWallsAlpha();
      homeEnvironment2.getWallsAlpha();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("wko:", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("wko:", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("SPHERICAL", propertyChangeListenerProxy1);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.isObserverCameraElevationAdjusted();
      homeEnvironment1.getSkyColor();
      homeEnvironment2.getSkyColor();
      HomeEnvironment homeEnvironment4 = homeEnvironment0.clone();
      Camera camera0 = new Camera(400, 0, 400.0F, 0, 400.0F, 400);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(aspectRatio1, "SPHERICAL", camera0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      homeEnvironment2.setSkyColor(400);
      homeEnvironment2.setVideoQuality(400);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment4.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy1);
      assertEquals((-275), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("eVPq_x9o7hW%OyN\"", "", (Content) null, 46, 46, "eVPq_x9o7hW%OyN\"");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(46, homeTexture0, 46, homeTexture0, (-1454), (-1454));
      homeEnvironment0.getSkyTexture();
      assertEquals((-1454.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1454), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(46, homeEnvironment0.getGroundColor());
      assertEquals(46, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1824), (HomeTexture) null, (-1824), (-1824));
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, (HomeTexture) null, 1, 1);
      homeEnvironment0.setSubpartSizeUnderLight(400);
      homeEnvironment0.setSkyColor(484);
      homeEnvironment0.setPhotoWidth(400);
      assertEquals(400.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1437), (HomeTexture) null, 431, 0);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.tools.OperatingSystem", resourceURLContent0, 1124.4F, 1491);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setLightColor((-1437));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, homeTexture0, 0, (HomeTexture) null, 8192, (-1397.3F));
      assertEquals(8192, homeEnvironment1.getLightColor());
      
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getDrawingMode();
      assertEquals((-1437), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1491, (HomeTexture) null, 0, (HomeTexture) null, 0, 1124.4F);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor((-1087));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(1491);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals((-1087), homeEnvironment0.getLightColor());
      assertEquals(1124.4F, float0, 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8677758426013722
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setLightColor(2144085730);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setLightColor(2144085730);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0, (-3720.4058F), 0, 2509, 1.0F, (-3112.08F), 2190L, camera_Lens0);
      linkedList0.addFirst(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoHeight((-2146888776));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyColor(0);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.05514543589291
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor((-272));
      homeEnvironment0.setPhotoQuality(146);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoWidth(1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("wkb:", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "Gy!X=tK_/\"KZq", (Object) null, aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.setVideoQuality(146);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getGroundTexture();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(146, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1824), (HomeTexture) null, (-1824), (-1824));
      homeEnvironment0.setVideoWidth((-1824));
      homeEnvironment0.clone();
      assertEquals((-1824), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(615, (HomeTexture) null, 615, (HomeTexture) null, 615, 615);
      homeEnvironment0.setWallsAlpha(1.5F);
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(33, (HomeTexture) null, 12, 12, 33);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.setGroundColor(33);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(5, (HomeTexture) null, (-2300), 11053224, 5);
      homeEnvironment2.setPhotoWidth((-1309));
      int int0 = homeEnvironment2.getSkyColor();
      assertEquals((-1309), homeEnvironment2.getPhotoWidth());
      assertEquals((-2300), int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("Ph.g)]F7lWTuno`", (Content) null, (-2209.99F), (-2209.99F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-34), (HomeTexture) null, (-34), (HomeTexture) null, (-34), (-34));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-34));
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals((-34), int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2276, (HomeTexture) null, 2276, (HomeTexture) null, 2276, 2276);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(2276, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(2276.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(2276, homeEnvironment1.getLightColor());
      assertEquals(2276, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1798, (HomeTexture) null, 8192, (HomeTexture) null, 13684944, 13684944);
      homeEnvironment0.setCeillingLightColor(13684944);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(8192);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1838), (HomeTexture) null, (-1838), (HomeTexture) null, (-1838), (-1838));
      homeEnvironment0.setGroundColor((-1838));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-1838), homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-1838), homeEnvironment1.getLightColor());
      assertEquals((-1838), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-1838.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getVideoCameraPath();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setLightColor(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.clone();
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      System.setCurrentTimeMillis(0);
      HomeEnvironment.Property.values();
      HomeEnvironment.DrawingMode.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeTexture homeTexture0 = null;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2), (HomeTexture) null, (-2), (HomeTexture) null, (-2), (-1975));
      homeEnvironment0.setPhotoHeight((-2));
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-115), (HomeTexture) null, (-115), (HomeTexture) null, (-146), (-1975));
      HomeTexture homeTexture1 = null;
      try {
        homeTexture1 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2144698325, (HomeTexture) null, 2144698325, (HomeTexture) null, 0, (-1641.9795F));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setCeillingLightColor(2144698325);
      assertEquals(2144698325, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-12), (HomeTexture) null, (-12), (HomeTexture) null, (-12), (-12));
      homeEnvironment0.setPhotoQuality((-12));
      homeEnvironment0.clone();
      assertEquals((-12), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1824), (HomeTexture) null, (-1824), (-1824));
      homeEnvironment0.setPhotoWidth((-1824));
      homeEnvironment0.clone();
      assertEquals((-1824), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-26), (HomeTexture) null, (-26), (HomeTexture) null, (-26), (-26));
      homeEnvironment0.setSubpartSizeUnderLight((-26));
      homeEnvironment0.clone();
      assertEquals((-26.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1814), (HomeTexture) null, (-1814), (HomeTexture) null, (-1814), (-1814));
      homeEnvironment0.setCeillingLightColor((-1814));
      homeEnvironment0.clone();
      assertEquals((-1814), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setSkyColor(1491);
      homeEnvironment0.setGroundColor(1013);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-3872), (HomeTexture) null, 231, 1013, 1013);
      homeEnvironment1.setCeillingLightColor((-1119));
      homeEnvironment0.setVideoFrameRate(4446);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      assertEquals((-1119), homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1491, (HomeTexture) null, 0, (HomeTexture) null, 365, 1124.4F);
      homeEnvironment0.setLightColor(1491);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(365, (-1469.3362F), (-3162.3792F), 1841.591F, (-1469.3362F), 3888.1218F);
      linkedList0.push(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setLightColor((-1087));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1491, (HomeTexture) null, 2006, (HomeTexture) null, 0, (-916.5178F));
      homeEnvironment1.setCeillingLightColor((-1087));
      homeEnvironment0.setPhotoHeight(365);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1975), (HomeTexture) null, (-1975), (HomeTexture) null, 22, (-6));
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoHeight((-6));
      assertEquals((-6), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3755), (HomeTexture) null, (-3755), (HomeTexture) null, (-3755), (-3755));
      homeEnvironment0.setWallsAlpha((-3755));
      homeEnvironment0.setVideoQuality(13);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("com.eteks.sweethome3d.tools.TemporaryURLContent");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.com.eteks.sweethome3d.tools.TemporaryURLContent
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setWallsAlpha(2608.689F);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1854), (HomeTexture) null, (-1854), (HomeTexture) null, (-1854), (-1854));
      homeEnvironment0.setPhotoWidth(1697);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, (HomeTexture) null, 15, (HomeTexture) null, 15, 15);
      homeEnvironment0.setSubpartSizeUnderLight((-4102.517F));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2767, (HomeTexture) null, 0, 0, 0.0F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoWidth((-2739));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(1744);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setGroundColor(975);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property.values();
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      assertEquals((-2739), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-58), (HomeTexture) null, (-58), (HomeTexture) null, (-58), (-58));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-58), homeEnvironment0.getLightColor());
      assertEquals((-58), homeEnvironment0.getGroundColor());
      assertEquals(240, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-58), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-58.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1824), (HomeTexture) null, (-1824), (-1824));
      homeEnvironment0.setVideoFrameRate((-1824));
      homeEnvironment0.clone();
      assertEquals((-1824), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1824), (HomeTexture) null, (-1824), (-1824));
      homeEnvironment0.setVideoQuality((-1824));
      homeEnvironment0.clone();
      assertEquals((-1824), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1854), (HomeTexture) null, (-1854), (HomeTexture) null, (-1854), (-1854));
      homeEnvironment0.setVideoQuality((-1854));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth(46);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1824), (HomeTexture) null, (-1824), (HomeTexture) null, (-1824), (-1824));
      homeEnvironment0.setVideoWidth((-1824));
      homeEnvironment0.setVideoWidth((-1824));
      assertEquals((-1368), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, (HomeTexture) null, 15, (HomeTexture) null, 15, 15);
      homeEnvironment0.isAllLevelsVisible();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-33), (HomeTexture) null, (-33), (HomeTexture) null, (-33), (-33));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-33), homeEnvironment0.getGroundColor());
      assertEquals(25, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-33), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-33), homeEnvironment0.getLightColor());
      assertEquals((-33.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1833), (HomeTexture) null, (-1833), (HomeTexture) null, (-1833), (-1833));
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1833), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1833), homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1833), homeEnvironment0.getGroundColor());
      assertEquals((-1833.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11, (HomeTexture) null, 11, (HomeTexture) null, 11, 11);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(11, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("Unknown resource ", "com.eteks.sweethome3d.model.HomeEnvironment$Property", (Content) null, 1.0F, 0, "com.eteks.sweethome3d.model.HomeEnvironment$Property", false);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1579), homeTexture0, (-1579), 6, 0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      CatalogTexture catalogTexture1 = new CatalogTexture("Unknown resource ", "Unknown resource ", (Content) null, 716.8932F, 320, (String) null, true);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(6, homeTexture0, 0, homeTexture1, 320, 2144.9F);
      homeEnvironment1.setCeillingLightColor(0);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-4098), homeTexture0, (-1579), homeTexture2, 0, 546.5135F);
      homeEnvironment0.setCeillingLightColor(3555);
      homeEnvironment1.setPhotoHeight(6);
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.setAllLevelsVisible(false);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-715), (HomeTexture) null, (-715), 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment2.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.getGroundColor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|%8tU0'\"P{{Wp M `");
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("%h,w}77#G=<^_5R{ /");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.%h,w}77#G=<^_5R{ /
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(0, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, (HomeTexture) null, 13427964, (HomeTexture) null, 13427964, 13427964);
      homeEnvironment0.setVideoWidth(13427964);
      assertEquals(10070973, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1491, (HomeTexture) null, 0, (HomeTexture) null, 0, 1122.5867F);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setLightColor(1491);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setLightColor((-1087));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1491, (HomeTexture) null, (-1087), (HomeTexture) null, 0, (-916.5178F));
      homeEnvironment0.setPhotoHeight(1491);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(1491, homeEnvironment0.getPhotoHeight());
      
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals((-916.5178F), float0, 0.01F);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, (-1979));
      homeEnvironment0.setSkyColor((-1979));
      assertEquals((-1979), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setPhotoQuality(0);
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, (HomeTexture) null, 15, (HomeTexture) null, 15, 15);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-51), (HomeTexture) null, (-51), (HomeTexture) null, (-51), (-51));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setAllLevelsVisible(false);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(300, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getLightColor();
      String string0 = "IUN]tt2t^Y3;#Qb";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "IUN]tt2t^Y3;#Qb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource IUN]tt2t^Y3;#Qb
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.5F, 1.5F, (-1133.0F), 7, 7, (-83.9805F), 3749L, camera_Lens0);
      camera0.setY((-1133.0F));
      camera0.setY(2937.8184F);
      camera0.setX(7);
      homeEnvironment0.setCeillingLightColor(7);
      homeEnvironment0.getDrawingMode();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(7, homeEnvironment0.getCeillingLightColor());
      assertEquals(7, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      int int0 = 0;
      HomeTexture homeTexture0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1491, (HomeTexture) null, 0, (HomeTexture) null, 365, 1124.4F);
      homeEnvironment0.setLightColor(1491);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundColor((-659));
      homeEnvironment0.setLightColor((-1087));
      int int1 = 2006;
      HomeTexture homeTexture1 = null;
      try {
        homeTexture1 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-9), (HomeTexture) null, (-9), (HomeTexture) null, (-9), (-9));
      homeEnvironment0.setLightColor((-265));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("+@`4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.+@`4
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1042), (HomeTexture) null, (-1979), (-1979), (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-1042), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1979.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1979), homeEnvironment0.getSkyColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1979), int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2), (HomeTexture) null, (-2), (HomeTexture) null, (-2), (-2));
      homeEnvironment0.setGroundColor(8192);
      homeEnvironment0.setLightColor((-2));
      assertEquals(8192, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1979), (HomeTexture) null, (-715), (HomeTexture) null, (-715), 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(2);
      homeEnvironment0.getGroundColor();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-182), (HomeTexture) null, 44, (HomeTexture) null, (-182), (-182));
      homeEnvironment0.setCeillingLightColor((-182));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-182));
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals((-182), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1821), (HomeTexture) null, (-1821), (HomeTexture) null, (-1821), (-1821));
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-1821), homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-1821.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-1821), homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment1.getVideoQuality());
      assertEquals((-1821), homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoFrameRate(33);
      assertEquals(33, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-22), (HomeTexture) null, (-22), (HomeTexture) null, (-22), (-22));
      homeEnvironment0.getVideoCameraPath();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-22), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-22), homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-22.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-22), homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(42, (HomeTexture) null, 42, (HomeTexture) null, 42, 42);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(42, homeEnvironment0.getGroundColor());
      assertEquals(42, homeEnvironment0.getSkyColor());
      assertEquals(42.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(42, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("7x;5;D", "7x;5;D", (Content) null, 145, 145, "7x;5;D", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(145, homeTexture0, 145, 145, 145);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, "Unsupported aspect ratio ", homeEnvironment0, "7x;5;D");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 704, 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(801, homeTexture0, (-4547), homeTexture0, (-195), 704);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      boolean boolean0 = homeEnvironment1.isObserverCameraElevationAdjusted();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-195), homeEnvironment1.getLightColor());
      assertEquals(704.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-4547), homeEnvironment1.getSkyColor());
      assertEquals(801, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(boolean0);
  }
}
