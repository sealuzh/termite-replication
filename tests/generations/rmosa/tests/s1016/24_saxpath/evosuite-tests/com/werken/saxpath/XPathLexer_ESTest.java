/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 18:07:01 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!=fx-P'");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.100963336162914
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ds\"/w");
      xPathLexer0.number();
      xPathLexer0.or();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1021915356225063
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("atT+.K>Ji");
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.691477450899438
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.consume((-1077));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6890278560247443
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-405));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.798881389290342
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-3607));
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer1.pipe();
      xPathLexer1.div();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-197));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-591));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5761735678236266
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jUg>=C.@tZnFc!aHD*");
      Token token0 = xPathLexer0.slashes();
      assertEquals("j", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(10, token3.getTokenType());
      assertEquals(">=", token3.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1363835328238148
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-1702));
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.consume((-3286));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9c-]uJEg#GFQZ}$~Y");
      Token token0 = xPathLexer0.doubleColon();
      String string0 = token0.toString();
      assertEquals("[ (19) (.9)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("c-", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.95621553562779
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1rrpBMgOZU[%ph\"nSP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("rrpBMgOZU[%ph\"nSP", token1.getTokenText());
      
      Token token2 = new Token(25, "", 113, 25);
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("[", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("%p", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("h", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8W( 9RD7%uK=e6~yE");
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-795));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8962559285360756
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EwOEj4sHNGf6$u");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1078));
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.693868872638233
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(mgI9~p1W`r!j>`");
      Token token0 = xPathLexer0.at();
      String string0 = token0.toString();
      assertEquals("[ (16) (()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("mgI9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.578435505462532
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("St/M8=@xX[ckpI)ER");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("St", token0.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8946272989421615
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<a+:@");
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      xPathLexer0.consume((-2303));
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7955428394729185
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5$uhJr");
      XPathLexer xPathLexer1 = new XPathLexer("5$uhJr");
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer1.consume((-2407));
      xPathLexer2.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.852239675637619
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><m");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("<", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.331221312183706
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZIg");
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-3865));
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-3852), int0);
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.694550780544776
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhiXAR*V-UuV7cr7NF");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!aO_o]Z3hXD+S6~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("C", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setXPath(") (");
      xPathLexer0.consume((-2933));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(mgI9~p1W`r!j>`");
      Token token0 = xPathLexer0.notEquals();
      String string0 = token0.toString();
      assertEquals("[ (22) ((m)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("gI9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hj7)W.iholc");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("W.", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.297102279409588
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:ZmaH-:'T3sI|3");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("ZmaH-", token2.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4416366447818088
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"85m!");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-3993));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4856345497156076
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":?,5#OKePb\"nW");
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.consume((-307));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.691342224395043
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      assertEquals("[ (", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2/<Pm/|b");
      Token token0 = xPathLexer0.slashes();
      assertEquals("2/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d4zue7i");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("d4zue7i", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.787401803657858
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("TDj", token2.getTokenText());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2574426524241757
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9c-]uJEg#GFQZ}$~Y");
      Token token0 = xPathLexer0.slashes();
      assertEquals(".", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("9", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      Token token2 = xPathLexer0.comma();
      assertEquals("]", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5712448203683604
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.consume((-2403));
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s+b@*?m^u`D?\u0003!?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("s", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.290787425388391
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9c-]uJEg#GFQZ}$~Y");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|DO;gt*gXJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y$H}OaapE'^NT>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q{4p}|>4tIz.SO_/[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("q", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.826632906559544
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><m");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.2761420902242704
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B}[yM2@y[. %D[y^=");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("}", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2309));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F%%QUl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("F", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@+k&N.|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6004772914841099
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(mgI9~p1W`r!j>`");
      Token token0 = xPathLexer0.rightParen();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (2) (()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("gI9~p1W`r!j>`", token2.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1125768432807501
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".D^iia=(# :L2=");
      xPathLexer0.pipe();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I+kzu60Vr");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("I", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/c(*^3q#k");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8267300111433311
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!d^2vWYX]o@t~'qP|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("n", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("!d", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("v", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t_+wXL");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("t_", token0.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8003813945031282
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!d^2vWYX]o@t~'qP|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("!", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("n!d^2vWYX]o@t~'qP|");
      Token token2 = xPathLexer0.comma();
      assertEquals("n", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E`3\"VqO;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("E", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fAc~ d.S8V^");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("fAc~ d.S8V^");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("fAc", token0.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M^UQV}TLlrr");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/nc.\"CKF");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aWR|*YhK[UE;`!`?");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4955323528861233
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":?,5#OKePb\"nW");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.setXPath("aPjYXU3l'I9");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("aPjYXU3l", token2.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("58_z__~\u0003o;6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("58", token0.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+\"7xbNA6Sx0#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6801757996475404
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhiXAR*V-UuV7cr7NF");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("hi", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (13) (L)", string0);
      
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("AR", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1482647266182864
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HgA Mnkj\u0001Ff]n");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("HgA", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7670051837538374
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!d^2vWYX]o@t~'qP|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("n", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("^2vWYX]o@t~'qP|", token3.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GT@i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("GT", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.consume((-1003));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BNTu");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      assertEquals("BNTu", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}V`8GS`C|;p#19;A7x");
      Token token0 = xPathLexer0.pipe();
      String string0 = token0.toString();
      assertEquals("[ (17) (})", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("V", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      XPathLexer xPathLexer1 = new XPathLexer("p'uq4]V");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("J5", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.601333364250295
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhiXAR*V-UuV7cr7NF");
      Token token0 = xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (13) (L)", string0);
      
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("hiXAR*V-UuV7cr7NF", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("h", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.1025885973656075
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=($J!@RpbR");
      xPathLexer0.number();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("oMQo(*u,ltj\"%l2bT");
      xPathLexer1.operatorName();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.821279183809085
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1rrpBMgOZU[%ph\"nSP");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("1rrpBMgOZU", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("[", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%ph\"nSP", token2.getTokenText());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.6943997185791573
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      Token token0 = xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (13) (<)", string0);
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(32, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7938379966075586
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1rrpBMgOZU[%ph\"nSP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      char char0 = xPathLexer0.LA(15);
      assertEquals('P', char0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.2829875394034933
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">nu%JXB>?D");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(">", token1.getTokenText());
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3042365527335948
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>.j6MRortlcmq9xh");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(".", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.1015014044975926
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("og[");
      XPathLexer xPathLexer1 = new XPathLexer("g7v\"%Sapu)NO*]NN");
      xPathLexer1.number();
      xPathLexer0.or();
      xPathLexer1.operatorName();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.072754470684474
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".D^iia=(# :L2=");
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.3897290815795098
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#KQ3aF- E6cxZ");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("6c", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("x", token4.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.3187228319319138
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" {e(sf");
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7736713423749244
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhiXAR*V-UuV7cr7NF");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.identifier();
      String string0 = token0.toString();
      assertEquals("[ (15) (LhiXAR)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("LhiXAR*V-UuV7cr7NF");
      xPathLexer1.or();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.and();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("LhiXAR*V-UuV7cr7NF", token1.getTokenText());
      
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals("h", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4343679786583867
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>.j6MRortlcmq9xh");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("j6MRortlcmq9xh", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8532670971606946
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.spath.Token");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.spath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.spath.Token");
      xPathLexer1.or();
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$I[7|f_v;+,[Hzr<");
      char char0 = xPathLexer0.LA(1091);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals(26, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RFi]UfRTU,");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("RFi", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("P", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~]e!#CuF2vo;xOKIu");
      char char0 = xPathLexer0.LA(9);
      assertEquals('2', char0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals("~]e!#CuF2vo;xOKIu", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.487828494428201
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":?,5#OKePb\"nW");
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("b", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0149577906023837
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:ir-8npp7");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("i", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ox,56q/o)BFYv");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.6937763014741507
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y':Vhi'KE ");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("y", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      char char0 = xPathLexer0.LA(10);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(27, token2.getTokenType());
      assertEquals(":Vhi", token2.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.291638747978844
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9c-]uJEg#GFQZ}$~Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".9", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("]", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("uJEg#GFQZ}$~Y", token3.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3\"^UN[E=g7z");
      xPathLexer0.number();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.774695138844944
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!d^2vWYX]o@t~'qP|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      xPathLexer0.setXPath("n!d^2vWYX]o@t~'qP|");
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("n", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("d^2vWYX]o@t~'qP|", token3.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.774240874958923
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!d^2vWYX]o@t~'qP|");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("d", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.comma();
      assertEquals("^", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("2", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0*|");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&o k*m");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&o k*m", token0.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.5249147899650894
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":?,5#OKePb\"nW");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("?", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("5", token4.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.6047709131324286
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(": ", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.equals();
      assertEquals("*", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("`|G", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("`", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.066269088547691
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.2898689084823252
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?c`$qAt.E!ZTY#~=", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("c", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.694579074690717
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      Token token0 = xPathLexer0.slashes();
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.equals();
      assertEquals(";", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.773153655688458
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      Token token0 = xPathLexer0.dots();
      assertEquals("<", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("T", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("D", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("j", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(21, token6.getTokenType());
      assertEquals("=", token6.getTokenText());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("+", token7.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8367151690951484
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><m");
      xPathLexer0.and();
      xPathLexer0.consume((-125));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w?Vx10%Vk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6b+_>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.2234339891357124
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.whitespace();
      xPathLexer0.setXPath(") (");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q~2f }BZ{>SS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.882350353578365
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.8009725275080544
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!d^2vWYX]o@t~'qP|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("d", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.colon();
      assertEquals("^", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("2", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("vWYX]o@t~'qP|", token5.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.6910517378300467
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z~#<rS+j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("z", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1594579027978682
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}:3*Lxx[TqBOOktj(>X");
      xPathLexer0.and();
      Token token0 = xPathLexer0.comma();
      assertEquals("}", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(":3", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("*", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.925847664943889
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.spath.Token");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.spath.Token", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.spath.Token");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.or();
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.3160684574076829
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#KQ3aF- E6cxZ");
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#KQ3aF- E6cxZ", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("Q3", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("a", token3.getTokenText());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.2658678545128916
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.consume(0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      String string0 = xPathLexer2.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5731666996373965
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      Token token0 = xPathLexer0.slashes();
      assertEquals("~", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("rBa", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.slashes();
      assertEquals("N", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V/cgnd\"M18(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1335456907097907
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:ir-8npp7");
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("!:", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("ir", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("8", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = "7?c`$qAt.E!ZTY#~=";
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-3607));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('?');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.3530364465702132
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" {e(sf");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{e(sf", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("{e", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("sf", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l}9", token1.getTokenText());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-644);
      xPathLexer0.consume((-644));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K3{9d.`^N&F");
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.consume((-579));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8W( 9RD7%uK=e6~yE");
      xPathLexer0.whitespace();
      xPathLexer0.consume((-795));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('n');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.0619553454854898
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.hasMoreChars();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.7957554314032247
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1rrpBMgOZU[%ph\"nSP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("rrpBMgOZU[%ph\"nSP", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals("BMgOZU[%", token3.getTokenText());
      assertEquals(27, token3.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.0682696350967749
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.pipe();
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("rBa", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.1054615809663617
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(";", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.9429349591861339
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<Yk|L864RyG@mXarkZ");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.4527903703894112
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("--uPAM+Jp@u\"");
      Token token0 = xPathLexer0.dots();
      assertEquals("-", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      assertEquals("-", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("uPAM", token2.getTokenText());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.at();
      assertEquals("J", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("O:");
      xPathLexer1.LA(9);
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.currentPosition();
      xPathLexer1.div();
      Token token5 = xPathLexer1.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      char char0 = xPathLexer1.LA(3675);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(18, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.2825338314328487
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" {e(sf");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{e(sf", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("{e(sf", token1.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      boolean boolean0 = xPathLexer0.isIdentifierChar('|');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.0359543114274437
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".D^iia=(# :L2=");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1183));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0651355159045777
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      char char0 = xPathLexer0.LA(1249);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.9830420371921524
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.equals();
      assertEquals("~", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.292067766812771
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9c-]uJEg#GFQZ}$~Y");
      Token token0 = xPathLexer0.identifier();
      assertEquals(".9c-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.600348142575418
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(mgI9~p1W`r!j>`");
      Token token0 = xPathLexer0.rightParen();
      String string0 = token0.toString();
      assertEquals("[ (2) (()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("mgI9~p1W`r!j>`", token1.getTokenText());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.0659315358050752
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.or();
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.0245126054898777
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}:3*Lxx[TqBOOktj(>X");
      xPathLexer0.and();
      xPathLexer0.div();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("}", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("3", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#KQ3aF- E6cxZ");
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Q3", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.1046185883425472
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.0735974633082885
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".D^iia=(# :L2=");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("D", token1.getTokenText());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.07577388118052
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".A$lK+W");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("A", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.endPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.107456527102816
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(";T", token2.getTokenText());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.0600019680213129
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:ZmaH-:'T3sI|3");
      xPathLexer0.and();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("m", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9806177947679101
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<Yk|L864RyG@mXarkZ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("Y", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.9817721959223111
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<Yk|L864RyG@mXarkZ");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(":", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("Y", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.0649253532215883
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.equals();
      assertEquals("~", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("r", token3.getTokenText());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.9821786025825756
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:ZmaH-:'T3sI|3");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.064905894779434
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.066382927401703
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("~", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.9828593887903261
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<Yk|L864RyG@mXarkZ");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("Y", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.1449970265763927
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.0711572802815401
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.104374388098347
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<;TDj=+cg6wa]98Bf3z");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.0649253532215883
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<Yk|L864RyG@mXarkZ");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("Y", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("|L", token4.getTokenText());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.0029117849481575
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":?,5#OKePb\"nW");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?,5#OKePb\"nW", token2.getTokenText());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.0561109147166885
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:ir-8npp7");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("i", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.9858919099656894
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<Yk|L864RyG@mXarkZ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Yk", token2.getTokenText());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.0799138677455942
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:4r-8npp7");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.2393053396530662
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:4r-8npp7");
      xPathLexer0.or();
      Token token0 = xPathLexer0.equals();
      assertEquals("!", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.literal();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.div();
      xPathLexer0.or();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 182
  /*Coverage entropy=1.0976221340377155
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:ir-8npp7");
      xPathLexer0.or();
      Token token0 = xPathLexer0.equals();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("ir-8npp7", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.0411783831303887
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".D^iia=(# :L2=");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 184
  /*Coverage entropy=0.9820163961665116
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:4r-8npp7");
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 185
  /*Coverage entropy=0.9821786025825756
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:ZmaH-:'T3sI|3");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=1.0217647720508585
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.consume(116);
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.9412690497510285
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<Yk|L864RyG@mXarkZ");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("Y", token2.getTokenText());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.9840907263307292
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~: rBa*Npu`|G");
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=0.9372001921610442
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1A@2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("1", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
  }
}
