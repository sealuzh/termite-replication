/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 18:59:00 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&fA]s1|`,Uo1");
      Player player0 = new Player(2165);
      Player player1 = new Player(1266, "&fA]s1|`,Uo1", "&fA]s1|`,Uo1", 1027);
      player1.setY(0.0F);
      player1.gangStrength();
      player0.remove(player1);
      player0.gangStrength();
      player0.setMoney(0.1F);
      player1.setJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ");
      int int0 = Packable.GAME_STATE;
      System.setCurrentTimeMillis(1392409296320L);
      player1.isJoinOK(player0, true);
      Player player2 = new Player(2057, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 1);
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-27L));
      Player player0 = new Player(4256);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)24;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1558), (byte)24);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(2368);
      player0.setY(0.0F);
      player0.setY((-2545.604F));
      Player player1 = new Player(2368, "pm >v>|7C", "module.ModuleBrowserDialog$ModuleFilter", (-1632));
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      player0.pack();
      player0.getY();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-2545.604F), player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setX((-3205.0F));
      Player player1 = new Player(1435, "module.ModuleBrowserDialog$ModuleFilter", "", (-1), (-1630));
      player1.setZ((-1915.032F));
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis((-1573L));
      float float0 = player1.getZ();
      assertEquals((-1915.032F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-200), "", 2381);
      player0.setX((-1201.0F));
      Player player1 = new Player(0, (String) null, 1140);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      player0.getX();
      player0.pack();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-1201.0F), player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-19));
      Player player1 = new Player((-19));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-19", player1.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-8));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-8", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-3299), "QN", (-3299));
      player0.gangStrength();
      Party party0 = new Party();
      player0.prev = party0;
      player0.gangStrength();
      player0.setMoney((-3299));
      party0.add(player0.prev);
      player0.next = party0;
      player0.prev.boss = party0;
      player0.prev.boss.boss = player0.prev;
      player0.getZ();
      player0.prev.head = player0.prev.boss;
      player0.prev.boss.boss = player0.prev.head;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "QN");
      player0.prev.prev = party0;
      player0.type();
      player0.getY();
      System.setCurrentTimeMillis(1L);
      player0.pack();
      Player player1 = new Player(672);
      player0.isJoinOK(player1, false);
      player1.remove(player0);
      player1.isJoinOK(player0, true);
      player1.getMoney();
      player1.getX();
      float float0 = player0.getMoney();
      assertEquals((-3299.0F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(30721, "", 30721);
      player0.setY(30721);
      float float0 = player0.getY();
      assertEquals(30721.0F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4919, "b3(\f", 2243);
      Player player1 = new Player(2243, (String) null, (String) null, (-1163), (short)4919);
      player1.getIP();
      player1.getMoney();
      Player player2 = new Player(0);
      player2.getStrength();
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-95));
      player0.setJoinOK(player0, true);
      Player player1 = new Player();
      player1.setDead((long) (-95), false);
      player1.setConnected(false);
      player1.isConnected();
      assertEquals((-95L), player1.getTimeOfDeath());
      
      player0.pack();
      assertEquals("Player-95", player0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-92));
      Player player1 = new Player((short)4919);
      Player player2 = new Player(267);
      File file0 = MockFile.createTempFile("}GtPO a5DpWf.t_R", "}GtPO a5DpWf.t_R");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        player2.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-1), "", 0);
      Player player1 = new Player();
      Party party0 = player1.prev;
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      Player player2 = new Player((-156), "0.0.0.0", 0);
      player0.add(player2);
      float float0 = player2.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player3 = new Player(16, "", "ZoUz-;ZiO9tD+W", 2243, 0);
      int int0 = player3.getStrength();
      assertEquals(0, int0);
      
      player3.pack();
      Player player4 = new Player();
      player2.isJoinOK(player3, true);
      Player player5 = new Player(16);
      boolean boolean0 = player1.isJoinOK(player3, false);
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(2243, player3.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player3.isConnected());
      assertFalse(player3.isDead());
      assertEquals(0L, player3.getTimeOfDeath());
      assertEquals("Player-1", player1.getName());
      assertEquals("", player3.getIP());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(11168, "", 11168);
      player0.getZ();
      player0.setConnected(true);
      Player player1 = new Player((short)4919, "w#8", (String) null, 931);
      player1.setConnected(true);
      player0.isJoinOK(player1, true);
      player1.toString();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)16;
      Player player0 = new Player(619, ".*[.]class$", "", 528, (-221));
      Player player1 = new Player((-1003), "+d", "+d", (-3521));
      int int0 = player0.type();
      assertEquals(5, int0);
      
      Player player2 = new Player((-1946), "7uL+g?!f#", 1523);
      int int1 = player2.getStrength();
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(1, int1);
      
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(528, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(".*[.]class$", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-221), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.getMoney();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      player0.isJoinOK(player1, true);
      Player player2 = new Player();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player2.unpack(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-1094), (String) null, (-1094));
      player0.getName();
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1094), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)16;
      byteArray0[3] = (byte)46;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((byte)0);
      player0.pack();
      Player player1 = new Player();
      player1.toString();
      player1.setDead((-1756L));
      long long0 = player1.getTimeOfDeath();
      assertEquals((-1756L), long0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Party party0 = new Party((-32));
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player2 = new Player(0, "m/,6CzXH &~Q_(tQQ", "", (-891), (-891));
      int int0 = player0.type();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(5, int0);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      
      int int1 = player2.getStrength();
      assertTrue(player2.isConnected());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals((-891), int1);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals((-891), player2.getPictureId());
      assertEquals("m/,6CzXH &~Q_(tQQ", player2.getIP());
      assertFalse(player2.isDead());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-2546));
      Player player1 = new Player((short)4919, "", "", (-2546));
      player0.isJoinOK(player1, false);
      player1.boss = (Party) player0;
      player1.head = (Party) player1;
      player1.gangStrength();
      player0.setMoney(1);
      player1.next = (Party) player0;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      player1.pack();
      player0.getMoney();
      player0.getZ();
      assertEquals(1.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-1));
      PipedInputStream pipedInputStream0 = new PipedInputStream(632);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      int int0 = player0.type();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(5, int0);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-80));
      byte[] byteArray0 = player0.pack();
      System.setCurrentTimeMillis(1227L);
      Player player1 = new Player();
      player1.unpack(byteArray0);
      player0.isJoinOK(player1, false);
      assertEquals((-80), player1.getId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1), "", "", (-1036), (-1));
      Player player1 = new Player();
      player0.getPictureId();
      player1.setY((-231.705F));
      player1.setDead((long) (-1036));
      Party party0 = player0.prev;
      assertNull(party0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-65), "", "", (-65), 1536);
      player0.toString();
      assertEquals((-65), player0.getPictureId());
      assertEquals(1536, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-2546));
      Player player1 = new Player((short)4919, "D", "D", (-2546));
      player0.isJoinOK(player1, false);
      player1.boss = (Party) player0;
      player1.head = (Party) player0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      player0.toString();
      player0.setDead((long) (short)4919);
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(0L);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-218));
      player0.getX();
      player0.getZ();
      player0.getY();
      Player player1 = new Player(5);
      player0.setZ(0.0F);
      player0.isJoinOK(player1, false);
      player0.remove(player1);
      assertEquals(0.0F, player1.getZ(), 0.01F);
      
      player1.setZ(0.1F);
      player0.pack();
      player0.getX();
      player1.getY();
      float float0 = player1.getZ();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "state.Party");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player(2652, "", "", 2652);
      Player player1 = new Player(2652, "state.Party", "state.Party", (-761));
      Party party0 = player1.gangBoss();
      party0.getSubparty();
      player0.boss = party0;
      player0.getIP();
      player1.toString();
      Party party1 = player0.prev;
      party0.prev = null;
      player1.gangStrength();
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(2);
      player0.gangStrength();
      player0.setZ(2);
      player0.prev = null;
      player0.getX();
      player0.setDead((-512L));
      player0.setConnected(true);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.getIP();
      player0.isConnected();
      player0.toString();
      player0.isDead();
      player0.setDead((long) 2);
      player0.setY((-10.053585F));
      assertEquals(2.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals("Player0", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(10, "$);G*z=:}eX9a{yQ", "0.0.0.0", 2560, 513);
      Player player1 = new Player();
      Party party0 = player0.boss;
      int int0 = player0.getStrength();
      assertEquals("$);G*z=:}eX9a{yQ", player0.getIP());
      assertEquals(513, int0);
      assertEquals(2560, player0.getPictureId());
      
      int int1 = player1.getPictureId();
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, int1);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player0 = new Player((-24541), "E{.v,6&6JklmD", (-24541));
      player0.setX(0L);
      player0.setDead();
      player0.setDead((long) (-24541), true);
      Party party0 = player0.prev;
      player0.remove((Party) null);
      player0.type();
      player0.getIP();
      player0.getZ();
      player0.getX();
      player0.getIP();
      player0.pack();
      assertEquals((-24541L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setDead();
      Player player1 = new Player((-1));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((byte)2);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      Player player1 = new Player(527);
      player0.isJoinOK(player1, false);
      boolean boolean0 = player1.isConnected();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(0, "Player.unpack(): *** WARNING *** data is not of proper type!", "", 3598, 0);
      player0.gangStrength();
      player0.pack();
      player0.setY(3598);
      assertEquals(3598.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-54));
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "state.Party");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.toString());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(163, (String) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 163, (-1));
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-1), int0);
      assertTrue(player0.isConnected());
      assertEquals(163, player0.getPictureId());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-2546));
      Player player1 = new Player((short)4919, "", "", (-2546));
      player0.isJoinOK(player1, false);
      player1.head = (Party) player0;
      player1.gangStrength();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      player0.setMoney(2);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      player1.next = (Party) player0;
      assertEquals(2.0F, player0.getMoney(), 0.01F);
      
      Player player2 = new Player(20466, "^\"0i93Eh:s]+)Ek{", (-397));
      assertEquals((-397), player2.getPictureId());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-54));
      player0.setX((-54));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(2775);
      String string0 = player0.getName();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player2775", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(5);
      player0.reset(true);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player5", player0.toString());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(10, "$);G*z=:}eX9a{yQ", "0.0.0.0", 2538, 513);
      Party party0 = player0.boss;
      player0.getStrength();
      player0.getPictureId();
      System.setCurrentTimeMillis(2538);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)54;
      Player player0 = new Player((byte)54);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player54", player0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(876, (String) null, 876);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 4919, 4919);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(4919, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(4919, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-80));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(5);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-90);
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis(5);
      System.setCurrentTimeMillis((-1451L));
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(30840);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(3382);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(5);
      player0.reset(false);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player5", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }
}
