/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 18:55:21 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.add(")");
      arrayList0.add("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{k&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode(31);
      simpleNode0.jjtAddChild(simpleNode1, 18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtGetChild(18);
      assertEquals(19, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1161));
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*rshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Literal", stringWriter0);
      assertEquals("<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(49);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<ShiftExpression>\n</ShiftExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<EnumConstant>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4995278564683664
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtAddChild(simpleNode0, 18);
      StringWriter stringWriter0 = new StringWriter(18);
      String string0 = null;
      // Undeclared exception!
      simpleNode0.dump(string0, stringWriter0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<EnumConstant>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2380);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("jC;9");
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 750);
      char[] charArray0 = new char[9];
      charArray0[0] = '`';
      charArray0[1] = '`';
      charArray0[2] = '`';
      simpleNode0.jjtSetParent((Node) null);
      SimpleNode simpleNode1 = new SimpleNode((-1801251892));
      simpleNode1.jjtAddChild(simpleNode0, 68);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.jjtGetNumChildren();
      simpleNode1.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1801251892
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.jjtAddChild(simpleNode0, 84);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetChild(84);
      String string0 = ";dvM)zB";
      StringWriter stringWriter1 = new StringWriter(84);
      char[] charArray0 = new char[8];
      charArray0[0] = 'X';
      charArray0[2] = 'q';
      charArray0[3] = '';
      charArray0[4] = 'q';
      charArray0[5] = '&';
      charArray0[6] = 'G';
      charArray0[7] = 'v';
      // Undeclared exception!
      try { 
        stringWriter1.write(charArray0, 49, 49);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.jjtAddChild(simpleNode0, 18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("`L;kb8CXH6Z", stringWriter0);
      assertEquals(19, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("_3/4]}WTAq");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("~", stringWriter0);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-978));
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2094);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2094
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2020));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("am@{A");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("am@{A", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4018409024473866
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(13);
      SimpleNode simpleNode1 = new SimpleNode(13);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<TypeBound>\n  <identifier>=</identifier>\n</TypeBound>\n", stringWriter0.toString());
      
      simpleNode0.toString("=");
      simpleNode0.toString(">");
      simpleNode0.jjtGetParent();
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      SimpleNode simpleNode1 = new SimpleNode((-1106101594));
      simpleNode0.jjtSetParent(simpleNode1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("*");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*gt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*lt</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*D_Y?2cg,fy=", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(34);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add((String) null);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("PackageDeclaration", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.toString("");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('6');
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.dump("", stringWriter1);
      JavaParser javaParser0 = new JavaParser(">>=");
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*ge</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("_3/4]}WTAq");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("~", stringWriter0);
      assertEquals("<VariableDeclaratorId></VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("z");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("z", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>z</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add((String) null);
      String string0 = simpleNode0.toString();
      assertEquals("InstanceOfExpression : null", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.7676494774001423
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("9fjK:SJSX$ZWo8U]9r");
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3));
      simpleNode0.setIdentifier("\"!\"");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(724);
      simpleNode0.jjtAddChild((Node) null, 51);
      StringWriter stringWriter1 = stringWriter0.append('k');
      StringWriter stringWriter2 = stringWriter1.append('u');
      simpleNode1.dump("", stringWriter2);
      assertSame(stringWriter1, stringWriter2);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SystemInUtil.addInputLine("n?W(oZCGc");
      int int0 = 10;
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringReader stringReader0 = new StringReader("b]5h,KKu}%d*,t7~");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.parser = javaParser0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[5], (-5451));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5451
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtSetParent((Node) null);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>=</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtOpen();
      StringWriter stringWriter0 = new StringWriter();
      char char0 = ';';
      // Undeclared exception!
      try { 
        stringWriter0.write((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      String string0 = "z";
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("z");
      StringReader stringReader0 = new StringReader("z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 18);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1432583002));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0915269783609793
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(13);
      String string0 = ">=";
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("M/kaf# 2", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(2673);
      simpleNode1.dump("</", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.toString(">=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2673
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("z");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("z", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>z</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("z");
      assertEquals("zVariableDeclaratorId : z", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("z");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("z", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }
}
