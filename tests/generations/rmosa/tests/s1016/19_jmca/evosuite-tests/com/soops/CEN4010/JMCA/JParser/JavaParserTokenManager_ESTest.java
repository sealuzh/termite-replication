/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 18:34:58 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Km]hS`M9c5KyH");
      StringReader stringReader1 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<HEX_LITERAL>");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*z?M{to`Y&.{_82w(;\"");
      StringReader stringReader1 = new StringReader("*z?M{to`Y&.{_82w(;\"");
      StringReader stringReader2 = new StringReader("*z?M{to`Y&.{_82w(;\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(103, token0.kind);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)122;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)21;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (byte)122, (byte)102, (byte)122);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(103, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("**Vpf");
      StringReader stringReader1 = new StringReader("**Vpf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 43, (-1), 39);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("GG", token0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6%;&Q7;j!u+TQ^");
      stringReader0.read();
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[1] = '=';
      charArray0[2] = 'P';
      charArray0[3] = '3';
      charArray0[4] = '\\';
      charArray0[5] = '';
      charArray0[6] = 'l';
      charArray0[7] = ')';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 54, 995, 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(996, javaCharStream0.getEndColumn());
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?rnFF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-801), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("?", token0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-102);
      StringReader stringReader0 = new StringReader("b0Am>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1766, (-1869), 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-1866), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.043702759896026
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2!:YAmkW\"yjyEN#Jy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, 16, 96);
      char[] charArray0 = new char[2];
      charArray0[0] = ';';
      charArray0[1] = 'K';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = '2';
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.image = "\"case\"";
      javaParserTokenManager0.getNextToken();
      Token.newToken(17);
      Token token1 = Token.newToken(96);
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{WGq=G=Go%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 368, 4624, 4624);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(4626, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<EXPONENT>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p@!yU}k)N\u0007i}iY@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 114);
      StringReader stringReader1 = new StringReader("p@!yU}k)N\u0007i}iY@");
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("p", token0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("\"else\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 49, (-1268), 49);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.readChar();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 31);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 31. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("+mAaL3o'l-r*~fw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, 14, (byte)119);
      StringReader stringReader1 = new StringReader("\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 378, 14, 98);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer("\"");
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(101, token0.kind);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T]T(]8uf KxCw<^:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 964, 964);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("T", token0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("snmzJT?F6/e");
      StringReader stringReader1 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ExpandBuff(false);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Dw'070(aA*hE");
      StringReader stringReader1 = new StringReader("-Dw'070(aA*hE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5869843816913654
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte) (-41);
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5D~$DfC%dD-_?");
      StringReader stringReader1 = new StringReader("5D~$DfC%dD-_?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 70, 2219, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 70, column 2232.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      StringReader stringReader1 = new StringReader("break");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte) (-2);
      byteArray0[6] = (byte)45;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 19, 62);
      StringReader stringReader2 = new StringReader("D~}~xkWQ1~<D61");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-271), (byte)26, (byte)109);
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      StringReader stringReader3 = new StringReader("%=");
      stringReader3.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B@!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 192, (-312), 192);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("B", token0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/B#sb<+`46|QHz_L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 113, 106, 106);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 113, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("puWnr ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2948, 29, 86);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(33, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'WM4;_UrE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(78, token0.kind);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-'Dw'0/70(aA*hEo");
      char[] charArray0 = new char[3];
      charArray0[0] = '=';
      charArray0[1] = 'q';
      charArray0[2] = '=';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 990, 70, 'q');
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 990, column 73.  Encountered: \"/\" (47), after : \"\\'0\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, 34, 64);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 34, 34, 64);
      stringReader0.read();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("U", token0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5888083670994821
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2!:YAmkW\"yjyEN#Jy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, 16, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = '2';
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 96, column 33.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4)NeW,BhlH8{dD,0,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 2, column 19.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("~");
      StringReader stringReader1 = new StringReader("9JM&(0!s`'Q~");
      StringReader stringReader2 = new StringReader("9JM&(0!s`'Q~");
      stringReader2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 895, 895, 43);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("9JM", token0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-'Dw'0/70(aA*hEo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 20, 70, 990);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte) (-1);
      StringReader stringReader0 = new StringReader("^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 33, (-732));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 104, 33);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(107, token0.kind);
      
      Token token1 = javaParserTokenManager1.jjFillToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a7E&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 8, 8);
      javaCharStream0.AdjustBuffSize();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 2, column 11.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 45, 45);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=[PvJwV");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(87, token0.kind);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0J/K`9D_u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, 895, 47);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("J", token0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LLjk_19h@^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-806), 106, 94);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(106, javaCharStream0.getBeginColumn());
      assertEquals(113, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5834607735165944
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hPsS~*4lj-;zCs");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 30, 2189, 2753);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(2191, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("<{}@Ak0(|4^K5,Dw+*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 2252, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F-lqX4V6rjVj1eA)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 34, 68, 34);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte) (-121);
      byteArray0[5] = (byte) (-22);
      byteArray0[6] = (byte) (-100);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("-<B=dAxv*kvY}");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("#Suj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-646), 99, 1969);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("CF[vZvjkTc{;b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 17, 30, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 2220;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nU");
      StringReader stringReader1 = new StringReader("nU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1144, 1144, 1);
      javaCharStream0.ReadByte();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1145, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("HI");
      StringReader stringReader1 = new StringReader("#Suj");
      StringReader stringReader2 = new StringReader("HI");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte)107, (-1114), 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-1113), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x/y?kkO;.f.L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, (-898), 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("x", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l~MqMD Otg=4!3+7>[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 124, 742, 97);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("l", token0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("<<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)111, (byte)111, (byte)111);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(111, javaCharStream0.getBeginColumn());
      assertEquals(112, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a7E&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 8, 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(10, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)115;
      StringReader stringReader0 = new StringReader("jkUm+>t$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)115, (byte)115, (byte)115);
      StringReader stringReader1 = new StringReader("T\"&F");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("jkUm", token0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i=@=c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-9), 105, 101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(105, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"/\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 884, (-266), 52);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("/", token0.toString());
      assertEquals(104, token0.kind);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eWmYNFt[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("extends");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(29, token0.kind);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)121, (byte)121, (byte)121);
      byte[] byteArray0 = new byte[7];
      byteArray0[4] = (byte)121;
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)61;
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte)7;
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(126, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8783578531833827
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?[1ls,sBHs>6{(tQP");
      StringReader stringReader1 = new StringReader("?[1ls,sBHs>6{(tQP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 33, 106, 33);
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(",", token0.toString());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2393, (-801), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("{]]lKe3T/_.I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2300), 4607, 122);
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'F';
      charArray0[3] = 'w';
      charArray0[4] = 'R';
      charArray0[5] = 'P';
      charArray0[6] = '-';
      charArray0[7] = 'P';
      charArray0[8] = 'P';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 9, 122, 4607);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b-");
      StringReader stringReader1 = new StringReader("as`sert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken((-1738));
      Token token0 = new Token();
      assertEquals(0, token0.endColumn);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@5v^Di:EIgbUaa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)121, 19, 94);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 121, column 32.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"super\"");
      StringReader stringReader1 = new StringReader("E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 70, 32, 110);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 94, 33, 32);
      StringReader stringReader2 = new StringReader("\"super\"");
      stringReader2.read();
      stringReader2.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("E", token0.toString());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1852106726234373
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R$01;u0,U%mMXth&mZ*");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-103);
      char[] charArray0 = new char[1];
      charArray0[0] = 'I';
      stringReader0.read(charArray0);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)81;
      StringReader stringReader1 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 35, 106);
      stringReader0.read();
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 89, column 52.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+ti0l ZyF7!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3761, 15, 4);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("ZyF7", token0.toString());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, 106, 5177);
      StringReader stringReader1 = new StringReader("\"implements\"");
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(89, token0.kind);
      assertEquals("!", token0.toString());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4857142857142857
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("+mAaL3o'l-r*~fw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 47, 14, (byte)119);
      char[] charArray0 = new char[6];
      charArray0[0] = 'P';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)119, 14, 14);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.skip(14);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 47, column 22.  Encountered: \"-\" (45), after : \"\\'l\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 34, (-162), 2388);
      javaCharStream0.ReadByte();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("=", token0.toString());
      assertEquals(87, token0.kind);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b-");
      StringReader stringReader1 = new StringReader("S|2p^!Yf\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("S", token0.toString());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<2~TEFXxytiz-ni|X7");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("N", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("JnA+;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2962), 6, 6);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".  Encountered: ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F-lqX4V6rjVj1eA)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("F", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 113, 106, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(107, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g]mrt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("g", token0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("native");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("package");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("package", token0.toString());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)121, 52, (-268));
      StringReader stringReader0 = new StringReader("private");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-15), (byte)121, (byte)0);
      StringReader stringReader1 = new StringReader("private");
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream1.bufpos);
      assertEquals(127, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p+wN]Gwc\b`)F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("p", token0.toString());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*`;:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 34, 34, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(103, token0.kind);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 134, 78, 4624);
      javaCharStream0.ReadByte();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(81, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      StringReader stringReader0 = new StringReader("-5`vZ#QU8Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1742), (-4312), (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u_EjR1|7;gnr]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 5, 28);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("_", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)121);
      StringReader stringReader0 = new StringReader("<NeC");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)121, 1583, 1854);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(121, javaCharStream0.getLine());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("b", token0.toString());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"--\"");
      StringReader stringReader1 = new StringReader("\"--\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 636, 30, 2505);
      stringReader1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 30, 30, 1617);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("--", token0.toString());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1849504592484699
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u80b:^LEzM(u#!X_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 895, 16, 895);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 895, column 31.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      StringReader stringReader1 = new StringReader("P^sFm{65[Z[\"(g");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-881), (-881), 895);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("P", token0.toString());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$G+u!@%P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, 44, 44);
      int int0 = JavaParserConstants.LETTER;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      assertEquals(0, token_GTToken0.beginLine);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)121;
      StringReader stringReader0 = new StringReader("\"<<\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, 41, 41);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-933), 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(31, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7|,=d-8rsB2>Y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2529, (-4));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 2529, column 9.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$G+u!@%P");
      StringReader stringReader1 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 70, 45, 21);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*c");
      StringReader stringReader1 = new StringReader("^=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 105, 105, 105);
      StringReader stringReader2 = new StringReader("|=");
      stringReader2.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(116, token0.kind);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-93);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte) (-74);
      byteArray0[5] = (byte)23;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, (byte) (-93), 1378);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(106, token0.kind);
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k! O\"^b@5}lJ|%L2/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, 27, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("k", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)115;
      StringReader stringReader0 = new StringReader("jkUm+>t$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)115, (byte)115, (byte)115);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[3];
      charArray0[1] = 'q';
      charArray0[2] = '=';
      stringReader0.read(charArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      StringReader stringReader1 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 1, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(16, token0.kind);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b-");
      StringReader stringReader1 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("assert", token0.toString());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\">>>=\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, 111, 31);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(114, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"super\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, 94, 94);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(94, javaCharStream0.getBeginColumn());
      assertEquals(98, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b-");
      StringReader stringReader1 = new StringReader("as`sert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"while\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 368, 4624, 4624);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(4628, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("short");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("dh(6~!}BAfRSz2@cyS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 110, 44, 110);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
      
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-789), 30, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(30, javaCharStream0.getBeginColumn());
      assertEquals(32, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 52, 70, 52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(70, javaCharStream0.getBeginColumn());
      assertEquals(71, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("==");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0614889854388747
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)121;
      StringReader stringReader0 = new StringReader("\"/\"");
      StringReader stringReader1 = new StringReader("@`PFg+h&W@h1z8grO}z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-985), 0, (byte)121);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.debugStream = null;
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("@", token0.toString());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)82, (-2112));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("R", token0.toString());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b-");
      StringReader stringReader1 = new StringReader("(");
      StringReader stringReader2 = new StringReader("), ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte) (-116), 1242, 7486);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(26, 1328);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Xc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 895, 96, 1056);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(97, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]f*{4ux-Il~zC; ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 50, 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(82, token0.kind);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)121, (byte)121, (byte)0);
      StringReader stringReader0 = new StringReader(">Z0Y\nIZO6P;t(G");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)121, (byte)121, 70);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(124, token0.kind);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("u_EjR1|7;gnr]");
      int int0 = 2;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5834607735165944
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("break");
      StringReader stringReader1 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 24, 44, 1);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 24, column 48.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"char\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 61, (-1201));
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      charArray0[1] = '/';
      charArray0[2] = '_';
      charArray0[3] = 'Y';
      charArray0[4] = 'i';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null, 1);
      javaParserTokenManager1.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 61, column -1200.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 930, 52, 52);
      StringReader stringReader0 = new StringReader("private");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)90, (-717), (byte)90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)121;
      StringReader stringReader0 = new StringReader("\"/\"");
      StringReader stringReader1 = new StringReader("(i1sHT\"Lh%;A0AuZ4w'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)121, 20, 20);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(77, token0.kind);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q2+bfWz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte) (-116);
      byteArray0[3] = (byte)121;
      byteArray0[4] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1747), 89, 21);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3438, (-1747), 3438);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(90, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("**Vpf");
      StringReader stringReader1 = new StringReader("**Vpf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = new Token();
      assertEquals(0, token0.endColumn);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1394420878117915
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("}9YzM]J{.T");
      token_GTToken0.image = "";
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaCharStream0.GetImage();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("**Vpf");
      StringReader stringReader1 = new StringReader("**Vpf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 30, 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(30, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 110, (-1669), 403);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1669), javaCharStream0.getBeginColumn());
      assertEquals("*=", token0.toString());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, 188, 895);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"super\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, 94, 94);
      stringReader0.read();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-62);
      byteArray0[4] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 94, 68, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 94, column 68.  Encountered: \"\\u0017\" (23), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0J/K`9D_u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 738, 895, 895);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 22, 895, 738);
      stringReader0.read();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 2648, 738, 2);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream2.bufpos);
      assertEquals(104, token0.kind);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vM@C~!'?T/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1824), 1631, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.specialToken = null;
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, 1631, (-1824), (-1308));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5813709093577648
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6%;&Q7;j!u+TQ^");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2338, 54, 995);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(55, javaCharStream0.getBeginColumn());
      assertEquals(55, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M%qFP&h");
      StringReader stringReader1 = new StringReader("<OCTAL_LITERAL>");
      StringReader stringReader2 = new StringReader("M%qFP&h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.kind = (-2106);
      token0.endLine = 37;
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("<<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)111, (byte)111, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("<<=", token0.toString());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("<{}@Ak0(|4^K5,Dw+*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 45, 45);
      StringReader stringReader1 = new StringReader("<{}@Ak0(|4^K5,Dw+*");
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(45, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 746, 895, 895);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(895, javaCharStream0.getBeginColumn());
      assertEquals(897, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 746, 895, 895);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qTV@)F^=COrjYAiE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-571), 68, 895);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(69, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+ti0l <Zyf7!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(101, token0.kind);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("th/*\"v");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      StringReader stringReader1 = new StringReader("&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 111, 96, 111);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        stringReader1.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("CF[vZvjkTc{;b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-190), 2680, 2680);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("th/*\"v");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 29, 0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("h", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M%qFP&h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 186, 186, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("M%qFP&h");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-3688), (-1032), 119);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(108, token0.kind);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3LkI3k>U'eLB");
      StringReader stringReader1 = new StringReader("3LkI3k>U'eLB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("3LkI3k", token0.toString());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0J/K`9D_u");
      StringReader stringReader1 = new StringReader("0J/K`9D_u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 10.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader(">3al3%Zwa{![j6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 30, 122, 122);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(122, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader(">");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.4897959183673469
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"uper");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\\"uper\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.48717948717948717
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"|=\"");
      StringReader stringReader1 = new StringReader("\"|=\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3138), 86, 2294);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 31, 78, 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("\"|=\"", token0.toString());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.4857142857142857
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("\"\r\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1056, 895, 52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1056, column 896.  Encountered: \"\\r\" (13), after : \"\\\"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 97, (-2147483638), 97);
      StringReader stringReader0 = new StringReader("\";\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 115, (-2147483638), 70);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals((-2147483638), javaCharStream1.getColumn());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D~$DfC%d=V(-_?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 75, 1793, 70);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("D", token0.toString());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<2~TEFXxytiz-ni|X7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("do");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k! O\"^b@5}lJ|%L2/");
      StringReader stringReader1 = new StringReader("k! O\"^b@5}lJ|%L2/");
      StringReader stringReader2 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 106, 45, 45);
      stringReader0.read();
      stringReader2.reset();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = 168;
      javaCharStream0.bufline = intArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6%;&Q7;j!u+TQ^");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2338, 54, 990);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f=**O|5E({^/,6B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("f", token0.toString());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 94, 45, 4624);
      javaCharStream0.ReadByte();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("-", token0.toString());
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 107, 25);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("c", token0.toString());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vM@C~!'?T/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("M", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)121, 52, (byte)121);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(52, javaCharStream0.getBeginColumn());
      assertEquals("y", token0.toString());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x%7l490pkd4n>i<&p");
      StringReader stringReader1 = new StringReader("x%7l490pkd4n>i<&p");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 2393, 86);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(2394, javaCharStream0.getBeginColumn());
      assertEquals(2394, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SccT");
      StringReader stringReader1 = new StringReader("O)nq^h<*fr]m]oRPc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1185, 2289, 3630);
      StringReader stringReader2 = new StringReader("\"while\"");
      stringReader2.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("O", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)121, (byte)121, 17);
      int int0 = JavaParserConstants.LETTER;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertNotNull(token0);
      
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, token1.kind);
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Dw'070(aA*hE");
      char[] charArray0 = new char[3];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = '=';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 990, 70, 'o');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2648, (-344), 2624);
      StringReader stringReader1 = new StringReader("-Dw'070(aA*hE");
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 990, column 72.  Encountered: \"7\" (55), after : \"\\'0\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6%;&Q7;j!u+TQ^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 30, 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 105, column 44.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"/\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)121, 52, 241);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 241, 2, 31);
      stringReader0.read();
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 241, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 163
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bo~#}dSHO$!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, 106, 63);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("o", token0.toString());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader(">3al3%Zwa{![j6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 30, 122, 122);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 122;
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-'Dw'0/70(aA*hEo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2338, 2338, 2338);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2338, column 2340.  Encountered: \"w\" (119), after : \"\\'D\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (-2909), (-2909), (-2909));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -2909, column -2908.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0#/K`9D_u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-116);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 34, (-2909), 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 34, column -2908.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*`;:");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 42, 42, 42);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 42, column 42.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer("<,R/f'L<0tO5/\"#");
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.ReInit((JavaCharStream) null, 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, true);
      javaParserTokenManager0.SwitchTo(0);
      // Undeclared exception!
      try { 
        mockPrintStream0.append((CharSequence) stringBuffer0, 0, 121);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 121
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>=");
      int int0 = 29;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, 1100, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SwitchTo(2);
      // Undeclared exception!
      try { 
        stringReader0.mark((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2466, 2466, 2466);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(67);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 67. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 178
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1538));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1538. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.4960551039141818
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0J/K`9D_u");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 738, 895, 895);
      StringReader stringReader1 = new StringReader("0J/K`9D_u");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-1), 50);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-122);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 895;
      intArray0[1] = 738;
      stringReader0.markSupported();
      intArray0[2] = 27;
      javaCharStream0.bufline = intArray0;
      StringReader stringReader2 = new StringReader("0J/K`9D_u");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, 10);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 10. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
