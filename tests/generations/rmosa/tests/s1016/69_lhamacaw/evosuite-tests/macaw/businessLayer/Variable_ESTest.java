/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 17:52:18 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.columnEnd = "XOrA]VF />";
      rawVariable0.getSupportingDocuments();
      rawVariable0.getAlias();
      rawVariable0.createVariableSummary();
      rawVariable0.getNotes();
      rawVariable0.questionNumber = "t";
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setYear("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.setYear("t");
      derivedVariable0.containsSourceVariable(rawVariable0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.getNotes();
      rawVariable0.setCategory("");
      derivedVariable0.setName("NON_EXISTENT_ALIAS_FILE_PATH");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      rawVariable0.getOntologyTerms();
      derivedVariable0.getForm();
      rawVariable0.getNotes();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      rawVariable0.getCategory();
      rawVariable0.getCodeBookNumber();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.630117871843128
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      User user0 = new User();
      user0.setPassword("[;speg");
      rawVariable0.setIdentifier((-2070787801));
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      rawVariable0.getOntologyTerms();
      rawVariable0.getQuestionNumber();
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setForm("[;speg");
      rawVariable0.getCleaningDescription();
      derivedVariable0.getNotes();
      assertEquals("[;speg", derivedVariable0.getForm());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-1716));
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      rawVariable0.isCoded();
      rawVariable0.setNotes("_#Xq5s4{");
      derivedVariable0.getSourceVariables();
      rawVariable0.getCategory();
      assertEquals("_#Xq5s4{", rawVariable0.getNotes());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setIdentifier(1);
      rawVariable0.setAlternativeVariable(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable1.setOntologyTerms(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("1", rawVariable0.getDisplayItemIdentifier());
      
      rawVariable1.isCoded();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCleaningStatus((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.getDisplayName();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName(" e8RP|cIR");
      rawVariable0.setCleaningDescription("macaw.businessLayer.Variable");
      Variable.validateFields(rawVariable0);
      rawVariable0.getDisplayName();
      assertEquals("macaw.businessLayer.Variable", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4338006812941
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add((ValueLabel) null);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.isNewRecord();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("user.postCode.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("variable.codeBookNumber.label");
      ontologyTerm2.setIdentifier((-3068));
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("U");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setLabel("");
      rawVariable1.getCodeBookNumber();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      rawVariable0.getName();
      assertEquals("U", rawVariable0.getName());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis((-1L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setLabel("Unknown");
      derivedVariable0.setYear("!%`z'3GHK");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable1.getCodeBookNumber();
      derivedVariable0.getSourceVariables();
      rawVariable0.getLabel();
      assertEquals("Unknown", rawVariable0.getLabel());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "UNABLE_TO_GET_VALUE_LABELS";
      rawVariable0.columnStart = "UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS";
      rawVariable0.setIdentifier((-4915));
      rawVariable0.setCleaningStatus("UNABLE_TO_GET_VALUE_LABELS");
      rawVariable0.getColumnStart();
      rawVariable0.getAvailability();
      String string0 = "H`p\"|,$#eQjCs";
      rawVariable0.setColumnStart("H`p\"|,$#eQjCs");
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "H`p\"|,$#eQjCs";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.questionNumber = "[+S";
      derivedVariable0.setCleaningDescription("UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4356670493418786
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setCodeBookNumber("tU,M\"%.9wA%ug?0X");
      rawVariable0.setNotes("tU,M\"%.9wA%ug?0X");
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setCleaningDescription("tU,M\"%.9wA%ug?0X");
      rawVariable0.setCategory("tU,M\"%.9wA%ug?0X");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNameSpace("tU,M\"%.9wA%ug?0X");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setName("!3O/b?w[?.nh");
      rawVariable0.getNotes();
      rawVariable0.getAlias();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getQuestionNumber();
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.setFilePath("&XF");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getFilePath();
      rawVariable1.getValueLabels();
      rawVariable1.getSupportingDocuments();
      assertEquals("&XF", rawVariable1.getFilePath());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setIdentifier((-255));
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setCounty("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertEquals("-255", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.getSourceVariables();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      assertFalse(derivedVariable1.isCoded());
      
      User user0 = new User();
      boolean boolean0 = rawVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCleaningStatus("f");
      rawVariable0.setName("f");
      rawVariable0.setLabel("f");
      User user0 = new User("&Lr", "variable.name.label");
      user0.setAffiliation("variable.isCoded.label");
      User user1 = new User("}`<f", "Cf~L");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.getCleaningDescription();
      assertEquals("f", rawVariable0.getLabel());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1311);
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      arrayList0.stream();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      arrayList0.forEach(consumer0);
      ontologyTerm0.setIdentifier(1311);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      User user0 = new User("Unknown", "Unknown");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0561774276369764
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("_Ih`^@+{dIuOGL36h");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getName();
      derivedVariable0.getCleaningStatus();
      System.setCurrentTimeMillis((-111L));
      derivedVariable0.getCodeBookNumber();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("UNABLE_TO_CHECK_VALUE_LABEL_DUPLICATES");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User("variable.cleaningDescription.label", "{XbH.~, Ji)=Y?TK3V");
      user0.setCity("P8h6#h2QIY!t%");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, "16KF<cD]@1");
      user0.setAffiliation("]G#`7(C'<R=B");
      user0.setUserID((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(true);
      User user1 = new User("tl5T=#>/`I@MhE", "tl5T=#>/`I@MhE");
      user1.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable1.getCleaningDescription();
      System.setCurrentTimeMillis(809L);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertEquals(0, variable0.getIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setAlias("jO?eHtx\"4,(q~");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      user0.setIdentifier(1046);
      rawVariable1.setCleaned(true);
      user1.setAffiliation("]'>)q\"K4");
      User user2 = new User((String) null, (String) null);
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      assertTrue(arrayList2.isEmpty());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1311208216787505
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.questionNumber = "U";
      rawVariable1.setAlias((String) null);
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "U");
      user0.setPassword("NON_EXISTENT_VARIABLE_ASSOCIATION");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6890909942214716
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "U";
      rawVariable1.setAlias((String) null);
      rawVariable1.setLabel("U");
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user0.setIdentifier(1046);
      rawVariable1.setCleaned(false);
      user0.setAffiliation("GlPn");
      User user1 = new User((String) null, "U");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = "jIl(W~zM9_[J\f_D|K";
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string1 = rawVariable1.getCategory();
      assertEquals("Unknown", string1);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      String string2 = rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string2);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5012592323783793
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1534));
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIdentifier((-255));
      rawVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2648964145474735
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias((String) null);
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user1 = new User("", (String) null);
      user1.setIdentifier(1046);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setCleaned(true);
      user1.setAffiliation("t:8+#HseiH");
      User user2 = new User("}`'|", (String) null);
      User user3 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user3, rawVariable1, rawVariable3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.200113693165702
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable1.setCleaned(true);
      User user0 = new User("%l>,1FIz.~#", (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable2.addSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable2.getSupportingDocuments();
      rawVariable1.removeSupportingDocuments(arrayList0);
      assertFalse(rawVariable2.isNewRecord());
      assertEquals(0, rawVariable2.getIdentifier());
      assertFalse(rawVariable2.isCoded());
      assertFalse(rawVariable2.isCleaned());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("FYwp,>Lt;7ac<");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("UNABLE_TO_DELETE_CLEANING_STATE");
      derivedVariable0.getSupportingDocuments();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", derivedVariable0.getYear());
      
      derivedVariable0.setYear((String) null);
      derivedVariable0.isCleaned();
      derivedVariable0.getYear();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningDescription();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("variable.alias.label", "5l|&jSJQltzkq36");
      user0.setAffiliation("@3idoVO");
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-2004318069));
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable1.addSupportingDocument((SupportingDocument) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.addValueLabel(valueLabel0);
      rawVariable1.setAvailability("$HiHmbE*Mf[r7hPR3");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.questionNumber = "5l|&jSJQltzkq36";
      derivedVariable0.containsSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("jO?eHtx\"4q~");
      rawVariable0.setAlternativeVariable(rawVariable0);
      ontologyTerm0.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("f");
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("U");
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.689488055964573
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "U";
      rawVariable1.setAlias((String) null);
      rawVariable1.setLabel("U");
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user0.setIdentifier(1046);
      rawVariable1.setCleaned(false);
      rawVariable0.columnEnd = "4x";
      user0.setAffiliation("GlPn");
      User user1 = new User((String) null, "U");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variabled.year.label";
      rawVariable0.setCleaned(true);
      rawVariable0.setCleaningStatus("/hL+8");
      rawVariable0.isCleaned();
      rawVariable0.setCoded(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      rawVariable1.questionNumber = "Cpl+G@Jh/Q";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Cpl+G@Jh/Q", rawVariable1.getQuestionNumber());
      
      rawVariable0.getCleaningDescription();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.862218290000827
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis(11L);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.setName("U");
      rawVariable0.setLabel("U");
      User user0 = new User();
      user0.setPostCode("U");
      rawVariable1.notes = "variable.alternativeVariable.label";
      rawVariable1.setLabel("f");
      User user1 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("9");
      User user0 = new User("variable.alias.label", "variable.alias.label");
      user0.setLastName("9");
      user0.setEmail("variable.alias.label");
      user0.setEmail("variable.alias.label");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-211));
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.getDisplayName();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.columnEnd = "variable.alias.label";
      rawVariable0.getCleaningStatus();
      rawVariable0.getForm();
      rawVariable0.getValueLabels();
      rawVariable0.getColumnEnd();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, (DerivedVariable) null, (DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      Consumer<ValueLabel> consumer0 = (Consumer<ValueLabel>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.add(valueLabel1);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getValueLabels();
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      boolean boolean0 = rawVariable0.isNewRecord();
      String string1 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string1);
      
      rawVariable0.getQuestionNumber();
      rawVariable0.getValueLabels();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("Unknown");
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      
      rawVariable0.getForm();
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setName("f");
      rawVariable0.clone();
      User user0 = new User();
      try { 
        User.checkValidEmail("UNABLE_TO_DELETE_AVAILABILITY_STATE");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"UNABLE_TO_DELETE_AVAILABILITY_STATE\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = ")d4]>'puF";
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      arrayList0.add((OntologyTerm) null);
      ontologyTerm1.clone();
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("U");
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable2.setForm("Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User("U", "05Z");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      assertEquals("U", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable2.getForm());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6304437108786445
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "variable.year.label";
      derivedVariable0.setCategory("E4!u]u0(PdmruTL@479");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      derivedVariable0.removeSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "U";
      rawVariable1.setAlias((String) null);
      rawVariable1.setLabel("U");
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      user0.setFirstName("7S");
      rawVariable2.setYear("w");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      assertEquals("U", rawVariable0.getQuestionNumber());
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      rawVariable0.setColumnEnd("UNABLE_TO_DELETE_CLEANING_STATE");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      rawVariable0.setCleaningDescription("`;");
      user0.clone();
      user0.setCounty("UNABLE_TO_DELETE_CLEANING_STATE");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      System.setCurrentTimeMillis((-3L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "U";
      rawVariable1.setAlias((String) null);
      User user0 = new User();
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS";
      rawVariable0.setNotes(" )zCsp^8e#H`o.i");
      rawVariable0.getCleaningDescription();
      assertEquals(" )zCsp^8e#H`o.i", rawVariable0.getNotes());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("general.error.blankField");
      rawVariable0.columnStart = "#ZNo#~NW";
      rawVariable0.setAvailability((String) null);
      rawVariable0.createVariableSummary();
      rawVariable0.getYear();
      rawVariable0.getQuestionNumber();
      rawVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.form = "c:dV0PKkt_";
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getQuestionNumber();
      assertEquals("Unknown", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.form = "@-xLx4tF;_{";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis(11L);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("U");
      rawVariable0.setLabel("U");
      User user0 = new User();
      user0.setPostCode("U");
      rawVariable1.notes = "variable.alternativeVariable.label";
      rawVariable1.setLabel("f");
      Variable.validateFields(rawVariable0);
      rawVariable1.getQuestionNumber();
      assertEquals("f", rawVariable1.getLabel());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.3255210363639085
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "U";
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("U");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user0.setIdentifier(1021);
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setCleaned(false);
      user0.setAffiliation("GlPn");
      User user1 = new User((String) null, "U");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("macaw.system.ChangeEventType");
      rawVariable0.getColumnEnd();
      assertEquals("macaw.system.ChangeEventType", rawVariable0.getNotes());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setColumnStart("blank");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.getFilePath();
      assertEquals("blank", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "VH";
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getFilePath();
      assertEquals("", string1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER");
      derivedVariable0.getLabel();
      assertEquals("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.setQuestionNumber("-{}X)g4U");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.createVariableSummary();
      assertEquals("-{}X)g4U", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "r&";
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.5347185161547943
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      String string0 = "variabled.year.label";
      rawVariable0.setCleaned(true);
      rawVariable0.setCleaningStatus("/hL+8");
      boolean boolean0 = false;
      rawVariable0.isCleaned();
      System.setCurrentTimeMillis((-2522L));
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getYear();
      assertEquals("", string1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("UNABLE_TO_DELETE_CLEANING_STATE");
      rawVariable0.removeValueLabel(valueLabel0);
      User user1 = new User("UNABLE_TO_DELETE_CLEANING_STATE", "UNABLE_TO_DELETE_AVAILABILITY_STATE");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      String string0 = rawVariable0.getLabel();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User("N(!:", "N(!:");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "N(!:";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.set((-2078209979), rawVariable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.05514543589291
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      rawVariable0.setLabel("8>(y");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user1.setIdentifier(1);
      rawVariable0.setCleaned(false);
      user1.setAffiliation("GlPn");
      User user2 = new User(",", (String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.codeBookNumber = null;
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("hvU{K`Q9A}s|qd");
      rawVariable0.getAlias();
      assertEquals("hvU{K`Q9A}s|qd", rawVariable0.getForm());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "NON_EXISTENT_VALUE_LABELS";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setAlias((String) null);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      boolean boolean0 = rawVariable1.isCoded();
      assertFalse(boolean0);
      
      derivedVariable0.getSourceVariables();
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertNull(string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "[J1ms}A}5";
      derivedVariable0.columnStart = "[J1ms}A}5";
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.form = "[J1ms}A}5";
      derivedVariable0.createVariableSummary();
      derivedVariable0.setColumnEnd("[J1ms}A}5");
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.year.label");
      derivedVariable0.setAvailability("0eA4R#2Ll3~MKd");
      derivedVariable0.columnEnd = "UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM";
      derivedVariable0.getCleaningDescription();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCodeBookNumber();
      assertEquals("0eA4R#2Ll3~MKd", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("UNABLE_TO_DELETE_CLEANING_STATE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.687787510885328
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      User user1 = (User)user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
      
      derivedVariable0.getQuestionNumber();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnEnd("QrFmM#B5}");
      derivedVariable0.setNotes("QrFmM#B5}");
      derivedVariable0.getNotes();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "V#T5sP-.+O";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.codeBookNumber = ",";
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("P.$~2\"M4Tz,kf");
      derivedVariable0.getColumnStart();
      assertEquals("P.$~2\"M4Tz,kf", derivedVariable0.getForm());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.columnEnd = "vriabl.alternDtivVariable.label";
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_CHECK_AVAILABILITY_STATE_EXISTS";
      rawVariable0.columnStart = "UNABLE_TO_CHECK_AVAILABILITY_STATE_EXISTS";
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "5";
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.columnStart = "PdT>;h4>bq(^Ay+_";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("user.password.saveChanges");
      derivedVariable0.columnStart = "user.password.saveChanges";
      derivedVariable0.createVariableSummary();
      assertEquals("user.password.saveChanges", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("ontologyTerm.term.saveChanges");
      derivedVariable0.createVariableSummary();
      assertEquals("ontologyTerm.term.saveChanges", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.7589089852079005
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "U";
      rawVariable1.setAlias((String) null);
      rawVariable1.setLabel("U");
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user0.setIdentifier(1046);
      rawVariable0.setColumnStart((String) null);
      rawVariable1.setCleaned(false);
      user0.setAffiliation("GlPn");
      User user1 = new User((String) null, "U");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "U";
      rawVariable1.setAlias((String) null);
      rawVariable1.setLabel("U");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user1.setIdentifier(1046);
      rawVariable1.setCleaned(false);
      rawVariable0.setCategory(":QHiMO[,x@@");
      user1.setAffiliation("GlPn");
      rawVariable1.getOntologyTerms();
      User user2 = new User((String) null, "U");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias((String) null);
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user0.setIdentifier(1046);
      rawVariable1.setCleaned(false);
      user0.setAffiliation("GlPn");
      rawVariable0.setCategory((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.6238873247885097
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      User user1 = (User)user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_CREATE_RAW_VARIABLE";
      User user0 = new User("UNABLE_TO_CREATE_RAW_VARIABLE", "blank");
      derivedVariable0.getNotes();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("D8!IfGZ2PRM\"1?4");
      rawVariable0.getNotes();
      rawVariable0.getQuestionNumber();
      System.setCurrentTimeMillis(825L);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      System.setCurrentTimeMillis(4L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "U";
      assertEquals("", rawVariable0.getCodeBookNumber());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.form = "(bwXaDx,o";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("1aTofKA*?.m@[@/FJ");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getCodeBookNumber();
      assertEquals("1aTofKA*?.m@[@/FJ", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-22));
      rawVariable0.getYear();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("8s74eP@}!Z");
      derivedVariable1.getCleaningDescription();
      assertEquals("8s74eP@}!Z", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("UNABLE_TO_DELETE_CLEANING_STATE");
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.isCleaned();
      derivedVariable0.getYear();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", derivedVariable0.getYear());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "hY";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("X-{*NZ^E<sCt;SS'=[", "X-{*NZ^E<sCt;SS'=[");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("zX*'pK;+`}+m+;");
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("=message=");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("0GLxSs:H ab");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.createVariableSummary();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCodeBookNumber();
      assertEquals("0GLxSs:H ab", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(147);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "Xg^$n\"@U[{/";
      String string0 = derivedVariable0.getName();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.8967624021371803
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("ibmJP.{{V", "P8h6#h2QIY!t%");
      user0.setFirstName("P8h6#h2QIY!t%");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.689067872995674
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertNull(macawChangeEvent0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setCleaningDescription("qO{L&h5DIry_m]<L5w4");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      assertEquals("qO{L&h5DIry_m]<L5w4", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setColumnEnd(")Tng%h`$qYs?;QeP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("^%P\"ACl#:=k|");
      derivedVariable0.getIdentifier();
      derivedVariable0.setForm(")Tng%h`$qYs?;QeP");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable0.setCleaningDescription("");
      User user0 = new User("", "");
      try { 
        User.checkValidEmail("ontologyTerm.ontologyName.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"ontologyTerm.ontologyName.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.setCoded(true);
      ontologyTerm1.clone();
      derivedVariable0.setIdentifier((-1543));
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Yg\"0n8*EE3C");
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("-1543", derivedVariable0.getDisplayItemIdentifier());
      assertEquals((-1543), int0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setFilePath((String) null);
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.432811072189696
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart(">To3Y#{J Wt\"/V*;<|m");
      rawVariable0.clone();
      assertEquals(">To3Y#{J Wt\"/V*;<|m", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("JSd,TX");
      rawVariable0.setYear("variable.cleaningDescription.label");
      rawVariable0.clone();
      assertEquals("JSd,TX", rawVariable0.getAlias());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.year.label");
      derivedVariable0.clone();
      assertEquals("variable.year.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.53575050789886
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("a7&!V0");
      arrayList0.add(supportingDocument1);
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.notes = ":YW2((Z.2";
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis(11L);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("U");
      rawVariable0.setLabel("U");
      User user0 = new User();
      user0.setPostCode("U");
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("U", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("9>CoLDUzg[nbKL!xST");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.columnEnd = "variable.category.label";
      derivedVariable0.getForm();
      assertEquals("9>CoLDUzg[nbKL!xST", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.notes = "@D";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = rawVariable0.getForm();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("a");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      rawVariable0.getSupportingDocuments();
      rawVariable1.getForm();
      assertEquals("a", rawVariable1.getForm());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = null;
      derivedVariable1.setCodeBookNumber("variable.cleaningDescription.label");
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getColumnEnd();
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "e";
      derivedVariable0.columnEnd = "\"!O";
      derivedVariable0.getLabel();
      derivedVariable0.getColumnStart();
      derivedVariable0.setForm("\"!O");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      User user0 = new User();
      user0.setPostCode("UNABLE_TO_DELETE_CLEANING_STATE");
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setYear((String) null);
      valueLabel0.setValue("UNABLE_TO_DELETE_CLEANING_STATE");
      rawVariable0.removeValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      User user0 = new User("supportingDocument.fileName.saveChanges", "supportingDocument.fileName.saveChanges");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("E;_Vn[OJ0w$7");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("E;_Vn[OJ0w$7", derivedVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.clone();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }
}
