/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 01 23:36:48 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8934704940373086
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_N<=uwsYO");
      Token token0 = xPathLexer0.dots();
      assertEquals("?", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("N", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(8, token3.getTokenType());
      assertEquals("<=", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("u", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("w", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0.9QV/.W5xeD+");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".9", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8946272989421615
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".31E+tH-e}'#-P##>N[");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(".31E+tH-e}'#-P##>N[");
      xPathLexer1.notEquals();
      Token token2 = xPathLexer2.notEquals();
      assertEquals(".3", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("E", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.389496628388264
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8$D|o");
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1497));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3312525597424907
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.consume((-407));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9%i)M`eFRf8|o0H");
      xPathLexer0.div();
      xPathLexer0.setXPath(">9%i)M`eFRf8|o0H");
      xPathLexer0.consume((-190));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h);-mwxm#D<ScMlF^");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("..", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9818010597258895
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.currentPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.consume((-877));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.consume((-279));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.981309527485843
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-2750));
      xPathLexer0.leftParen();
      xPathLexer0.currentPosition();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<=uwsYO");
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("?_<=uwsYO");
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("u");
      xPathLexer2.consume((-9));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer2.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.893763041393412
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("%", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("Q", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("m", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("n", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1120));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">9%i)M`eFRf8|o0H");
      xPathLexer0.comma();
      xPathLexer0.setXPath(">9%i)M`eFRf8|o0H");
      xPathLexer0.consume((-190));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.consume((-799));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1745787807245052
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<=uwsYO");
      Token token0 = xPathLexer0.dots();
      assertEquals("?", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(8, token2.getTokenType());
      assertEquals("<=", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3007));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.consume((-1120));
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-250));
      xPathLexer0.setXPath(") (");
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4439493647415875
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Bidbugn+rEhU%P");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("Bidbugn", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("/Bidbugn+rEhU%P");
      xPathLexer1.mod();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(11, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(".", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      char char0 = xPathLexer0.LA(45);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<=uwsYO");
      xPathLexer0.plus();
      xPathLexer0.consume((-2248));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/@?bb%T!x3@yL-$8.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.695183761009689
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GHE@~4Ta/J}");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.dots();
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.slashes();
      token1.toString();
      token0.toString();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierStartChar('F');
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.mod();
      assertNull(token3);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".M/\"/R");
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      token0.toString();
      token1.toString();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.and();
      assertNull(token2);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.892012919857194
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=fa_");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("_", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.358013495054147
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8$D|o");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SaK<p*;=~`6l");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("SaK", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      xPathLexer0.consume((-1365));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1187));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|`MG1Y4.}@2.");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(17, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M,HeN^M,~:^");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.consume((-1344));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.2139032793219824
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<=uwsYO");
      Token token0 = xPathLexer0.dots();
      assertEquals("?", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifier();
      assertEquals("_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("<", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("=", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("u", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Zvu\"3vDy:yLy:&KC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Zvu", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3262325512359132
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8$D|o");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.715371753698889
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn.>!1^9");
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("l<iVj sZChej3xaz3K");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M)9C4&-_Zk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("M", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1744606193160212
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<>uwsYO");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(9, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5529761728466513
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mao{A|V/F(~");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("ao", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Mao{A|V/F(~");
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("M", token2.getTokenText());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.at();
      assertEquals("a", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("A|V/F(~", token4.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(2);
      assertEquals('4', char0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6794773025512693
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GHE@~4Ta/J}");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.dots();
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token0.toString();
      xPathLexer0.slashes();
      token1.toString();
      token0.toString();
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.and();
      assertNull(token3);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6526228862746228
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!@xP)");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.setXPath("b!@xP)");
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pst?TWkhOaIOxDHK");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("pst", token0.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UC");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("UC", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s;+FhC)a");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6730433258212343
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(".4IQ9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("2", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("?l\"}", token3.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer("Em&IzZ*$WP+jA8");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("Em", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h9;Ox>yb;0");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("h9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      xPathLexer0.consume((-1365));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5164655865466552
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8$D|o");
      Token token0 = xPathLexer0.pipe();
      assertEquals(".", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("8", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("$", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("D", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.577049197182228
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X ");
      XPathLexer xPathLexer1 = new XPathLexer("X ");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.identifier();
      assertEquals("", token0.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer2.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.793494183903136
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.consume((-3153));
      // Undeclared exception!
      try { 
        xPathLexer2.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.285265962734548
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&}[Ls+");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.285265962734548
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o9X sf.h4pcoZy");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("N", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6180217189067758
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mao{A|V/F(~");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("ao", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Mao{A|V/F(~");
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("M", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.at();
      assertEquals("a", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("A", token5.getTokenText());
      
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("o", token6.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.2524008955311978
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<=uwsYO");
      Token token0 = xPathLexer0.dots();
      assertEquals("?", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("<", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(21, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("u", token4.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.2152775783534717
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.comma();
      assertEquals("o", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("w", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("rken.saxpath.Token", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.3791261106325359
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn.1^9");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals("n", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(".", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.colon();
      assertEquals("^", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("1", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6kBcaL");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`F[Pov9fGe,NjcDKR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`F[Pov9fGe,NjcDKR", token0.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y^9FO=af0rzEW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F[8r(g+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4837471720329736
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn.>!1^9");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5854384340783814
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:?l\"}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("..", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("4IQ9", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("?l\"}", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("?l", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("\"", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.3810565029563877
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn.1^9");
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.164860311668979
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#;-R-|Re3SR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#;-R-|Re3SR", token0.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.179558795129703
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals("m.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("erken.saxpath.Token", token3.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.7985850929940455
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">74TM%,R");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer1.or();
      assertNull(token1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.215474080892784
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<>uwsYO");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("?_", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(">", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("uwsYO", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.080214803398951
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn.>!1^9");
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.6483818026358241
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h9;Ox>yb;0");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("O", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("x>", token3.getTokenText());
      
      xPathLexer0.setXPath("b!@xP)");
      XPathLexer xPathLexer1 = new XPathLexer("awl[");
      xPathLexer1.not();
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      Token token4 = xPathLexer0.plus();
      assertEquals("b", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(23, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.4419731411812973
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'I-QH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C|Twb7 IeB}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.1363546269125555
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.equals();
      xPathLexer0.consume((-3447));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.4409499740742768
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      XPathLexer xPathLexer1 = new XPathLexer("R.G?JTuSCyi@");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("R.G", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0300151811550253
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">:\"!8T0W-_ykN");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(">:", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g~!bri8qyu<q;^^OWhD");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.576374057017259
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<kA0's~niQhDQB<J");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("kA0", token2.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i\"S(LAn#P)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("i", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W!^Sos\"\"'W?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.6146627609426139
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:?l\"}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("..", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(18, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("?l", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("\"", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("}", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">7TM%1R");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(">", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(9, token0.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j(I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("j", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*)LnY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+N9=}QW+8ev*&nC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q&!Yq!z>qO");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8350158661409164
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5^t+YRH:&LW8!r");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.setXPath("ck.J)D&hD`Wv8GB");
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      String string0 = token2.toString();
      assertEquals("[ (-1) (k.J)D&hD`Wv8GB)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("3+lz^THG%bM&8EZ'4");
      Token token3 = xPathLexer1.dots();
      assertEquals("3", token3.getTokenText());
      
      xPathLexer1.setPreviousToken(token2);
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z$!*^&\"&gi$E~y/bZY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8366292442248826
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5^t+YRH:&LW8!r");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("ck.J)D&hD`Wv8GB");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("3+lz^THG%bM&8EZ'4");
      xPathLexer1.dots();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.289168795652925
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ori3-YRj>-");
      xPathLexer0.mod();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.7152801471490207
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      Token token0 = xPathLexer0.slashes();
      String string0 = token0.toString();
      assertEquals("[ (11) (.)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.number();
      assertEquals(31, token1.getTokenType());
      assertEquals(".4", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Q9", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(":", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("2", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K/7VGQ<fJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("K", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L:)CrS Z']n");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.2637055035606886
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6809657321918758
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!@xP)");
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("x", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      xPathLexer0.setXPath("b!@xP)");
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("!", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tWu]:G[;Zj-x:>y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("tWu", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";;6/I<~F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";;6/I<~F", token0.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2402261125405545
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("O", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("H1", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(";", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.2536349555887873
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<=uwsYO");
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5526208879843242
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mao{A|V/F(~");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("Mao{A|V/F(~");
      xPathLexer1.leftBracket();
      xPathLexer1.operatorName();
      xPathLexer1.at();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.8153417190566197
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d\"LC&7,P8ldZg@15\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(27, token1.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.setXPath("b!@xP)");
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("b!", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("@", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("x", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("P", token7.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5<.bB`jV6\"");
      Token token0 = xPathLexer0.not();
      assertEquals("5", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      XPathLexer xPathLexer1 = new XPathLexer("f+>*hCPT fU]cSO");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("f", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.6630441778283886
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("IQ9:2?l\"}", token2.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b!@xP)");
      xPathLexer0.setXPath("x}HG 2VX\u0002XGY>$G`/");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("x", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.237221060835172
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token1 = xPathLexer0.doubleColon();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (19) (_)", string0);
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("R", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("'", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.8587989435298897
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("n", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.setXPath("d7@(?z|O`hkud5Dsl`");
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("d7@(?z|O`hkud5Dsl`", token7.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.9106897436760184
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      xPathLexer0.or();
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (19) (_)");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.or();
      String string0 = token0.toString();
      assertEquals("[ (19) (_)", string0);
      
      xPathLexer1.setXPath("@$WwJ.9{U<j3");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.and();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('6');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.9800967547265824
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn>!1H3");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("4YZ$\";e+0l\"h1S");
      xPathLexer3.setPreviousToken(token1);
      xPathLexer3.identifierOrOperatorName();
      Token token2 = xPathLexer1.or();
      assertNull(token2);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<Tm");
      Token token0 = xPathLexer0.dots();
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")[7yE=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.slashes();
      assertEquals("[", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8484462233154804
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5^t+YRH:&LW8!r");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.setXPath("ck.J)D&hD`Wv8GB");
      Token token2 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("3+lz^THG%bM&8EZ'4");
      xPathLexer1.setPreviousToken(token2);
      assertEquals("ck.J)D&hD`Wv8GB", token2.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer0.comma();
      assertEquals("c", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("08mnGyHkr");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("08", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";Y<GgpY-l K$|7S");
      xPathLexer0.colon();
      xPathLexer0.consume((-948));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      boolean boolean0 = xPathLexer0.isIdentifierChar('=');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.9518778643166765
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("'", token2.getTokenText());
      
      token0.toString();
      token0.toString();
      Token token3 = xPathLexer0.slashes();
      assertEquals("(", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (_)", string0);
      
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("^", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("K", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      xPathLexer0.getXPath();
      xPathLexer0.getXPath();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("ox", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.setPreviousToken(token7);
      assertEquals(17, token7.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5524334172766223
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mao{A|V/F(~");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("o", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("{", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Mao{A|V/F(~");
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("M", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.at();
      assertEquals("a", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.6940799232481694
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("q bFmdP");
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer1.dots();
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer2.mod();
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer2.mod();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5607417078438988
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1187));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VqeT~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("VqeT", token0.getTokenText());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G^ds#@kwbV%1])e;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.3473358766385177
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn.1^9");
      Token token0 = xPathLexer0.dots();
      assertEquals("w", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("n", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(".1", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.5762968875917855
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.number();
      xPathLexer1.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.nextToken();
      xPathLexer2.nextToken();
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.438867895534186
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-721));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1007));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J#\u0001V");
      char char0 = xPathLexer0.LA(1);
      assertEquals('J', char0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v:UQHmv:|,pD*wtu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("v", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.8413695403845973
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d\"LC&7,P8ldZg@15\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNotNull(token1);
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.setXPath("b!@xP)");
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("b!", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(16, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("x", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("P", token8.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oi3R'-");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.4743653757795783
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.4039450958006858
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("){9l");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.setXPath("dvB@Tc!a*VPN[");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5853998197075891
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mao{A|V/F(~");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("ao", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("{", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Mao{A|V/F(~");
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("M", token2.getTokenText());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("a", token3.getTokenText());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0967099341907687
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">:\"!8T0W-_ykN");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(":\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('W');
      assertTrue(boolean0);
      
      char char0 = xPathLexer0.LA(93);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.7888160373245765
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d\"LC&7,P8ldZg@15\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(27, token1.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.setXPath("b!@xP)");
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertNotSame(token4, token1);
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.dots();
      assertEquals("b", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("!@", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = "WQ@5OxH";
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('=');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.1276595560285767
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.1347190102300564
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.whitespace();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.123963796252962
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qa92DrMF");
      boolean boolean0 = xPathLexer0.isIdentifierChar('O');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7RSw<9Ry");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.9804369480107322
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%Qmn)5l&(H!", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("%", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.095792576221817
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<>uwsYO");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("_", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.1997075503423893
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".4", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("IQ9:2?l\"}", token1.getTokenText());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.5857467917096175
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mao{A|V/F(~");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("M", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Mao{A|V/F(~");
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("M", token3.getTokenText());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.at();
      assertEquals("a", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("A|V/F(~", token5.getTokenText());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9846077523801464
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Bfnr;8d*FkMx");
      XPathLexer xPathLexer1 = new XPathLexer("h9;Ox>yb;0");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer1.dots();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("O", token3.getTokenText());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.9841237838381016
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";.h\"#]O77EF");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(";", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("h", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0598602245769473
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("%", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.0134740842910632
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("m", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.2022007155403414
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      assertEquals("O", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("H1", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.9024529394855421
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-671));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.1163737657376314
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wn.>!1^9");
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.1435183759219019
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("om.werken.saxpath.Token", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.408107588686102
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.0089233607558248
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}HG 2VX\u0002XGY>$G`/");
      Token token0 = xPathLexer0.equals();
      assertEquals("x", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("}HG 2VX\u0002XGY>$G`/", token1.getTokenText());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.202980442635858
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.9720840506344871
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}HG 2VX\u0002XGY>$G`/");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.9821786025825756
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("%", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("Q", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.287864246560621
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?_<=uwsYO");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("=", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("u", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("w", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.4334412607237217
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      xPathLexer0.or();
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (19) (_)", string0);
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("'", token2.getTokenText());
      
      xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.dollar();
      assertEquals("y", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("^", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      xPathLexer0.getXPath();
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(6, token6.getTokenType());
      assertEquals("-", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("o", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token5);
      assertEquals(17, token5.getTokenType());
      assertEquals("K", token5.getTokenText());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.1234798277109173
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:QH1;0)(BGuEAJC");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.mod();
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.065555948950615
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">:\"!8T0W-_ykN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.consume(12);
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=1.1184654904661608
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_R'(x7jy^K-ox");
      xPathLexer0.setXPath("_R'(x7jy^K-ox");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer(">7TM%1R");
      xPathLexer2.minus();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.05547593588933
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".M/\"/R");
      xPathLexer0.consume((-1578));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 184
  /*Coverage entropy=0.9819344023383753
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%Qmn)5l&(H!", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("%", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 185
  /*Coverage entropy=0.9451061988128702
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 186
  /*Coverage entropy=0.9429335738869369
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%Qmn)5l&(H!", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("%", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=1.023446048305984
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".iYM;s#eXy");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("M", token5.getTokenText());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.9724596374889471
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^$5Q~og6UO|gBJ` o-");
      xPathLexer0.setXPath("^$5Q~og6UO|gBJ` o-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^$5Q~og6UO|gBJ` o-", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=0.9819344023383753
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("Q", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=1.0164244200304302
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WQ@5OxH");
      Token token0 = xPathLexer0.dots();
      assertEquals("W", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("@", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=0.9452479422572357
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 192
  /*Coverage entropy=0.9877962214782028
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".%Qmn)5l&(H!");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=1.0632388183169867
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Bfnr;8d*FkMx");
      XPathLexer xPathLexer1 = new XPathLexer("h9;Ox>yb;0");
      Token token0 = xPathLexer0.plus();
      assertEquals(".", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Bfnr", token2.getTokenText());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals(";", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=0.9024529394855421
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("..4IQ9:2?l\"}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(14, token0.getTokenType());
      assertEquals("..", token0.getTokenText());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('.', char0);
  }
}
