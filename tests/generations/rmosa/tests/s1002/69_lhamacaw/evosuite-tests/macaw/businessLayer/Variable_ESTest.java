/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 00:38:12 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setCategory((String) null);
      User user1 = new User(",z[ZdUhKp+*c`5*T!", (String) null);
      derivedVariable0.getCategory();
      User user2 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setName((String) null);
      derivedVariable0.getName();
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.18676974947259
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User((String) null, (String) null);
      user0.setIdentifier(177);
      User user1 = new User(",=v2", ",=v2");
      user1.setAffiliation("EUFIK");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user0.setAffiliation("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setIdentifier((-1164316475));
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("-1164316475", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.895173285276612
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "a7CME,\"uW";
      rawVariable0.setNotes("");
      derivedVariable0.setFilePath("");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.getCodeBookNumber();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable1.clone();
      derivedVariable1.getValueLabels();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6692819005233845
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription("");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument0.getDisplayName();
      supportingDocument0.setIdentifier((-727));
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getQuestionNumber();
      rawVariable0.clone();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.containsAll(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      User user0 = new User("}V", "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      assertFalse(rawVariable2.isCleaned());
      
      boolean boolean0 = rawVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setAffiliation(",t.`dMge");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      System.setCurrentTimeMillis(0L);
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      derivedVariable0.setCleaningStatus(",t.`dMge");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      user0.setAffiliation(",t.`dMge");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals(";", derivedVariable0.getName());
      
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAvailability();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("UNABLE_TO_GET_ALIAS_FILE_PATH_IDENTIFIER");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      rawVariable0.setCleaningStatus((String) null);
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      user0.setAffiliation(",t.`dMge");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.2359395144771375
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setTerm("variable.alternativeVariable.label");
      ontologyTerm0.setNameSpace("variable.alternativeVariable.label");
      ontologyTerm0.setOntologyName("variable.alternativeVariable.label");
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNameSpace("variable.alternativeVariable.label");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.clone();
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.trimToSize();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.setAvailability("");
      arrayList0.add(valueLabel1);
      derivedVariable0.getIdentifier();
      rawVariable0.getAvailability();
      rawVariable0.getName();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.clone();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      Variable.validateFields(derivedVariable0);
      rawVariable0.getColumnEnd();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList2);
      User user0 = new User("", "");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.add(valueLabel0);
      arrayList0.addAll((Collection<? extends ValueLabel>) arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier(4);
      arrayList0.add(valueLabel1);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setValueLabels(arrayList0);
      ontologyTerm0.setNameSpace("");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.getValueLabels();
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = null;
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      String string0 = derivedVariable1.getYear();
      assertNotNull(string0);
      
      String string1 = derivedVariable1.getAvailability();
      assertEquals("Unknown", string1);
      
      derivedVariable1.getSourceVariables();
      derivedVariable1.getDisplayName();
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      rawVariable0.setCoded(true);
      user0.setAffiliation(",t.`dMge");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals(";", derivedVariable0.getName());
      
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAvailability();
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setCleaningStatus("general.error.blankField");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      User user0 = new User();
      derivedVariable0.setAvailability("general.error.blankField");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.columnStart = null;
      user0.setStatus("general.error.blankField");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable1.getSourceVariables();
      arrayList0.add(supportingDocument0);
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.585160100417138
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setIsNewRecord(false);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.getOntologyTerms();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      derivedVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.containsAll(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList2);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      rawVariable0.setCodeBookNumber("general.fieldValue.unknown");
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.clone();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("-");
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.7140214559361593
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getYear();
      rawVariable0.getFilePath();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setColumnEnd((String) null);
      rawVariable0.setCategory("");
      derivedVariable0.getAvailability();
      derivedVariable0.getCleaningDescription();
      rawVariable0.createVariableSummary();
      rawVariable0.getCleaningDescription();
      rawVariable0.getCleaningStatus();
      rawVariable0.setIdentifier((-2705));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getIdentifier();
      assertEquals("-2705", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.getSupportingDocuments();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = null;
      rawVariable0.setCleaningStatus((String) null);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("/sX'X.^z(fRk>k^h");
      User user0 = new User("kkr<NL(Af^gqQ-B", "P%]pY=Sd");
      user0.setAffiliation("/sX'X.^z(fRk>k^h");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User("general.fieldValue.unknown", "general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "general.fieldValue.unknown";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.7885904891927353
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "ALIAS_FILE_PATH";
      derivedVariable0.setAlias("ALIAS_FILE_PATH");
      derivedVariable0.getYear();
      derivedVariable0.setCleaningDescription("ALIAS_FILE_PATH");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      System.setCurrentTimeMillis(1230L);
      derivedVariable0.isNewRecord();
      derivedVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("ALIAS_FILE_PATH", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=4.2821320207495415
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      User user0 = new User("R&", "uT:)FxA[B");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setColumnEnd("R&");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList0.clone();
      derivedVariable0.setAlias("R&");
      arrayList0.remove((Object) "R&");
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getColumnEnd();
      user0.clone();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.clone();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList1);
      derivedVariable1.codeBookNumber = "uT:)FxA[B";
      derivedVariable0.getAlias();
      derivedVariable1.getQuestionNumber();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCategory();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("uT:)FxA[B", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("3+&VD;0");
      rawVariable0.setYear("<l=WVfi6+R'j?:");
      rawVariable0.columnEnd = "_h$^oVpv%*_T|";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getColumnEnd();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("3+&VD;0", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("7Nvb;`COKx&|<fZP");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setCategory((String) null);
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.325750657489052
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = null;
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.removeAll(linkedList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable1.setCodeBookNumber("variable.codeBookNumber.label");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("Bb{[}mr(\"", "Unknown");
      user0.setUserID("0");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.864979124671774
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "e^w;x-G_U";
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setIsNewRecord(false);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      user0.setStatus("'af");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("R&");
      User user1 = new User("w8{hNt5", "kkr<NL(Af^gqQ-B");
      user1.setAffiliation("utJOo(quge,341");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getForm();
      assertEquals("e^w;x-G_U", derivedVariable0.getForm());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setName("]");
      User user1 = new User(",z[ZdUhKp+*c`5*T!", (String) null);
      User user2 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.containsAll(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User("j[J]&pem8@90n\"<", "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setIdentifier((-1908874351));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      assertEquals("-1908874351", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("general.fieldValue.blank");
      rawVariable0.setAlternativeVariable((Variable) null);
      rawVariable0.getIdentifier();
      rawVariable0.getFilePath();
      rawVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      assertEquals("general.fieldValue.blank", rawVariable0.getName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      derivedVariable0.setCategory((String) null);
      User user0 = new User(",z[ZdUhKp+*c`5*T!", "");
      user0.setIdentifier((-1841781662));
      user0.setAffiliation((String) null);
      user0.setAffiliation((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6241115320620105
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      derivedVariable0.setCategory((String) null);
      String string0 = "";
      User user0 = new User(",z[ZdUhKp+*c`5*T!", "");
      user0.setIdentifier((-1841781662));
      user0.setAffiliation((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(148);
      rawVariable0.getAvailability();
      User user0 = new User();
      user0.setAddressLine2("Unknown");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("148", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      derivedVariable0.createVariableSummary();
      derivedVariable0.setFilePath(")#Uh6{*t3tzc!zP;A");
      derivedVariable0.codeBookNumber = "$qnWI2d8";
      derivedVariable0.setNotes("EDIT");
      derivedVariable0.codeBookNumber = "$qnWI2d8";
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getDisplayName();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) null);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setQuestionNumber("-!g2F}%A9'o3C");
      rawVariable0.getFilePath();
      assertEquals("-!g2F}%A9'o3C", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("bgCpM:r7<vY-3fC]:");
      derivedVariable0.getFilePath();
      assertEquals("bgCpM:r7<vY-3fC]:", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "-!g2F}%A9'J3C");
      user0.setPhone("-!g2F}%A9'J3C");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.notes = null;
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.323009262423563
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-14));
      ontologyTerm0.setTerm("e^w;x-G_U");
      ontologyTerm0.setOntologyName("<=fKydf[4_U;");
      rawVariable0.setForm((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.getYear();
      rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setQuestionNumber("]");
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.getForm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getDisplayName();
      derivedVariable0.getCategory();
      rawVariable0.getLabel();
      derivedVariable0.getColumnEnd();
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable1.setOntologyTerms(arrayList1);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.7137211856929406
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("]");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      rawVariable0.getOntologyTerms();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList3);
      User user1 = new User();
      User user2 = new User("]", "Zf4kj%4G");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("]", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("\"2uG");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("\"2uG");
      rawVariable0.setForm("]");
      User user0 = new User("W`D", "W`D");
      user0.setLastName(";");
      user0.setUserID("\"2uG");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.codeBookNumber = "]";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getFilePath();
      assertEquals("]", rawVariable0.getForm());
      
      RawVariable rawVariable1 = new RawVariable();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAvailability("variable.codeBookNumber.label");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.749621961750297
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.questionNumber = "=619Upqm+).O_IVp";
      valueLabel0.setValue("macaw.businessLayer.Variable");
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getNotes();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("=619Upqm+).O_IVp", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      rawVariable1.setSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("z:Agvu+oUuU7B[M");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(true);
      rawVariable0.hasSameDisplayName(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList0);
      rawVariable0.isNewRecord();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList1);
      rawVariable0.isCoded();
      rawVariable1.createVariableSummary();
      assertFalse(rawVariable1.isCoded());
      
      rawVariable0.getCleaningStatus();
      rawVariable0.getColumnStart();
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getLabel();
      String string0 = null;
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.getValueLabels();
      System.setCurrentTimeMillis(3379L);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningStatus();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList0.containsAll(linkedList0);
      derivedVariable0.isCoded();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("C;gc{&P={w");
      Variable.validateFields(derivedVariable0);
      assertEquals("C;gc{&P={w", derivedVariable0.getDisplayName());
      assertEquals("C;gc{&P={w", derivedVariable0.getName());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      User user1 = new User(",z[ZdUhKp+*c`5*T!", (String) null);
      User user2 = new User();
      rawVariable0.setYear("R&");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.964915952739972
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "e^w;x-G_U";
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCategory("e^w;x-G_U");
      derivedVariable0.setIsNewRecord(false);
      rawVariable0.setLabel("e^w;x-G_U");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable1.getNotes();
      User user2 = new User("Td", "s8SR+Q~vKB>Ae8:");
      user2.setCounty("e^w;x-G_U");
      user2.setEmail("e^w;x-G_U");
      User user3 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      derivedVariable1.getNotes();
      derivedVariable0.getLabel();
      assertEquals("e^w;x-G_U", derivedVariable0.getForm());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      User user0 = new User("lb", (String) null);
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      assertEquals(";", derivedVariable0.getName());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setNotes("csEZ_P=UONR?eF5#s");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertEquals("csEZ_P=UONR?eF5#s", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.433327868055329
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("0");
      User user0 = new User("GL<8", "Nb?zM@X/KtMto&");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("Nb?zM@X/KtMto&");
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.6703615226556385
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.removeValueLabel(valueLabel0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.add((OntologyTerm) null);
      arrayList0.sort(comparator0);
      arrayList0.add((OntologyTerm) null);
      rawVariable0.setYear("macaw.businessLayer.Variable");
      rawVariable0.setIdentifier((-1));
      rawVariable0.setAlias((String) null);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getAlias();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1952257859));
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user2 = new User("Td", "s8SR+Q~vKB>Ae8:");
      User user3 = new User();
      assertEquals("", user3.getPostCode());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.setQuestionNumber("+;H!K");
      derivedVariable0.setNotes("4.M5");
      derivedVariable0.getYear();
      assertEquals("+;H!K", derivedVariable0.getQuestionNumber());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList1);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.4925064671023778
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      rawVariable0.setAlias("variable.isCleaned.saveChanges.changedToNotClean");
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", "UNABLE_TO_GET_ALL_SUPPORTING_DOCUMENTS");
      user0.setAffiliation("UNABLE_TO_GET_ORIGINAL_SUPPORTING_DOCUMENT");
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getAlias());
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getName();
      derivedVariable0.setColumnStart("");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.getNotes();
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      String string0 = derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("]");
      User user1 = new User(",z[ZdUhKp+*c`5*T!", (String) null);
      rawVariable0.createVariableSummary();
      assertEquals("]", rawVariable0.getLabel());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      derivedVariable0.setName(";Jit[1[5e0Zd3o!rBP");
      User user0 = new User();
      derivedVariable0.setNotes(";Jit[1[5e0Zd3o!rBP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(";Jit[1[5e0Zd3o!rBP", derivedVariable0.getNotes());
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.624883732834211
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setLabel("]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setLabel("variable.cleaningDescription.label");
      User user1 = new User(",z[ZdUhKp+*c`5*T!", (String) null);
      User user2 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.questionNumber = "DUPLICATE_CLEANING_STATE";
      String string0 = rawVariable0.getNotes();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.containsAll(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.002865870607577
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("general.fieldValue.unknown");
      arrayList0.containsAll(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User("j[J]&pem8@90n\"<", "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable2.getAlternativeVariable();
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCoded());
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.3408726039793364
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.containsAll(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      User user0 = new User("j[J]&pem8@90n\"<", "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.columnStart = "j[J]&pem8@90n\"<";
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      assertEquals(1, arrayList2.size());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertNotNull(macawChangeEvent0);
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable2.isCleaned());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "7cRl,PM FLA^4";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.codeBookNumber = null;
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User((String) null, "gk2z8$$*705|\"-2;");
      user0.setAffiliation("HSLJ;");
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setColumnEnd("variable.year.label");
      arrayList1.trimToSize();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals(0, ontologyTerm0.getIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.setNotes("4.M5");
      derivedVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2147483645);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.containsAll(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User("b2v(v", "NO_ONTOLOGY_TERM_FILTER");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable2.setAlternativeVariable(rawVariable0);
      derivedVariable0.codeBookNumber = "NO_ONTOLOGY_TERM_FILTER";
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getName());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.326171090535089
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.questionNumber = null;
      User user0 = new User();
      user0.setAffiliation(",t.`dMge");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "DUPLICATE_CLEANING_STATE";
      String string0 = rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "INVALID_CATEGORY";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.addSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setCodeBookNumber("x4 XSU0{ZT[|A%@[>7");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addOntologyTerms(arrayList1);
      derivedVariable0.getAlias();
      assertEquals("x4 XSU0{ZT[|A%@[>7", derivedVariable0.getCodeBookNumber());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeOntologyTerms(arrayList1);
      String string0 = derivedVariable1.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "variable.cleaningDescription.label";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      String string0 = ";";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      String string1 = ",t.\\`dMge";
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER");
      derivedVariable0.getName();
      assertEquals("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setNotes("csEZ_nP=UONR?eF5#(s");
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getDisplayName();
      derivedVariable0.getCodeBookNumber();
      assertEquals("csEZ_nP=UONR?eF5#(s", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis((-17L));
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "variable.alternativeVariable.label";
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.parallelStream();
      derivedVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = "BSAjn;c\"1";
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.notes = "o?h`{*_W";
      derivedVariable0.getName();
      derivedVariable0.setColumnStart("BSAjn;c\"1");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.validateFields(valueLabel0);
      derivedVariable1.setLabel("");
      derivedVariable0.getNotes();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("Tt'}U?K");
      rawVariable0.getCodeBookNumber();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "x{P";
      derivedVariable0.removeSourceVariable(derivedVariable1);
      String string0 = derivedVariable1.getYear();
      assertEquals("", string0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.7468629062504872
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      user0.setAffiliation(",t.`dMge");
      rawVariable0.setColumnEnd("I");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setColumnEnd("yZC");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAvailability();
      assertEquals("yZC", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.435349333780578
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("(");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("(", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "(y]4$W#aF";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.columnEnd = "(y]4$W#aF";
      rawVariable0.getForm();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("F(`n|yh<?7MO>[)E~3");
      System.setCurrentTimeMillis((-1984L));
      rawVariable0.getAlias();
      assertEquals("F(`n|yh<?7MO>[)E~3", rawVariable0.getForm());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "W";
      derivedVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "(";
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.setCleaningDescription("NON_EXISTENT_AVAILABILITY_STATE");
      derivedVariable0.createVariableSummary();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable1.getCleaningDescription();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("NON_EXISTENT_AVAILABILITY_STATE", derivedVariable1.getCleaningDescription());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "NON_EXISTENT_SUPPORTING_DOCUMENT";
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("M_0n15J~");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setAvailability("M_0n15J~");
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.isCleaned();
      derivedVariable0.getYear();
      assertEquals("M_0n15J~", derivedVariable0.getYear());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("!!EEg]");
      rawVariable0.getLabel();
      assertEquals("!!EEg]", rawVariable0.getLabel());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCodeBookNumber("eCRMQ-llp=Q#JW}");
      assertEquals("eCRMQ-llp=Q#JW}", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      User user0 = new User("nF]I$ulQqszY", "nF]I$ulQqszY");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "INVALID_CLEANING_STATE";
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "variable.questionNumber.label";
      derivedVariable0.setQuestionNumber("aU&>*x1V");
      derivedVariable0.columnStart = "aU&>*x1V";
      derivedVariable0.setCleaned(false);
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "fnb@SAB$";
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCategory();
      assertEquals("fnb@SAB$", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("Ze");
      rawVariable0.getForm();
      rawVariable0.getAvailability();
      assertEquals("Ze", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setCleaningDescription("e^w;x-G_U");
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setColumnStart("6h&rw3a+'gWSTV(");
      derivedVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        arrayList1.removeIf((Predicate<? super OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart(",z[ZdUhKp+*c`5*T!");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals(",z[ZdUhKp+*c`5*T!", rawVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("tc8s");
      System.setCurrentTimeMillis(1L);
      rawVariable0.getColumnStart();
      assertEquals("tc8s", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.7424353287678813
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      user0.setAffiliation(",t.`dMge");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("X0'");
      derivedVariable0.notes = "M}-FFqyt$_-yn";
      derivedVariable0.getCleaningDescription();
      assertEquals("X0'", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("NON_EXISTENT_CLEANING_STATE");
      rawVariable0.getYear();
      assertEquals("NON_EXISTENT_CLEANING_STATE", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName((String) null);
      DerivedVariable derivedVariable1 = null;
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("|o");
      rawVariable0.createVariableSummary();
      assertEquals("|o", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = ".";
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("", string0);
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("MISSING_DISPLAY_LIST_SELECTOR");
      rawVariable0.clone();
      User user0 = new User("MISSING_DISPLAY_LIST_SELECTOR", "MISSING_DISPLAY_LIST_SELECTOR");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "general.fieldValue.unknown";
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "variable.alternativeVariable.label";
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "general.fieldValue.unknown";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("general.fieldValue.unknown", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getAlias());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("variable.year.label");
      rawVariable0.clone();
      assertEquals("variable.year.label", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.5822705235337526
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.setYear("ocfpP(vy");
      derivedVariable0.setCoded(true);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm0.clone();
      ontologyTerm0.setDescription("8[KE/@fFXn^Raw");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "UNABLE_TO_CHECK_USER_EXISTS";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("UNABLE_TO_CHECK_USER_EXISTS", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.5921700154019467
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setNotes("gk2z8$$*705|\"-2;");
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      user0.setAffiliation(",t.`dMge");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAvailability();
      derivedVariable0.clone();
      assertEquals("gk2z8$$*705|\"-2;", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5347185161547943
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      User user0 = new User();
      rawVariable0.setLabel("]");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.591950343810975
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      user0.setAffiliation(",t.`dMge");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAvailability();
      derivedVariable0.clone();
      assertEquals(";", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("#p@y0f#8HmdmwB", "#p@y0f#8HmdmwB");
      User user1 = new User();
      User user2 = new User((String) null, "#p@y0f#8HmdmwB");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.687787510885328
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(";");
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      user0.setAffiliation(",t.`dMge");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals(";", derivedVariable0.getDisplayName());
      
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAvailability();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "supportingDocument.fileName.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getName();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.3210182221049966
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("variable.cleaningDescription.label", "gk2z8$$*705|\"-2;");
      user0.setAffiliation(",t.`dMge");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("gk2z8$$*705|\"-2;");
      System.setCurrentTimeMillis(0L);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("gk2z8$$*705|\"-2;", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCleaned());
      assertNull(string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }
}
