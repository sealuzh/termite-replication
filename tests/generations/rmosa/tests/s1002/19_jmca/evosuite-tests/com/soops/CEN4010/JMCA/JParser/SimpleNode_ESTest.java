/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 01 23:30:02 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 84;
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(3257);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("<<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.jjtClose();
      simpleNode0.setIdentifier("V");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("V", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("Literal : V : {", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier(">N");
      simpleNode0.dump("-Cf", stringWriter0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter1 = new StringWriter(415);
      char[] charArray0 = new char[6];
      charArray0[0] = '1';
      charArray0[1] = '9';
      charArray0[2] = 'w';
      charArray0[3] = 'y';
      charArray0[4] = '\\';
      stringWriter1.flush();
      charArray0[5] = '}';
      stringWriter1.write(charArray0, 3, 3);
      simpleNode0.setIdentifier(">");
      simpleNode0.dump("-Cf", stringWriter1);
      assertEquals("y\\}<Modifiers>\n  <identifier>>N</identifier>\n  <identifier>*gt</identifier>\n</Modifiers>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(40);
      StringWriter stringWriter0 = new StringWriter(40);
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump(" y", stringWriter0);
      assertEquals("<ConditionalExpression>\n  <identifier>*rshft</identifier>\n</ConditionalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier(">N");
      simpleNode0.dump("-Cf", stringWriter0);
      Node node0 = simpleNode0.parent;
      char[] charArray0 = new char[2];
      charArray0[0] = 'r';
      charArray0[1] = 'H';
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("<");
      simpleNode0.parent = null;
      simpleNode0.dump(">5", stringWriter0);
      assertEquals("<Modifiers>\n  <identifier>>N</identifier>\n</Modifiers>\nrH<Modifiers>\n  <identifier>>N</identifier>\n  <identifier>*lt</identifier>\n</Modifiers>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.49746192893401014
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(105);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("u~", stringWriter0);
      int int0 = 0;
      simpleNode0.jjtAddChild(simpleNode0, 105);
      stringWriter0.append('K');
      stringWriter0.write(527);
      // Undeclared exception!
      simpleNode0.dump("Literal", stringWriter0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0660870880402031
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("-Cf", stringWriter0);
      simpleNode0.jjtGetParent();
      char[] charArray0 = new char[1];
      charArray0[0] = 'l';
      stringWriter0.write(charArray0);
      simpleNode0.dump(":", stringWriter0);
      simpleNode0.setIdentifier(":");
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("-Cf", stringWriter0);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("l<VariableDeclaratorId>\n  <identifier>:</identifier>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>:</identifier>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("\"break\"", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier(">N");
      simpleNode0.dump("-Cf", stringWriter0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter1 = new StringWriter(415);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("-Cf", stringWriter1);
      assertEquals("<Modifiers>\n  <identifier>>N</identifier>\n  <identifier>*ge</identifier>\n</Modifiers>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter(3257);
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("AyRyAKr@4RN n<`m[", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7957596077518445
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.close();
      SimpleNode simpleNode1 = new SimpleNode(18);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.dump("E", stringWriter1);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.parent;
      simpleNode0.setIdentifier("&");
      stringWriter1.append((CharSequence) "&");
      simpleNode0.dump("o'R;{vy", stringWriter1);
      simpleNode1.dump("&", stringWriter1);
      assertEquals("&<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(40);
      simpleNode0.jjtClose();
      simpleNode0.setIdentifier("8");
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)19;
      stringWriter0.append((CharSequence) "8");
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)24;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("8", stringWriter0);
      assertEquals("8<ConditionalExpression>\n  <identifier>8</identifier>\n</ConditionalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump(">N", stringWriter0);
      stringWriter0.append('B');
      StringReader stringReader0 = new StringReader(">N");
      JavaParser javaParser0 = new JavaParser(">N");
      SimpleNode simpleNode1 = new SimpleNode(0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.dump("N$", stringWriter0);
      simpleNode2.jjtAddChild(simpleNode1, 0);
      simpleNode0.toString();
      simpleNode2.jjtGetChild(0);
      assertEquals(1, simpleNode2.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0954485469884303
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("-Cf", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump(":", stringWriter0);
      Node node1 = simpleNode0.parent;
      simpleNode0.setIdentifier(":");
      simpleNode0.dump("L.sTh!{9YV(", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 3);
      simpleNode0.jjtGetChild(3);
      simpleNode0.toString();
      assertEquals(4, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      StringWriter stringWriter0 = new StringWriter(3257);
      simpleNode0.setIdentifier("}");
      simpleNode0.dump("o'R;{vy", stringWriter0);
      assertEquals("<AllocationExpression>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-9);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oZlSQiSNF");
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      simpleNode0.jjtGetChild(1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(40);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode1 = new SimpleNode(40);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter0 = new StringWriter(40);
      simpleNode1.setIdentifier("TryStatement");
      simpleNode0.dump("7B4fX", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode1, 40);
      assertEquals(41, simpleNode0.jjtGetNumChildren());
      
      Node node0 = simpleNode1.jjtGetParent();
      assertEquals(41, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      StringWriter stringWriter0 = new StringWriter(3257);
      simpleNode0.setIdentifier(";");
      simpleNode0.dump("o'R;{vy", stringWriter0);
      assertEquals("<AllocationExpression>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 3;
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      String string0 = "-Cf";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump("-Cf", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(23);
      simpleNode0.toString();
      StringReader stringReader0 = new StringReader("FormalParameters");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1801251892));
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      SimpleNode simpleNode2 = new SimpleNode(23);
      simpleNode1.jjtSetParent(simpleNode2);
      simpleNode1.jjtOpen();
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1801251892
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3978));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(105);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("u~", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 105);
      stringWriter0.write(527);
      simpleNode0.dump("Literal", stringWriter0);
      assertEquals(106, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4f>)V$?a-('dc");
      SimpleNode simpleNode0 = new SimpleNode(28);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(28);
      stringWriter0.flush();
      simpleNode0.dump((String) null, stringWriter0);
      String string0 = simpleNode0.toString();
      assertEquals("Type", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1921));
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.id = (-1921);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("</i'Jdentifier>", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1921
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.close();
      SimpleNode simpleNode1 = new SimpleNode(18);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.dump("E", stringWriter1);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.parent;
      simpleNode0.jjtGetParent();
      simpleNode0.dump("E", stringWriter1);
      assertEquals("", stringWriter1.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("");
      simpleNode0.dump(">N", stringWriter0);
      assertEquals("<Modifiers>\n</Modifiers>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode((-2029014012));
      StringWriter stringWriter1 = new StringWriter();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<Modifiers></Modifiers>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0915269783609793
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("-Cf", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump(":", stringWriter0);
      Node node1 = simpleNode0.parent;
      simpleNode0.setIdentifier(":");
      simpleNode0.dump("L.sTh!{9YV(", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 3);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.937566794583933
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("-Cf", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump("G", stringWriter0);
      simpleNode0.setIdentifier("G");
      StringWriter stringWriter1 = new StringWriter(18);
      stringWriter1.flush();
      stringWriter1.append((CharSequence) "-Cf");
      simpleNode0.setIdentifier("~");
      simpleNode0.dump("-Cf", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(22);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(3257);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(nodeArray0[1], 3257);
      assertEquals(3258, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9749540746744716
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(55);
      simpleNode0.jjtClose();
      String string0 = "8";
      simpleNode0.setIdentifier("8");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("MemberValuePair", stringWriter0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "MemberValuePair", 55, (-3479));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8994715564886948
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.jjtGetParent();
      char[] charArray0 = new char[1];
      char char0 = 'l';
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "VariableDeclaratorId", 1929, 1929);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-847));
      // Undeclared exception!
      try { 
        simpleNode0.toString("v=>ol\"abWrycNQ~");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -847
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.941488363211384
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("-Cf", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump("G", stringWriter0);
      simpleNode0.setIdentifier("G");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter1 = new StringWriter(18);
      stringWriter1.append((CharSequence) "-Cf");
      simpleNode0.setIdentifier("~");
      simpleNode0.dump("-Cf", stringWriter1);
      assertEquals("-Cf<VariableDeclaratorId>\n  <identifier>G</identifier>\n  <identifier>~</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString("-Cf");
      assertEquals("-CfVariableDeclaratorId : G : ~", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1052);
      Node[] nodeArray0 = new Node[8];
      simpleNode0.children = nodeArray0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1431655763));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1431655763
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0794057662397671
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(3257);
      Node[] nodeArray0 = new Node[2];
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 3257);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-2034458190));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0367297984483934
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      Node[] nodeArray0 = new Node[1];
      SimpleNode simpleNode1 = null;
      try {
        simpleNode1 = new SimpleNode((JavaParser) null, (-1079417536));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
