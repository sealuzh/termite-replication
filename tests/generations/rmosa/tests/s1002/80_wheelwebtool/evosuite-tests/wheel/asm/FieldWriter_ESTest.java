/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 00:23:45 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1330));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1330), "e7=qN2?{^U`<GuYitV", "e7=qN2?{^U`<GuYitV", "e7=qN2?{^U`<GuYitV", "e7=qN2?{^U`<GuYitV");
      classWriter0.version = (int) (byte)50;
      ByteVector byteVector0 = classWriter0.pool;
      String string0 = "";
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)50;
      byteArray0[6] = (byte)50;
      byteArray0[7] = (byte)50;
      byteVector0.data = byteArray0;
      String string1 = "15{3i[.0\\8J%3";
      int int0 = 407;
      String string2 = "U?{XE>%";
      String string3 = "zKrCwo<$8U9Wh%\"";
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1347));
      String string0 = "7=YN2?^^U`<Gu dtV";
      String string1 = "The FileFilter must not be null";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.addUninitializedType("7=YN2?^^U`<Gu dtV", (-1347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1347), "7=YN2?^^U`<Gu dtV", "The FileFilter must not be null", "7=YN2?^^U`<Gu dtV", "The FileFilter must not be null");
      String string2 = "8Ko";
      classWriter0.index = 262131;
      classWriter0.newFieldItem("8Ko", "7=YN2?^^U`<Gu dtV", "7=YN2?^^U`<Gu dtV");
      classWriter0.version = 2;
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(1, 1);
      // Undeclared exception!
      fieldWriter0.put(byteVector1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1790);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1790, "fGI;?#9Ys|)baJPY", "fGI;?#9Ys|)baJPY", "fGI;?#9Ys|)baJPY", "fGI;?#9Ys|)baJPY");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-527);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1347));
      String string0 = "7=YN2?^^U`<Gu dtV";
      String string1 = "The FileFilter must not be null";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.addUninitializedType("7=YN2?^^U`<Gu dtV", (-1347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1347), "7=YN2?^^U`<Gu dtV", "The FileFilter must not be null", "7=YN2?^^U`<Gu dtV", "The FileFilter must not be null");
      String string2 = "8Ko";
      classWriter0.index = 262144;
      classWriter0.newFieldItem("8Ko", "7=YN2?^^U`<Gu dtV", "The filters must not be null");
      classWriter0.version = 2;
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = null;
      int int0 = 182;
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1367));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1367), "", "", "", "");
      classWriter0.version = (-1367);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1367));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1367), "7=YN2?^^U`<Gu dtV", "7=YN2?^^U`<Gu dtV", "7=YN2?^^U`<Gu dtV", "7=YN2?^^U`<Gu dtV");
      classWriter0.version = (-1367);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1772);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1772, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1367));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1367), "7=YN2?^^U<G dtV", "7=YN2?^^U<G dtV", "7=YN2?^^U<G dtV", "7=YN2?^^U<G dtV");
      classWriter0.version = 2;
      Attribute attribute0 = new Attribute("7=YN2?^^U<G dtV");
      Attribute attribute1 = new Attribute("7=YN2?^^U<G dtV");
      attribute0.next = attribute1;
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-770));
      classWriter0.index = (-770);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, ")V", "x", "]q", ")V");
      byte[] byteArray0 = classWriter0.toByteArray();
      fieldWriter0.visitAnnotation("f&$c9j\"4-", false);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 16777215, (-2319));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16777223
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1367));
      classWriter0.index = (-1864);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1367), "Dereaed", "Dereaed", "Dereaed", "Dereaed");
      classWriter0.version = 1;
      fieldWriter0.getSize();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ByteVector byteVector0 = null;
      Attribute attribute0 = new Attribute("Dereaed");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-14);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1864), (byte) (-1));
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(184);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2194, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1321));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1321), "W'iFI.(?!>4oZ|I|8tG", "The FileFilter must not be null", (String) null, "The FileFilter must not be null");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1367));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2327, "7=YN2?^^Uv<G dtV", "7=YN2?^^Uv<G dtV", (String) null, "7=YN2?^^Uv<G dtV");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-759));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-759), "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV");
      fieldWriter0.visitAnnotation("7=AYN2?^^U`<Gu itZV", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1790);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1790, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 17, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1769);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1769, "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "</t", "</t", "</t", "</t");
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "</t", "</t", "</t", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "E~*zi<x4$%o/c{h-I&", "E~*zi<x4$%o/c{h-I&", "E~*zi<x4$%o/c{h-I&", "E~*zi<x4$%o/c{h-I&");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64169, "J6E", "J6E", "J6E", "J6E");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1769);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1769, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1379));
      FieldWriter fieldWriter0 = classWriter0.firstField;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1379), ";D4V7xt;mxO{", ";D4V7xt;mxO{", ";D4V7xt;mxO{", (Object) null);
      int int0 = fieldWriter1.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1769);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1769, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1790);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-783));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-783), "$7=YN2?^^U`<Gu itZV", "$7=YN2?^^U`<Gu itZV", "$7=YN2?^^U`<Gu itZV", "$7=YN2?^^U`<Gu itZV");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-759));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-759), "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV");
      fieldWriter0.visitAnnotation("7=AYN2?^^U`<Gu itZV", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-759));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-759), "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV", "7=AYN2?^^U`<Gu itZV");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212676);
      classWriter0.newClass("M:u|7e<C");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      classWriter0.newInteger(2);
      classWriter0.newFieldItem("RuntimeInvisibleAnnotations", "Ar\"$SX~;?", "g8WMDkq*!|T12R hsL'");
      classWriter0.index = 285212676;
      classWriter0.newFloat((-1586.727F));
      String string0 = "?eF5#(";
      classWriter0.visitInnerClass("M:u|7e<C", "?eF5#(", "?eF5#(", (-3684));
      classWriter0.newFloat(0.0F);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "ConstantValue", "", "M:u|7e<C", "ConstantValue");
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1346), "", "", "", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
