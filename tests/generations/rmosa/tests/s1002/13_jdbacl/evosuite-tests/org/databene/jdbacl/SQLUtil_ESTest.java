/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 04:04:41 GMT 2020
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import javax.management.remote.JMXPrincipal;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("null = null");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "lqR4_y", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("null = null", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      PrintWriter printWriter0 = mockPrintWriter0.printf("lqR4_y", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, printWriter0);
      assertEquals("lqR4_ycreate table null = null (,\n\tUNIQUE ()\n)", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.StringBuilder cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) defaultDBTable0;
      objectArray0[1] = (Object) defaultDBTable0;
      defaultDBTable0.setName("");
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) "";
      String string0 = SQLUtil.renderWhereClause(stringArray0, objectArray0);
      assertEquals(" = ", string0);
      
      String string1 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("$5@", stringArray0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(columnDescriptorList0, columnDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("ABoA/m2;t", "7?$u]qig", versionNumber0);
      defaultDatabase0.getTable("ABoA/m2;t", false);
      DBDataType dBDataType0 = DBDataType.getInstance(3134, "alter session");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0, integer0, integer1);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("interrup", defaultDBTable0, (-261), "interrup");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      Vector<DBColumn> vector1 = new Vector<DBColumn>();
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("DROP CONSTRAINT ", defaultDBTable0, 109, "interrup");
      vector1.add((DBColumn) defaultDBColumn1);
      MockFile mockFile0 = new MockFile("interrup");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockFile mockFile1 = new MockFile(file0, "interru");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      Locale locale0 = Locale.ROOT;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, " as ", (Object[]) null);
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayVariant(locale0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(16402, "CONSTRAINT ");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CONSTRAINT ", defaultDBTable0, dBDataType0, integer0, integer0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("CONSTRAINT ", false);
      char[] charArray0 = new char[5];
      charArray0[0] = '|';
      charArray0[1] = ' ';
      charArray0[2] = 'S';
      charArray0[3] = '|';
      charArray0[4] = 'D';
      mockFileWriter0.write(charArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "updateselecvqax9 oapqh";
      stringArray0[1] = "updateselecvqax9 oapqh";
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select intoalter taleisvalid(");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(335544431, "i=&");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer1 = new Integer(335544431);
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer1, integer2);
      Vector<DBColumn> vector0 = new Vector<DBColumn>(1507);
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.exe.");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("][D5mj5HhDoZ _g|:", defaultDBTable0, (-1179), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("d^/xs0f5", defaultDBTable0, 462, "d^/xs0f5");
      Vector<DBColumn> vector0 = new Vector<DBColumn>(462);
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("d^/xs0f5, d^/xs0f5", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      String string0 = SQLUtil.normalize("*/", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = "";
      SQLUtil.substituteMarkers("", "qi^f}8C8^-Xw^", "");
      SQLUtil.mutatesDataOrStructure("");
      StreamTokenizer streamTokenizer0 = null;
      try {
        streamTokenizer0 = new StreamTokenizer((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StreamTokenizer", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Ro0B", defaultDBTable0, (DBDataType) null, integer0, integer0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Ro0B", false, "=mJNP?g2", "Ro0B");
      dBCheckConstraint0.setName("Ro0B");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" as ", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      System.setCurrentTimeMillis(20L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = "inset";
      SQLUtil.join("inset", (String) null, stringArray0, (String) null, "org.firebirdsql.event.FBEventManager$EventDispatcher", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "org.firebirdsql.event.FBEventManager$EventDispatcher";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, stringArray0, "org.firebirdsql.event.FBEventManager$EventDispatcher", "inset", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      SQLUtil.isDML("qiDu/*@)j0)#ha");
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = SQLUtil.normalize("  ", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("create materialized viewschema", false, "create materialized viewschema", "JK2p8l");
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK JK2p8l", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "isvalid(";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "select", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(200);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("org.databene.jdbacl.SQLUtil");
      Random.setNextRandom(200);
      Character character0 = Character.valueOf('U');
      SQLUtil.renderValue(character0);
      String string0 = "//";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("selectselect intoexecute");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-81);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      boolean boolean0 = SQLUtil.isQuery("select intoexecute");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBSchema dBSchema0 = new DBSchema("]Qe3Johe=YR7r");
      dBSchema0.isIdentical(defaultDBTable0);
      dBSchema0.getTable("select intoexecute");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("]Qe3Johe=YR7r");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("NMxi!e>", defaultDBTable0, (-1954668680), "create");
      defaultDBColumn0.setDefaultValue("0Wy1O}5ix](MPo5");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("NMxi!e> CREATE DEFAULT 0Wy1O}5ix](MPo5 NULL", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "sel%cvq";
      stringArray0[1] = "sel%cvq";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("sel%cvq", stringArray0, "browse", "browse", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "delete4", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "executesxykbg.z@s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("executesxykbg.z@s", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (executesxykbg.z@s) REFERENCES null(executesxykbg.z@s)", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCatalog dBCatalog0 = new DBCatalog("isvalid(");
      DBSchema dBSchema0 = new DBSchema(".", dBCatalog0);
      dBSchema0.getDatabase();
      DBSchema dBSchema1 = new DBSchema("isvalid(", dBCatalog0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("isvalid(", dBSchema1);
      DBDataType dBDataType0 = DBDataType.getInstance(2298, "isvalid(");
      dBCatalog0.getTables();
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("isvalid(", defaultDBTable1, dBDataType0, integer0);
      dBDataType0.isNumber();
      defaultDBColumn0.setNullable(false);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("isvalid( ISVALID((0) NOT NULL", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      SQLUtil.isDDL("setHoldability");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-34);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLUtil.mutatesDataOrStructure("alter sessionalter tableisvalid(");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      assertEquals("table", defaultDBTable2.getObjectType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = SQLUtil.normalize("'0E\"j5(u[0Rp%", true);
      assertEquals("'0E\"j5(u[0Rp%'", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0159563498657254
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized view");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "qRbiSI<#F";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "/#U.CINw~f%+XWp", true, stringArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "4u_WB9K", false, stringArray0);
      Object object0 = new Object();
      dBPrimaryKeyConstraint1.equals(object0);
      dBPrimaryKeyConstraint1.setDoc("create table");
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      dBPrimaryKeyConstraint1.setDoc("4u_WB9K");
      String string0 = SQLUtil.normalize("/#U.CINw~f%+XWp", false);
      assertEquals("/ # U.CINw ~ f % + XWp", string0);
      
      VersionNumber.valueOf("qRbiSI<#F");
      defaultDBTable0.countProviders();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-818L));
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint1);
      assertEquals("CONSTRAINT 4u_WB9K ", string1);
      
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string2 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT /#U.CINw~f%+XWp PRIMARY KEY (qRbiSI<#F)", string2);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "renamealter taleisvalid(", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(200);
      dBUniqueConstraint0.isIdentical(defaultDBTable0);
      dBUniqueConstraint0.setName((String) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      Random.setNextRandom(39);
      String string0 = SQLUtil.typeAndName(dBUniqueConstraint0);
      assertEquals("unique constraint constraint", string0);
      
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.toString();
      DBCatalog dBCatalog0 = new DBCatalog("Z0tT`c6:m8sf+,");
      DBSchema dBSchema0 = new DBSchema(".", dBCatalog0);
      dBSchema0.getDatabase();
      DBCatalog dBCatalog1 = new DBCatalog("Z0tT`c6:m8sf+,");
      DBDataType dBDataType0 = DBDataType.getInstance(2298, "isvalid(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("L{-{", defaultDBTable0, dBDataType0, integer0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "QkU}!T=5M8IGk`};", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      dBUniqueConstraint0.setOwner(dBCatalog0);
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      StringBuffer stringBuffer0 = new StringBuffer("create materialized viewisc_info_truncated");
      stringBuilder0.append(stringBuffer0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DBConstraint dBConstraint0 = null;
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "inset", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , , , , , )", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop table");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "drop table";
      stringArray0[1] = "drop table";
      stringArray0[2] = "drop table";
      stringArray0[3] = "drop table";
      stringArray0[4] = "drop table";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "callinterruptedexception";
      SQLUtil.mutatesStructure("callinterruptedexception");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.normalize("zEz%5X(j\")v$]FD!E", false);
      System.setCurrentTimeMillis((-4550L));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("call");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "~+[CX8");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@B<qG>&");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join((String) null, (String) null, stringArray0, ")", ")", stringArray0);
      assertEquals(") as ) on null.null = ).null", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0159563498657256
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized view");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "qRbiSI<#F";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "/#U.CINw~f%+XWp", true, stringArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(43, threadPoolExecutor_DiscardPolicy0);
      Thread thread0 = MockThread.currentThread();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule((Runnable) thread0, (long) 43, timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      delayQueue0.poll();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "4u_WB9K", false, stringArray0);
      Object object0 = new Object();
      dBPrimaryKeyConstraint1.equals(object0);
      dBPrimaryKeyConstraint1.setDoc("create table");
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      SQLUtil.normalize("/#U.CINw~f%+XWp", false);
      VersionNumber.valueOf("qRbiSI<#F");
      defaultDBTable0.countProviders();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-818L));
      SQLUtil.constraintName(dBPrimaryKeyConstraint1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("^.H");
      PrintWriter printWriter0 = mockPrintWriter0.printf("b", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[7];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)22;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("drop materialized view' hash '", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)25;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = SQLUtil.join("inset", "inset", stringArray0, "inset", "org.firebirdsql.event.FBEventManager$EventDispatcher", stringArray0);
      assertEquals("inset join inset as org.firebirdsql.event.FBEventManager$EventDispatcher on inset.null = org.firebirdsql.event.FBEventManager$EventDispatcher.null and inset.null = org.firebirdsql.event.FBEventManager$EventDispatcher.null and inset.null = org.firebirdsql.event.FBEventManager$EventDispatcher.null and inset.null = org.firebirdsql.event.FBEventManager$EventDispatcher.null and inset.null = org.firebirdsql.event.FBEventManager$EventDispatcher.null and inset.null = org.firebirdsql.event.FBEventManager$EventDispatcher.null and inset.null = org.firebirdsql.event.FBEventManager$EventDispatcher.null", string0);
      
      String[] stringArray1 = new String[1];
      stringArray1[0] = "drop materialized view' hash '";
      String[] stringArray2 = new String[4];
      stringArray2[0] = "org.firebirdsql.event.FBEventManager$EventDispatcher";
      stringArray2[1] = "430,QtJm|";
      stringArray2[2] = "/mkI?RlQ2L&0";
      stringArray2[3] = "/mkI?RlQ2L&0";
      String string1 = SQLUtil.innerJoin("drop materialized view' hash '", stringArray1, "430,QtJm|", "/mkI?RlQ2L&0", stringArray2);
      assertEquals("430,QtJm| as /mkI?RlQ2L&0 on drop materialized view' hash '.drop materialized view' hash ' = /mkI?RlQ2L&0.org.firebirdsql.event.FBEventManager$EventDispatcher", string1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      PipedReader pipedReader0 = new PipedReader();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T`7W1nr7;@b_5");
      Random.setNextRandom((-700));
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("V\"D7jK>~c", dBSchema0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DBConstraint dBConstraint0 = null;
      SQLUtil.isDML("deletealter taleisvalid(");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "aL}JXWD8@6{H");
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("deletealter taleisvalid(", true, "execcannot change transaction read-only property in the middle of a transaction.", "create materialized viewalter taleisvalid(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Syntax error at the beginning 
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.893788232391138
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.renderColumnListWithTableName("updateinteru", stringArray0);
      assertEquals("updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null", string0);
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null, updateinteru.null");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("ALTER TABLE ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete", dBSchema0);
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("ALTER TABLE ", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT \"ALTER TABLE \" ", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "J!%6Yrj,~{16u";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "J!%6Yrj,~{16u", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("J!%6Yrj,~{16u", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String[] stringArray1 = new String[2];
      stringArray1[0] = "@ W==(%~Y S";
      stringArray1[1] = "J!%6Yrj,~{16u";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("@ W==(%~Y S", true, dBTable0, stringArray1, dBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (@ W==(%~Y S, J!%6Yrj,~{16u) REFERENCES null(J!%6Yrj,~{16u)", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.6390573296152584
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SQLUtil.isQuery("A@8G}8su2&(.oY");
      SQLUtil.isDDL("A@8G}8su2&(.oY");
      SQLUtil.mutatesDataOrStructure("-webScript");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\u0001\u00ED");
      stringArray0[0] = "A@8G}8su2&(.oY";
      stringArray0[1] = "org.apache.derby.iapi.sql.execute.CursorResultSet[]";
      stringArray0[2] = "GRANTEETYPE";
      stringArray0[3] = "-webScript";
      stringArray0[4] = "A@8G}8su2&(.oY";
      stringArray0[5] = "\u0001\u00ED";
      stringArray0[6] = "\u0001\u00ED";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("\u0001\u00ED", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(11);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("date part", stringBuilder0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder2 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder1, nameSpec0);
      StringBuilder stringBuilder3 = stringBuilder2.deleteCharAt(11);
      stringBuilder3.append((CharSequence) "org.apache.derby.iapi.sql.execute.CursorResultSet[]");
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.derby.iapi.sql.execute.CursorResultSet[]");
      PrintWriter printWriter0 = mockPrintWriter0.format("w9lu(", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec1, printWriter0);
      assertEquals(FKChangeRule.NO_ACTION, dBForeignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = SQLUtil.normalize("@~:zSR<nNZS>,gD:o", false);
      assertEquals("@ ~ : zSR < nNZS >, gD : o", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("O#l");
      DBSchema dBSchema0 = new DBSchema("selecvqaxoapqh", dBCatalog0);
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema selecvqaxoapqh", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("alter materialized viewlevasid1 fkl(`1", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      System.setCurrentTimeMillis((-1011L));
      DBSchema dBSchema0 = new DBSchema("g");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("5o O=qc{6EH\"{2t6", dBSchema0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "g";
      stringArray0[1] = "g";
      stringArray0[2] = "g";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) jdbcDataSource0);
      jdbcConnectionPool0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "renamealter taleisvalid(", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(200);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      Random.setNextRandom(39);
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , , , , , )", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBSchema dBSchema0 = new DBSchema("newBootPassword/newEncryptionKey attribute");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("??q.#CRwLgV;'&xj", dBSchema0);
      String[] stringArray0 = new String[6];
      stringArray0[1] = "r*/f|-Rl4yBoH.\"^m";
      stringArray0[2] = "renamealter taleisvalid(";
      stringArray0[3] = "??q.#CRwLgV;'&xj";
      stringArray0[4] = "newBootPassword/newEncryptionKey attribute";
      stringArray0[5] = "newBootPassword/newEncryptionKey attribute";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable1, "newBootPassword/newEncryptionKey attribute", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      Random.setNextRandom(183);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("J*`\"GX(G#DH/q)#r*;");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"G#DH/q\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setDate(String,Date)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("bF1cioHj,!_", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join("inset", "inset", stringArray0, "i#X3yd", "inset", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.leftJoin("drop materialized view", stringArray0, "select^v9-9f6y#f", "'L*F-q6%H11D=<H", stringArray1);
      assertEquals("left join select^v9-9f6y#f as 'L*F-q6%H11D=<H on ", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = SQLUtil.normalize("\"#4NR9`+E=)v`Q}", true);
      assertEquals("\"#4NR9`+E=)v`Q}\"", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = SQLUtil.normalize("/$D_J", false);
      assertEquals("/ $ D_J", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = SQLUtil.normalize(" /* ", false);
      assertEquals("/*", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("aScK}yV", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SQLUtil.join("inset", "inset", stringArray0, "inset", "inset", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "L10";
      stringArray0[1] = "L10";
      stringArray0[6] = "L10";
      stringArray0[6] = "L10";
      DBDataType dBDataType0 = DBDataType.getInstance((-919), "L10");
      Integer integer0 = new Integer((-919));
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Integer.sum((-114), 4559);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("L10", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Integer.min((-464), (-122824916));
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("L10", integer2);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("L10(-919,3)", stringBuilder0.toString());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin((String) null, (String[]) null, "getBaseTypeName", "alter materialized view", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("1]+7", (String[]) null, "1]+7", "1]+7", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[7];
      SQLUtil.join("inset", "inset", stringArray0, "inset", "inset", stringArray0);
      String string0 = SQLUtil.leftJoin("SyxPU7D(-tE", stringArray0, "4}dH*?cE4]r85x%r#p", "0U", stringArray0);
      assertEquals("left join 4}dH*?cE4]r85x%r#p as 0U on SyxPU7D(-tE.null = 0U.null and SyxPU7D(-tE.null = 0U.null and SyxPU7D(-tE.null = 0U.null and SyxPU7D(-tE.null = 0U.null and SyxPU7D(-tE.null = 0U.null and SyxPU7D(-tE.null = 0U.null and SyxPU7D(-tE.null = 0U.null", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "'0E\"j5(u[0Rp%");
      SQLUtil.addRequiredCondition("'0E\"j5(u[0Rp%", stringBuilder0);
      assertEquals("'0E\"j5(u[0Rp% and '0E\"j5(u[0Rp%", stringBuilder0.toString());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, true, (String) null, "updatecall");
      dBCheckConstraint0.setName(" as ");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "CONSTRAINT ";
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockFileWriter mockFileWriter0 = new MockFileWriter("CONSTRAINT ", false);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ",channel=", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "CONSTRAINT ");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(16402, 1.0F);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 16402
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "=1LHVL", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(200);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      Random.setNextRandom(200);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("j9Z>w%#G.z9Le", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DBDataType.getInstance(6, "@h*(/7fS");
      Integer integer0 = new Integer((-1879048189));
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DBDataType dBDataType0 = DBDataType.getInstance(122, "OzzBA&^");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("@h*(/7fS");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("%", defaultDBTable0, dBDataType0, integer1, (Integer) null);
      Integer.getInteger("%", integer1);
      defaultDBColumn0.setName("OzzBA&^");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("OZZBA&^(3)", stringBuilder0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3068291534409705
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.normalize("Zw)?S^y&/dm*C", true);
      Object object0 = new Object();
      String string0 = SQLUtil.substituteMarkers("CWEq:a", "3;bfgVpF", object0);
      assertEquals("CWEq:a", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(2853, "i=&");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("i=&", defaultDBTable0, dBDataType0, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("i=&", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("o0%B", defaultDBTable0, (DBDataType) null, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[7];
      SQLUtil.join("inset", (String) null, stringArray0, "inset", "org.firebirdsql.event.FBEventManager$EventDispatcher", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.2275294114572126
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join("inset", "inset", stringArray0, "inset", "inset", stringArray0);
      assertEquals("inset join inset as inset on inset.null = inset.null and inset.null = inset.null and inset.null = inset.null and inset.null = inset.null and inset.null = inset.null and inset.null = inset.null and inset.null = inset.null", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("lo2Y]l{5dBAEtqO.k");
      assertFalse(boolean0);
      
      boolean boolean1 = SQLUtil.isDDL(" = ");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("drop indexalter taleisvalid(");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.mutatesStructure("alter tableisvalid(");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("alter materialized view]ax_>ap&h");
      String string0 = " on ";
      String[] stringArray0 = new String[3];
      stringArray0[0] = " on ";
      stringArray0[1] = " on ";
      try { 
        Integer.parseUnsignedInt("create materialized view");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"create materialized view\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "alter tableisvalid(";
      SQLUtil.mutatesDataOrStructure("alter tableisvalid(");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBDataType.getInstance("alter tableisvalid(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[12];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ")", true, stringArray0);
      String string0 = SQLUtil.ownerDotComponent(dBUniqueConstraint0);
      assertEquals("null.)", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = SQLUtil.renderValue("'0E\"j5(u[09Rp%");
      assertEquals("''0E\"j5(u[09Rp%'", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = SQLUtil.renderValue(fileSystemHandling0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.33422114621338295
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      boolean boolean0 = false;
      SQLUtil.normalize("WabQb:dXBe[O-E?r", false);
      Boolean boolean1 = new Boolean(false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("WabQb : dXBe [ O - E ? r");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "WabQb : dXBe [ O - E ? r";
      stringArray0[1] = "WabQb:dXBe[O-E?r";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "WabQb:dXBe[O-E?r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[5];
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "G$wNE";
      String string0 = SQLUtil.removeComments("G$wNE");
      assertEquals("G$wNE", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-14522065), "update");
      TableContainer tableContainer0 = new TableContainer("RDB$EXCEPTIONS");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("selectartaleisvalid(", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      Integer.getInteger("RDB$EXCEPTIONS");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("update", defaultDBTable0, dBDataType0, (Integer) null, (Integer) null);
      Integer integer0 = RawTransaction.COMMIT;
      defaultDBColumn0.setName("selectartaleisvalid(");
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("UPDATE", stringBuilder0.toString());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer(": \n", compositeDBObject0);
      tableContainer0.getTable("h2.defaultEscape");
      DBDataType dBDataType0 = DBDataType.getInstance(335544363, "#Fv_-+N@:-h}|7e\"2F@");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("#Fv_-+N@:-h}|7e\"2F@", (DBTable) null, dBDataType0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCatalog dBCatalog0 = new DBCatalog("Z0tT`c6:m8sf+,");
      DBSchema dBSchema0 = new DBSchema(".", dBCatalog0);
      dBSchema0.getDatabase();
      DBCatalog dBCatalog1 = new DBCatalog("isvalid(", (Database) null);
      DBSchema dBSchema1 = new DBSchema("isvalid(", dBCatalog1);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("isvalid(", dBSchema1);
      DBDataType dBDataType0 = DBDataType.getInstance(2298, "isvalid(");
      dBCatalog1.getTables();
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("L{-{", defaultDBTable1, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("L{-{ ISVALID((0) NULL", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("@ W==(%~Y S");
      SQLUtil.addOptionalCondition("@ W==(%~Y S", stringBuilder0);
      assertEquals("@ W==(%~Y S or @ W==(%~Y S", stringBuilder0.toString());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("^v9-9d6YrF", stringBuilder0);
      assertEquals("^v9-9d6YrF", stringBuilder0.toString());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      SQLUtil.isDML("]aX_>aP&h");
      String string0 = null;
      String[] stringArray0 = new String[14];
      stringArray0[0] = "]aX_>aP&h";
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile("One of the version components not a number : ", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.9295224102980398
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SQLUtil.normalize("Zw)?S^y&/dm*C", false);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("Zw)?S^y&/dm*C");
      assertNull(boolean0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.672591048901325
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create materialized view");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "qRbiSI<#F";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "/#U.CINw~f%+XWp", true, stringArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "4u_WB9K", false, stringArray0);
      Object object0 = new Object();
      dBPrimaryKeyConstraint1.equals(object0);
      dBPrimaryKeyConstraint1.setDoc("create table");
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      SQLUtil.normalize("/#U.CINw~f%+XWp", false);
      VersionNumber.valueOf("qRbiSI<#F");
      defaultDBTable0.countProviders();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-818L));
      SQLUtil.constraintName(dBPrimaryKeyConstraint1);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("UNIQUE ", "UNIQUE ", (String[]) null, (String) null, "UNIQUE ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("'0E\"j5(u[0Rp%", "alter indexalter taleisvalid(", (String[]) null, "'0E\"j5(u[0Rp%", "'0E\"j5(u[0Rp%", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "execew8)[/ksyjs";
      stringArray0[2] = "execew8)[/ksyjs";
      stringArray0[5] = "execew8)[/ksyjs";
      String string0 = SQLUtil.join("inner", "execew8)[/ksyjs", stringArray0, "t|\"+o", "h-y6YmvFu9#t", stringArray0);
      assertEquals("t|\"+o as h-y6YmvFu9#t on execew8)[/ksyjs.execew8)[/ksyjs = h-y6YmvFu9#t.execew8)[/ksyjs and execew8)[/ksyjs.null = h-y6YmvFu9#t.null and execew8)[/ksyjs.execew8)[/ksyjs = h-y6YmvFu9#t.execew8)[/ksyjs and execew8)[/ksyjs.null = h-y6YmvFu9#t.null and execew8)[/ksyjs.null = h-y6YmvFu9#t.null and execew8)[/ksyjs.execew8)[/ksyjs = h-y6YmvFu9#t.execew8)[/ksyjs", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.33422114621338295
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = SQLUtil.normalize("^v9-9d6YrF", true);
      assertEquals("^ v9 - 9d6YrF", string0);
      
      boolean boolean0 = SQLUtil.isDDL("u1C jPx2E!");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("HASH ");
      String string0 = SQLUtil.normalize("#Fv_-+N@:-h}|7e\"2F@", false);
      assertEquals("# Fv_ - + N @ : - h } | 7e \"2F@\"", string0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("alter index");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.6248603116943127
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = SQLUtil.normalize("^v9-9d6YrF", false);
      assertEquals("^ v9 - 9d6YrF", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "^ v9 - 9d6YrF";
      stringArray0[1] = "create materialized view";
      stringArray0[2] = "^ v9 - 9d6YrF";
      stringArray0[3] = "43X70.U";
      stringArray0[4] = "^v9-9d6YrF";
      stringArray0[5] = "SLe";
      stringArray0[6] = "^v9-9d6YrF";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create materialized view", false, stringArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (^ v9 - 9d6YrF, create materialized view, ^ v9 - 9d6YrF, 43X70.U, ^v9-9d6YrF, SLe, ^v9-9d6YrF)", string1);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SQLUtil.join("inset", "inset", stringArray0, "inset", "inset", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("drop materialized viewsetholdability");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("'0E\"j5(u[09Rp%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: '0E\"j5(u[09Rp%
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
