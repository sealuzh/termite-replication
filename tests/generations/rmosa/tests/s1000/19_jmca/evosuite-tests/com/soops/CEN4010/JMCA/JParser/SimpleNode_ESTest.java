/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 01 21:28:07 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(";*gt");
      simpleNode0.setIdentifier(")");
      simpleNode0.setIdentifier("wr:Y)8uW");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.setIdentifier("v3Xi^NS1RUC`[O\nD");
      StringWriter stringWriter1 = new StringWriter(18);
      Node node0 = simpleNode0.parent;
      simpleNode0.dump("*gt", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>;*gt</identifier>\n  <identifier>wr:Y)8uW</identifier>\n  <identifier>v3Xi^NS1RUC`[O\nD</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(36);
      simpleNode0.jjtAddChild(simpleNode0, 36);
      Node node0 = simpleNode0.jjtGetChild(36);
      simpleNode0.jjtAddChild(node0, 36);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1794261505));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1794261505
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("~F;-a*Pi4Q7hUapgAV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("3");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("3", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "'Q9'%");
      stringWriter1.flush();
      stringWriter1.append((CharSequence) "'Q9'%");
      StringReader stringReader0 = new StringReader("'Q9'%");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode0.dump("'Q9'%", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode((-152877814));
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode1.dump("=X", stringWriter2);
      simpleNode1.jjtGetParent();
      simpleNode0.dump("zh17&]]eUi", stringWriter2);
      assertNotSame(stringWriter2, stringWriter1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("\"this\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) stringBuffer0, 10, (-1653));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1663
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      simpleNode0.dump("|=", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&XNIU0oA_->(", stringWriter0);
      assertEquals("<EnumConstant>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7860468484695322
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("=");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "&");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      CharBuffer charBuffer1 = CharBuffer.allocate(10);
      charBuffer0.read(charBuffer1);
      stringWriter0.append((CharSequence) charBuffer0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "=");
      stringWriter1.flush();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "=");
      simpleNode0.dump("![u-gt&c6lddv,", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-1933597241));
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode1;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode1;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode1.children = nodeArray0;
      stringWriter2.close();
      // Undeclared exception!
      try { 
        simpleNode1.dump("*ge", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8223795264135607
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(";*gt");
      simpleNode0.setIdentifier("(");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter1 = new StringWriter(18);
      simpleNode0.setIdentifier("]");
      StringWriter stringWriter2 = new StringWriter(18);
      StringWriter stringWriter3 = new StringWriter();
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      simpleNode0.dump(":vDRNI\"", stringWriter2);
      char[] charArray0 = new char[9];
      charArray0[0] = '*';
      charArray0[1] = 'B';
      charArray0[2] = '3';
      charArray0[3] = 'z';
      charArray0[4] = '?';
      charArray0[5] = 'K';
      charArray0[6] = '_';
      charArray0[7] = '[';
      charArray0[8] = 'p';
      stringWriter3.write(charArray0);
      simpleNode0.dump(":vDRNI\"", stringWriter2);
      assertEquals("<VariableDeclaratorId>\n  <identifier>;*gt</identifier>\n  <identifier>(</identifier>\n  <identifier>*lt</identifier>\n  <identifier>]</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>;*gt</identifier>\n  <identifier>(</identifier>\n  <identifier>*lt</identifier>\n  <identifier>]</identifier>\n</VariableDeclaratorId>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier(">>");
      String string0 = "{";
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      // Undeclared exception!
      try { 
        stringWriter0.write(">", (-3802), 84);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3253005080730644
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader1 = new StringReader("?LW})@sL(A/u[6*mTU");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1982704282));
      simpleNode0.setIdentifier("?LW})@sL(A/u[6*mTU");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 48);
      simpleNode1.setIdentifier("x");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      stringWriter1.flush();
      simpleNode1.dump("x", stringWriter1);
      simpleNode1.jjtAddChild(simpleNode0, 45);
      Node node0 = simpleNode1.jjtGetChild(45);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        node0.jjtGetChild(45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*gt</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 10);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.parent = (Node) simpleNode0;
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtGetParent();
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      String string0 = "}";
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      char char0 = 'q';
      // Undeclared exception!
      try { 
        stringWriter0.write(">", (-3802), 84);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) stringBuffer0, 10, (-1653));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1663
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<AdditiveExpression>\n</AdditiveExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("|");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append(']');
      stringWriter0.write(465);
      simpleNode0.dump("j;*Yok!R28*", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4991708126036484
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtAddChild(simpleNode0, 10);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("\"&&\"", stringWriter0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(10);
      stringWriter0.append((CharSequence) "&&");
      StringWriter stringWriter1 = stringWriter0.append('R');
      simpleNode0.dump("&&", stringWriter1);
      assertEquals("&&R<TypeDeclaration>\n  <identifier>*amp</identifier>\n</TypeDeclaration>\n", stringWriter1.toString());
      assertEquals("&&R<TypeDeclaration>\n  <identifier>*amp</identifier>\n</TypeDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.8102583142923485
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(";*gt");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(18);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump(";*gt", stringWriter0);
      assertEquals("\u0012<VariableDeclaratorId>\n  <identifier>;*gt</identifier>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : ;*gt : &", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1912);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4990859232175503
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(36);
      simpleNode0.jjtAddChild(simpleNode0, 36);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("", stringWriter0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-5870));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5870
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.toString();
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[6];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("NhDXm_FTlgM?&PDl<'");
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump("", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>NhDXm_FTlgM?&PDl<'</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      Node[] nodeArray0 = new Node[3];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<EnumConstant></EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString("MAt2J`{;");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9481178804418445
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      String string0 = "|";
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(8);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 8);
      simpleNode0.jjtGetChild(8);
      simpleNode0.jjtGetChild(8);
      assertEquals(9, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      JavaParser javaParser0 = new JavaParser("VariableDeclaratorId");
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 10);
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.941488363211384
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("=");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "&");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      stringWriter0.append((CharSequence) charBuffer0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringBuffer stringBuffer1 = new StringBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "xrroiAw9");
      stringWriter1.flush();
      stringWriter1.append((CharSequence) "=");
      simpleNode0.dump("![u-gt&c6lddv,", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-1933597241));
      simpleNode1.dump("qESN~XXv", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      SimpleNode simpleNode2 = null;
      try {
        simpleNode2 = new SimpleNode((JavaParser) null, (-155));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.975635158878412
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(";*gt");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(18);
      stringWriter0.write(18);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump(";*gt", stringWriter0);
      assertEquals("\u0012\u0012<VariableDeclaratorId>\n  <identifier>;*gt</identifier>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("?");
      assertEquals("?VariableDeclaratorId : ;*gt : &", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtAddChild(simpleNode0, 24);
      assertEquals(25, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1432583002));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1432583002));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9287964732655708
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.setIdentifier("(");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(" ", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("t%52=pd", stringWriter2);
      StringWriter stringWriter3 = new StringWriter(18);
      stringWriter2.close();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-872));
      simpleNode1.dump("\"U=\"", stringWriter2);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n  <identifier>(</identifier>\n</VariableDeclaratorId>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(125);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        simpleNode0.dump(">L}^_b40W", (Writer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "";
      ArrayList<String> arrayList0 = new ArrayList<String>(0);
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("|5rjP`wWf");
      // Undeclared exception!
      try { 
        simpleNode0.dump("", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(255);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9686421518854049
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(";*gt");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(18);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump(";*gt", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9807633640066171
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(";*gt");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(18);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump(";*gt", stringWriter0);
      assertEquals("\u0012<VariableDeclaratorId>\n  <identifier>;*gt</identifier>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode1.toString();
      assertEquals("VariableDeclaratorId", string0);
  }
}
