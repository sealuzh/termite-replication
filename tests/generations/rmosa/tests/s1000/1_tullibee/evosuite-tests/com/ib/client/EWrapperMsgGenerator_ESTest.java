/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 01 20:52:09 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.AnyWrapperMsgGenerator;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue();
      vector0.add((Object) tagValue0);
      vector0.add((Object) tagValue0);
      Contract contract0 = new Contract((-3546), (String) null, (String) null, (String) null, (-3546), (String) null, (String) null, (String) null, (String) null, (String) null, vector0, (String) null, false, (String) null, (String) null);
      Order order0 = new Order();
      order0.m_algoStrategy = "bg";
      OrderState orderState0 = new OrderState();
      order0.m_algoParams = contract0.m_comboLegs;
      vector0.add((Object) null);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-3546), (String) null, (String) null, (String) null, (-3546), (String) null, (String) null, (String) null, (String) null, (String) null, vector0, (String) null, false, (String) null, (String) null);
      Order order0 = new Order();
      order0.m_algoStrategy = "/L";
      OrderState orderState0 = new OrderState();
      order0.m_algoParams = contract0.m_comboLegs;
      vector0.add((Object) order0.m_algoParams);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to com.ib.client.TagValue
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-3546), (String) null, (String) null, (String) null, (-3546), (String) null, (String) null, (String) null, (String) null, (String) null, vector0, (String) null, false, (String) null, (String) null);
      Order order0 = new Order();
      order0.m_algoStrategy = "/L";
      OrderState orderState0 = new OrderState();
      orderState0.m_commission = 1.7976931348623157E308;
      order0.m_algoParams = contract0.m_comboLegs;
      OrderState orderState1 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(13, "", "BAG", "BAG", 2011.591, "R.::lNl=zW/<&I", "ezjP*N>N^SZu", "BAG", "", "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", vector0, "4?6YVa6UwZM/J-Tf &", false, "WEPxo", "A)R;k=|(s");
      Order order0 = new Order();
      order0.m_basisPoints = 0.0;
      Object object0 = new Object();
      contract0.equals(object0);
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      String string1 = EWrapperMsgGenerator.currentTime(13);
      assertEquals("current time = 13 (Jan 1, 1970 12:00:13 AM)", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      order0.m_algoStrategy = " jQ#n|erCo.mp.price=";
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      String string0 = "52WeekHigh";
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(13, "", "BAG", "BAG", 2011.591, "R.::lNl=zW/<&I", "ezjP*N>N^SZu", "BAG", "52WeekHigh", "|d/", vector0, "4?6YVa6UwZM/J-Tf &", false, "WEPxo", "A)R;k=|(s");
      contract0.m_comboLegsDescrip = " ---- Contract Details begin ----\n";
      Order order0 = new Order();
      Object object0 = new Object();
      contract0.equals(object0);
      vector0.add((Object) "ezjP*N>N^SZu");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(2825, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = AnyWrapperMsgGenerator.connectionClosed();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(34, "Connection Closed", "BAG", "BAG", 34, "Connection Closed", "Connection Closed", "BAG", "Connection Closed", "BAG", vector0, "Connection Closed", false, "BAG", "Connection Closed");
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      String string1 = EWrapperMsgGenerator.openOrder(34, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(45, 45, (ContractDetails) null, "  It does not support secIdType and secId parameters.", "  It does not support secIdType and secId parameters.", "  It does not support secIdType and secId parameters.", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      int int0 = 1982292598;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 1982292598, 13, 1.7976931348623157E308, 1982292598, 1250.3, 0.0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 13, 0.0, 0.0);
      assertEquals("id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 0.0: pvDividend = 0.0", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 13, 1.0, 13);
      assertEquals("id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 1.0: pvDividend = 13.0", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, (-1.0), 13, (-1.0), (-1.0));
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_algoStrategy = " jQ#n|erComp.price=";
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails((-3291), contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      ContractDetails contractDetails0 = new ContractDetails();
      String string1 = EWrapperMsgGenerator.contractDetails(13, contractDetails0);
      assertEquals("reqId = 13 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, "A^", "A^", 1.7976931348623157E308, "A^", "A^", (-538), "A^", "A^", "A^", "A^", "tj|2@4z!&K{~", "A^", "tj|2@4z!&K{~", "vSq;eE@@;");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails((-538), contractDetails0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(1982292598, 1982292598, "3r@APoT~iaD1S", (-1873), (-1873), 1982292598, (-1873));
      assertEquals("updateMktDepth: 1982292598 1982292598 3r@APoT~iaD1S -1873 -1873 1.982292598E9 -1873", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(1784, 1784, 1784, 1784, 1784, (-1.0), 1784, 1784, (-2243));
      assertEquals("id=1784 time = 1784 open=1784.0 high=1784.0 low=1784.0 close=-1.0 volume=1784 count=-2243 WAP=1784.0", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-3554), (-3554), (-3554), (-3554), (-3554), (-3554));
      assertEquals("id=-3554  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(995, "Gn,\"WeIFgfj!D}jLH");
      assertEquals("id  = 995 len = 18\nGn,\"WeIFgfj!D}jLH", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 1, 1.7976931348623157E308, 1, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=1  bidPrice: vol = N/A delta = 1.0", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 0, 0, 0, 0, 0);
      assertEquals("id=0  bidSize: vol = 0.0 delta = 0.0", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 1, 1, 1, 1, 1);
      assertEquals("id=1  bidPrice: vol = 1.0 delta = 1.0", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(261, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(1, 1, "K", (String) null);
      assertEquals("MsgId=1 :: MsgType=1 :: Origin=null :: Message=K", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(2032, 47, ",-1YgM", ",-1YgM");
      assertEquals("MsgId=2032 :: MsgType=47 :: Origin=,-1YgM :: Message=,-1YgM", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(47, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation((-1), underComp0);
      assertEquals("id = -1 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(1, 1, 1, (-2774), 1, (-2774));
      assertEquals("updateMktDepth: 1 1 1 -2774 1.0 -2774", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(2146259243, 2146259243, 36, 2146259243, 2146259243, 36);
      assertEquals("updateMktDepth: 2146259243 2146259243 36 2146259243 2.146259243E9 36", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(2674, 889, 2674, 828, 889, 889);
      assertEquals("updateMktDepth: 2674 889 2674 828 889.0 889", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(4, 4, 4, 4, 4, 4);
      assertEquals("id=4  lastPrice: vol = 4.0 delta = N/A", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 13, 4151.54325, 4151.54325);
      assertEquals("id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 4151.54325: pvDividend = 4151.54325", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(63, 63, (-1008.247564396), (-1008.247564396), (-1008.247564396), 63);
      assertEquals("id=63  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(29, 13, 13, 29, 13, 13);
      assertEquals("id=29  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 13.0: pvDividend = 13.0", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(34, 34, 34, 34, 34, 34);
      assertEquals("id=34  auctionVolume: vol = 34.0 delta = N/A", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters(" trailStopPrice=");
      assertEquals("SCANNER PARAMETERS:\n trailStopPrice=", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(0, 0, 2145020937);
      assertEquals("id=0  bidSize=2145020937", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(10, 6, 10);
      assertEquals("id=10  high=10", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus((-2147483645), "  It does not support fundamental data requests.", 31, 31, (-2147483645), 31, 31, (-2147483645), (-2147483645), "E9.=uR5o,a");
      assertEquals("order status: orderId=-2147483645 clientId=-2147483645 permId=31 status=  It does not support fundamental data requests. filled=31 remaining=31 avgFillPrice=-2.147483645E9 lastFillPrice=-2.147483645E9 parent Id=31 whyHeld=E9.=uR5o,a", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus((-1073741824), "|~", (-1073741824), 13, (-1073741824), (-1073741824), (-2123), (-1073741824), 13, "|~");
      assertEquals("order status: orderId=-1073741824 clientId=13 permId=-1073741824 status=|~ filled=-1073741824 remaining=13 avgFillPrice=-1.073741824E9 lastFillPrice=-1.073741824E9 parent Id=-2123 whyHeld=|~", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.orderStatus(0, (String) null, 0, (-3291), 0.0, (-3291), 0, (-3291), 0, (String) null);
      assertEquals("order status: orderId=0 clientId=0 permId=-3291 status=null filled=0 remaining=-3291 avgFillPrice=0.0 lastFillPrice=-3291.0 parent Id=0 whyHeld=null", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(957, 1464, 1464);
      assertEquals("id=957  unknown=1464.0", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(0, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.bondContractDetails(449, contractDetails0);
      assertEquals("reqId = 449 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar((-175489500), (-175489500), (-175489500), (-175489500), (-175489500), (-175489500), (-175489500), (-432.2448422), (-175489500));
      assertEquals("id=-175489500 time = -175489500 open=-1.754895E8 high=-1.754895E8 low=-1.754895E8 close=-1.754895E8 volume=-175489500 count=-175489500 WAP=-432.2448422", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar((-1964), (-1964), (-1964), (-1964), (-1964), (-3161.5305675264), (-1964), (-3161.5305675264), (-1964));
      assertEquals("id=-1964 time = -1964 open=-1964.0 high=-1964.0 low=-1964.0 close=-3161.5305675264 volume=-1964 count=-1964 WAP=-3161.5305675264", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(10, 2135L, 2135L, 10, 10, 10, 10, 2135L, 10);
      assertEquals("id=10 time = 2135 open=2135.0 high=10.0 low=10.0 close=10.0 volume=10 count=10 WAP=2135.0", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(4, 4, 4, 4, (-812.2113895781796), 4, 4, (-812.2113895781796), 4);
      assertEquals("id=4 time = 4 open=4.0 high=4.0 low=-812.2113895781796 close=4.0 volume=4 count=4 WAP=-812.2113895781796", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData(110, 110, contractDetails0, (String) null, (String) null, "askPrice", (String) null);
      assertEquals("id = 110 rank=110 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=null projection=askPrice legsStr=null", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      Contract contract0 = new Contract();
      contract0.clone();
      String string1 = EWrapperMsgGenerator.updatePortfolio(contract0, 13, 0, 0.0, 13, 0.0, 0, "MoTlPxQc0?w/go+C(T");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n13 0.0 0.0 13.0 0.0 0.0 MoTlPxQc0?w/go+C(T", string1);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(29, 13, 1.7976931348623157E308, 29, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=29  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      Contract contract0 = new Contract();
      String string1 = EWrapperMsgGenerator.updatePortfolio(contract0, (-71), 29, 0.0, 1.7976931348623157E308, 13, 0.0, (String) null);
      assertNotNull(string1);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n-71 29.0 0.0 1.7976931348623157E308 13.0 0.0 null", string1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(13, "vLhcY8D", 13, 48, 48, 48, 48, 13, 48, "vLhcY8D");
      assertEquals("order status: orderId=13 clientId=48 permId=48 status=vLhcY8D filled=13 remaining=48 avgFillPrice=48.0 lastFillPrice=13.0 parent Id=48 whyHeld=vLhcY8D", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(2157, "NF3>q|5", (-1), 2157, 2157, (-1), 2157, 2157, 2157, "NF3>q|5");
      assertEquals("order status: orderId=2157 clientId=2157 permId=-1 status=NF3>q|5 filled=-1 remaining=2157 avgFillPrice=2157.0 lastFillPrice=2157.0 parent Id=2157 whyHeld=NF3>q|5", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP((-1793288043), 504, 504, "A)R;k=|(s", (-5.95624943), (-1793288043), "com.ib.client.TagValue", (-5.95624943), (-1793288043));
      assertEquals("id=-1793288043  unknown: basisPoints = 504.0/A)R;k=|(s impliedFuture = -5.95624943 holdDays = -1793288043 futureExpiry = com.ib.client.TagValue dividendImpact = -5.95624943 dividends to expiry = -1.793288043E9", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-1193), (-1193), (-1193), (-855));
      assertEquals("id=-1193  unknown=-1193.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-2229), 10, 10, (-2229));
      assertEquals("id=-2229  bidOptComp=10.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickPrice(Integer.MAX_VALUE, Integer.MAX_VALUE, 0, 0);
      assertEquals("id=2147483647  unknown=0.0  noAutoExecute", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(99);
      assertEquals("id=99 =============== end ===============", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails(52, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 52\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("@");
      assertEquals("accountDownloadEnd: @", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 13.0: pvDividend = N/A", string0);
      
      Contract contract0 = new Contract();
      String string1 = EWrapperMsgGenerator.updatePortfolio(contract0, 13, 0.0, 13, 1.7976931348623157E308, 0.0, 1.7976931348623157E308, (String) null);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n13 0.0 13.0 1.7976931348623157E308 0.0 1.7976931348623157E308 null", string1);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(10, 10, 10, 10);
      assertEquals("id=10  bidOptComp=10.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals("Connection Closed", eWrapperMsgGenerator0.connectionClosed());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData(1, 1, contractDetails0, (String) null, "*P*cULlD", (String) null, (String) null);
      assertEquals("id = 1 rank=1 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=*P*cULlD projection=null legsStr=null", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData((-4354), (-4354), contractDetails0, (String) null, (String) null, (String) null, "  It does not support historical data query cancellation.");
      assertEquals("id = -4354 rank=-4354 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=null projection=null legsStr=  It does not support historical data query cancellation.", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData(2070980017, 1, contractDetails0, (String) null, (String) null, (String) null, (String) null);
      assertEquals("id = 2070980017 rank=1 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=null projection=null legsStr=null", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      order0.m_auctionStrategy = (-913);
      String string0 = EWrapperMsgGenerator.historicalData('c', "O", 'b', 0.0, (-913), 1.7976931348623157E308, Integer.MAX_VALUE, 0, 1.7976931348623157E308, false);
      assertEquals("id=99 date = O open=98.0 high=0.0 low=-913.0 close=1.7976931348623157E308 volume=2147483647 count=0 WAP=1.7976931348623157E308 hasGaps=false", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.historicalData(0, (String) null, Integer.MAX_VALUE, 0, 0, 0, 0, 0, Integer.MAX_VALUE, true);
      assertEquals("id=0 date = null open=2.147483647E9 high=0.0 low=0.0 close=0.0 volume=0 count=0 WAP=2.147483647E9 hasGaps=true", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd(916);
      assertEquals("id = 916 =============== end ===============", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA(195, "");
      assertEquals("FA: null ", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("BgPWxSsr<op@Y");
      assertEquals("Connected : The list of managed accounts are : [BgPWxSsr<op@Y]", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(22);
      assertEquals("reqId = 22 =============== end ===============", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(5);
      assertEquals("Next Valid Order ID: 5", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(Integer.MAX_VALUE, 0, (String) null, Integer.MAX_VALUE, 1, (-1863.5038), 'f');
      assertEquals("updateMktDepth: 2147483647 0 null 2147483647 1 -1863.5038 102", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("fn}dw(=mQwE8B", "fn}dw(=mQwE8B", " delta=", "fn}dw(=mQwE8B");
      assertEquals("updateAccountValue: fn}dw(=mQwE8B fn}dw(=mQwE8B  delta= fn}dw(=mQwE8B", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("bidSize", "W=Jy'gRy{3*#", "bidSize", "bidSize");
      assertEquals("updateAccountValue: bidSize W=Jy'gRy{3*# bidSize bidSize", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("|w`L:6RI7AGs<8", "|w`L:6RI7AGs<8", "%>b,O9yH^hnPV/+", "%>b,O9yH^hnPV/+");
      assertEquals("updateAccountValue: |w`L:6RI7AGs<8 |w`L:6RI7AGs<8 %>b,O9yH^hnPV/+ %>b,O9yH^hnPV/+", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(63, 63, 63, "?g", 63, (-1419), "?g", (-1419), 63);
      assertEquals("id=63  unknown: basisPoints = 63.0/?g impliedFuture = 63.0 holdDays = -1419 futureExpiry = ?g dividendImpact = -1419.0 dividends to expiry = 63.0", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString(13, (-1433955981), "5~q38&YB");
      assertEquals("id=13  unknown=5~q38&YB", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(577);
      assertEquals("reqId = 577 =============== end ===============", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("i-<yaL >z");
      assertEquals("updateAccountTime: i-<yaL >z", string0);
  }
}
