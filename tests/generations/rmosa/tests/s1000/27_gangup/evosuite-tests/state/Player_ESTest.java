/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 01 21:25:38 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "r}c-#-");
      Player player0 = new Player((-3121));
      player0.setZ((-3121));
      player0.setDead();
      player0.type();
      Player player1 = new Player();
      player1.setJoinOK(player0, true);
      player1.setX((-915.6F));
      player1.isJoinOK(player0, false);
      player0.getZ();
      player1.isJoinOK(player0, true);
      int int0 = player0.gangStrength();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(1152, "", "tm?o}A5", (-1495), 3026);
      player0.setMoney((-3432.4F));
      Player player1 = new Player(4, "", "mDt!z'", 512);
      player0.setJoinOK(player1, false);
      player1.setX(58);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.isJoinOK(player0, false);
      player1.getZ();
      player1.pack();
      player0.gangStrength();
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-3432.4F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-95), "A6TG~a`w[#Y", (-1));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte) (-26);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3742), (byte)32);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Player player0 = new Player();
      player0.getSubparty();
      player0.id = 2;
      player0.setX((-726.024F));
      player0.setY(0.0F);
      player0.getX();
      player0.pack();
      assertEquals((-726.024F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-26761), (String) null, ";pTG!,A%Sk>%Tp0O", (-26761), (-26761));
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-26761), player0.getStrength());
      assertTrue(player0.isConnected());
      assertNull(string0);
      assertEquals((-26761), player0.getPictureId());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1271, "=<v'c*j9?qnhX#&kqx<", "state.Party", 1271, 0);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
      assertEquals(1271, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-24106), "", "", (-24106), (short)4919);
      player1.setJoinOK(player0, false);
      player1.setX(0.1F);
      player1.setDead((long) (-24106));
      player0.isJoinOK(player1, false);
      player0.getZ();
      player1.getTimeOfDeath();
      player1.gangStrength();
      System.setCurrentTimeMillis(4919);
      Player player2 = new Player();
      player2.setDead((-3264L));
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertEquals(0.1F, player1.getX(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-266));
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1499, (String) null, (String) null, 645, (-3334));
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals((-3334), player0.getStrength());
      assertEquals(645, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(715L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "z.p98E$B83@04", (-1));
      player0.setZ(715L);
      player0.getIP();
      player0.type();
      player0.getZ();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte) (-13);
      player0.unpack(byteArray0);
      player0.toString();
      player0.getMoney();
      int int0 = player0.gangStrength();
      assertEquals(715.0F, player0.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-1058));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)96;
      player0.setMoney(629.6943F);
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte) (-46);
      player0.unpack(byteArray0);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals(629.6943F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-260), "^$;^T\";k7oo2", "^$;^T\";k7oo2", (-260), (-260));
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals((-260), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-260), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-1110));
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(0, "", "Kk@bvVE6}t{eGPY1", 1239);
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(1239, player0.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(14907, "![<z{6o8DX]1zPT", "MV'+^h__)FvQ5>Lt_-", (-1252), (-1252));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player1 = new Player((-2821), "MV'+^h__)FvQ5>Lt_-", "MV'+^h__)FvQ5>Lt_-", (short)4919, 14907);
      player1.head = (Party) player0;
      player0.setJoinOK(player1, false);
      player1.getZ();
      player0.getStrength();
      assertEquals("![<z{6o8DX]1zPT", player0.getIP());
      
      Player player2 = new Player((short)4919, "", (short)4919);
      boolean boolean0 = player1.isJoinOK(player2, true);
      assertFalse(boolean0);
      
      float float0 = player1.getZ();
      assertEquals(4919, player1.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(14907, player1.getStrength());
      
      String string0 = player2.getIP();
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals("0.0.0.0", string0);
      assertTrue(player2.isConnected());
      assertEquals(1, player2.getStrength());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-1.0F));
      player0.setConnected(false);
      player0.reset(false);
      int int0 = Packable.TEXT_MESSAGE;
      player0.pack();
      player0.pack();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(518L);
      player0.isConnected();
      player0.toString();
      player0.gangStrength();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1888);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-2014), "", (-2014));
      player0.toString();
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals((-2014), player0.getPictureId());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(10.0F);
      player0.setY((-2369.583F));
      player0.setDead();
      player0.setDead();
      player0.setZ(0.0F);
      player0.type();
      player0.getY();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      player0.setDead((long) (-4676));
      Player player1 = new Player((byte)0);
      int int0 = player0.getPictureId();
      assertEquals((-4676L), player0.getTimeOfDeath());
      assertEquals((-4676), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player0.unpack(dataInputStream0);
      player0.type();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(476);
      player0.pack();
      player0.setDead();
      Player player1 = new Player();
      player1.setY((short)4919);
      player0.setDead();
      player0.setDead();
      player1.setZ(10.0F);
      player0.type();
      player1.getY();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      byte[] byteArray0 = new byte[9];
      player0.setY((-1458.8F));
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)117;
      player0.unpack(byteArray0);
      player0.getName();
      assertEquals((-1458.8F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-2992), (String) null, (-2992));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis(2452L);
      Player player0 = new Player(1025, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", 1025, 1025);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Player.unpack(): *** WARNING *** data is not of proper type!", true);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1025);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(1025, player0.getPictureId());
      assertEquals(1025, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis(15000L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'yE[oobJUHjR{C6B1@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(3127, "GWh@L?", 3127);
      player0.setZ(3127);
      player0.type();
      int int0 = player0.getPictureId();
      assertEquals(3127.0F, player0.getZ(), 0.01F);
      assertEquals(3127, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(14883);
      player0.setDead(426L);
      player0.isJoinOK(player0, true);
      player0.getTimeOfDeath();
      float float0 = player0.getX();
      assertEquals(426L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-120));
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-120", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-3916), 5);
      player0.id = 5;
      player0.setDead();
      player0.getSubparty();
      player0.getName();
      player0.setDead(1813L);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-120));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1978));
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)59;
      player0.reset(false);
      byteArray0[1] = (byte)59;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte)75;
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1978", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-6));
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      int int1 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-6", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(1, int1);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(4165);
      String string0 = player0.toString();
      assertEquals(1, player0.getStrength());
      assertEquals("Player4165", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1982462795335826
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(0, "0.0.0.0", "0.0.0.0", 4919, 0);
      Party party0 = new Party();
      party0.next = (Party) player0;
      player0.add(party0);
      player0.setMoney(0);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(1L);
      player0.getIP();
      player0.setDead(1L, false);
      player0.setDead((long) 0);
      player0.setConnected(true);
      player0.setDead((-399L), false);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.setZ(0.0F);
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.getStrength();
      player1.setMoney(0);
      player1.setDead(0L, false);
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      Player player0 = new Player(4165, "*R5-8zB", "*R5-8zB", 4165, 4165);
      player0.setConnected(true);
      player0.unpack(dataInputStream0);
      int int0 = player0.getStrength();
      assertEquals(4165, int0);
      
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(4165, player0.getPictureId());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(252, "", 252);
      player0.setDead((-1270L), false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(252);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-2990));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(4153);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, long0);
      assertEquals("Player4153", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-73), "dY<=@;oeD2eG", (-73));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u00137\uFFFD\u0000\u0001\uFFFD\uFFFDA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\fdY<=@;oeD2eG", byteArrayOutputStream0.toString());
      assertEquals((-73), player0.getPictureId());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(1880);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1880);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(31, byteArrayOutputStream0.size());
      assertEquals("\u00137X\u0000\u0001\u0000\u0000A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nPlayer1880", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(3000);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-423));
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.id = (-953);
      int int0 = player0.gangStrength();
      assertFalse(player0.isConnected());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(0);
      player0.reset(true);
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-423));
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(14851);
      Party party0 = player0.head;
      player0.boss = null;
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player14851", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(4165);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(1888);
      String string0 = player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", string0);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player1888", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(14883);
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player14883", player0.getName());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-133));
      Player player1 = new Player(0);
      player0.add(player1);
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2, int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-133", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(10, "", (-3069));
      Party party0 = new Party();
      player0.head = party0;
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(2689);
      Party party0 = new Party();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte) (-83);
      byteArray0[5] = (byte)50;
      byteArray0[6] = (byte) (-65);
      player0.unpack(byteArray0);
      Party party1 = new Party(0);
      party0.head = party1;
      player0.add(party0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, false, "a!sWD;q^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(6249);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-120));
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-120", player0.toString());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-4453));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(500);
      float float0 = player0.getZ();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player500", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(14907);
      Player player1 = new Player((short)4919);
      Player player2 = new Player(2729);
      float float0 = player1.getY();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.toString());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player((-273));
      float float0 = player0.getMoney();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-273", player0.getName());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }
}
