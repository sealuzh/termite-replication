/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 08:07:23 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.util.LinkedList;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-1261));
      Player player1 = new Player(0, "~7n", "~7n", (short)4919, 0);
      player0.setJoinOK(player1, false);
      player0.setMoney((-1261));
      System.setCurrentTimeMillis(1392409296321L);
      player1.setX((short)4919);
      player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player1.getX(), 0.01F);
      
      Player player2 = new Player((-1261), "~7n", (-1261));
      assertEquals(10.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1261));
      Player player1 = new Player(0, "~7n", "~7n", (short)4919, 0);
      player0.setJoinOK(player1, false);
      player0.setMoney((-1261));
      System.setCurrentTimeMillis(1392409296320L);
      player0.setX(0);
      player0.isJoinOK(player1, false);
      assertEquals((-1261.0F), player0.getMoney(), 0.01F);
      
      Player player2 = new Player((short)4919, "~7n", (-1261));
      assertEquals((-1261), player2.getPictureId());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-1), "Player", (-4349));
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.gangStrength();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setMoney((-4349));
      player0.reset(false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)3;
      player0.unpack(byteArray0);
      player0.setX((-1972.815F));
      player0.getX();
      player0.setDead((long) (byte)1);
      System.setCurrentTimeMillis((short)4919);
      player0.pack();
      player0.gangStrength();
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals((-1972.815F), player0.getX(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 2;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int1 = 0;
      Player player0 = new Player(2, (String) null, (String) null, 992, 0);
      player0.getSubparty();
      Party party0 = new Party(2);
      player0.head = party0;
      player0.getStrength();
      player0.type();
      int int2 = 3227;
      Party party1 = new Party(3227);
      player0.add(party1);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(5, (String) null, (String) null, 5);
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(5, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)100;
      byteArray0[4] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-36), 67);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-911.4548F));
      float float0 = player0.getZ();
      assertEquals((-911.4548F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(618);
      player0.setY((-2115.6487F));
      player0.setConnected(false);
      player0.id = 8192;
      Player player1 = new Player(1751, "state.Party", "Player", 2147340491);
      player1.setZ((-2115.6487F));
      player0.remove(player1);
      player0.setConnected(false);
      player0.getX();
      player0.setZ(0.1F);
      player0.getIP();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isConnected();
      player0.gangStrength();
      player0.getZ();
      int int0 = player0.getStrength();
      assertEquals(0.1F, player0.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(618);
      player0.setConnected(false);
      player0.id = 8192;
      Player player1 = new Player(8192);
      player1.setZ((-2126.6528F));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 34);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player1.unpack(dataInputStream0);
      player0.remove(player1);
      player0.setConnected(false);
      player0.getX();
      player0.setZ(0.1F);
      player0.getIP();
      player0.isJoinOK(player0, false);
      player0.gangStrength();
      player0.getZ();
      player0.getStrength();
      player0.isJoinOK(player1, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-2126.6528F), player1.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(5, "QU", "QU", 5, (-18860));
      int int0 = player0.getStrength();
      assertEquals(5, player0.getPictureId());
      assertEquals((-18860), int0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-1246));
      player0.setY((-1246));
      player0.type();
      System.setCurrentTimeMillis(472);
      player0.setMoney(472);
      System.setCurrentTimeMillis(1392409296320L);
      player0.setX(0);
      player0.gangStrength();
      float float0 = player0.getMoney();
      assertEquals((-1246.0F), player0.getY(), 0.01F);
      assertEquals(472.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(5, "Player.unpack(): *** WARNING *** data is not of proper type!", 5);
      byte[] byteArray0 = new byte[9];
      Player player1 = new Player((-27233));
      player0.add(player1);
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-17);
      player1.setMoney((-2871.7913F));
      Player player2 = new Player((short)4919);
      player2.isJoinOK(player1, true);
      player2.pack();
      player1.getMoney();
      assertEquals((-2871.7913F), player1.getMoney(), 0.01F);
      
      int int0 = player2.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(10);
      Player player1 = new Player(0);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("Player10", player0.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(3, (String) null, (String) null, (-15360), 553);
      player0.toString();
      player0.getName();
      Player player1 = new Player(3, "s4Uu=Utl", (-15360));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(553, player0.getStrength());
      assertEquals((-15360), player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((short)4919);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      int int0 = Packable.GAME_STATE;
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-2502), ";KM3^\"54I q", "", 14335, 14335);
      player0.setY((-1878.691F));
      player0.setX(1838.7877F);
      player0.setY((-1878.691F));
      player0.getIP();
      player0.getZ();
      player0.getName();
      player0.toString();
      player0.getStrength();
      player0.type();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = player0.type();
      assertEquals(1838.7877F, player0.getX(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(5);
      Player player1 = new Player((short)4919);
      player1.setMoney(0.1F);
      player1.setDead((long) (short)4919, false);
      player1.isDead();
      System.setCurrentTimeMillis(507L);
      System.setCurrentTimeMillis(1691L);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((byte)7);
      player0.add(player0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, "~7n", "~7n", 472, 0);
      player0.gangStrength();
      System.setCurrentTimeMillis(472);
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(15000L);
      Player player0 = new Player((-495));
      player0.getTimeOfDeath();
      byte[] byteArray0 = new byte[2];
      player0.setY((-762.73785F));
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)97;
      player0.unpack(byteArray0);
      Party party0 = new Party();
      player0.boss = party0;
      player0.getStrength();
      player0.getTimeOfDeath();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis((-495));
      player0.getMoney();
      player0.getX();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-762.73785F), player0.getY(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(297, (String) null, 297);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-2527), "state.Player$JoinInfo", "state.Player$JoinInfo", (-2527), (-2527));
      int int0 = player0.gangStrength();
      assertEquals((-2527), int0);
      assertEquals((-2527), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      player0.setDead();
      Player player1 = new Player(4919, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "gWs(Z8P8r>.s", (short)4919, (short)4919);
      player0.setMoney((-1289.812F));
      player1.setConnected(true);
      player1.setY((-1040.0F));
      player1.getY();
      int int0 = player0.getPictureId();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-1), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-1));
      Party party0 = new Party();
      party0.next = (Party) player0;
      player0.remove(party0);
      party0.getSubparty();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      party0.add(player0);
      party0.remove(player0);
      party0.id = (int) (short)4919;
      player0.setDead((-1864L));
      player0.setY((-1));
      player0.setDead();
      player0.add(party0);
      player0.setX(1417.3F);
      player0.setX(1417.3F);
      player0.setDead((long) (-1), true);
      player0.getTimeOfDeath();
      player0.setDead((long) (-1));
      player0.setDead((long) (-1), true);
      player0.setY(1417.3F);
      assertEquals((-1L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(5);
      Player player1 = new Player((short)4919);
      boolean boolean0 = player1.isDead();
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.toString());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)3;
      byteArray0[2] = (byte) (-17);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      player0.unpack(dataInputStream0);
      player0.setDead(15000L);
      Player player1 = new Player(4, ">Pb_t-8lpjNpq0+\"C", "", (byte)3);
      player0.setY((byte)0);
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      assertEquals(15000L, player0.getTimeOfDeath());
      
      player1.toString();
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.975102728219374
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(874, (String) null, "J>Cd:o..NG<\"C79", 0);
      player0.reset(false);
      player0.setConnected(true);
      player0.boss = null;
      player0.setX(0.0F);
      player0.reset(false);
      player0.setDead();
      player0.isConnected();
      player0.setDead((long) 0);
      player0.getX();
      player0.setDead();
      player0.getStrength();
      player0.getSubparty();
      Player player1 = new Player((-1167), ".*[.]class$", (String) null, (short)4919);
      player1.reset(false);
      player1.prev = null;
      player1.remove(player0);
      player0.isJoinOK(player1, false);
      int int0 = Packable.UNDEFINED;
      player0.getZ();
      int int1 = player0.gangStrength();
      assertTrue(player0.isDead());
      assertEquals(1, int1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((byte)0);
      Party party0 = new Party((byte) (-17));
      player0.add(party0);
      player0.setMoney((byte) (-33));
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-27233));
      Party party0 = player0.head;
      player0.add((Party) null);
      player0.setMoney((-27233));
      Player player1 = new Player((-3315), "", "", (-27233));
      player0.setJoinOK(player1, true);
      player0.setY(0.0F);
      player0.isJoinOK(player1, true);
      player0.pack();
      player0.pack();
      player1.isJoinOK(player0, true);
      assertEquals((-27233.0F), player0.getMoney(), 0.01F);
      
      player1.getIP();
      assertEquals((-27233), player1.getPictureId());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(10391);
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player((short)4919);
      player0.setConnected(false);
      player1.add(player0);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player1.next = (Party) player0;
      player0.setZ((-1));
      Party party0 = player0.head;
      player0.pack();
      player0.gangStrength();
      player1.setConnected(false);
      player1.getY();
      player1.setMoney((-508.852F));
      player0.setMoney((short)4919);
      player0.setConnected(false);
      player0.getSubparty();
      player0.setY(2051.4026F);
      player0.getY();
      int int0 = Packable.GAME_EVENT;
      int int1 = player0.gangStrength();
      assertFalse(player0.isConnected());
      assertEquals(2, int1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(1237, "'|B'C_{gQv9v;L", 1237);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u00137\uFFFD\u0000\u0001\u0004\uFFFDA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E'|B'C_{gQv9v;L", byteArrayOutputStream0.toString());
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(53);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      player0.setMoney((-27233));
      assertEquals((-27233.0F), player0.getMoney(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(2, "om[m4;UZo", 2);
      player0.setDead();
      player0.getTimeOfDeath();
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(0);
      String string0 = player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player0", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-4342));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-256), ".}Y13grjAPCo)-sBc.y", (-256));
      System.setCurrentTimeMillis((short)4919);
      boolean boolean0 = player0.isConnected();
      assertEquals((-256), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2181);
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player2181", player0.toString());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(3868, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 726, 3868);
      MockPrintStream mockPrintStream0 = new MockPrintStream("module.ModuleBrowserDialog$ModuleFilter");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      assertEquals(726, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(3868, player0.getStrength());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-3879));
      MockFile mockFile0 = new MockFile("'j:/>");
      MockFile mockFile1 = new MockFile(mockFile0, "SG");
      mockFile1.getAbsoluteFile();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.reset(true);
      int int0 = Packable.ACTION;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-619), "", "n+GJb52?fncP", 0);
      player0.getY();
      player0.id = (-619);
      player0.setY((-619));
      player0.setX(1.0F);
      player0.getStrength();
      player0.setMoney(0);
      Party party0 = player0.prev;
      player0.boss = null;
      player0.setY(3375.5273F);
      player0.reset(false);
      assertEquals(3375.5273F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(1104, "", 0);
      player0.reset(true);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-8326));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-1));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Player player0 = new Player((-2073), "Dam8@82x`dg/8", "Dam8@82x`dg/8", (-1427), (-1427));
          player0.toString();
          byte[] byteArray0 = new byte[6];
          byteArray0[0] = (byte)31;
          Player player1 = new Player(0);
          player0.next = (Party) player1;
          byteArray0[1] = (byte)98;
          byteArray0[2] = (byte) (-52);
          byteArray0[3] = (byte)4;
          byteArray0[4] = (byte)1;
          byteArray0[5] = (byte) (-28);
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          MockFileOutputStream mockFileOutputStream0 = null;
          try {
            mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"writeFileDescriptor\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:245)
             // org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
             // sun.reflect.GeneratedConstructorAccessor73.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(19);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(10, "x\u0005tTVG|UMk^gu9G", "x\u0005tTVG|UMk^gu9G", 10);
      player0.boss = (Party) player1;
      Player player2 = new Player();
      player0.setJoinOK(player2, false);
      Player player3 = new Player(10, "/Sl.gGuogd4}B", "\"", 10);
      player0.isConnected();
      player0.setMoney(0.0F);
      player0.isJoinOK(player3, true);
      player0.getZ();
      player0.setDead(0L, false);
      assertTrue(player0.isDead());
      
      int int0 = player3.getPictureId();
      assertFalse(player3.isDead());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-1938), "state.Player$JoinInfo", "state.Player$JoinInfo", (-1938), (-826));
      player0.reset(true);
      player0.setY(0.0F);
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = Packable.UNDEFINED;
      int int1 = player0.getPictureId();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-826), player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals((-1938), int1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(10);
      player0.setDead();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-12320), (-12320));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      Player player0 = new Player((-12320));
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-12320", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(0);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-1800));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream0.available();
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(19);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(2155);
      player0.getSubparty();
      player0.setDead((long) (short)4919);
      int int0 = player0.gangStrength();
      assertEquals(4919L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }
}
