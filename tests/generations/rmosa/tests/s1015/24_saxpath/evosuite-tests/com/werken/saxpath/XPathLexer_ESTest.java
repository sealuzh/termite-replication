/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 17:13:12 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.893390768293866
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-504));
      xPathLexer0.consume((-2902));
      xPathLexer0.consume();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.893547446711414
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      int int0 = (-1885);
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1885));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.894245637761874
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ");
      Token token0 = xPathLexer0.colon();
      assertEquals(")", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") ");
      xPathLexer1.rightBracket();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath(") ");
      Token token2 = xPathLexer1.notEquals();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertNull(token4);
      
      XPathLexer xPathLexer2 = new XPathLexer(") ");
      Token token5 = xPathLexer2.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("..?yE`7Ca}n\"");
      xPathLexer0.number();
      xPathLexer0.setXPath("..?yE`7Ca}n\"");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1456));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.794892785301738
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-3663));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.whitespace();
      xPathLexer0.consume((-2347));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.694431281246834
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T&Jy=o}d9R");
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.892740633623113
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      xPathLexer0.setXPath("N7\"UU7");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("N7", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("\"", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals("U", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = ":<1=";
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      xPathLexer0.consume();
      xPathLexer0.consume((-2667));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1698));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.796702740052869
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer1.consume((-4417));
      // Undeclared exception!
      try { 
        xPathLexer1.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">d");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(">", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.and();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9824190875989465
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<=");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<=", token1.getTokenText());
      assertEquals(8, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("S<NNU");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftParen();
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5775965232296514
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("Xid1-avBL/L6dn");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("H?.wT,UhRdUx=w}mw");
      xPathLexer0.number();
      xPathLexer0.setXPath("jOV~JY5dP6kgWhTb");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.57707187343339
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      Token token0 = xPathLexer0.identifier();
      assertEquals("OGF", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("gA5", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('5', char0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8938952727983707
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.literal();
      xPathLexer0.consume((-1067));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.440959654005808
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U'L");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "Psd0XGI8:'QADg6D";
      XPathLexer xPathLexer0 = new XPathLexer("Psd0XGI8:'QADg6D");
      xPathLexer0.consume();
      xPathLexer0.consume((-2667));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.57707187343339
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("]z7s335|ld$/y");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("z7s335", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("|", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0618818727989607
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OVNk/`#*^UA/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("O", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      assertEquals("`#*^UA/hX(0", token5.getTokenText());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      xPathLexer0.setXPath("OVNk/`#*^UA/hX(0");
      xPathLexer0.setXPath("OVNk/`#*^UA/hX(0");
      Token token7 = xPathLexer0.nextToken();
      assertEquals("OVNk/`#*^UA/hX(0", token7.getTokenText());
      
      xPathLexer0.consume((-1421));
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-1421), int0);
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6939987708846065
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qNg<>Z:pS}\"$}");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.minus();
      assertEquals("N", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(9, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Z", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C\u0002W");
      Token token0 = xPathLexer0.identifier();
      assertEquals("C\u0002W", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("C\u0002W");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" j>8]Ae@FY~|ps;D\"U|");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("j", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(".q-W=dhkT");
      Token token3 = xPathLexer1.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(9, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.796702740052869
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "4";
      XPathLexer xPathLexer0 = new XPathLexer("4");
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.consume((-2927));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6936784780454395
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-W=dhkT");
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("WE`\"x>_TG[d");
      Token token3 = xPathLexer1.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("E", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d%$vIcGLXT,[R?$,");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.setXPath("&]nK'R");
      Token token1 = xPathLexer0.slashes();
      assertEquals("&", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("n", token3.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5762157352282227
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u$m;pTwE8");
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("rs2]bR");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("rs2", token0.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z:]PS&%H(T/b&8>R");
      xPathLexer0.dots();
      xPathLexer0.consume((-2104));
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F|;Qsyncg[");
      xPathLexer0.consume((-2046));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("K.P!8pc");
      xPathLexer0.number();
      xPathLexer0.setXPath("Y\")U");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L*\"M_?N\"\"z");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("L*\"M_?N\"\"z");
      assertEquals("L*\"M_?N\"\"z", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8934704940373086
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.consume((-1252));
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.colon();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ");
      xPathLexer0.setXPath("S=!3 EF");
      XPathLexer xPathLexer1 = new XPathLexer("S=!3 EF");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("S", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer1.currentPosition();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.694737015147165
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      XPathLexer xPathLexer1 = new XPathLexer("y=^Z;DTF");
      xPathLexer1.setXPath("3.}<$S>B7");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals("3.", token1.getTokenText());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7414996504463278
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d%$vIcGLXT,[R?$,");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("%", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("$", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("vIcGLXT", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(",", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6929510730627153
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TnL\"OB3yh:is8");
      Token token0 = xPathLexer0.plus();
      assertEquals("T", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("TnL\"OB3yh:is8");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("T", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Ru");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Ru", token2.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7755340062775322
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.minus();
      int int0 = (-62);
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.consume((-1049));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/%#+3:r");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("K.P!8pc");
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("*p:k)%");
      assertFalse(xPathLexer2.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath("Zn");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("n", token3.getTokenText());
      assertNotSame(token3, token1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4394249230317415
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("K", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("!8", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("pc", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J^UWa[~Q*3kqc");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("J", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.057185940313811
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-W=dhkT");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("-W", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("hkT", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      char char0 = xPathLexer0.LA(124);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6689245976976068
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-Ws+=dhkeV");
      Token token0 = xPathLexer0.minus();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("q", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("W", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals("s", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.797997937030743
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-W=dhkT");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("q", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("W", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.2221917987288662
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      xPathLexer0.identifier();
      xPathLexer0.setXPath("3jZFWC+pIxn% CRfC^f");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2829875394034933
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{+8");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{+8", token1.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4365210911123656
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-3262));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5909155817323486
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f9ZK?@[i");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("9", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("?@[i", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("?", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8424708524015925
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d%$vIcGLXT,[R?$,");
      Token token0 = xPathLexer0.plus();
      assertEquals("d", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("vIcGLXT", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(32, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals("R", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0798982912206343
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-W=dhkT");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.number();
      assertEquals("", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("q", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(21, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("d", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("hkT", token5.getTokenText());
      
      char char0 = xPathLexer0.LA(124);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4377134277438377
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d%$vIcGLXT,[R?$,");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("%$vIcGLXT,[R?$,", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("d%$vIcGLXT,[R?$,");
      char char0 = xPathLexer1.LA(154);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6092946518790576
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-Ws+=dhkeV");
      Token token0 = xPathLexer0.minus();
      assertEquals(".", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("q-Ws", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8000975308049907
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9ZH@B0Q;yH");
      Token token0 = xPathLexer0.identifier();
      assertEquals("9ZH", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("B0Q", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#~HttJJ)O*wD3~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#~HttJJ)O*wD3~", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("#", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.4401630226185316
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("OGF<gA5=2K");
      xPathLexer0.number();
      xPathLexer0.setXPath("7U");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5778935540637367
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("wm0$a<&O{XX/7+aM");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.2970688599688531
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=6>CQ6k*fRsn");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("6", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(">", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Q6k", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1000039501699495
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a[&KA0O2Bl_qXcF8Pw");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("Mc7[VEPf;7l>~4.");
      xPathLexer0.number();
      xPathLexer0.setXPath("Mc7[VEPf;7l>~4.");
      assertEquals("Mc7[VEPf;7l>~4.", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u|+Ub");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.796837966557264
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = (-804);
      xPathLexer0.setXPath("");
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.equals();
      xPathLexer0.consume((-804));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6296886294195168
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      Token token0 = xPathLexer0.identifier();
      assertEquals("OGF", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("g", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("A5", token2.getTokenText());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("=", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals("2", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6584494767907345
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      Token token0 = xPathLexer0.identifier();
      assertEquals("OGF", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("g", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("A5", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals("=", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6903752622677266
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("da-moK4n6y:");
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("77sJQ>.0>53");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("7", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.2829875394034933
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("`>>YKD|rT}mVP");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("`", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      assertNotNull(token1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3132129941929966
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      Token token0 = xPathLexer0.dollar();
      assertEquals("O", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("GF", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.4064173635573713
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("K", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals(".P", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("8", token4.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M:6f)");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("N'P{>JkgS");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("N", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5762968875917855
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      xPathLexer0.setXPath(") B(");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5758444193776775
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("sJI_ b{VX[W'?:k4y&u");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("JI_", token1.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f9ZK?@[i");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("9", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.540746476713005
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qNg<>Z:pS}\"$}");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("g", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(9, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      char char0 = xPathLexer0.LA(2413);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1091617561567364
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3693236379461737
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      Token token0 = xPathLexer0.plus();
      assertEquals("K", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("K.P!8pc");
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("K.", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("!8", token3.getTokenText());
      
      xPathLexer0.setXPath("K.P!8pc");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("K.P", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("5cO#0oX");
      Token token0 = xPathLexer0.number();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5Q_{MGuxM0vsRu");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":4v4Waw");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("v", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H4KJ*hE;):*x`P8K&");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("H", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.0561996387484545
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("K", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals(".", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("OGF<gA5=2K", token1.getTokenText());
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4013641903652667
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("K.P!8pc");
      xPathLexer0.number();
      xPathLexer0.setXPath(":;#Y");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.7400126661051605
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M:6f)");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("f)", token3.getTokenText());
      
      xPathLexer0.setXPath("e##Cct#O+QGnCO^p");
      xPathLexer0.and();
      Token token4 = xPathLexer0.at();
      assertEquals("e", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7416895007566602
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d%$vIcGLXT,[R?$,");
      Token token0 = xPathLexer0.slashes();
      assertEquals("d", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(32, token5.getTokenType());
      assertEquals(",", token5.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.819828468364143
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OVNk/`#*^UA/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("O", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("V", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("N", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(11, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.setXPath("OVNk/`#*^UA/hX(0");
      xPathLexer0.setXPath("OVNk/`#*^UA/hX(0");
      Token token6 = xPathLexer0.nextToken();
      assertEquals("OVNk", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token7 = xPathLexer0.pipe();
      assertEquals("/", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5779400401783343
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("}n4X");
      XPathLexer xPathLexer1 = new XPathLexer("b0Cu>");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      xPathLexer0.setXPath("<2x8,BK<");
      Token token0 = xPathLexer0.slashes();
      assertEquals("<", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("2", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("x8", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(",", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.6297390267182215
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("OGF", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("g", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("A5", token2.getTokenText());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ >(");
      xPathLexer0.setXPath("I3&^3z");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5909899035458008
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f9ZK?@[i");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("9", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("@", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",\"Nk/`#*^UA/hX(0");
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      assertEquals("com.werken.saxpath.Token", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("OV");
      xPathLexer1.consume();
      xPathLexer0.setXPath("OV");
      Token token1 = xPathLexer0.slashes();
      assertEquals("O", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("V", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&Q\"|#{Y30zG:UX/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&Q\"|#{Y30zG:UX/", token0.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|^");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o@QZN3#cy@f");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d%$vIcGLXT,[R?$,");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("$", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.56163929758439
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",\"Nk/`#*^UA/hX(0");
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      assertEquals("com.werken.saxpath.Token", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.4508711307083795
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",\"Nk/`#*^UA/hX(0");
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      assertEquals("com.werken.saxpath.Token", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.6870979595825946
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      Token token0 = xPathLexer0.identifier();
      assertEquals("OGF", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("<", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("K", token5.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0398762159765704
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-W=dhkT");
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("W", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("=", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      char char0 = xPathLexer0.LA(124);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5765843988226926
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Tokn");
      xPathLexer0.setXPath("iOBRIPA");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("iOBRIPA", token0.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7754959008779971
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals(".P", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("8", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.equals();
      assertEquals("p", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume((-1265));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lgr$&duEPAz.aL");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lgr", token0.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.664078396895303
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L*\"M_?N\"\"z");
      Token token0 = xPathLexer0.colon();
      assertEquals("L", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (27) (M_?N)", string0);
      
      xPathLexer0.setXPath("L*\"M_?N\"\"z");
      xPathLexer0.setPreviousToken(token1);
      assertEquals(27, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("L", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(20, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m");
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.314067863661005
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      XPathLexer xPathLexer1 = new XPathLexer("y=^Z;DTF");
      xPathLexer1.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("y", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("y=^Z;DTF");
      Token token2 = xPathLexer2.doubleColon();
      assertEquals("y=", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer2.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.6581815085641098
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.2558872201472313
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("y", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("=", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^0O;Suw'p~I");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("^", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("0", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o@QZN3#cy@f");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("o@QZN3#cy@f");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4[H&$2 O)");
      Token token0 = xPathLexer0.plus();
      assertEquals("4", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume();
      String string0 = "I0CLM.w\\uM+S$dpvC*";
      xPathLexer0.setXPath(string0);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3542781238188897
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("da-moK4n6y:");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (2) (d)", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(108);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.0570075886399803
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".q-W=dhkT");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("W", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("=", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      char char0 = xPathLexer0.LA(124);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L*\"M_?N\"\"z");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("TAPW");
      xPathLexer0.number();
      xPathLexer0.setXPath("+k");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ t(");
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("AT+a78/pDqu");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("T", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("+", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.865232813709616
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.setXPath("as!8Rk");
      Token token3 = xPathLexer0.nextToken();
      assertNotSame(token3, token0);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("as", token4.getTokenText());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkensaxpath.XPathLexer");
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierStartChar('?');
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m}e");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("[hj^];");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer0.setXPath("K.P!8pc");
      assertFalse(xPathLexer0.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.275210232332599
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("OG", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("F", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.5772956189330545
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F>)x2HAn&lTfim*0k");
      XPathLexer xPathLexer1 = new XPathLexer("eUpriE15~");
      xPathLexer1.setXPath("eUpriE15~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("F", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer1.div();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("eUpriE15", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.minus();
      xPathLexer0.consume((-2897));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gPmoS3>Vi(;i");
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.consume((-914));
      xPathLexer0.dollar();
      String string0 = "~oxuGny8`whuA?9M^X";
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.consume(1);
      xPathLexer0.literal();
      xPathLexer0.consume((-267));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5988187104619234
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qNg<>Z:pS}\"$}");
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.consume((-1687));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ");
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.6935749422997235
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dZxH'DQxR(r^gI");
      Token token0 = xPathLexer0.minus();
      assertEquals("d", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("H", token4.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.8437131168449574
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M:6f)");
      Token token0 = xPathLexer0.comma();
      assertEquals("M", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("6", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(")", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.setXPath("e##Cct#O+QGnCO^p");
      xPathLexer0.and();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("#", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.8943491735075906
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ok/W*^A/hX(0");
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.consume((-2033));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.8003628707718233
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("lsUcEgX9)");
      xPathLexer0.setXPath("");
      Token token1 = xPathLexer1.pipe();
      xPathLexer1.operatorName();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("sUcEgX9", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("<s/x1yiz`P3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("s", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.56163929758439
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",\"Nk/`#*^UA/hX(0");
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      assertEquals("com.werken.saxpath.Token", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5410390240691085
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qNg<>Z:pS}\"$}");
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.LA(2413);
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1623));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("da-moK4n6y:");
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("");
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("E^11)s$zmhfb!");
      assertEquals("E^11)s$zmhfb!", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.89156615887432
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.consume((-2028));
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.2863831251420335
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u|+Ub");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token0 = xPathLexer1.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer2.literal();
      assertNull(token1);
      
      char char0 = xPathLexer1.LA(1);
      assertEquals('o', char0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.2378032731165276
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.slashes();
      assertEquals("[", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.7086624601067193
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M:6f)");
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setXPath("M:6f)");
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.1109790684475063
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.slashes();
      assertEquals(":", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.6069039235440976
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M:6f)");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("M:6f)");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5Q_{MGuxM0vsRu");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.2750113295831427
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.528011521041178
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f9ZK?@[i");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("9", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("K", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.3454094294859633
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(1, token4.getTokenType());
      assertEquals("(", token4.getTokenText());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.6649319311628525
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]YmW");
      xPathLexer0.and();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("]Y", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("y=^Z;DTF");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("^Z;DTF", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals(";", token4.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals("DTF", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("D", token6.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      char char0 = xPathLexer0.LA(618);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RHA");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.6296536135748472
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OGF<gA5=2K");
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.2752344276719356
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.1091617561567364
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertNotNull(token2);
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.261376231819599
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      char char0 = xPathLexer0.LA(13);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.2381035433597463
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ (");
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1660));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.1993455738253633
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.slashes();
      assertEquals("[", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(" ", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.2002651140552483
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(")", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.6485063490641572
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f9ZK?@[i");
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.1466536191066135
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer1.literal();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.2610258668560952
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 168
  /*Coverage entropy=1.3988313770746026
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      XPathLexer xPathLexer1 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer1.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("y=", token0.getTokenText());
      
      xPathLexer1.setXPath("3.}<$S>B7");
      xPathLexer1.slashes();
      xPathLexer1.getXPath();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer1.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("y", token3.getTokenText());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=2.0965468360816946
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lsUcEgX9)");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("s", token1.getTokenText());
      
      xPathLexer0.minus();
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.getXPath();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      xPathLexer0.isIdentifierChar('%');
      Token token4 = xPathLexer0.nextToken();
      assertEquals("gX9", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.isIdentifierChar('V');
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.2381960075298806
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.or();
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.slashes();
      assertEquals("[", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.0514953720261409
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      xPathLexer0.consume();
      xPathLexer0.setXPath("K.P!8pc");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.260752362582591
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("1", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.0609338259129844
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.!c");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("c", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.311519217855141
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("*U", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("[ (");
      Token token1 = xPathLexer0.slashes();
      assertEquals("[", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.2763802555111559
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath(".?yE`7Ca}n\"");
      xPathLexer0.setXPath(".?yE`7Ca}n\"");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals("?", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("yE", token3.getTokenText());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.0129300738460627
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.P!8pc");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("K.P!8pc");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.1359403966720012
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.!c");
      Token token0 = xPathLexer0.comma();
      assertEquals("K", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("!", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(16);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('u');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('(');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.1474765236471798
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=1.0602663434343995
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.!c");
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.star();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.134123084381231
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.!c");
      Token token0 = xPathLexer0.plus();
      assertEquals("K", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(".", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1456));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 185
  /*Coverage entropy=1.310783328532895
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*UpriE15~");
      xPathLexer0.consume((-1));
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.setXPath("[ (");
      Token token1 = xPathLexer0.slashes();
      assertEquals("[", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=0.9858327348665712
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M:6f)");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=1.1476409162166357
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<1=");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(":", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=0.9392203941812463
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M:6f)");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("6", token2.getTokenText());
  }
}
