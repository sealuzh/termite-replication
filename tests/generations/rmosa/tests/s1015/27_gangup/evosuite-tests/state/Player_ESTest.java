/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 17:36:55 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(2214, (String) null, 19255);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)28;
      Party party0 = new Party(2147383746);
      player0.add(party0);
      byte byte0 = (byte) (-63);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-713), ".*[.]class$", 2147270751);
      System.setCurrentTimeMillis((-257L));
      System.setCurrentTimeMillis((-713));
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      System.setCurrentTimeMillis(15010L);
      player1.setDead((-1L), true);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(4919, "state.Player", "state.Player", 4919, 0);
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(4919, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player(4, "~9hMSz*h6Abt8vQx-", "^[)vr\"mPa", 4);
      player0.setY(0L);
      player0.setConnected(false);
      byte[] byteArray0 = player0.pack();
      player0.setZ(4);
      player0.getZ();
      float float0 = Player.MOVE_DISTANCE;
      player0.pack();
      player0.getStrength();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      Player player0 = new Player((-377), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-1));
      Party party0 = new Party(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)55;
      player0.setMoney((byte)5);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[Yk:(n|");
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      party0.id = 3;
      player0.head = party0;
      player0.setY((-377));
      player0.getY();
      player0.getY();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        DataInputStream.readUTF((DataInput) dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player((-1309), "state.Player", (-1309));
      player0.setX(0.0F);
      player0.setConnected(false);
      Player player1 = new Player((short)4919, "ShptNp>", (String) null, (-1309));
      player0.isJoinOK(player1, false);
      player0.pack();
      player0.setDead(19L, false);
      Player player2 = new Player(89, "ShptNp>", 1);
      player0.getX();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals(19L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(3248, (String) null, 3248);
      player0.setDead(690L, true);
      player0.isConnected();
      player0.setY(690L);
      player0.toString();
      Player player1 = new Player((short)4919, "uw|q_<@a|R1z", "", (short)4919);
      player1.next = (Party) player0;
      player0.setMoney((-591.5043F));
      player0.isBoss();
      Player player2 = new Player((short)4919, (String) null, (String) null, 3248);
      player2.isJoinOK(player1, true);
      player0.getMoney();
      player0.toString();
      player0.getStrength();
      player0.getMoney();
      player2.isJoinOK(player1, true);
      System.setCurrentTimeMillis(633L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-1), "", 207);
      player0.getStrength();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte) (-78);
      player0.unpack(byteArray0);
      player0.getZ();
      player0.setZ((byte) (-106));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getZ();
      player0.getZ();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-1084), "", "", 4919);
      boolean boolean0 = player0.isConnected();
      float float0 = Player.TOLERANCE;
      Player player1 = new Player((-1), "rc90z9@", "", 2281);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertFalse(boolean1 == boolean0);
      assertEquals("rc90z9@", player1.getIP());
      
      player0.getName();
      assertEquals(4919, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(92, "", (String) null, 4919);
      boolean boolean0 = player0.isConnected();
      float float0 = Player.TOLERANCE;
      Player player1 = new Player((-1), (String) null, "", 2281);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertFalse(boolean1 == boolean0);
      
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(4919, player0.getPictureId());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(2843L);
      Player player0 = new Player(539);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-772), 1235);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(3248, (String) null, 3248);
      player0.setDead((-37L), true);
      player0.setDead(690L, true);
      player0.isConnected();
      player0.setY(690L);
      player0.toString();
      Player player1 = new Player((short)4919, "uw|q_<@a|R1z", "", (short)4919);
      player0.isBoss();
      Player player2 = new Player();
      player2.isJoinOK(player1, true);
      player0.getMoney();
      player0.toString();
      int int0 = player0.getStrength();
      assertEquals(690L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(1919);
      Player player1 = new Player(1919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player1919", player1.getName());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(160);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player160", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-1084));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      player0.setDead((long) (-1084), false);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-2);
      player0.getSubparty();
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.pack();
      player0.getTimeOfDeath();
      float float0 = player0.getY();
      assertEquals((-1084L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8876911911657177
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.getPictureId();
      byte[] byteArray0 = player0.pack();
      player0.gangStrength();
      Player player1 = (Player)player0.gangBoss();
      player0.setConnected(true);
      player0.setDead();
      player1.unpack(byteArray0);
      player1.unpack(byteArray0);
      player1.pack();
      player1.getTimeOfDeath();
      player0.pack();
      player1.isJoinOK(player0, true);
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      Player player0 = new Player(1994, "", "3&;A.Kqt5Gqm=d~", 1);
      String string0 = player0.getIP();
      assertEquals(1, player0.getStrength());
      assertEquals("", string0);
      
      Player player1 = new Player(0, "", "3&;A.Kqt5Gqm=d~", 2621, 0);
      assertEquals(0, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(2621, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setConnected(false);
      player0.pack();
      System.setCurrentTimeMillis((-1));
      Player player1 = new Player();
      assertEquals(0L, player1.getTimeOfDeath());
      
      player1.setDead(1L, false);
      player0.setJoinOK(player1, true);
      player0.type();
      System.setCurrentTimeMillis((-2479L));
      player0.type();
      System.setCurrentTimeMillis(4919L);
      player0.isConnected();
      player1.pack();
      assertEquals(5, player1.type());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(2116, "", "", (short)4919);
      player1.isBoss();
      Player player2 = new Player();
      boolean boolean0 = player2.isJoinOK(player1, true);
      assertEquals(4919, player1.getPictureId());
      assertFalse(boolean0);
      
      float float0 = player2.getMoney();
      assertEquals("Player-1", player2.toString());
      assertEquals(0, player2.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      
      Player player3 = new Player((short)4919, "", (short)4919);
      player3.toString();
      assertEquals(1, player3.getStrength());
      assertTrue(player3.isConnected());
      assertEquals("0.0.0.0", player3.getIP());
      assertEquals(0L, player3.getTimeOfDeath());
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertFalse(player3.isDead());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KvRa14uV?>w>%E");
      Player player0 = new Player((-1084), "KvRa14uV?>w>%E", "^", (-362), (-23255));
      int int0 = player0.getStrength();
      assertEquals("KvRa14uV?>w>%E", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-23255), int0);
      assertTrue(player0.isConnected());
      assertEquals((-362), player0.getPictureId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.2005875145350458
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(165, (String) null, "", 1676, 1676);
      player0.getSubparty();
      player0.getSubparty();
      player0.pack();
      Player player1 = new Player();
      player0.setConnected(true);
      player1.setConnected(true);
      player0.setDead(0L, false);
      Player player2 = new Player((-1), "", (String) null, 3476, (-26988));
      player2.setZ(165);
      player1.gangStrength();
      Player player3 = new Player((-1), (String) null, "", (-26988));
      Player player4 = new Player((short)4919, "", (-3959));
      player4.getSubparty();
      player2.setMoney((-1.0F));
      player0.setY((short)4919);
      player3.toString();
      player0.getIP();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player5 = new Player((short)4919, "", (String) null, (short)4919, (-419));
      player5.add(player2);
      player2.isBoss();
      player4.getMoney();
      // Undeclared exception!
      try { 
        player5.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1084));
      String string0 = player0.toString();
      assertFalse(player0.isDead());
      assertEquals("Player-1084", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(763, "", "", (-3433));
      Player player1 = new Player((short)4919, "NO", (-3433));
      player0.isJoinOK(player1, false);
      player0.getZ();
      player0.setX(0.2F);
      player0.getTimeOfDeath();
      player1.getPictureId();
      player1.isJoinOK(player0, false);
      player0.getZ();
      player0.gangStrength();
      assertEquals(0.2F, player0.getX(), 0.01F);
      
      player1.pack();
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(10.0F);
      player0.setMoney(0.2F);
      player0.setZ(0.2F);
      player0.gangStrength();
      player0.reset(true);
      player0.getMoney();
      int int0 = Packable.UNDEFINED;
      player0.getX();
      player0.setMoney(102.31241F);
      player0.getY();
      player0.setZ(0.0F);
      player0.setY(2960.2815F);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(10.0F);
      player0.setMoney(0.0F);
      player0.setZ(0.0F);
      player0.gangStrength();
      player0.reset(true);
      player0.getMoney();
      player0.gangStrength();
      player0.getX();
      Player player1 = new Player((short)4919, "gui.ModuleBrowserDialog$ModuleFilter", 1);
      player1.head = (Party) player0;
      player1.head = (Party) player0;
      player1.getSubparty();
      player1.setMoney(1);
      player0.isJoinOK(player1, true);
      player1.setX(1302.1F);
      float float0 = player1.getMoney();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-228), ";0..Y;;EDr\"R5=!", "U3Dmr1Oi", 0, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      MockFile mockFile0 = new MockFile("U3Dmr1Oi", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      player0.reset(true);
      int int1 = player0.type();
      assertEquals(5, int1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2573, "jk[a-}", "", 2573, (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%vB-:7d7r GmpW%uU");
      player0.gangStrength();
      player0.getMoney();
      Party party0 = new Party();
      player0.next = party0;
      party0.remove(player0.next);
      player0.getName();
      player0.getZ();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(151);
      player0.getSubparty();
      Player player1 = new Player((short)4919);
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Player4919", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-2102744404), (String) null, (String) null, 2147326288, 10);
      player0.gangStrength();
      player0.type();
      System.setCurrentTimeMillis((-2102744404));
      MockFile mockFile0 = new MockFile("");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.isConnected();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      System.setCurrentTimeMillis(16L);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      System.setCurrentTimeMillis(16L);
      player1.setDead((-1L), false);
      player1.isJoinOK(player0, false);
      player1.isDead();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1976));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 14;
      String string0 = "";
      Player player0 = new Player(14, "4>2>B2SIQ<wb(", "", 14);
      int int1 = 58;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1759));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.pack();
      assertEquals(33, player0.getId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-87);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(319);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player319", player0.getName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(2);
      float float0 = player0.getZ();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player2", player0.getName());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(603, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 10, (-1));
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = player0.getPictureId();
      assertEquals(10, int0);
      
      Player player1 = new Player((short)4919, "module.ModuleBrowserDialog$ModuleFilter", 5);
      player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int1 = player0.gangStrength();
      assertEquals((-1), int1);
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(9482);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(16882);
      float float0 = player0.getMoney();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player16882", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-82));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)37;
      byteArray0[6] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(5, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o9yN^qr[g;>7'eT&");
      Player player0 = new Player(20, "o9yN^qr[g;>7'eT&", 20);
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(20, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(1);
      player0.setMoney(1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      MockPrintStream mockPrintStream1 = null;
      try {
        mockPrintStream1 = new MockPrintStream(mockPrintStream0, false, "AI");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // AI
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-2103));
      player0.setDead((long) (-2103));
      player0.reset(true);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player((short)4919);
      player1.setDead(0L, false);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-13244), "-F~y&,t#o", 22046);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("b(7sO", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis(22046);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(6717, "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 6717, 6717);
      int int0 = player0.getStrength();
      assertEquals(6717, int0);
      assertTrue(player0.isConnected());
      assertEquals(6717, player0.getPictureId());
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(37);
      player0.reset(false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
      assertEquals("Player37", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-1);
      Player player0 = new Player(255);
      int int1 = (-1920);
      String string0 = "=";
      String string1 = "";
      int int2 = (-593);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(0);
      int int0 = player0.getStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, int0);
      assertEquals("Player0", player0.getName());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-1759));
      player0.setConnected(true);
      Player player1 = new Player(4);
      player0.isJoinOK(player1, true);
      player0.setX((-1598.46F));
      player0.setConnected(false);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(4, "eS2s}`Gubo|{O5U~GQg", (short)4919);
      player2.pack();
      player1.setDead((long) 4, true);
      Player player3 = new Player((-205), "", (-131));
      player0.getX();
      Player player4 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(1005);
      float float0 = player0.getX();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("Player1005", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-1322));
      int int0 = player0.getPictureId();
      assertEquals(1, player0.getStrength());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1322", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(3240, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 3597);
      player0.getName();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(3597, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, long0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player(1044);
      boolean boolean0 = player0.isDead();
      boolean boolean1 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean1 == boolean0);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player1044", player1.getName());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player((-26988));
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      player0.gangStrength();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(1924);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player((-1084));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals("Player-1084", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Player player0 = new Player((-3823));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player(6717);
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)37;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player((-1536));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals("Player-1536", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }
}
