/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 16:58:05 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P[~7xD,CJs");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("P", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("extends");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SwitchTo(1);
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.getBeginColumn());
      assertEquals(7, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("shHort");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1837132182957943
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gx^<>L<$%SzD");
      stringReader0.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"throow\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1864805138932786
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader("JFY/9OWr57^]<u%*b");
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2682, (-4067));
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2682, column -4051.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringReader stringReader0 = new StringReader("falSe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-696), 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(31, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5895213795772005
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("5|1og_<).p1SuZt43C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1449, (-469), 3512);
      StringReader stringReader1 = new StringReader("5|1og_<).p1SuZt43C");
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, (-469), 1449);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-254), 159, 2575);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-468), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5875011775569985
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"fdnaHly,");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, 35, 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(41);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 41. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&,:EkX0%");
      StringReader stringReader1 = new StringReader("&,:EkX0%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 115, 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(105, token0.kind);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<`");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("e0b?t)bw=}W7Bv*;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("e0b", token0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=-=kTmc@\"@?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1213, 1213);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(87, token0.kind);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      StringReader stringReader1 = new StringReader("1d$");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)69;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3986, (byte)116);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (byte) (-33), (-1014), 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("1", token0.toString());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      StringReader stringReader1 = new StringReader("rXsAx91#(0|*D%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("`A>");
      stringReader0.reset();
      StringReader stringReader3 = new StringReader("rXsAx91#(0|*D%");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringReader stringReader0 = new StringReader("protected");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)36;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte)116;
      byteArray0[7] = (byte)125;
      byteArray0[8] = (byte) (-54);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      dataInputStream0.reset();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (byte)8, 14);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("u", token0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L3v(s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 16, 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(18, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j X28QIim7T");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("j", token0.toString());
      
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, token1.kind);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader(">>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 1659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4094, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("qa#t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 1449, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 43, column 1451.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".hYF^B/}tbP(o:");
      StringReader stringReader1 = new StringReader("\"class\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1837132182957943
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".hYF^B/}tbP(o:");
      StringReader stringReader1 = new StringReader("\"class\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3608, 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(107, token0.kind);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 1449, 68);
      StringReader stringReader1 = new StringReader(">abaGk*Q/*#BC9bbM,");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-267), (-4372));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 27, 1449, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (-1), 84);
      javaParserTokenManager0.getNextToken();
      assertEquals(1450, javaCharStream2.getBeginColumn());
      assertEquals(1454, javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("df_t");
      StringReader stringReader1 = new StringReader("df_t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 121, (-1192));
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-k;a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[1] = (-2073);
      intArray0[2] = (-1);
      StringReader stringReader1 = new StringReader("pg8q");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-3753), 36, 73);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals("pg8q", token0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=<lJB{5`");
      StringReader stringReader1 = new StringReader("df_t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, (-4818));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.182508882687605
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=YY_xUM5Hb");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 16, 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.mark(39);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("=YY_xUM5Hb");
      StringReader stringReader2 = new StringReader("gW./");
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader2, 1077, 25, (-15));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("==");
      stringReader1.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 50, 14);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("K", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nu2Q~{&VR'%Jis");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SwitchTo(3);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<DIGIT>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-922), (-922));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"finally\"");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(34);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 34. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bq;Nz}+H7tI<!->A");
      StringReader stringReader1 = new StringReader("bq;Nz}+H7tI<!->A");
      stringReader0.mark(2);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 515, 35, 515);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("bq", token0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.317800718097369
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("brefX");
      StringReader stringReader1 = new StringReader("brefX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1118), 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 84;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(22, javaCharStream0.getEndColumn());
      assertEquals(22, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 1449, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1449, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfault");
      StringReader stringReader1 = new StringReader("dfault");
      stringReader1.mark(88);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1774, 1774, 1774);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)29;
      byteArray0[4] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 784, (byte)124);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(784);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 784. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"thrpDow\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuffer stringBuffer0 = new StringBuffer(53);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-27);
      StringReader stringReader0 = new StringReader("_,@Vj0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, (byte) (-27));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-27), 122, 1);
      StringReader stringReader1 = new StringReader("-=");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (byte) (-27), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream2.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1849504592484699
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringReader stringReader0 = new StringReader("o4x6_H+CCKr%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 68, (-2904), 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(10, javaCharStream0.bufpos);
      assertEquals("CCKr", token0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("t`+?");
      StringReader stringReader1 = new StringReader("t`+?");
      stringReader0.read();
      StringReader stringReader2 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 116, 1681);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1681, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gx^<>L<$%SzD");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("x", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">N");
      stringReader0.ready();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("L)@XKSkVa-!(U{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjFillToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(")", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<`");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X/Gg[;&4kU5");
      StringReader stringReader1 = new StringReader("!;igH%EJiEj{xuq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1118), (-799));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("X", token0.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 1449, 68);
      StringReader stringReader1 = new StringReader("~]'b");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-267), (-4372));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 27, 1449, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      javaCharStream2.bufcolumn = javaParserTokenManager0.jjnewLexState;
      //  // Unstable assertion: assertEquals(3, javaCharStream2.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(82, token0.kind);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuffer stringBuffer0 = new StringBuffer(53);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-27);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("E`OIsALDn.qB_iAHa/0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, (byte) (-27));
      javaCharStream0.bufsize = 3354;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("E", token0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1849504592484699
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*35_O?'+_JCg ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 66, 28);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("35_", token0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<J>l k<P0{4");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("J", token0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 53;
      StringBuffer stringBuffer0 = new StringBuffer(53);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-27);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1854548728676377
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I9mRsZEIt!^;4O9]9YF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 88, 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      stringReader0.mark(24);
      Token token1 = javaParserTokenManager0.getNextToken();
      token1.specialToken = token0;
      token0.next = token1;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(10, javaCharStream0.bufpos);
      assertEquals(107, token2.kind);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"throw\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("throw", token0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%(6Ct&N");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4033, 44);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 123, (-1));
      StringReader stringReader1 = new StringReader("goto");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream3);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream3.bufpos);
      assertEquals(35, token0.kind);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("df_t");
      StringReader stringReader1 = new StringReader("D[{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-4818), 85);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("D", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-k;a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[1] = (-2073);
      intArray0[2] = (-1);
      intArray0[3] = (-531);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("k", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[}eA");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-723), (-723));
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-721), javaCharStream0.getBeginColumn());
      assertEquals("eA", token0.toString());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-k;a");
      StringReader stringReader1 = new StringReader("=-=kTmc@\"@?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 121, (-4818));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$E_o<)~3Znt2>#");
      char[] charArray0 = new char[2];
      charArray0[0] = ',';
      charArray0[1] = '9';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getColumn());
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("9PeZ>MohBfIhr`>kM");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1384), 100, 1453);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(103, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("(>ul)%de_=oO1`p");
      stringReader1.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals("instanceof", token0.toString());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*35_O?'+_JCg ");
      stringReader0.reset();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)119;
      byteArray0[4] = (byte) (-22);
      byteArray0[5] = (byte)123;
      byteArray0[6] = (byte)69;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("IN", token0.toString());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1815192735832012
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(15);
      StringReader stringReader0 = new StringReader("fIl/e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      StringReader stringReader1 = new StringReader("OzXZEU(\"9_/p%|");
      StringReader stringReader2 = new StringReader("v2:8GFqsB5");
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5857917758475968
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "V3v04iB\"");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V3v04iB\"");
      StringReader stringReader0 = new StringReader("fIl/e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      StringReader stringReader1 = new StringReader("fIl");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*m,vo>ELG,RB*.M");
      StringReader stringReader1 = new StringReader("2B1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 610, (-2295), 45);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 124, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals((-2293), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FECn;");
      StringReader stringReader1 = new StringReader("d/6`+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1036, 1036);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(1039, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("short");
      StringReader stringReader1 = new StringReader("short");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("short");
      stringReader1.reset();
      StringReader stringReader3 = new StringReader("{3FM(,");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 87, 2583);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("{", token0.toString());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v9X_Q#vVT");
      StringReader stringReader1 = new StringReader("v9X_Q#vVT");
      StringReader stringReader2 = new StringReader("rF  ");
      stringReader2.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 879, (-6854), 1596);
      StringReader stringReader3 = new StringReader("rF  ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 24, 116);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-6852), javaCharStream0.getBeginColumn());
      assertEquals((-6852), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">N");
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("N", token0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=7+mE&.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3681), 645);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("TV%:h1m/5");
      StringReader stringReader1 = new StringReader("|ywIM&pB?z-)F:mQ&");
      stringReader1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("V", token0.toString());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader("fIl/e");
      StringReader stringReader1 = new StringReader("`HEQn<hqsa3C\"UTh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 112, 1322);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(124, token0.kind);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"double\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, 33, 96);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(39, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"class\"");
      StringReader stringReader1 = new StringReader("for");
      stringReader0.read();
      StringReader stringReader2 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-4818), (-4818));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("for", token0.toString());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("R#X7`%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 483, (-1));
      StringReader stringReader1 = new StringReader("R#X7`%");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 483, (-1), 77);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("R", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 104, 2346);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(">=", token0.toString());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d/6`+");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 20, 95, 92);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">N");
      stringReader0.reset();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 619, (-2402));
      javaCharStream0.readChar();
      javaCharStream0.maxNextCharInd = (-2402);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader(" fc)a ,");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3106), 1686, 1686);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1688, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"null\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("x,iPz?wR{G]xLnl6z");
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 87, 28);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte)36;
      byteArray0[5] = (byte)95;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-959), (-184), (byte)72);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-184), javaCharStream2.getBeginColumn());
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bQ^b");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken(0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte) (-26);
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-26);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("^zJ&");
      StringReader stringReader1 = new StringReader("VL");
      StringReader stringReader2 = new StringReader("^zJ&");
      stringReader2.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((byte) (-26));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -26. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GjYD]h~whO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, 13, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(16, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("brefX");
      StringReader stringReader1 = new StringReader("brefX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1118), 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?cWS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(76, javaCharStream0.getBeginColumn());
      assertEquals(91, token0.kind);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 204, 120);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(120, javaCharStream0.getBeginColumn());
      assertEquals(204, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bQ^b");
      int int0 = 37;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 37, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      int int1 = (-5741);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.next;
      token0.specialToken = null;
      // Undeclared exception!
      try { 
        stringReader0.mark((-5741));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1418), 36, 36);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2756, (-2604), 120);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("mJ", token0.toString());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5891783264039585
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BwZc[..G^~=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-196), 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1116), 14, 2551);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<`");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 42, 42, 969);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(43, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b=.o/");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$E_o<)~3Znt2>#");
      StringReader stringReader1 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(85, token0.kind);
      
      stringReader0.close();
      StringReader stringReader2 = new StringReader(".");
      StringReader stringReader3 = new StringReader("\"switch\"");
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals("", token1.toString());
      assertEquals(0, token1.kind);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("refX");
      StringReader stringReader1 = new StringReader("refX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1072, 50);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(53, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringReader stringReader0 = new StringReader("false");
      StringReader stringReader1 = new StringReader("5$lvfYpg}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 27, 114, 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(7, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(121, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>iY=");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-165), (-1981));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4095, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fa<se");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1036);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("fa", token0.toString());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"class\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, 29, 29);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(21, token0.kind);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"this\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 619, (-2402));
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-2398), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5904155673566343
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U,:EkX0%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      javaCharStream0.readChar();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 9.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1833432589913178
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("  WL%+=9:");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SwitchTo(1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 10.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 204, 204);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.defaultLexState = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(204, javaCharStream0.getBeginColumn());
      assertEquals(">>=", token0.toString());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rF  ");
      stringReader0.skip((-6854));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 879, (-6854), 1596);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 1596);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(1597, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 53;
      StringBuffer stringBuffer0 = new StringBuffer(53);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\u0011\" (17), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1425380630439896
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader("U,:EkX0%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2529, 21, 21);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      javaParserTokenManager1.jjimageLen = 1075;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(92, token0.kind);
      assertEquals(":", token0.toString());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("float");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 1899);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(33, token0.kind);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lascC[s@Q>YNT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1748, (-2253), 71);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("ascC", token0.toString());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$E_<)~3Znt2#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 82, 204);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      assertEquals(0, token_GTToken0.beginLine);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lascC[s@Q>YNT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1748, (-2253), 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-2249), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-];a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("-];a");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 30, (-784), 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!R8p");
      StringReader stringReader1 = new StringReader("[/)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 95);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(95, javaCharStream0.getBeginColumn());
      assertEquals(92, javaCharStream0.getLine());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Al[`ok");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 3273, 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("Al", token0.toString());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("WpR~z$GFcX;o)$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 73, 28, 73);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(30, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.1815192735832012
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 1449, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SwitchTo(3);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 37, column 1455.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(83);
      StringReader stringReader0 = new StringReader("g0{");
      StringReader stringReader1 = new StringReader("M2=e><b)-I/qe]m\"p");
      StringReader stringReader2 = new StringReader("d8l?>v#\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 27, 27);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 27, 21, 2432);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(28, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0614889854388747
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%(6Ct&N");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("(", token0.toString());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%(6Ct&#");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 35, 35);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(108, token0.kind);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("default");
      StringReader stringReader1 = new StringReader("default");
      stringReader1.mark(100);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 236, 100, 20);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(100, javaCharStream0.getBeginColumn());
      assertEquals("default", token0.toString());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("protected");
      StringReader stringReader1 = new StringReader("protected");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("boolean");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(7, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader("false");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-696), 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(27, javaCharStream0.getBeginColumn());
      assertEquals(31, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-4818), 77);
      StringReader stringReader1 = new StringReader("switch");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream1.bufpos);
      assertEquals(55, token0.kind);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("short");
      StringReader stringReader1 = new StringReader("short");
      StringReader stringReader2 = new StringReader("short");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(51, token0.kind);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U,:EkX0%");
      StringReader stringReader1 = new StringReader("U,:EkX0%");
      stringReader1.read();
      StringReader stringReader2 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 21, (-4818));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(16, token0.kind);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringReader stringReader0 = new StringReader("H'.<=w'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1818), (-1315), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1818, column -1312.  Encountered: \"<\" (60), after : \"\\'.\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BwZc[..G^~=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 114, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*35_O?'+_JCg ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("TV%:h1m/5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-71), 111);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(113, javaCharStream0.getBeginColumn());
      assertEquals(108, token0.kind);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%W5h@LB-a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(46, javaCharStream0.getBeginColumn());
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HsU7hh;Fq]#qk>\"F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-278), (-4030));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("int");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yI;X");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 740, 740);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 740, (-3655));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("yI", token0.toString());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%m`RP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 60, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"throws\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("Nhs");
      stringReader0.reset();
      stringReader1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("s", token0.toString());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader(";");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, (-249));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 27, 21, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(";", token0.toString());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("fZ", token0.toString());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-];a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("-];a");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)102;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 47, 109);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("f", token0.toString());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|@W|S>}yH");
      StringReader stringReader1 = new StringReader(">>>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-6854), (-6854), 382);
      StringReader stringReader2 = new StringReader(">>>=");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 382, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(120, token0.kind);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.1815192735832012
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringReader stringReader0 = new StringReader("pS/+ J@oul");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-196), (-196));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals((-194), javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      StringReader stringReader1 = new StringReader("g*;JfPG8!)#wnjnG");
      StringReader stringReader2 = new StringReader(".X");
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("++");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("++", token0.toString());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d/6`+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1036, 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(17, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sy@{s80Kc..y?q2$bz");
      stringReader0.read();
      int int0 = JavaParserConstants.ENUM;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("@", token0.toString());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("6Q~X=F2y)M");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 77, (-4818));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1223), 91, 91);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals("<<", token0.toString());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\" \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4818), (-2197));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-2195), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v9X_Q#vVT");
      StringReader stringReader1 = new StringReader("v9X_Q#vVT");
      StringReader stringReader2 = new StringReader("Gz9bHuyXZTx");
      StringReader stringReader3 = new StringReader("Jikr,Bs0'lFZUDzAgmA'");
      stringReader2.mark(125);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 108, (-1267), 108);
      StringReader stringReader4 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader4, Integer.MAX_VALUE, (-1), 1989);
      javaCharStream1.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)123;
      byteArray0[5] = (byte)102;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8@rp:,C+|kN`\"QR[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4T0$+>AwQzE%%)Cg|");
      StringReader stringReader1 = new StringReader("df_t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 12, 2);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      //  // Unstable assertion: assertEquals(3, javaCharStream2.bufpos);
      //  // Unstable assertion: assertEquals(103, javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=7+mE&.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-508), (-723));
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("7", token0.toString());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v9X_Q#vVT");
      int int0 = 37;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 37, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      int int1 = (-5741);
      // Undeclared exception!
      try { 
        stringReader0.mark((-5741));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("v$xr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<token of kind 12>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-wv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 102, 87);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(102, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader("U,:EkX0%");
      StringReader stringReader1 = new StringReader("U,:EkX0%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 27);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 105, (-4818), 122);
      StringReader stringReader2 = new StringReader("-=");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 105, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      assertEquals((-1), javaCharStream2.getBeginColumn());
      assertEquals(0, javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuffer stringBuffer0 = new StringBuffer(53);
      StringReader stringReader0 = new StringReader("char");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-396), (-196), 53);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("char", token0.toString());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("byte", token0.toString());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("int");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(40, token0.kind);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader(";");
      StringReader stringReader1 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 21, 27, 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(27, javaCharStream0.getBeginColumn());
      assertEquals("enum", token0.toString());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(48, javaCharStream0.getBeginColumn());
      assertEquals("if", token0.toString());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.49206349206349204
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*35_O?'+_JCg ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("0.MCg@i7");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2563), (-2563), 32);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-355), (-2563));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.MoreLexicalActions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream2.bufpos);
      assertEquals((-2559), javaCharStream2.getColumn());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.4878048780487805
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      StringReader stringReader1 = new StringReader("0r\"C\"9l~HY$ttzuiu4a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 8, 23);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 43, (-1859));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      //  // Unstable assertion: assertEquals(1, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("|@W|S>}yH");
      StringReader stringReader1 = new StringReader("|@W|S>}yH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1347, 1613, 823);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-6854), 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%(6Ct&N");
      StringReader stringReader1 = new StringReader("%(6Ct&N");
      stringReader1.mark(21);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2277), 13, 1774);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1488), 1774);
      javaCharStream1.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("|", token0.toString());
      assertEquals(106, token0.kind);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%(6Ct&N");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("-=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("=", token0.toString());
      assertEquals(87, token0.kind);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"throw\"");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'U';
      charArray0[1] = '8';
      charArray0[2] = 'M';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<J>l k<P0{4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\t");
      StringReader stringReader1 = new StringReader("\t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 48, 48, 31);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("Hj ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 204, 204);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String string0 = "Q6|^";
      StringReader stringReader0 = new StringReader("Q6|^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 37, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, (-739));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("native");
      StringReader stringReader1 = new StringReader("z}S<`%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 153, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("z", token0.toString());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|@W|S>}yH");
      String string0 = ">>>=";
      StringReader stringReader1 = new StringReader(">>>=");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\\'6\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.input_stream = null;
      StringReader stringReader0 = new StringReader("\"\f\"");
      stringReader0.mark(47);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 52, 52);
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(73, token0.kind);
      assertEquals("\"\f\"", token0.toString());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringReader stringReader0 = new StringReader("\"[\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{z3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 110, 76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 110, column 76.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (-4023), 68);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1269), (-4023));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1269, column -4022.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 173
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader("'ZNu,)@0[HoW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 27, 35);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 27, column 29.  Encountered: \"N\" (78), after : \"\\'Z\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjmatchedKind = 1;
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 175
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U,:EkX0%");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 115, 115);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 176
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("Z", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 177
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(27);
      StringReader stringReader0 = new StringReader(";");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, (-196));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 27, 27, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.jjmatchedPos = (-196);
      javaParserTokenManager0.curLexState = 48;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 178
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2619), 20, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U,:EkX0%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 42, 21);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(",", token0.toString());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.input_stream = null;
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 182
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.input_stream = null;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 184
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SwitchTo(1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 185
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 32, 32, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 186
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-196), (-196), (-1825));
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-3338), (-196));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, 0);
  }

  /**
  //Test case number: 187
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.curChar = 'j';
      javaParserTokenManager0.SwitchTo(0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 188
  /*Coverage entropy=1.5198770068284568
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zSuN]4[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 1449, 68);
      StringReader stringReader1 = new StringReader("0.MCg@i7");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-267), (-4347));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 7, 1449, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream2, 1449);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1449. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 189
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 46);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 46. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
