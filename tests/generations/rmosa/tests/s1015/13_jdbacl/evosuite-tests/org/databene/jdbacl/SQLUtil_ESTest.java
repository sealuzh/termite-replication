/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 02 17:24:14 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.h2.value.ValueLobDb;
import org.h2.value.ValueNull;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("table null", defaultDBTable0, 2, "table null");
      defaultDBColumn0.setDefaultValue("UNIQUE ");
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("table null TABLE NULL DEFAULT UNIQUE  NULL", string1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(39, ",conL>omerat!=");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(",conL>omerat!=");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(",conL>omerat!=", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setNullable(false);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals(",conL>omerat!= ,CONL>OMERAT!= NOT NULL", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBDataType dBDataType0 = DBDataType.getInstance(10, "Udks7Z]Nqb");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Udks7Z]Nqb", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setVersionColumn(true);
      vector0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      ValueNull valueNull0 = ValueNull.INSTANCE;
      ValueNull valueNull1 = ValueNull.DELETED;
      assertEquals(1L, valueNull1.getPrecision());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      defaultDBTable0.toString();
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) "select");
      SQLUtil.addOptionalCondition("9V!!K?mVBaH_", stringBuilder1);
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = SQLUtil.normalize("--", false);
      assertEquals("--", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2028930758), "sqleySct");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("sqleySct", defaultDBTable0, dBDataType0, integer0, integer0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("sqleySct");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SQLUtil.normalize("callalter materializhd view", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execute");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "execute";
      stringArray0[1] = "callalter materializhd view";
      stringArray0[2] = "callalter materializhd view";
      stringArray0[3] = "callalter materializhd view";
      stringArray0[4] = "callalter materializhd view";
      stringArray0[5] = "callalter materializhd view";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("callalter materializhd view");
      PrintWriter printWriter0 = mockPrintWriter0.format("#W9IpWiksb", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, printWriter0);
      assertEquals("table", dBTable0.getObjectType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(182, "selecv4t");
      Integer integer0 = RawTransaction.COMMIT;
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("selectexce", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[29];
      String string0 = SQLUtil.join("pfN^%!5h", "pfN^%!5h", stringArray0, "pfN^%!5h", "pfN^%!5h", stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);
      constraintDescriptorList0.add((Object) jMXPrincipal0);
      ConstraintDescriptorList constraintDescriptorList1 = dataDictionaryImpl0.getActiveConstraintDescriptors(constraintDescriptorList0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.management.remote.JMXPrincipal cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SELECT * FROM ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SELECT * FROM ";
      stringArray0[1] = "SELECT * FROM ";
      stringArray0[2] = "SELECT * FROM ";
      stringArray0[3] = "SELECT * FROM ";
      stringArray0[4] = "SELECT * FROM ";
      stringArray0[5] = "SELECT * FROM ";
      stringArray0[6] = "SELECT * FROM ";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("SELECT * FROM ", defaultDBTable0, (-3013), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("#(bk#4Iy)@%6kBm_uR");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"bk#4Iy\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderColumnListWithTableName("TE(", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop materialized view", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("TE(.null", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(dBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "Hv$eRv";
      String string1 = "}Six/*}h*<Kc_6UF6C=";
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("}Six/*}h*<Kc_6UF6C=");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = "select into";
      SQLUtil.isQuery("select into");
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance("CLOB");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = stringBuilder0.append((long) 0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) stringBuilder1;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) dBPrimaryKeyConstraint0;
      objectArray0[4] = (Object) "CLOB";
      objectArray0[5] = (Object) dBDataType0;
      objectArray0[6] = (Object) defaultDBTable0;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "~qAj500^jj", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT ~qAj500^jj UNIQUE ()", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[21];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[6];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("BP]'phd!a", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter1);
      assertEquals(105, charArrayWriter0.size());
      
      String string0 = SQLUtil.normalize(" DEFAULT ", true);
      assertEquals("DEFAULT", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("Kp7fIxTND7-xr @DS_.");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Kp7fIxTND7-xr @DS_.";
      stringArray0[1] = "create unique index";
      stringArray0[2] = "create unique index";
      stringArray0[3] = "create unique index";
      stringArray0[4] = "create unique index";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("create unique index", true, defaultDBTable1, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = SQLUtil.normalize("*/", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SQLUtil.isDDL("y:H`L2Owx2&");
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBCatalog0.getTables();
      dBCatalog0.getSequences();
      SQLUtil.ownerDotComponent(dBCatalog0);
      VersionNumber versionNumber0 = VersionNumber.valueOf("y:H`L2Owx2&");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase((String) null, "2o*PtWm=GOo", versionNumber0);
      dBCatalog0.setDatabase(defaultDatabase0);
      SQLUtil.parseColumnTypeAndSize(" or ");
      DBSchema dBSchema0 = new DBSchema("y:H`L2Owx2&");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" or ", dBSchema0);
      String string0 = "G%$[2";
      // Undeclared exception!
      try { 
        dBCatalog0.getTable("G%$[2");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'G%$[2'
         //
         verifyException("org.databene.jdbacl.model.DBCatalog", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ab");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "ab", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, )", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = SQLUtil.normalize("alter index}h/-b:@xb^*ca'", false);
      assertEquals("alter index } h / - b : @ xb ^ * ca ''", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("alter mlterializHd view", false, "alter mlterializHd view", "J7");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"alter mlterializHd view\" CHECK J7", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "insertnk9#2l", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = stringBuilder0.append((long) 0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile("insertnk9#2l");
      assertFalse(mockFile1.equals((Object)mockFile0));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "]LnyQ+s($wA}]";
      stringArray0[1] = "]LnyQ+s($wA}]";
      defaultDBTable0.getColumns();
      stringArray0[2] = "]LnyQ+s($wA}]";
      stringArray0[3] = "]LnyQ+s($wA}]";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("]LnyQ+s($wA}]", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("`fH[}2DR");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '`fH[}2DR' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.substituteMarkers(";e=Z??Z#+Go#Eb", ";e=Z??Z#+Go#Eb", stringBuilder0);
      Random.setNextRandom(3951);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string0);
      
      String string1 = SQLUtil.ownerDotComponent(dBUniqueConstraint0);
      assertEquals("null.null", string1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "b/g+7");
      DBSchema dBSchema0 = new DBSchema(".[H834_C");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("b/g+7", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "|n@X", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("b/g+7", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|n@X");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) defaultDBTable0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(".[H834_C", objectArray0);
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, printWriter0);
      assertNull(dBTable0.getDoc());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(21);
      Integer integer0 = RawTransaction.COMMIT;
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(21, "*allexcXG");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materializhd view", defaultDBTable0, dBDataType0, integer0, (Integer) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("*ALLEXCXG(0)", stringBuilder0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder0 = new StringBuilder(3478);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1616672783), "org.databene.commons.bean.UntypedPropertyMutator");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("]eletecrat uniGue indexdeletexsersr_\"}k(", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("ORG.DATABENE.COMMONS.BEAN.UNTYPEDPROPERTYMUTATOR(2,2)", stringBuilder0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " on ", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("deletecreate unique indexdeletexs/rsr_\"}k)(*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: deletecreate unique indexdeletexs/rsr_\"}k)(*
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      stringArray0[1] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      stringArray0[2] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      stringArray0[3] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      stringArray0[4] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      stringArray0[5] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      String[] stringArray1 = new String[3];
      stringArray1[0] = null;
      stringArray1[1] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      stringArray1[2] = "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("alter materialized viewselect join null as select on select.null = select.null and select.null = select.null", stringArray0, "alter materialized viewselect join null as select on select.null = select.null and select.null = select.null", (String) null, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DBDataType.getInstance("CLOB");
      SQLUtil.removeComments("CLOB");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[12];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "CLOB";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      SQLUtil.renderValue(defaultDBTable0);
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null AND CLOB = 'CLOB' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(249, "HS#,(]kcs;muW");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "into", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("SELECT * FROM ");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("callf", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "insertnk9#2l", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      stringBuilder0.append((long) 0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(K");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (K
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("deletecreate unique indexdeletexs/rsr_\"}k)(*");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String[] stringArray0 = new String[17];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter tableexce");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "cs`/", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop tableww(`sf.", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \"drop tableww(`sf.\" ", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String string0 = SQLUtil.normalize("alter tableillegad columY jyp( format:", false);
      assertEquals("alter tableillegad columY jyp (format :", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[2] = (byte)6;
      ValueLobDb valueLobDb0 = ValueLobDb.createSmallLob(200, byteArray0, 0L);
      ValueLobDb valueLobDb1 = valueLobDb0.copyToTemp();
      Reader reader0 = valueLobDb1.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      streamTokenizer0.nval = (double) 17;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("17", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(45, "Hv$eRv");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Hv$eRv", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("Hv$eRv HV$ERV NULL", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = SQLUtil.normalize("-- ERROR: ", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = SQLUtil.normalize("x)3*R?\t}4U", false);
      assertEquals("x) 3 * R ? } 4U", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "e.cp";
      stringArray0[1] = "e.cp";
      stringArray0[2] = "e.cp";
      stringArray0[3] = "e.cp";
      stringArray0[4] = "e.cp";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "e.cp";
      stringArray1[1] = "k/o&-";
      stringArray1[2] = "e.cp";
      stringArray1[3] = "e.cp";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("e.cp", stringArray0, "k/o&-", "e.cp", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = SQLUtil.normalize("ex,]Ace", false);
      assertEquals("ex, ] Ace", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select intohpakd+?gz5]");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(197, "alter mat&eri");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter mat&eri", defaultDBTable0, dBDataType0, integer0, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("alter mat&eri", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("@/:Npj)/QXn1|5T", defaultDBTable0, (DBDataType) null, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("@/:Npj)/QXn1|5T", defaultDBTable0, (DBDataType) null, integer0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema(" on ");
      dBSchema0.getTable(" on ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("C96kGhOt~`", (DBTable) null, 2385, "C96kGhOt~`");
      defaultDBColumn0.setDefaultValue(" on ");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "CHECK ";
      stringArray0[1] = "CHECK ";
      String string0 = SQLUtil.leftJoin("CHECK ", stringArray0, "/b\"2Y2&bg2C|}3Z", "/b\"2Y2&bg2C|}3Z", stringArray0);
      assertEquals("left join /b\"2Y2&bg2C|}3Z as /b\"2Y2&bg2C|}3Z on CHECK .CHECK  = /b\"2Y2&bg2C|}3Z.CHECK  and CHECK .CHECK  = /b\"2Y2&bg2C|}3Z.CHECK ", string0);
      
      Character character0 = new Character('+');
      String string1 = SQLUtil.renderValue(character0);
      assertEquals("'+'", string1);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("L020");
      String string0 = SQLUtil.typeAndName(dBSchema0);
      assertEquals("schema L020", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DBTable dBTable0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "org.apache.derby.impl.sql.compile.MaterializeSubqueryNode";
      stringArray0[1] = "org.apache.derby.impl.sql.compile.MaterializeSubqueryNode";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("org.apache.derby.impl.sql.compile.MaterializeSubqueryNode", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (org.apache.derby.impl.sql.compile.MaterializeSubqueryNode, org.apache.derby.impl.sql.compile.MaterializeSubqueryNode) REFERENCES null(org.apache.derby.impl.sql.compile.MaterializeSubqueryNode, org.apache.derby.impl.sql.compile.MaterializeSubqueryNode)", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("callf");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callselectLX|= fr[om");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "qliwpiNgW>Smu%";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "O>G";
      stringArray1[1] = "O>G";
      stringArray1[2] = "O>G";
      stringArray1[3] = "qliwpiNgW>Smu%";
      stringArray1[4] = "qliwpiNgW>Smu%";
      stringArray1[5] = "O>G";
      stringArray1[6] = "qliwpiNgW>Smu%";
      stringArray1[7] = "wO'e";
      String string0 = SQLUtil.leftJoin("qliwpiNgW>Smu%", stringArray0, "qliwpiNgW>Smu%", "O>G", stringArray1);
      assertEquals("left join qliwpiNgW>Smu% as O>G on qliwpiNgW>Smu%.qliwpiNgW>Smu% = O>G.O>G", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("exce", false, defaultDBTable0, "exce");
      dBCheckConstraint0.setName((String) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Hv$eRv", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("elter materialqzhd vie");
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = SQLUtil.normalize("drop materialized viewalter materializhd view", true);
      assertEquals("drop materialized viewalter materializhd view", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("alter materializHd view");
      SQLUtil.addRequiredCondition("alter materializHd view", stringBuilder0);
      assertEquals("alter materializHd view and alter materializHd view", stringBuilder0.toString());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("0^/nLt", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("alter materialized view", stringBuilder0);
      assertEquals("alter materialized view", stringBuilder0.toString());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ValueLobDb valueLobDb0 = ValueLobDb.createSmallLob(200, byteArray0, 0L);
      ValueLobDb valueLobDb1 = valueLobDb0.copyToTemp();
      Reader reader0 = valueLobDb1.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      SQLUtil.renderNumber(streamTokenizer0);
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("vd=jK+nQL3c1", false, defaultDBTable0, "No");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT vd=jK+nQL3c1 ", stringBuilder0.toString());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Hv$eRv");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Hv$eRv", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("vd=jK+vnQL3 c>1", false, defaultDBTable0, "No");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT \"vd=jK+vnQL3 c>1\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4572637190629707
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[29];
      SQLUtil.join("pfN^%!5h", "pfN^%!5h", stringArray0, "pfN^%!5h", "pfN^%!5h", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "pfN^%!5h", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , , , , , , , , , , , , , , , , , , , , , , , , , )", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("SysschemasIndex2Identifier", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "AZBm7vfE*NZIf";
      stringArray0[1] = "i*Yr";
      stringArray0[2] = "AZBm7vfE*NZIf";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("AZBm7vfE*NZIf", (String[]) null, "org.apache.derby.impl.sql.catalog.SYSSTATISTICSRowFactory", "i*Yr", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = new String[21];
      String string0 = SQLUtil.innerJoin("F!", stringArray0, "r", (String) null, stringArray0);
      assertEquals("r as null on F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null and F!.null = null.null", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String[] stringArray0 = new String[21];
      String string0 = SQLUtil.renderColumnListWithTableName("N,{7ZZ1]d~-PStaRa", stringArray0);
      assertEquals("N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null, N,{7ZZ1]d~-PStaRa.null", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("?F-I9`", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.7355842832764095
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SQLUtil.normalize("ex`c.-/qP\"n|", false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog(".fuB4b`+");
      String string0 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals(".fuB4b`+", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML(";vP|");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("callselect * from");
      assertNull(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectexce");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create materialized viewilleal column ty| format:");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessionq~r&I-g%[s=fog+u.'");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("PtSIw/gd");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "CLOB";
      stringArray0[1] = "CLOB";
      stringArray0[2] = "";
      String string0 = SQLUtil.leftJoin("CLOB", stringArray0, "(;", "", stringArray0);
      assertEquals("left join (; as  on CLOB.CLOB = .CLOB and CLOB.CLOB = .CLOB and CLOB. = .", string0);
      
      String string1 = SQLUtil.renderValue("CLOB");
      assertEquals("'CLOB'", string1);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "PtSIw/gd";
      stringArray0[2] = "PtSIw/gd";
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(603.28F);
      StringBuilder stringBuilder1 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("603.28", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("lC2w4,4s}5%`j", "iJO2f5);laQ|^RNy", "lC2w4,4s}5%`j");
      assertEquals("lC2w4,4s}5%`j", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "XLQlS";
      String[] stringArray0 = new String[13];
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "XLQlS";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("8'f!wE_b,GFR`HWd5&b", (String[]) null, "8'f!wE_b,GFR`HWd5&b", "Rz?B", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("callf", (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("IClegaP column type fomat: ", stringBuilder0);
      assertEquals("IClegaP column type fomat: ", stringBuilder0.toString());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.7432025026337845
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      SQLUtil.normalize("ex`c.-/qn|", false);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[20];
      stringArray1[0] = "org.h2.command.ddl.CreateView";
      // Undeclared exception!
      try { 
        SQLUtil.join("org.h2.command.ddl.CreateView", "org.h2.command.ddl.CreateView", stringArray1, "org.h2.command.ddl.CreateView", "org.h2.command.ddl.CreateView", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "org.h2.command.ddl.CreateView";
      String string0 = SQLUtil.join("org.h2.command.ddl.CreateView", "org.h2.command.ddl.CreateView", stringArray1, "org.h2.command.ddl.CreateView", "org.h2.command.ddl.CreateView", stringArray0);
      assertEquals("org.h2.command.ddl.CreateView join org.h2.command.ddl.CreateView as org.h2.command.ddl.CreateView on org.h2.command.ddl.CreateView.org.h2.command.ddl.CreateView = org.h2.command.ddl.CreateView.null", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[17];
      String string0 = SQLUtil.join("J-UsRcL", "f!RXy4*w^\"]xl_->%nk", stringArray0, "J-UsRcL", "J-UsRcL", stringArray0);
      assertEquals("J-UsRcL join J-UsRcL as J-UsRcL on f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null and f!RXy4*w^\"]xl_->%nk.null = J-UsRcL.null", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        SQLUtil.join("pfN^%!5h", "pfN^%!5h", (String[]) null, "pfN^%!5h", "pfN^%!5h", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("alter materializHd view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("drop table");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance("CLOB");
      TableContainer tableContainer0 = new TableContainer("CLOB");
      tableContainer0.getTable("CLOB");
      Integer integer0 = new Integer(3478);
      Integer integer1 = RawTransaction.COMMIT;
      StringBuilder stringBuilder0 = new StringBuilder(3478);
      Integer.getInteger("CLOB");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CLOB", (DBTable) null, dBDataType0, (Integer) null, (Integer) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertNull(defaultDBColumn0.getDefaultValue());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance("CLOB");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CLOB", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("CLOB", stringBuilder0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.execute.rts.RealUnionResultSetStatistics");
      DBDataType dBDataType0 = DBDataType.getInstance(1313, "drop indexcallsele");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop indexcallsele", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("DROP INDEXCALLSELE", string0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setTime(String,Time,Calendar)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter table7y");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("J-UsRcL", "J-UsRcL", stringArray0, "J-UsRcL", (String) null, stringArray0);
      assertEquals("J-UsRcL join J-UsRcL as null on J-UsRcL.null = null.null", string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("`!", "`!", (String[]) null, "!32,gK-@Wb@{7N", "!32,gK-@Wb@{7N", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("callf", (String) null, (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
