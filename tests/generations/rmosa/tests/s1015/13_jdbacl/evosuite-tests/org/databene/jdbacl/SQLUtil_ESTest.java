/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 23:45:09 GMT 2020
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ClqNiz/LbrN}");
      defaultDBTable0.getUniqueConstraint((String[]) null);
      MockFile mockFile0 = new MockFile(", ", "8\"{w#)[r5u$ahn");
      MockFile mockFile1 = new MockFile(mockFile0, ", ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("#", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertFalse(dBForeignKeyConstraint0.isNameDeterministic());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(7, "<mn");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("%9w");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("<mn", defaultDBTable0, dBDataType0, (Integer) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("<MN", stringBuilder0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "ClqNiz/LbrN}", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers(".$qwhK_ GGXgy[Qz`", "-:F'WbF:", "-:F'WbF:");
      assertEquals(".$qwhK_ GGXgy[Qz`", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("", ".", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null AND null = null", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-2322), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(34, "$ ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("sele", defaultDBTable0, dBDataType0, (Integer) null);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("sele", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(3109, "$ ");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, (Integer) null);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.renderColumnListWithTableName("PLS_INTEGER", stringArray0);
      assertEquals("PLS_INTEGER.null, PLS_INTEGER.null, PLS_INTEGER.null", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("PLS_INTEGER", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create table");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callselect/&[nz-:es,$");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("selectd");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("2PgxDp%G%^f.");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("delete");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("rename");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("", stringArray0, "create materialized viewswqxk/s>}te4>l7ed.null", "create materialized viewswqxk/s>}te4>l7ed.null", stringArray0);
      assertEquals("create materialized viewswqxk/s>}te4>l7ed.null as create materialized viewswqxk/s>}te4>l7ed.null on ", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("FBLog4j");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("FBLog4j", false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY () REFERENCES FBLog4j()", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("G8z", false, "drop materialized viewfblog4j", "G8z");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT G8z ", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("RU'", (String) null, "RU'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String[] stringArray0 = new String[6];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("callselect/&[nz-:es,$", defaultDBTable0, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderValue(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("-.07#[]R_#G--g");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("wSrT g7j50}Xi)w", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wSrT g7j50}Xi)w", dBSchema0);
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[7];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" = ");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("null = null", defaultDBTable0, (-1009), "null = null");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ClqNiz/LbrN}");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("ClqNiz/LbrN}", defaultDBTable0, (DBDataType) null, (Integer) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) "0j`VgB");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("|\"w\"dt_T]AmoK", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      MockFile mockFile0 = new MockFile("pdate", "pdate");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("<5(M{]gg68api");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: <5(M{]gg68api
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(" found ", stringArray0, ".y7-`+E)t,xA@", "", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String[] stringArray1 = new String[5];
      // Undeclared exception!
      try { 
        SQLUtil.join("`sxi+)7^N_2*j2)L)_]", "create unique indexselectdeleteu3 };,", stringArray0, (String) null, "create unique indexselectdeleteu3 };,", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("updateinterval", stringArray0, "", "*L'T,W|*+v%pdQU?S", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("LS_INEGER");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "LS_INEGER", true, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("selecyin", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("PLS_INTEGER", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "LP7b", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      String string0 = "TV5c4I";
      String string1 = "alter materialized viewiyterval";
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = "FBL4j";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("FBL4j", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "FBL4j", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(3190, (CharSequence) stringBuilder1, 3190, 3190);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 3190
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "sWqxk/s>}te4>l7Ed";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("sWqxk/s>}te4>l7Ed");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "(Pom#EZ/O*<CKuq<c", true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      int int0 = 34;
      StringBuilder stringBuilder2 = new StringBuilder(int0);
      StringBuilder stringBuilder3 = new StringBuilder();
      assertFalse(stringBuilder3.equals((Object)stringBuilder1));
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Uu,)", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Uu,)", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder1 = new StringBuilder(34);
      SQLUtil.addRequiredCondition("Uu,)", stringBuilder1);
      assertEquals("Uu,)", stringBuilder1.toString());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("H111/z|S!0ux5K7\"5&", "H111/z|S!0ux5K7\"5&", (String[]) null, "alter table", "H111/z|S!0ux5K7\"5&", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.join("inner", "inner", stringArray0, "alter tableinterval", "alter indexrenam^o", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLUtil.isProcedureCall("call");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "6m~E.8";
      stringArray0[1] = "call";
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "alter session";
      SQLUtil.isDML("alter session");
      int int0 = 0;
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = "#7L@W~";
      DBDataType dBDataType0 = DBDataType.getInstance((-3326), "#7L@W~");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("LWLT7Q7]9def^K1Z(@{", (DBTable) null, dBDataType0);
      SQLUtil.renderColumn(defaultDBColumn0);
      String string1 = "#\\";
      String string2 = "select";
      String string3 = "22000";
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("org.firebirdsql.jdbc.FBResultSet");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SQLUtil.normalize("IK '#jA", false);
      TableContainer tableContainer0 = new TableContainer("IK '#jA'");
      // Undeclared exception!
      try { 
        tableContainer0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.TableContainer", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = SQLUtil.normalize("-.07#[]R_#G--g", false);
      assertEquals("-.07 # [ ] R_ # G -- g", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      String string0 = "( /* ";
      SQLUtil.normalize("( /* ", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("(/*");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = "9M@~S<Gqh2\"*\"m0sg-";
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = SQLUtil.normalize("callselectdeleteu3 };,", false);
      assertEquals("callselectdeleteu3 } ;,", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/&[nz-:eS,$");
      String string0 = SQLUtil.removeComments("NE^)yN}MM~?");
      assertEquals("NE^)yN}MM~?", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      String string0 = "\";f%";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\";f%");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("<i]])y?YuPF", defaultDBTable0, 534, "\";f%");
      defaultDBColumn0.setVersionColumn(true);
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string1 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("<i]])y?YuPF", string1);
      
      String string2 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table \";f%", string2);
      
      boolean boolean0 = SQLUtil.isQuery(string1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      boolean boolean1 = SQLUtil.isDDL(string1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("H0|x5Tz^h0");
      String string0 = null;
      String[] stringArray0 = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, (String[]) null);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      String string1 = "alter materialized view";
      // Undeclared exception!
      try { 
        SQLUtil.join(string0, string1, stringArray0, string0, string1, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "LS_INEGER", true, stringArray0);
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint1, (StringBuilder) null);
      assertNull(dBUniqueConstraint1.getDoc());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.329661348854758
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select", false, "tC*X L#nJk\"H07vC-9Z", "select");
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT select CONSTRAINT select ", stringBuilder0.toString());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = "sele";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", (DBSchema) null);
      String[] stringArray0 = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder1 = new StringBuilder();
      SQLUtil.addRequiredCondition(string0, stringBuilder1);
      assertEquals("sele", stringBuilder1.toString());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("", "", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog("", defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("deletecallselect/&[nz-:es,$", dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("deletecallselect/&[nz-:es,$", dBPackage0);
      String string0 = SQLUtil.ownerDotComponent(dBProcedure0);
      assertEquals("deletecallselect/&[nz-:es,$.deletecallselect/&[nz-:es,$", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "izVhS5r");
      SQLUtil.addOptionalCondition("izVhS5r", stringBuilder0);
      assertEquals("izVhS5r or izVhS5r", stringBuilder0.toString());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("java.util.ArrayList");
      SQLUtil.addRequiredCondition("java.util.ArrayList", stringBuilder0);
      assertEquals("java.util.ArrayList and java.util.ArrayList", stringBuilder0.toString());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o$?MJJf";
      stringArray0[1] = "alter materialized view";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Unknown constraint type: ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"Unknown constraint type: \" UNIQUE (o$?MJJf, alter materialized view)", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.COMMIT;
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      String[] stringArray0 = new String[3];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , )", string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint((String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[1];
      System.setCurrentTimeMillis((-1198L));
      // Undeclared exception!
      SQLUtil.isDDL("o\"/*l!P");
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      SQLUtil.isQuery("select into");
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      String string0 = "flush";
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8407487285692812
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("truncatecallselect/&[nz-:es,$");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.8438614379613667
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "@~<mhO_{#Y&?('b");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("CACHE");
      assertNull(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.7214023220140038
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("selectdeleteu3 };,");
      boolean boolean0 = false;
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      SQLUtil.mutatesDataOrStructure("alter tableinterval");
      VersionNumber.valueOf("alter tableinterval");
      VersionNumber.valueOf("alter tableinterval");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "alter sessionucc5";
      SQLUtil.mutatesDataOrStructure("alter sessionucc5");
      VersionNumber.valueOf("alter sessionucc5");
      String string1 = "Q4{WfExRXHa";
      boolean boolean0 = true;
  }

  /**
  //Test case number: 108
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = SQLUtil.renderValue(",VAVdJ1`ms8k1Awb$");
      assertEquals("',VAVdJ1`ms8k1Awb$'", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DBTable dBTable0 = null;
      String string0 = "--";
      DBDataType dBDataType0 = DBDataType.getInstance((-3326), "#7L@W~");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("LWLT7Q7]9def^K1Z(@{", (DBTable) null, dBDataType0);
      defaultDBColumn0.isIdentical((DBObject) null);
      defaultDBColumn0.setDefaultValue("renam^");
      SQLUtil.renderColumn(defaultDBColumn0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-3326), "#7L@W~");
      // Undeclared exception!
      try { 
        DBDataType.jdbcTypeFor("renam^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.3143738430069454
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("FBL4j");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "FBL4j", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qo7KX>w:E j$JapMI");
      Locale locale0 = Locale.ITALY;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("Q(|myJ=m,n/)P>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"|myJ=m\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("insert", (DBTable) null, (-1726379082), "iYk_<wu(>K$y)q%");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \">K$y\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("table null", defaultDBTable0, (-855), "org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("ORG.APACHE.DERBY.IMPL.SQL.EXECUTE.TEMPORARYROWHOLDERIMPL", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[4] = "s6h2";
      stringArray0[5] = "into";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("s6h2", (String[]) null, "into", "alter materialized view", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[13];
      String[] stringArray1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("", stringArray0, "", "create unique indexalter tableinterval", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
