* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Connecting to master process on port 20195
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20194
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:38:58.228 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:38:58.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:38:58.244 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:38:58.398 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:38:58.408 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:38:58.420 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1003
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:39:09.171 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:39:09.175 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:39:09.175 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:39:09.227 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1003
* Starting evolution
[MASTER] 00:39:12.219 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:39:18.684 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:39:18.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:39:18.689 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:39:19.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:39:20.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:39:20.293 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 00:39:22.620 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 00:39:22.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 00:39:22.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 00:39:22.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 00:39:22.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 00:39:22.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 00:39:22.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 00:39:22.655 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 00:39:22.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 00:39:22.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 00:39:22.781 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1003
* Starting evolution
[MASTER] 00:39:27.626 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 00:39:35.148 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:39:48.735 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.evaluateModel(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
[MASTER] 00:39:48.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModel(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
[MASTER] 00:41:14.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.weightedTruePositiveRate()D: I18 Branch 262 IF_ICMPGE L2831 - false in context: weka.classifiers.Evaluation:weightedTruePositiveRate()D
[MASTER] 00:41:14.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.weightedTruePositiveRate()D: I27 Branch 263 IF_ICMPGE L2832 - true in context: weka.classifiers.Evaluation:weightedTruePositiveRate()D
[MASTER] 00:41:14.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.weightedTruePositiveRate()D: I70 Branch 264 IF_ICMPGE L2839 - false in context: weka.classifiers.Evaluation:weightedTruePositiveRate()D
[MASTER] 00:41:14.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.weightedTruePositiveRate()D: I27 Branch 263 IF_ICMPGE L2832 - false in context: weka.classifiers.Evaluation:weightedTruePositiveRate()D
[MASTER] 00:42:21.733 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 205s and 369 generations, 151896 statements, best individual has fitness: 7888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 72
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 69 tests with total length 368
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 222s and 128 generations, 79585 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 20 tests with total length 144
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 240s and 118 generations, 71067 statements, best individual has fitness: 13528.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 64%
* Total number of goals: 1378
* Number of covered goals: 885
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 809
* Number of covered goals: 398
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 64
* Number of covered goals: 64
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 68%
* Total number of goals: 424
* Number of covered goals: 288
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 278
* Number of covered goals: 70
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 809
* Number of covered goals: 376
* Generated 170 tests with total length 1980
* Resulting test suite's coverage: 57% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 00:43:41.327 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:43:42.411 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 00:51:35.373 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 00:51:46.736 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:51:47.953 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:51:47.953 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 00:51:48.278 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 00:51:48.279 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TextDirectoryLoader textDirectoryLoader0 = new TextDirectoryLoader();
Instances instances0 = textDirectoryLoader0.getDataSet();
Evaluation evaluation0 = new Evaluation(instances0, (CostMatrix) null);
int[] intArray0 = new int[5];
TestInstances testInstances0 = new TestInstances();
testInstances0.setRelationalClassFormat(instances0);
evaluation0.numTrueNegatives((-2));
LWL lWL0 = new LWL();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2147483645);

[MASTER] 00:51:48.959 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20194
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:52:52.853 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:52:52.878 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:52:52.879 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:52:55.758 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:52:56.467 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:52:56.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1003
* Starting evolution
[MASTER] 00:53:02.858 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccuRate()D: Line 725
[MASTER] 00:53:02.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccuRate()D: root-Branch
[MASTER] 00:53:02.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 675: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> cover
[MASTER] 00:53:02.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 676: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> accu
[MASTER] 00:53:02.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 677: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> value
[MASTER] 00:53:02.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 678: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> maxInfoGain
[MASTER] 00:53:02.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 679: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - InsertUnaryOp Negation
[MASTER] 00:53:02.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAccuRate()D
[MASTER] 00:53:02.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAccuRate()D
[MASTER] 00:53:02.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAccuRate()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAccuRate()D
* Search finished after 218s and 262 generations, 148939 statements, best individual has fitness: 11080.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 705
* Number of covered goals: 300
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 416
* Number of covered goals: 136
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 993
* Number of covered goals: 626
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 416
* Number of covered goals: 136
* Generated 77 tests with total length 744
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 00:57:36.856 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:57:37.615 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20196
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1003
* Starting evolution
* Search finished after 228s and 243 generations, 102209 statements, best individual has fitness: 2720.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Generated 92 tests with total length 251
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20192
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20198
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:31:55.861 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:31:55.886 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:31:55.887 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:31:55.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
[MASTER] 01:31:57.753 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:31:57.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:31:57.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Using seed 1003
* Starting evolution
[MASTER] 01:31:57.797 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:31:57.883 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:31:57.890 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1003
* Starting evolution
[MASTER] 01:32:04.813 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 01:32:04.813 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 01:32:06.002 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 487
[MASTER] 01:32:06.002 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 488
[MASTER] 01:32:06.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true
[MASTER] 01:32:06.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 191: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp Negation
[MASTER] 01:32:06.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 192: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp +1
[MASTER] 01:32:06.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 193: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp -1
[MASTER] 01:32:06.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 196: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceComparisonOperator <= -> <
[MASTER] 01:32:06.024 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 01:32:06.034 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 01:32:06.045 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true in context: 
[MASTER] 01:33:21.309 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 272s and 315 generations, 226135 statements, best individual has fitness: 1120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 338
* Number of covered goals: 322
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 194
* Number of covered goals: 175
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 194
* Number of covered goals: 174
* Generated 88 tests with total length 984
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 294s and 49 generations, 44488 statements, best individual has fitness: 2120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 628
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 418
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 627
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 113
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 404
* Generated 217 tests with total length 3176
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 01:40:56.387 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1575250856337/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1575250856337/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.java]]
[MASTER] 01:40:56.387 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:40:56.387 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:40:56.392 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 01:40:56.392 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 01:40:56.394 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1575250856337/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 01:40:56 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_28_tmp__ESTest extends NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.1217186091313738
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       naiveBayesMultinomialText0.setUseStopList(false);
31:       int[] intArray0 = new int[9];
32:       intArray0[0] = (-436);
33:       intArray0[1] = (-659);
34:       intArray0[2] = 116;
35:       intArray0[3] = (-1902);
36:       intArray0[4] = 0;
37:       intArray0[5] = (-1795);
38:       intArray0[6] = (-3);
39:       intArray0[7] = (-1902);
40:       intArray0[8] = 3463;
41:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-3), intArray0, (-1902));
42:       // Undeclared exception!
43:       try { 
44:         naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);
45:         fail("Expecting exception: RuntimeException");
46:       
47:       } catch(RuntimeException e) {
48:          //
49:          // DenseInstance doesn't have access to a dataset!
50:          //
51:          verifyException("weka.core.AbstractInstance", e);
52:       }
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_28_1575250856337/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 01:40:56 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "org.pentaho.packageManagement.PackageConstraint",
95:       "weka.attributeSelection.AttributeEvaluator",
96:       "org.pentaho.packageManagement.Package",
97:       "weka.core.xml.XMLBasicSerialization",
98:       "weka.attributeSelection.SubsetEvaluator",
99:       "weka.classifiers.bayes.net.search.local.K2",
100:       "weka.filters.UnsupervisedFilter",
101:       "weka.core.logging.Logger$Level",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "org.pentaho.packageManagement.DefaultPackageManager",
109:       "org.bounce.net.DefaultAuthenticator",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.classifiers.trees.j48.C45ModelSelection",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
118:       "weka.core.Utils",
119:       "weka.core.CustomDisplayStringProvider",
120:       "weka.core.tokenizers.Tokenizer",
121:       "weka.core.NormalizableDistance",
122:       "weka.core.NoSupportForMissingValuesException",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.BinarySparseInstance",
129:       "weka.core.AttributeLocator",
130:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
131:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
132:       "weka.core.SerializedObject",
133:       "weka.classifiers.meta.RegressionByDiscretization",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.classifiers.trees.j48.ModelSelection",
137:       "weka.core.neighboursearch.balltrees.BallNode",
138:       "weka.core.AdditionalMeasureProducer",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.classifiers.ConditionalDensityEstimator",
143:       "weka.core.SingleIndex",
144:       "weka.core.CapabilitiesHandler",
145:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
146:       "weka.attributeSelection.ASEvaluation",
147:       "weka.core.AbstractInstance",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.classifiers.bayes.BayesNet",
151:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
152:       "weka.core.Version",
153:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.classifiers.AbstractClassifier",
157:       "weka.estimators.UnivariateDensityEstimator",
158:       "weka.core.FindWithCapabilities",
159:       "weka.filters.unsupervised.attribute.Center",
160:       "weka.core.OptionHandler",
161:       "weka.core.WekaException",
162:       "weka.core.ClassDiscovery",
163:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
164:       "weka.filters.StreamableFilter",
165:       "weka.core.Range",
166:       "weka.core.Attribute$1",
167:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
168:       "weka.core.PartitionGenerator",
169:       "weka.attributeSelection.WrapperSubsetEval",
170:       "weka.classifiers.Classifier",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.core.WekaEnumeration",
175:       "weka.classifiers.trees.j48.ClassifierSplitModel",
176:       "weka.attributeSelection.AttributeTransformer",
177:       "weka.core.tokenizers.WordTokenizer",
178:       "weka.classifiers.trees.j48.ClassifierTree",
179:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
180:       "weka.attributeSelection.PrincipalComponents",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
183:       "weka.classifiers.trees.j48.PruneableClassifierTree",
184:       "weka.core.stemmers.LovinsStemmer",
185:       "weka.classifiers.Evaluation",
186:       "weka.classifiers.functions.supportVector.Kernel",
187:       "weka.core.WekaPackageManager",
188:       "weka.filters.SupervisedFilter",
189:       "weka.core.TechnicalInformationHandler",
190:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
191:       "weka.core.neighboursearch.LinearNNSearch",
192:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
193:       "weka.core.Option",
194:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
195:       "weka.core.neighboursearch.PerformanceStats",
196:       "weka.estimators.NormalEstimator",
197:       "weka.filters.Sourcable",
198:       "weka.core.Attribute",
199:       "weka.core.Stopwords",
200:       "weka.core.tokenizers.AlphabeticTokenizer",
201:       "weka.core.FastVector",
202:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
203:       "weka.core.tokenizers.NGramTokenizer",
204:       "weka.core.UnassignedDatasetException",
205:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
206:       "weka.classifiers.RandomizableClassifier",
207:       "weka.classifiers.SingleClassifierEnhancer",
208:       "weka.core.RevisionUtils",
209:       "weka.core.Instance",
210:       "weka.estimators.Estimator",
211:       "weka.core.ProtectedProperties",
212:       "weka.classifiers.IntervalEstimator",
213:       "weka.core.StringLocator",
214:       "weka.classifiers.bayes.net.ADNode",
215:       "weka.core.Matchable",
216:       "weka.core.AttributeStats",
217:       "weka.core.WeightedInstancesHandler",
218:       "weka.core.neighboursearch.NearestNeighbourSearch",
219:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
220:       "weka.filters.unsupervised.attribute.Remove",
221:       "weka.filters.unsupervised.attribute.Discretize",
222:       "weka.core.Randomizable",
223:       "weka.classifiers.trees.j48.NoSplit",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Instances",
226:       "weka.core.UnassignedClassException",
227:       "weka.classifiers.bayes.net.BIFReader",
228:       "weka.classifiers.bayes.net.ParentSet",
229:       "weka.classifiers.rules.ZeroR",
230:       "weka.core.stemmers.IteratedLovinsStemmer",
231:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
232:       "weka.filters.unsupervised.attribute.Standardize",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.UnsupportedAttributeTypeException",
235:       "weka.classifiers.Sourcable",
236:       "weka.core.RevisionHandler",
237:       "weka.classifiers.evaluation.output.prediction.PlainText",
238:       "weka.core.neighboursearch.TreePerformanceStats",
239:       "weka.core.xml.XMLSerialization",
240:       "weka.classifiers.xml.XMLClassifier",
241:       "weka.filters.Filter",
242:       "weka.filters.supervised.attribute.Discretize"
243:     );
244:   } 
245: 
246:   private static void resetClasses() {
247:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
248: 
249:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
250:       "weka.classifiers.AbstractClassifier",
251:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
252:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
253:       "weka.core.Capabilities$Capability",
254:       "weka.core.tokenizers.Tokenizer",
255:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
256:       "weka.core.tokenizers.WordTokenizer",
257:       "weka.core.stemmers.NullStemmer",
258:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
259:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
260:       "weka.core.neighboursearch.balltrees.BallSplitter",
261:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
262:       "weka.core.neighboursearch.balltrees.BallNode",
263:       "weka.classifiers.misc.SerializedClassifier",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.Capabilities",
269:       "weka.core.Utils",
270:       "org.pentaho.packageManagement.PackageManager",
271:       "org.pentaho.packageManagement.DefaultPackageManager",
272:       "weka.core.Version",
273:       "weka.core.Environment",
274:       "weka.core.WekaPackageManager",
275:       "weka.core.SingleIndex",
276:       "weka.core.Attribute",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.neighboursearch.NearestNeighbourSearch",
279:       "weka.core.neighboursearch.CoverTree",
280:       "weka.core.NormalizableDistance",
281:       "weka.core.EuclideanDistance",
282:       "weka.core.Range",
283:       "weka.filters.Filter",
284:       "weka.filters.supervised.attribute.Discretize",
285:       "weka.core.RevisionUtils",
286:       "weka.core.tokenizers.NGramTokenizer",
287:       "weka.classifiers.bayes.NaiveBayes",
288:       "weka.classifiers.bayes.NaiveBayesUpdateable",
289:       "weka.core.UnassignedDatasetException",
290:       "weka.core.stemmers.LovinsStemmer",
291:       "weka.core.stemmers.IteratedLovinsStemmer",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CVParameterSelection",
295:       "weka.classifiers.rules.ZeroR",
296:       "weka.core.FastVector",
297:       "weka.classifiers.Evaluation",
298:       "weka.core.Option",
299:       "weka.core.stemmers.SnowballStemmer",
300:       "weka.core.Tag",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.core.TestInstances",
304:       "weka.core.SerializedObject",
305:       "weka.core.TechnicalInformation",
306:       "weka.core.TechnicalInformation$Type",
307:       "weka.core.TechnicalInformation$Field",
308:       "weka.core.Instances",
309:       "weka.core.converters.ArffLoader$ArffReader",
310:       "weka.core.tokenizers.AlphabeticTokenizer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
314:       "weka.attributeSelection.ASEvaluation",
315:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
316:       "weka.attributeSelection.PrincipalComponents",
317:       "weka.core.DenseInstance",
318:       "weka.core.Stopwords",
319:       "weka.classifiers.bayes.BayesNet",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
322:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
323:       "weka.classifiers.bayes.net.search.local.K2",
324:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
325:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
326:       "weka.core.stemmers.Stemming",
327:       "weka.core.neighboursearch.BallTree",
328:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
329:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
330:       "weka.classifiers.lazy.LWL",
331:       "weka.classifiers.trees.DecisionStump",
332:       "weka.core.neighboursearch.KDTree",
333:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
334:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
335:       "weka.classifiers.RandomizableClassifier",
336:       "weka.classifiers.functions.SGDText",
337:       "weka.classifiers.meta.CostSensitiveClassifier",
338:       "weka.classifiers.CostMatrix",
339:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
340:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
341:       "weka.classifiers.bayes.NaiveBayesMultinomial",
342:       "weka.classifiers.MultipleClassifiersCombiner",
343:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
344:       "weka.classifiers.meta.MultiScheme",
345:       "weka.classifiers.misc.InputMappedClassifier",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.estimators.Estimator",
349:       "weka.estimators.DiscreteEstimator",
350:       "weka.estimators.KernelEstimator",
351:       "weka.classifiers.trees.LMT",
352:       "weka.classifiers.functions.Logistic",
353:       "weka.attributeSelection.GainRatioAttributeEval",
354:       "weka.classifiers.functions.SimpleLogistic",
355:       "weka.classifiers.functions.SMO",
356:       "weka.classifiers.functions.supportVector.CachedKernel",
357:       "weka.classifiers.functions.supportVector.PolyKernel",
358:       "weka.classifiers.meta.Vote",
359:       "weka.classifiers.IteratedSingleClassifierEnhancer",
360:       "weka.classifiers.meta.AdditiveRegression",
361:       "weka.classifiers.meta.RegressionByDiscretization",
362:       "weka.filters.unsupervised.attribute.Discretize",
363:       "weka.classifiers.trees.J48",
364:       "weka.classifiers.trees.j48.ClassifierTree",
365:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
366:       "weka.classifiers.functions.VotedPerceptron",
367:       "weka.filters.SimpleFilter",
368:       "weka.filters.SimpleStreamFilter",
369:       "weka.filters.MultiFilter",
370:       "weka.filters.AllFilter",
371:       "weka.attributeSelection.WrapperSubsetEval",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.rules.DecisionTable",
376:       "weka.attributeSelection.ASSearch",
377:       "weka.attributeSelection.BestFirst",
378:       "weka.core.UnassignedClassException",
379:       "weka.classifiers.meta.FilteredClassifier",
380:       "weka.filters.supervised.attribute.AttributeSelection",
381:       "weka.attributeSelection.AttributeSelection",
382:       "weka.attributeSelection.CfsSubsetEval",
383:       "weka.attributeSelection.GreedyStepwise",
384:       "weka.classifiers.functions.GaussianProcesses",
385:       "weka.classifiers.functions.SMOreg",
386:       "weka.classifiers.functions.supportVector.RegOptimizer",
387:       "weka.classifiers.functions.supportVector.RegSMO",
388:       "weka.classifiers.functions.supportVector.RegSMOImproved",
389:       "weka.core.WekaException",
390:       "weka.core.UnsupportedAttributeTypeException",
391:       "weka.classifiers.meta.AttributeSelectedClassifier",
392:       "weka.classifiers.trees.RandomForest",
393:       "weka.classifiers.trees.RandomTree",
394:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
395:       "weka.core.ClassDiscovery",
396:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
397:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
398:       "weka.classifiers.meta.Stacking",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.filters.unsupervised.attribute.NominalToBinary",
401:       "weka.classifiers.functions.neural.SigmoidUnit",
402:       "weka.classifiers.functions.neural.LinearUnit",
403:       "weka.classifiers.rules.OneR",
404:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
405:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
406:       "weka.classifiers.meta.RandomCommittee",
407:       "weka.classifiers.functions.SimpleLinearRegression",
408:       "weka.core.SelectedTag",
409:       "weka.classifiers.meta.MultiClassClassifier",
410:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
411:       "weka.attributeSelection.ReliefFAttributeEval",
412:       "weka.estimators.PoissonEstimator",
413:       "weka.classifiers.meta.ClassificationViaRegression",
414:       "weka.classifiers.trees.M5P",
415:       "weka.core.matrix.Matrix",
416:       "weka.estimators.MahalanobisEstimator",
417:       "weka.classifiers.functions.supportVector.Puk",
418:       "weka.classifiers.functions.supportVector.RBFKernel",
419:       "weka.classifiers.meta.Bagging",
420:       "weka.classifiers.trees.REPTree",
421:       "weka.estimators.NormalEstimator",
422:       "weka.attributeSelection.OneRAttributeEval",
423:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
424:       "weka.classifiers.meta.LogitBoost",
425:       "weka.core.AttributeStats",
426:       "weka.core.Queue",
427:       "weka.core.AttributeLocator",
428:       "weka.core.StringLocator",
429:       "weka.core.RelationalLocator",
430:       "weka.core.ContingencyTables",
431:       "weka.core.Queue$QueueNode",
432:       "weka.classifiers.meta.AdaBoostM1",
433:       "weka.classifiers.rules.PART",
434:       "weka.classifiers.rules.part.MakeDecList",
435:       "weka.classifiers.functions.SGD",
436:       "weka.core.neighboursearch.covertrees.Stack",
437:       "weka.core.neighboursearch.CoverTree$DistanceNode",
438:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
439:       "weka.attributeSelection.CorrelationAttributeEval",
440:       "weka.attributeSelection.InfoGainAttributeEval",
441:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
442:       "weka.core.Check",
443:       "weka.core.CheckGOE",
444:       "weka.core.CheckOptionHandler",
445:       "weka.classifiers.rules.JRip",
446:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
447:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
448:       "weka.classifiers.functions.supportVector.StringKernel",
449:       "weka.core.Javadoc",
450:       "weka.core.TechnicalInformationHandlerJavadoc",
451:       "weka.classifiers.lazy.KStar",
452:       "weka.core.converters.ConverterUtils$DataSource",
453:       "weka.core.converters.AbstractLoader",
454:       "weka.core.converters.AbstractFileLoader",
455:       "weka.core.converters.ArffLoader",
456:       "weka.core.OptionHandlerJavadoc",
457:       "weka.experiment.Stats",
458:       "weka.classifiers.meta.RandomSubSpace",
459:       "weka.core.ManhattanDistance",
460:       "weka.core.ChebyshevDistance",
461:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode"
462:     );
463:   }
464: }

[MASTER] 01:40:56.394 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setUseStopList(false);
int[] intArray0 = new int[9];
intArray0[0] = (-436);
intArray0[1] = (-659);
intArray0[2] = 116;
intArray0[3] = (-1902);
intArray0[4] = 0;
intArray0[5] = (-1795);
intArray0[6] = (-3);
intArray0[7] = (-1902);
intArray0[8] = 3463;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-3), intArray0, (-1902));
naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);

[MASTER] 01:40:57.019 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1575250856988/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1575250856988/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 01:40:57.019 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:40:57.019 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:40:57.020 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 01:40:57.020 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 01:40:57.020 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 01:40:57.020 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1575250856988/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 01:40:56 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.attributeSelection.WrapperSubsetEval;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Capabilities;
19: import weka.core.Instances;
20: import weka.core.SparseInstance;
21: import weka.core.TestInstances;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=0.8090776470490244
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       double[] doubleArray0 = new double[4];
34:       doubleArray0[1] = 5.5;
35:       doubleArray0[2] = 5.5;
36:       doubleArray0[3] = 5.5;
37:       SparseInstance sparseInstance0 = new SparseInstance(5.5, doubleArray0);
38:       TestInstances testInstances0 = new TestInstances();
39:       WrapperSubsetEval wrapperSubsetEval0 = new WrapperSubsetEval();
40:       Capabilities capabilities0 = wrapperSubsetEval0.getCapabilities();
41:       TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
42:       Instances instances0 = testInstances1.generate(" ");
43:       sparseInstance0.setDataset(instances0);
44:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
46:       testInstances1.setNumString(9);
47:       // Undeclared exception!
48:       try { 
49:         naiveBayesMultinomialText0.tokenizeInstance(sparseInstance0, true);
50:         fail("Expecting exception: NullPointerException");
51:       
52:       } catch(NullPointerException e) {
53:          //
54:          // no message in exception (getMessage() returned null)
55:          //
56:       }
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_44_1575250856988/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 01:40:56 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "org.pentaho.packageManagement.PackageConstraint",
95:       "weka.attributeSelection.AttributeEvaluator",
96:       "org.pentaho.packageManagement.Package",
97:       "weka.core.xml.XMLBasicSerialization",
98:       "weka.attributeSelection.SubsetEvaluator",
99:       "weka.classifiers.bayes.net.search.local.K2",
100:       "weka.filters.UnsupervisedFilter",
101:       "weka.core.logging.Logger$Level",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.core.stemmers.Stemmer",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "org.pentaho.packageManagement.DefaultPackageManager",
109:       "org.bounce.net.DefaultAuthenticator",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.classifiers.trees.j48.C45ModelSelection",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
118:       "weka.core.Utils",
119:       "weka.core.CustomDisplayStringProvider",
120:       "weka.core.tokenizers.Tokenizer",
121:       "weka.core.NormalizableDistance",
122:       "weka.core.NoSupportForMissingValuesException",
123:       "weka.classifiers.UpdateableClassifier",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.BinarySparseInstance",
129:       "weka.core.AttributeLocator",
130:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
131:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
132:       "weka.core.SerializedObject",
133:       "weka.classifiers.meta.RegressionByDiscretization",
134:       "weka.clusterers.UpdateableClusterer",
135:       "weka.core.Summarizable",
136:       "weka.classifiers.trees.j48.ModelSelection",
137:       "weka.core.neighboursearch.balltrees.BallNode",
138:       "weka.core.AdditionalMeasureProducer",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.classifiers.ConditionalDensityEstimator",
143:       "weka.core.SingleIndex",
144:       "weka.core.CapabilitiesHandler",
145:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
146:       "weka.attributeSelection.ASEvaluation",
147:       "weka.core.AbstractInstance",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.classifiers.bayes.BayesNet",
151:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
152:       "weka.core.Version",
153:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.classifiers.AbstractClassifier",
157:       "weka.estimators.UnivariateDensityEstimator",
158:       "weka.core.FindWithCapabilities",
159:       "weka.filters.unsupervised.attribute.Center",
160:       "weka.core.OptionHandler",
161:       "weka.core.WekaException",
162:       "weka.core.ClassDiscovery",
163:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
164:       "weka.filters.StreamableFilter",
165:       "weka.core.Range",
166:       "weka.core.Attribute$1",
167:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
168:       "weka.core.PartitionGenerator",
169:       "weka.attributeSelection.WrapperSubsetEval",
170:       "weka.classifiers.Classifier",
171:       "weka.core.Capabilities$Capability",
172:       "weka.core.SparseInstance",
173:       "org.pentaho.packageManagement.PackageManager",
174:       "weka.core.WekaEnumeration",
175:       "weka.classifiers.trees.j48.ClassifierSplitModel",
176:       "weka.attributeSelection.AttributeTransformer",
177:       "weka.core.tokenizers.WordTokenizer",
178:       "weka.classifiers.trees.j48.ClassifierTree",
179:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
180:       "weka.attributeSelection.PrincipalComponents",
181:       "weka.core.stemmers.SnowballStemmer",
182:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
183:       "weka.classifiers.trees.j48.PruneableClassifierTree",
184:       "weka.core.stemmers.LovinsStemmer",
185:       "weka.classifiers.Evaluation",
186:       "weka.classifiers.functions.supportVector.Kernel",
187:       "weka.core.WekaPackageManager",
188:       "weka.filters.SupervisedFilter",
189:       "weka.core.TechnicalInformationHandler",
190:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
191:       "weka.core.neighboursearch.LinearNNSearch",
192:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
193:       "weka.core.Option",
194:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
195:       "weka.core.neighboursearch.PerformanceStats",
196:       "weka.estimators.NormalEstimator",
197:       "weka.filters.Sourcable",
198:       "weka.core.Attribute",
199:       "weka.core.Stopwords",
200:       "weka.core.tokenizers.AlphabeticTokenizer",
201:       "weka.core.FastVector",
202:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
203:       "weka.core.tokenizers.NGramTokenizer",
204:       "weka.core.UnassignedDatasetException",
205:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
206:       "weka.classifiers.RandomizableClassifier",
207:       "weka.classifiers.SingleClassifierEnhancer",
208:       "weka.core.RevisionUtils",
209:       "weka.core.Instance",
210:       "weka.estimators.Estimator",
211:       "weka.core.ProtectedProperties",
212:       "weka.classifiers.IntervalEstimator",
213:       "weka.core.StringLocator",
214:       "weka.classifiers.bayes.net.ADNode",
215:       "weka.core.Matchable",
216:       "weka.core.AttributeStats",
217:       "weka.core.WeightedInstancesHandler",
218:       "weka.core.neighboursearch.NearestNeighbourSearch",
219:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
220:       "weka.filters.unsupervised.attribute.Remove",
221:       "weka.filters.unsupervised.attribute.Discretize",
222:       "weka.core.Randomizable",
223:       "weka.classifiers.trees.j48.NoSplit",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Instances",
226:       "weka.core.UnassignedClassException",
227:       "weka.classifiers.bayes.net.BIFReader",
228:       "weka.classifiers.bayes.net.ParentSet",
229:       "weka.classifiers.rules.ZeroR",
230:       "weka.core.stemmers.IteratedLovinsStemmer",
231:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
232:       "weka.filters.unsupervised.attribute.Standardize",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.UnsupportedAttributeTypeException",
235:       "weka.classifiers.Sourcable",
236:       "weka.core.RevisionHandler",
237:       "weka.classifiers.evaluation.output.prediction.PlainText",
238:       "weka.core.neighboursearch.TreePerformanceStats",
239:       "weka.core.xml.XMLSerialization",
240:       "weka.classifiers.xml.XMLClassifier",
241:       "weka.filters.Filter",
242:       "weka.filters.supervised.attribute.Discretize"
243:     );
244:   } 
245: 
246:   private static void resetClasses() {
247:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
248: 
249:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
250:       "weka.classifiers.AbstractClassifier",
251:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
252:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
253:       "weka.core.Capabilities$Capability",
254:       "weka.core.tokenizers.Tokenizer",
255:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
256:       "weka.core.tokenizers.WordTokenizer",
257:       "weka.core.stemmers.NullStemmer",
258:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
259:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
260:       "weka.core.neighboursearch.balltrees.BallSplitter",
261:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
262:       "weka.core.neighboursearch.balltrees.BallNode",
263:       "weka.classifiers.misc.SerializedClassifier",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.Capabilities",
269:       "weka.core.Utils",
270:       "org.pentaho.packageManagement.PackageManager",
271:       "org.pentaho.packageManagement.DefaultPackageManager",
272:       "weka.core.Version",
273:       "weka.core.Environment",
274:       "weka.core.WekaPackageManager",
275:       "weka.core.SingleIndex",
276:       "weka.core.Attribute",
277:       "weka.core.ProtectedProperties",
278:       "weka.core.neighboursearch.NearestNeighbourSearch",
279:       "weka.core.neighboursearch.CoverTree",
280:       "weka.core.NormalizableDistance",
281:       "weka.core.EuclideanDistance",
282:       "weka.core.Range",
283:       "weka.filters.Filter",
284:       "weka.filters.supervised.attribute.Discretize",
285:       "weka.core.RevisionUtils",
286:       "weka.core.tokenizers.NGramTokenizer",
287:       "weka.classifiers.bayes.NaiveBayes",
288:       "weka.classifiers.bayes.NaiveBayesUpdateable",
289:       "weka.core.UnassignedDatasetException",
290:       "weka.core.stemmers.LovinsStemmer",
291:       "weka.core.stemmers.IteratedLovinsStemmer",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CVParameterSelection",
295:       "weka.classifiers.rules.ZeroR",
296:       "weka.core.FastVector",
297:       "weka.classifiers.Evaluation",
298:       "weka.core.Option",
299:       "weka.core.stemmers.SnowballStemmer",
300:       "weka.core.Tag",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.core.TestInstances",
304:       "weka.core.SerializedObject",
305:       "weka.core.TechnicalInformation",
306:       "weka.core.TechnicalInformation$Type",
307:       "weka.core.TechnicalInformation$Field",
308:       "weka.core.Instances",
309:       "weka.core.converters.ArffLoader$ArffReader",
310:       "weka.core.tokenizers.AlphabeticTokenizer",
311:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
312:       "weka.classifiers.functions.supportVector.Kernel",
313:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
314:       "weka.attributeSelection.ASEvaluation",
315:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
316:       "weka.attributeSelection.PrincipalComponents",
317:       "weka.core.DenseInstance",
318:       "weka.core.Stopwords",
319:       "weka.classifiers.bayes.BayesNet",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
322:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
323:       "weka.classifiers.bayes.net.search.local.K2",
324:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
325:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
326:       "weka.core.stemmers.Stemming",
327:       "weka.core.neighboursearch.BallTree",
328:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
329:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
330:       "weka.classifiers.lazy.LWL",
331:       "weka.classifiers.trees.DecisionStump",
332:       "weka.core.neighboursearch.KDTree",
333:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
334:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
335:       "weka.classifiers.RandomizableClassifier",
336:       "weka.classifiers.functions.SGDText",
337:       "weka.classifiers.meta.CostSensitiveClassifier",
338:       "weka.classifiers.CostMatrix",
339:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
340:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
341:       "weka.classifiers.bayes.NaiveBayesMultinomial",
342:       "weka.classifiers.MultipleClassifiersCombiner",
343:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
344:       "weka.classifiers.meta.MultiScheme",
345:       "weka.classifiers.misc.InputMappedClassifier",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.estimators.Estimator",
349:       "weka.estimators.DiscreteEstimator",
350:       "weka.estimators.KernelEstimator",
351:       "weka.classifiers.trees.LMT",
352:       "weka.classifiers.functions.Logistic",
353:       "weka.attributeSelection.GainRatioAttributeEval",
354:       "weka.classifiers.functions.SimpleLogistic",
355:       "weka.classifiers.functions.SMO",
356:       "weka.classifiers.functions.supportVector.CachedKernel",
357:       "weka.classifiers.functions.supportVector.PolyKernel",
358:       "weka.classifiers.meta.Vote",
359:       "weka.classifiers.IteratedSingleClassifierEnhancer",
360:       "weka.classifiers.meta.AdditiveRegression",
361:       "weka.classifiers.meta.RegressionByDiscretization",
362:       "weka.filters.unsupervised.attribute.Discretize",
363:       "weka.classifiers.trees.J48",
364:       "weka.classifiers.trees.j48.ClassifierTree",
365:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
366:       "weka.classifiers.functions.VotedPerceptron",
367:       "weka.filters.SimpleFilter",
368:       "weka.filters.SimpleStreamFilter",
369:       "weka.filters.MultiFilter",
370:       "weka.filters.AllFilter",
371:       "weka.attributeSelection.WrapperSubsetEval",
372:       "weka.classifiers.trees.m5.M5Base",
373:       "weka.classifiers.rules.M5Rules",
374:       "weka.classifiers.functions.LinearRegression",
375:       "weka.classifiers.rules.DecisionTable",
376:       "weka.attributeSelection.ASSearch",
377:       "weka.attributeSelection.BestFirst",
378:       "weka.core.UnassignedClassException",
379:       "weka.classifiers.meta.FilteredClassifier",
380:       "weka.filters.supervised.attribute.AttributeSelection",
381:       "weka.attributeSelection.AttributeSelection",
382:       "weka.attributeSelection.CfsSubsetEval",
383:       "weka.attributeSelection.GreedyStepwise",
384:       "weka.classifiers.functions.GaussianProcesses",
385:       "weka.classifiers.functions.SMOreg",
386:       "weka.classifiers.functions.supportVector.RegOptimizer",
387:       "weka.classifiers.functions.supportVector.RegSMO",
388:       "weka.classifiers.functions.supportVector.RegSMOImproved",
389:       "weka.core.WekaException",
390:       "weka.core.UnsupportedAttributeTypeException",
391:       "weka.classifiers.meta.AttributeSelectedClassifier",
392:       "weka.classifiers.trees.RandomForest",
393:       "weka.classifiers.trees.RandomTree",
394:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
395:       "weka.core.ClassDiscovery",
396:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
397:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
398:       "weka.classifiers.meta.Stacking",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.filters.unsupervised.attribute.NominalToBinary",
401:       "weka.classifiers.functions.neural.SigmoidUnit",
402:       "weka.classifiers.functions.neural.LinearUnit",
403:       "weka.classifiers.rules.OneR",
404:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
405:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
406:       "weka.classifiers.meta.RandomCommittee",
407:       "weka.classifiers.functions.SimpleLinearRegression",
408:       "weka.core.SelectedTag",
409:       "weka.classifiers.meta.MultiClassClassifier",
410:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
411:       "weka.attributeSelection.ReliefFAttributeEval",
412:       "weka.estimators.PoissonEstimator",
413:       "weka.classifiers.meta.ClassificationViaRegression",
414:       "weka.classifiers.trees.M5P",
415:       "weka.core.matrix.Matrix",
416:       "weka.estimators.MahalanobisEstimator",
417:       "weka.classifiers.functions.supportVector.Puk",
418:       "weka.classifiers.functions.supportVector.RBFKernel",
419:       "weka.classifiers.meta.Bagging",
420:       "weka.classifiers.trees.REPTree",
421:       "weka.estimators.NormalEstimator",
422:       "weka.attributeSelection.OneRAttributeEval",
423:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
424:       "weka.classifiers.meta.LogitBoost",
425:       "weka.core.AttributeStats",
426:       "weka.core.Queue",
427:       "weka.core.AttributeLocator",
428:       "weka.core.StringLocator",
429:       "weka.core.RelationalLocator",
430:       "weka.core.ContingencyTables",
431:       "weka.core.Queue$QueueNode",
432:       "weka.classifiers.meta.AdaBoostM1",
433:       "weka.classifiers.rules.PART",
434:       "weka.classifiers.rules.part.MakeDecList",
435:       "weka.classifiers.functions.SGD",
436:       "weka.core.neighboursearch.covertrees.Stack",
437:       "weka.core.neighboursearch.CoverTree$DistanceNode",
438:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
439:       "weka.attributeSelection.CorrelationAttributeEval",
440:       "weka.attributeSelection.InfoGainAttributeEval",
441:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
442:       "weka.core.Check",
443:       "weka.core.CheckGOE",
444:       "weka.core.CheckOptionHandler",
445:       "weka.classifiers.rules.JRip",
446:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
447:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
448:       "weka.classifiers.functions.supportVector.StringKernel",
449:       "weka.core.Javadoc",
450:       "weka.core.TechnicalInformationHandlerJavadoc",
451:       "weka.classifiers.lazy.KStar",
452:       "weka.core.converters.ConverterUtils$DataSource",
453:       "weka.core.converters.AbstractLoader",
454:       "weka.core.converters.AbstractFileLoader",
455:       "weka.core.converters.ArffLoader",
456:       "weka.core.OptionHandlerJavadoc",
457:       "weka.experiment.Stats",
458:       "weka.classifiers.meta.RandomSubSpace",
459:       "weka.core.ManhattanDistance",
460:       "weka.core.ChebyshevDistance",
461:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode"
462:     );
463:   }
464: }

[MASTER] 01:40:57.021 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[4];
doubleArray0[1] = 5.5;
doubleArray0[2] = 5.5;
doubleArray0[3] = 5.5;
SparseInstance sparseInstance0 = new SparseInstance(5.5, doubleArray0);
TestInstances testInstances0 = new TestInstances();
WrapperSubsetEval wrapperSubsetEval0 = new WrapperSubsetEval();
Capabilities capabilities0 = wrapperSubsetEval0.getCapabilities();
TestInstances testInstances1 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances1.generate(" ");
sparseInstance0.setDataset(instances0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
testInstances1.setNumString(9);
naiveBayesMultinomialText0.tokenizeInstance(sparseInstance0, true);

[MASTER] 01:41:00.852 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:41:01.891 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 01:42:36.213 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6873145833333333% of time used, but only 82/217 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 01:43:11.751 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_13_1575250991718/weka/experiment/ResultMatrix_13_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_13_1575250991718/weka/experiment/ResultMatrix_13_tmp__ESTest_scaffolding.java]]
[MASTER] 01:43:11.752 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:43:11.752 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:43:11.755 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable int1
  location: class weka.experiment.ResultMatrix_13_tmp__ESTest: 36
[MASTER] 01:43:11.755 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_13_1575250991718/weka/experiment/ResultMatrix_13_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 01:43:11 GMT 2019
4:  */
5: 
6: package weka.experiment;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.experiment.ResultMatrix;
14: import weka.experiment.ResultMatrixCSV;
15: import weka.experiment.ResultMatrixHTML;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class ResultMatrix_13_tmp__ESTest extends ResultMatrix_13_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.491384447467034
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
27:       resultMatrixCSV0.setEnumerateColNames(false);
28:       resultMatrixCSV0.getColName(37);
29:       resultMatrixCSV0.getVisibleColCount();
30:       resultMatrixCSV0.getDefaultSignificanceWidth();
31:       assertFalse(resultMatrixCSV0.getEnumerateColNames());
32:       
33:       ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
34:       resultMatrixHTML0.getDefaultEnumerateColNames();
35:       int int0 = ResultMatrix.SIGNIFICANCE_TIE;
36:       assertFalse(int0 == int1);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_13_1575250991718/weka/experiment/ResultMatrix_13_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 01:43:11 GMT 2019
5:  */
6: 
7: package weka.experiment;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ResultMatrix_13_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.experiment.ResultMatrix"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ResultMatrix_13_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.experiment.ResultMatrixCSV",
89:       "weka.core.OptionHandler",
90:       "weka.experiment.ResultMatrixLatex",
91:       "weka.experiment.ResultMatrixPlainText",
92:       "weka.experiment.ResultMatrixSignificance",
93:       "weka.experiment.ResultMatrix",
94:       "weka.experiment.ResultMatrixHTML",
95:       "weka.core.RevisionUtils",
96:       "weka.core.Option",
97:       "weka.core.Version",
98:       "weka.experiment.ResultMatrixGnuPlot",
99:       "weka.core.Utils",
100:       "weka.core.RevisionHandler"
101:     );
102:   } 
103: 
104:   private static void resetClasses() {
105:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ResultMatrix_13_tmp__ESTest_scaffolding.class.getClassLoader()); 
106: 
107:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
108:       "weka.experiment.ResultMatrix",
109:       "weka.experiment.ResultMatrixCSV",
110:       "weka.experiment.ResultMatrixPlainText",
111:       "weka.experiment.ResultMatrixGnuPlot",
112:       "weka.experiment.ResultMatrixSignificance",
113:       "weka.core.Utils",
114:       "weka.experiment.ResultMatrixHTML",
115:       "weka.experiment.ResultMatrixLatex",
116:       "weka.core.RevisionUtils",
117:       "weka.core.Option",
118:       "weka.core.Version"
119:     );
120:   }
121: }

[MASTER] 01:43:11.756 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
resultMatrixCSV0.setEnumerateColNames(false);
resultMatrixCSV0.getColName(37);
resultMatrixCSV0.getVisibleColCount();
resultMatrixCSV0.getDefaultSignificanceWidth();
assertFalse(resultMatrixCSV0.getEnumerateColNames());

ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
resultMatrixHTML0.getDefaultEnumerateColNames();
int int0 = ResultMatrix.SIGNIFICANCE_TIE;
assertFalse(int0 == int1);


[MASTER] 01:44:07.213 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
