* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 12630
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 255s and 795 generations, 202750 statements, best individual has fitness: 600.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 117
* Number of covered goals: 111
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 98
* Number of covered goals: 87
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 347
* Number of covered goals: 323
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 70%
* Total number of goals: 70
* Number of covered goals: 49
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 98
* Number of covered goals: 87
* Generated 77 tests with total length 331
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 66%
* Compiling and checking tests
[MASTER] 16:35:16.121 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 16:35:16.122 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.setName("U\"gpxB<Le>");
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));

fBProcedureCall1.setName("=YB");
boolean boolean0 = fBProcedureCall1.equals(fBProcedureCall0);
assertTrue(boolean0);


[MASTER] 16:35:18.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 16:35:18.282 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.addParam(2147483636, "lr");

[MASTER] 16:35:18.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 16:35:18.408 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.registerOutParam(2147483645, (-1968));

[MASTER] 16:35:18.461 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 16:35:18.463 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.getInputParam(2147483645);

[MASTER] 16:35:18.658 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 16:35:18.658 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2147483645, "ub9s^2&>\"F[d|{o");
fBProcedureCall0.addOutputParam(fBProcedureParam0);

[MASTER] 16:35:18.716 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-359771754> but was:<-1>
[MASTER] 16:35:18.717 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2);
fBProcedureCall0.addInputParam(fBProcedureParam0);
fBProcedureCall0.clone();
fBProcedureCall0.addInputParam(fBProcedureParam0);
FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(17, "0?Fmd|( vW.");
fBProcedureParam1.setType(2);
fBProcedureParam1.setType(2767);
fBProcedureParam1.setValue(fBProcedureParam0);
assertEquals((-359771754), fBProcedureParam0.getIndex());

fBProcedureParam1.setValue("0?Fmd|( vW.");
fBProcedureParam1.setValue(fBProcedureCall0);
fBProcedureParam1.setIndex(2);
fBProcedureCall0.addInputParam(fBProcedureParam1);
fBProcedureParam0.setIndex(6);
fBProcedureCall0.addOutputParam(fBProcedureParam1);
fBProcedureCall0.addInputParam(fBProcedureParam0);
fBProcedureCall0.getOutputParams();
FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getOutputParam((-852));
fBProcedureCall0.getOutputParams();
fBProcedureCall0.getOutputParam(2);
fBProcedureParam2.clone();
Object object0 = fBProcedureCall0.clone();
fBProcedureCall0.getInputParams();
fBProcedureCall0.getInputParams();
fBProcedureCall0.addInputParam(fBProcedureParam2);
fBProcedureCall0.addInputParam(fBProcedureParam0);
assertTrue(fBProcedureCall0.equals((Object)object0));


* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/rmosa/tests/s1015/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 12624
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 12628
* Analyzing classpath: 
* Analyzing classpath: 
[MASTER] 16:37:59.223 [logback-2] ERROR ClientNodeImpl - Error when connecting to master via RMI
java.lang.SecurityException: Unprivileged thread "main" cannot add a privileged thread: failed to add "Statistics sender in client process"
Current privileged threads are: 
"pool-3-thread-1"
	at org.evosuite.runtime.sandbox.MSecurityManager.addPrivilegedThread(MSecurityManager.java:396) ~[evosuite.jar:1.0.6]
	at org.evosuite.runtime.sandbox.Sandbox.addPrivilegedThread(Sandbox.java:92) ~[evosuite.jar:1.0.6]
	at org.evosuite.rmi.service.ClientNodeImpl.init(ClientNodeImpl.java:369) ~[evosuite.jar:1.0.6]
	at org.evosuite.rmi.ClientServices.registerServices(ClientServices.java:68) [evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.run(ClientProcess.java:82) [evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.main(ClientProcess.java:203) [evosuite.jar:1.0.6]
[MASTER] 16:37:59.251 [logback-2] ERROR ClientProcess - Error when generating tests for: org.firebirdsql.jdbc.FBCachedFetcher with seed 1015. Configuration id : RMOSA
java.lang.RuntimeException: Could not connect to master process on port 12628
	at org.evosuite.ClientProcess.run(ClientProcess.java:87) ~[evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.main(ClientProcess.java:203) ~[evosuite.jar:1.0.6]
[MASTER] 16:37:59.710 [main] ERROR ExternalProcessHandler - Class org.firebirdsql.jdbc.FBCachedFetcher. Lost connection with clients.
ClientNode: INITIALIZATION

java.rmi.UnmarshalException: Error unmarshaling return header; nested exception is: 
	java.io.EOFException
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:236) ~[na:1.8.0_201]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_201]
	at com.sun.proxy.$Proxy7.waitUntilFinished(Unknown Source) ~[na:na]
	at org.evosuite.utils.ExternalProcessHandler.waitForResult(ExternalProcessHandler.java:608) ~[evosuite.jar:1.0.6]
	at org.evosuite.executionmode.TestGeneration.generateTests(TestGeneration.java:498) [evosuite.jar:1.0.6]
	at org.evosuite.executionmode.TestGeneration.executeTestGeneration(TestGeneration.java:79) [evosuite.jar:1.0.6]
	at org.evosuite.EvoSuite.parseCommandLine(EvoSuite.java:269) [evosuite.jar:1.0.6]
	at org.evosuite.EvoSuite.main(EvoSuite.java:302) [evosuite.jar:1.0.6]
Caused by: java.io.EOFException: null
	at java.io.DataInputStream.readByte(DataInputStream.java:267) ~[na:1.8.0_201]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:222) ~[na:1.8.0_201]
	... 9 common frames omitted
* Computation finished
[MASTER] 16:37:59.834 [main] ERROR SearchStatistics - No statistics has been saved because EvoSuite failed to generate any test case
[MASTER] 16:37:59.936 [main] ERROR TestGeneration - failed to write statistics data
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 215s and 562 generations, 145137 statements, best individual has fitness: 624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 242
* Number of covered goals: 228
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 188
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 387
* Number of covered goals: 351
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 188
* Generated 92 tests with total length 134
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/rmosa/tests/s1015/110_firebird/evosuite-tests
* Done!

* Computation finished
