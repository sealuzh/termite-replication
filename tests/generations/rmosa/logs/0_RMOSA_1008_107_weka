* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2402
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Search finished after 237s and 243 generations, 98782 statements, best individual has fitness: 2736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 91 tests with total length 235
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2405
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:22:21.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:22:21.310 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:22:21.311 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:22:21.711 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:22:21.715 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:22:21.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 07:24:41.132 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 07:24:46.042 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 215s and 369 generations, 164585 statements, best individual has fitness: 4416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 370
* Number of covered goals: 259
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 242
* Number of covered goals: 136
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 713
* Number of covered goals: 522
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 56%
* Total number of goals: 242
* Number of covered goals: 136
* Generated 81 tests with total length 580
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 07:28:17.161 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:28:18.016 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2399
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2401
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:52:40.024 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:52:40.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:52:40.029 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:52:40.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:52:40.209 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:52:40.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 07:52:47.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 07:52:47.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 07:52:47.975 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 07:52:47.975 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 07:52:47.975 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 07:52:47.975 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 07:52:47.976 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 07:52:54.947 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 07:52:54.948 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:52:59.486 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:52:59.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:52:59.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:53:00.339 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:53:01.310 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:53:01.318 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:53:04.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:53:04.458 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:53:04.459 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:53:04.459 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:53:04.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:53:04.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:53:04.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:53:04.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:53:04.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:53:04.640 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 07:53:04.657 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 07:53:09.131 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 07:53:26.150 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 07:53:54.331 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 07:55:09.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.weightedTruePositiveRate()D
[MASTER] 07:55:09.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.weightedRecall()D
[MASTER] 07:55:09.320 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.weightedTruePositiveRate()D
[MASTER] 07:55:09.321 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.weightedRecall()D
[MASTER] 07:55:09.321 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateStatsForIntervalEstimator(Lweka/classifiers/IntervalEstimator;Lweka/core/Instance;D)V
[MASTER] 07:55:09.321 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateStatsForPredictor(DLweka/core/Instance;)V
[MASTER] 07:55:27.057 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluationForSingleInstance(Lweka/classifiers/Classifier;Lweka/core/Instance;Z)D
[MASTER] 07:56:13.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;[Ljava/lang/String;)Ljava/lang/String;
* Search finished after 217s and 315 generations, 197321 statements, best individual has fitness: 1096.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 338
* Number of covered goals: 325
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 194
* Number of covered goals: 176
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 439
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 194
* Number of covered goals: 175
* Generated 80 tests with total length 1075
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 262s and 118 generations, 82130 statements, best individual has fitness: 15040.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 803
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 361
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 266
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 341
* Generated 155 tests with total length 1681
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 08:02:56.951 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_85_1575273776910/weka/classifiers/Evaluation_85_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_85_1575273776910/weka/classifiers/Evaluation_85_tmp__ESTest_scaffolding.java]]
[MASTER] 08:02:56.952 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:02:56.952 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:02:56.955 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_85_tmp__ESTest: 32
[MASTER] 08:02:56.956 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_85_1575273776910/weka/classifiers/Evaluation_85_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 08:02:56 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.classifiers.Evaluation;
14: import weka.core.Instances;
15: import weka.core.TestInstances;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class Evaluation_85_tmp__ESTest extends Evaluation_85_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=0.45454545454545453
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       TestInstances testInstances0 = new TestInstances();
27:       Instances instances0 = testInstances0.generate(" ");
28:       Evaluation evaluation0 = new Evaluation(instances0);
29:       evaluation0.toCumulativeMarginDistributionString();
30:       evaluation0.numTrueNegatives(477);
31:       double double0 = evaluation0.m_SumKBInfo;
32:       assertEquals(double0, double1, 0.01);
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_85_1575273776910/weka/classifiers/Evaluation_85_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 08:02:56 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_85_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_85_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.clusterers.AbstractClusterer",
92:       "weka.core.DistanceFunction",
93:       "weka.core.converters.TextDirectoryLoader",
94:       "org.pentaho.packageManagement.PackageConstraint",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.trees.m5.M5Base",
98:       "weka.classifiers.rules.RuleStats",
99:       "weka.classifiers.CostMatrix",
100:       "weka.filters.UnsupervisedFilter",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.converters.DatabaseConverter",
106:       "weka.core.ConjugateGradientOptimization",
107:       "weka.classifiers.functions.LinearRegression",
108:       "weka.core.stemmers.Stemmer",
109:       "weka.classifiers.functions.SimpleLinearRegression",
110:       "weka.core.converters.IncrementalConverter",
111:       "weka.filters.supervised.attribute.ClassOrder",
112:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
113:       "org.pentaho.packageManagement.DefaultPackageManager",
114:       "weka.estimators.UnivariateIntervalEstimator",
115:       "weka.classifiers.meta.LogitBoost",
116:       "org.bounce.net.DefaultAuthenticator",
117:       "weka.classifiers.bayes.NaiveBayes",
118:       "weka.estimators.IncrementalEstimator",
119:       "weka.clusterers.NumberOfClustersRequestable",
120:       "weka.core.stemmers.NullStemmer",
121:       "weka.core.EnvironmentHandler",
122:       "weka.classifiers.trees.j48.C45ModelSelection",
123:       "weka.classifiers.functions.Logistic",
124:       "weka.classifiers.trees.m5.RuleNode",
125:       "weka.core.Utils",
126:       "weka.core.converters.XRFFLoader",
127:       "weka.classifiers.meta.AdaBoostM1",
128:       "weka.core.CustomDisplayStringProvider",
129:       "weka.core.tokenizers.Tokenizer",
130:       "weka.core.NormalizableDistance",
131:       "weka.classifiers.functions.SMOreg",
132:       "weka.classifiers.rules.Rule",
133:       "weka.core.NoSupportForMissingValuesException",
134:       "weka.clusterers.SimpleKMeans",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
137:       "weka.core.TechnicalInformation$Type",
138:       "weka.core.MultiInstanceCapabilitiesHandler",
139:       "weka.core.Copyable",
140:       "weka.core.Capabilities",
141:       "weka.core.BinarySparseInstance",
142:       "weka.filters.supervised.attribute.NominalToBinary",
143:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
144:       "weka.core.converters.SVMLightLoader",
145:       "weka.classifiers.functions.supportVector.CachedKernel",
146:       "weka.core.SerializedObject",
147:       "weka.clusterers.UpdateableClusterer",
148:       "weka.core.Summarizable",
149:       "weka.classifiers.trees.j48.ModelSelection",
150:       "weka.core.AdditionalMeasureProducer",
151:       "weka.core.neighboursearch.balltrees.BallNode",
152:       "org.pentaho.packageManagement.PackageManager$1",
153:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
154:       "weka.core.Drawable",
155:       "weka.core.Optimization",
156:       "weka.core.matrix.Matrix",
157:       "weka.classifiers.ConditionalDensityEstimator",
158:       "weka.core.CapabilitiesHandler",
159:       "weka.classifiers.trees.REPTree",
160:       "weka.classifiers.functions.supportVector.StringKernel",
161:       "weka.core.AbstractInstance",
162:       "weka.core.converters.LibSVMLoader",
163:       "weka.core.scripting.JythonObject",
164:       "weka.core.SelectedTag",
165:       "weka.classifiers.functions.supportVector.RegOptimizer",
166:       "org.pentaho.packageManagement.DefaultPackage",
167:       "weka.estimators.DiscreteEstimator",
168:       "weka.classifiers.bayes.NaiveBayesUpdateable",
169:       "weka.classifiers.misc.InputMappedClassifier",
170:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
171:       "weka.experiment.ResultProducer",
172:       "weka.clusterers.RandomizableClusterer",
173:       "weka.core.Version",
174:       "weka.core.converters.AbstractLoader",
175:       "weka.filters.unsupervised.attribute.RemoveUseless",
176:       "weka.core.converters.BatchConverter",
177:       "weka.core.Tag",
178:       "weka.classifiers.IteratedSingleClassifierEnhancer",
179:       "weka.classifiers.trees.j48.BinC45ModelSelection",
180:       "weka.core.neighboursearch.CoverTree",
181:       "weka.classifiers.AbstractClassifier",
182:       "weka.core.converters.ArffLoader",
183:       "weka.estimators.UnivariateDensityEstimator",
184:       "weka.core.OptionHandler",
185:       "weka.core.WekaException",
186:       "weka.classifiers.rules.JRip",
187:       "weka.core.Range",
188:       "weka.core.Attribute$1",
189:       "weka.core.PartitionGenerator",
190:       "weka.core.scripting.JythonSerializableObject",
191:       "weka.classifiers.Classifier",
192:       "weka.core.Capabilities$Capability",
193:       "weka.core.SparseInstance",
194:       "org.pentaho.packageManagement.PackageManager",
195:       "weka.core.WekaEnumeration",
196:       "weka.classifiers.trees.j48.ClassifierTree",
197:       "weka.core.tokenizers.WordTokenizer",
198:       "weka.classifiers.trees.M5P",
199:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
200:       "weka.classifiers.functions.VotedPerceptron",
201:       "weka.classifiers.trees.j48.PruneableClassifierTree",
202:       "weka.classifiers.Evaluation",
203:       "weka.classifiers.functions.supportVector.Kernel",
204:       "weka.core.converters.CSVLoader",
205:       "weka.core.WekaPackageManager",
206:       "weka.filters.SupervisedFilter",
207:       "weka.classifiers.evaluation.ThresholdCurve",
208:       "weka.core.TechnicalInformationHandler",
209:       "weka.experiment.DatabaseUtils",
210:       "weka.core.converters.URLSourcedLoader",
211:       "weka.core.converters.FileSourcedConverter",
212:       "weka.classifiers.lazy.LWL",
213:       "weka.core.neighboursearch.LinearNNSearch",
214:       "weka.classifiers.meta.CostSensitiveClassifier",
215:       "weka.clusterers.Clusterer",
216:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
217:       "weka.core.Option",
218:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
219:       "weka.core.neighboursearch.PerformanceStats",
220:       "weka.filters.Sourcable",
221:       "weka.core.Attribute",
222:       "weka.classifiers.meta.MultiScheme",
223:       "weka.core.FastVector",
224:       "weka.estimators.UnivariateKernelEstimator",
225:       "weka.classifiers.MultipleClassifiersCombiner",
226:       "weka.core.xml.XMLDocument",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.core.BatchPredictor",
229:       "weka.classifiers.functions.supportVector.RegSMOImproved",
230:       "weka.classifiers.SingleClassifierEnhancer",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Instance",
233:       "weka.core.converters.Loader",
234:       "weka.classifiers.functions.supportVector.RegSMO",
235:       "weka.classifiers.functions.supportVector.PolyKernel",
236:       "weka.estimators.Estimator",
237:       "weka.core.ProtectedProperties",
238:       "weka.classifiers.IntervalEstimator",
239:       "weka.core.Matchable",
240:       "weka.core.AttributeStats",
241:       "weka.core.WeightedInstancesHandler",
242:       "weka.core.neighboursearch.NearestNeighbourSearch",
243:       "weka.core.GlobalInfoJavadoc",
244:       "weka.classifiers.functions.GaussianProcesses",
245:       "weka.classifiers.trees.DecisionStump",
246:       "weka.estimators.UnivariateQuantileEstimator",
247:       "weka.core.TechnicalInformation$Field",
248:       "weka.core.converters.DatabaseLoader",
249:       "weka.core.Randomizable",
250:       "weka.core.Javadoc",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Instances",
253:       "weka.core.converters.AbstractFileLoader",
254:       "weka.classifiers.bayes.NaiveBayesMultinomial",
255:       "weka.filters.unsupervised.attribute.Normalize",
256:       "weka.classifiers.rules.OneR",
257:       "weka.core.UnassignedClassException",
258:       "weka.classifiers.rules.ZeroR",
259:       "weka.core.xml.XMLInstances",
260:       "weka.filters.unsupervised.attribute.Standardize",
261:       "weka.core.converters.DatabaseConnection",
262:       "weka.core.TechnicalInformation",
263:       "weka.core.UnsupportedAttributeTypeException",
264:       "weka.classifiers.Sourcable",
265:       "weka.classifiers.functions.Logistic$OptEngCG",
266:       "weka.classifiers.functions.Logistic$OptEng",
267:       "weka.core.RevisionHandler",
268:       "weka.classifiers.evaluation.output.prediction.PlainText",
269:       "weka.experiment.Stats",
270:       "weka.classifiers.rules.OneR$OneRRule",
271:       "weka.core.xml.XMLSerialization",
272:       "weka.core.neighboursearch.TreePerformanceStats",
273:       "weka.classifiers.xml.XMLClassifier",
274:       "weka.filters.Filter",
275:       "weka.classifiers.lazy.IBk",
276:       "weka.filters.supervised.attribute.Discretize",
277:       "weka.classifiers.rules.JRip$RipperRule"
278:     );
279:   } 
280: 
281:   private static void resetClasses() {
282:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_85_tmp__ESTest_scaffolding.class.getClassLoader()); 
283: 
284:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
285:       "weka.classifiers.Evaluation",
286:       "weka.core.pmml.PMMLFactory$ModelType",
287:       "weka.core.pmml.PMMLFactory$1",
288:       "weka.core.xml.KOML",
289:       "weka.core.Version",
290:       "weka.core.Utils",
291:       "weka.classifiers.AbstractClassifier",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.LogitBoost",
296:       "weka.classifiers.rules.ZeroR",
297:       "weka.classifiers.trees.DecisionStump",
298:       "weka.core.TestInstances",
299:       "weka.core.converters.AbstractLoader",
300:       "weka.core.converters.TextDirectoryLoader",
301:       "weka.core.Attribute",
302:       "weka.core.ProtectedProperties",
303:       "weka.core.Instances",
304:       "weka.classifiers.bayes.NaiveBayesMultinomial",
305:       "weka.core.converters.AbstractFileLoader",
306:       "weka.core.converters.ArffLoader",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.core.Tag",
309:       "weka.classifiers.meta.CostSensitiveClassifier",
310:       "weka.classifiers.CostMatrix",
311:       "weka.core.RevisionUtils",
312:       "weka.core.converters.LibSVMLoader",
313:       "weka.core.converters.JSONLoader",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.attributeSelection.ASEvaluation",
316:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
317:       "weka.attributeSelection.PrincipalComponents",
318:       "weka.core.converters.DatabaseLoader",
319:       "weka.core.Environment",
320:       "weka.experiment.DatabaseUtils",
321:       "weka.core.converters.DatabaseConnection",
322:       "org.pentaho.packageManagement.PackageManager",
323:       "org.pentaho.packageManagement.DefaultPackageManager",
324:       "weka.core.WekaPackageManager",
325:       "weka.filters.Filter",
326:       "weka.filters.AllFilter",
327:       "weka.core.xml.XMLDocument",
328:       "weka.core.xml.XMLInstances",
329:       "weka.core.converters.XRFFLoader",
330:       "weka.core.converters.ConverterUtils$DataSource",
331:       "weka.gui.GenericPropertiesCreator",
332:       "weka.gui.GenericObjectEditor",
333:       "weka.core.converters.ConverterUtils",
334:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
335:       "weka.classifiers.evaluation.output.prediction.PlainText",
336:       "weka.core.converters.MatlabLoader",
337:       "weka.classifiers.trees.REPTree",
338:       "weka.core.converters.C45Loader",
339:       "weka.classifiers.evaluation.output.prediction.XML",
340:       "weka.core.converters.SerializedInstancesLoader",
341:       "weka.classifiers.bayes.BayesNet",
342:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
343:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
344:       "weka.classifiers.bayes.net.search.local.K2",
345:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
346:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
347:       "weka.clusterers.AbstractClusterer",
348:       "weka.clusterers.RandomizableClusterer",
349:       "weka.clusterers.SimpleKMeans",
350:       "weka.core.NormalizableDistance",
351:       "weka.core.EuclideanDistance",
352:       "weka.core.Range",
353:       "weka.core.Option",
354:       "weka.classifiers.lazy.IBk",
355:       "weka.core.neighboursearch.NearestNeighbourSearch",
356:       "weka.core.neighboursearch.LinearNNSearch",
357:       "weka.classifiers.rules.JRip",
358:       "weka.core.TechnicalInformation",
359:       "weka.core.TechnicalInformation$Type",
360:       "weka.core.TechnicalInformation$Field",
361:       "weka.core.SerializedObject",
362:       "weka.core.Capabilities",
363:       "weka.core.neighboursearch.CoverTree",
364:       "weka.core.neighboursearch.BallTree",
365:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
366:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
367:       "weka.core.neighboursearch.balltrees.BallSplitter",
368:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
369:       "weka.classifiers.RandomizableClassifier",
370:       "weka.classifiers.functions.SGDText",
371:       "weka.core.tokenizers.Tokenizer",
372:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
373:       "weka.core.tokenizers.WordTokenizer",
374:       "weka.core.stemmers.NullStemmer",
375:       "weka.core.Capabilities$Capability",
376:       "weka.attributeSelection.GainRatioAttributeEval",
377:       "weka.classifiers.trees.J48",
378:       "weka.classifiers.functions.GaussianProcesses",
379:       "weka.classifiers.functions.supportVector.Kernel",
380:       "weka.classifiers.functions.supportVector.CachedKernel",
381:       "weka.classifiers.functions.supportVector.PolyKernel",
382:       "weka.core.AbstractInstance",
383:       "weka.core.SparseInstance",
384:       "weka.estimators.UnivariateKernelEstimator",
385:       "weka.core.matrix.Matrix",
386:       "weka.estimators.Estimator",
387:       "weka.estimators.MahalanobisEstimator",
388:       "weka.classifiers.rules.OneR",
389:       "weka.filters.SimpleFilter",
390:       "weka.filters.SimpleStreamFilter",
391:       "weka.filters.MultiFilter",
392:       "weka.core.BinarySparseInstance",
393:       "weka.core.UnassignedDatasetException",
394:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
395:       "weka.classifiers.trees.m5.M5Base",
396:       "weka.classifiers.rules.M5Rules",
397:       "weka.experiment.Stats",
398:       "weka.experiment.InstanceQuery",
399:       "weka.classifiers.functions.MultilayerPerceptron",
400:       "weka.core.FastVector",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit",
404:       "weka.core.DenseInstance",
405:       "weka.classifiers.rules.PART",
406:       "weka.core.WekaEnumeration",
407:       "weka.core.Attribute$1",
408:       "weka.classifiers.meta.RegressionByDiscretization",
409:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
410:       "weka.filters.unsupervised.attribute.Discretize",
411:       "weka.core.converters.SVMLightLoader",
412:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
413:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
414:       "weka.classifiers.meta.RandomCommittee",
415:       "weka.classifiers.trees.RandomTree",
416:       "weka.classifiers.meta.FilteredClassifier",
417:       "weka.filters.supervised.attribute.AttributeSelection",
418:       "weka.attributeSelection.AttributeSelection",
419:       "weka.attributeSelection.CfsSubsetEval",
420:       "weka.attributeSelection.ASSearch",
421:       "weka.attributeSelection.GreedyStepwise",
422:       "weka.attributeSelection.BestFirst",
423:       "weka.filters.supervised.attribute.Discretize",
424:       "weka.classifiers.functions.Logistic",
425:       "weka.classifiers.lazy.LWL",
426:       "weka.classifiers.functions.SimpleLogistic",
427:       "weka.core.WekaException",
428:       "weka.core.UnsupportedAttributeTypeException",
429:       "weka.core.converters.CSVLoader",
430:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
431:       "weka.classifiers.functions.supportVector.StringKernel",
432:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
433:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
434:       "weka.core.AttributeStats",
435:       "weka.classifiers.trees.M5P",
436:       "weka.classifiers.MultipleClassifiersCombiner",
437:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
438:       "weka.classifiers.meta.Vote",
439:       "weka.classifiers.meta.AttributeSelectedClassifier",
440:       "weka.core.neighboursearch.balltrees.BallNode",
441:       "weka.classifiers.evaluation.output.prediction.HTML",
442:       "weka.classifiers.meta.MultiClassClassifier",
443:       "weka.core.converters.ArffLoader$ArffReader",
444:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
445:       "weka.core.FindWithCapabilities",
446:       "weka.core.SingleIndex",
447:       "weka.core.ClassDiscovery",
448:       "weka.classifiers.functions.SMOreg",
449:       "weka.classifiers.functions.supportVector.RegOptimizer",
450:       "weka.classifiers.functions.supportVector.RegSMO",
451:       "weka.classifiers.functions.supportVector.RegSMOImproved",
452:       "weka.classifiers.misc.SerializedClassifier",
453:       "weka.core.ChebyshevDistance",
454:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
455:       "weka.classifiers.evaluation.output.prediction.Null",
456:       "weka.classifiers.bayes.NaiveBayes",
457:       "weka.classifiers.bayes.NaiveBayesUpdateable",
458:       "weka.classifiers.meta.AdditiveRegression",
459:       "weka.classifiers.trees.LMT",
460:       "weka.core.Javadoc",
461:       "weka.core.GlobalInfoJavadoc",
462:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
463:       "weka.classifiers.functions.LinearRegression",
464:       "weka.classifiers.pmml.consumer.PMMLClassifier",
465:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel",
466:       "weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction",
467:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$classificationMethod",
468:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$SVM_representation",
469:       "weka.classifiers.meta.CVParameterSelection",
470:       "weka.classifiers.meta.MultiScheme",
471:       "weka.classifiers.trees.RandomForest",
472:       "weka.clusterers.HierarchicalClusterer",
473:       "weka.core.SelectedTag",
474:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
475:       "weka.classifiers.rules.DecisionTable",
476:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
477:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
478:       "weka.classifiers.meta.Stacking",
479:       "weka.classifiers.meta.ClassificationViaRegression",
480:       "weka.classifiers.meta.AdaBoostM1",
481:       "weka.classifiers.functions.SimpleLinearRegression",
482:       "weka.core.ManhattanDistance",
483:       "weka.classifiers.evaluation.NumericPrediction",
484:       "weka.classifiers.evaluation.Prediction",
485:       "weka.core.UnassignedClassException",
486:       "weka.attributeSelection.CorrelationAttributeEval",
487:       "weka.core.SpecialFunctions",
488:       "weka.core.Statistics",
489:       "weka.classifiers.functions.SMO",
490:       "weka.core.tokenizers.AlphabeticTokenizer",
491:       "weka.classifiers.evaluation.output.prediction.CSV",
492:       "weka.classifiers.lazy.KStar",
493:       "weka.classifiers.functions.VotedPerceptron",
494:       "weka.core.Check",
495:       "weka.core.CheckOptionHandler",
496:       "weka.attributeSelection.ReliefFAttributeEval",
497:       "weka.clusterers.FarthestFirst",
498:       "weka.classifiers.rules.OneR$OneRRule",
499:       "weka.clusterers.AbstractDensityBasedClusterer",
500:       "weka.clusterers.MakeDensityBasedClusterer",
501:       "weka.classifiers.rules.part.MakeDecList",
502:       "weka.classifiers.meta.RandomSubSpace",
503:       "weka.core.neighboursearch.KDTree",
504:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
505:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
506:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
507:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
508:       "weka.attributeSelection.InfoGainAttributeEval",
509:       "weka.clusterers.Cobweb",
510:       "weka.estimators.DiscreteEstimator",
511:       "weka.clusterers.SingleClustererEnhancer",
512:       "weka.clusterers.FilteredClusterer",
513:       "weka.classifiers.meta.Bagging",
514:       "weka.core.tokenizers.NGramTokenizer",
515:       "weka.classifiers.functions.SGD",
516:       "weka.attributeSelection.OneRAttributeEval",
517:       "weka.classifiers.trees.j48.ClassifierTree",
518:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
519:       "weka.classifiers.functions.neural.NeuralConnection",
520:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
521:       "weka.classifiers.functions.supportVector.RBFKernel",
522:       "weka.attributeSelection.WrapperSubsetEval",
523:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
524:       "weka.core.CheckGOE",
525:       "weka.classifiers.functions.supportVector.Puk",
526:       "weka.core.OptionHandlerJavadoc",
527:       "weka.classifiers.evaluation.ThresholdCurve"
528:     );
529:   }
530: }

[MASTER] 08:02:56.957 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate(" ");
Evaluation evaluation0 = new Evaluation(instances0);
evaluation0.toCumulativeMarginDistributionString();
evaluation0.numTrueNegatives(477);
double double0 = evaluation0.m_SumKBInfo;
assertEquals(double0, double1, 0.01);


[MASTER] 08:03:01.562 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 08:03:01.721 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 08:03:02.180 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 08:03:02.180 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
[MASTER] 08:03:35.054 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_68_1575273815026/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_68_1575273815026/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.java]]
[MASTER] 08:03:35.054 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:03:35.054 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:03:35.058 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:03:35.058 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:03:35.058 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 08:03:35.058 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 08:03:35.059 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_68_1575273815026/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 08:03:35 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_68_tmp__ESTest extends NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=0.4
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
28:       
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       Integer integer0 = new Integer(73);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       hashMap0.put(integer0, linkedHashMap0);
33:       Integer integer1 = new Integer(2631);
34:       naiveBayesMultinomialText0.m_periodicP = (-1);
35:       hashMap0.put(integer1, linkedHashMap0);
36:       naiveBayesMultinomialText0.pruneDictionary();
37:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_68_1575273815026/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 08:03:35 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "weka.classifiers.meta.LogitBoost",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.functions.SMOreg",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Capabilities",
124:       "weka.core.Copyable",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.functions.supportVector.RegOptimizer",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.estimators.DiscreteEstimator",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.core.Version",
146:       "weka.core.Tag",
147:       "weka.classifiers.IteratedSingleClassifierEnhancer",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.filters.unsupervised.attribute.Center",
151:       "weka.core.FindWithCapabilities",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.core.ClassDiscovery",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.attributeSelection.AttributeTransformer",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
167:       "weka.attributeSelection.PrincipalComponents",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.classifiers.functions.supportVector.Kernel",
172:       "weka.core.WekaPackageManager",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.neighboursearch.LinearNNSearch",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.core.Option",
179:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.Sourcable",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.functions.supportVector.RegSMOImproved",
188:       "weka.classifiers.RandomizableClassifier",
189:       "weka.classifiers.meta.CVParameterSelection",
190:       "weka.classifiers.trees.RandomTree",
191:       "weka.classifiers.SingleClassifierEnhancer",
192:       "weka.core.RevisionUtils",
193:       "weka.core.Instance",
194:       "weka.classifiers.functions.supportVector.RegSMO",
195:       "weka.classifiers.functions.supportVector.PolyKernel",
196:       "weka.estimators.Estimator",
197:       "weka.core.ProtectedProperties",
198:       "weka.core.AttributeStats",
199:       "weka.core.WeightedInstancesHandler",
200:       "weka.core.neighboursearch.NearestNeighbourSearch",
201:       "weka.classifiers.trees.DecisionStump",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.filters.unsupervised.attribute.Normalize",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.core.stemmers.IteratedLovinsStemmer",
215:       "weka.core.stemmers.Stemming",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.core.TechnicalInformation",
218:       "weka.classifiers.Sourcable",
219:       "weka.core.RevisionHandler",
220:       "weka.classifiers.evaluation.output.prediction.PlainText",
221:       "weka.core.neighboursearch.TreePerformanceStats",
222:       "weka.core.xml.XMLSerialization",
223:       "weka.classifiers.xml.XMLClassifier",
224:       "weka.filters.Filter",
225:       "weka.classifiers.lazy.IBk",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.Attribute",
306:       "weka.core.ProtectedProperties",
307:       "weka.core.FindWithCapabilities",
308:       "weka.core.SingleIndex",
309:       "weka.estimators.Estimator",
310:       "weka.estimators.PoissonEstimator",
311:       "weka.core.WekaEnumeration",
312:       "weka.core.Attribute$1",
313:       "weka.classifiers.bayes.BayesNet",
314:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
315:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
316:       "weka.classifiers.bayes.net.search.local.K2",
317:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
318:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
319:       "weka.core.Check",
320:       "weka.core.CheckGOE",
321:       "weka.classifiers.functions.supportVector.Kernel",
322:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
323:       "weka.classifiers.trees.m5.M5Base",
324:       "weka.classifiers.rules.M5Rules",
325:       "weka.classifiers.functions.LinearRegression",
326:       "weka.core.TechnicalInformation",
327:       "weka.core.TechnicalInformation$Type",
328:       "weka.core.TechnicalInformation$Field",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.Bagging",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.core.neighboursearch.KDTree",
336:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
337:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
338:       "weka.estimators.DiscreteEstimator",
339:       "weka.classifiers.bayes.NaiveBayesUpdateable",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.LogitBoost",
344:       "weka.classifiers.trees.DecisionStump",
345:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
346:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
347:       "weka.estimators.KernelEstimator",
348:       "weka.core.UnassignedClassException",
349:       "weka.classifiers.lazy.KStar",
350:       "weka.classifiers.MultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.MultiScheme",
353:       "weka.core.converters.ArffLoader$ArffReader",
354:       "weka.classifiers.bayes.net.BIFReader",
355:       "weka.classifiers.rules.JRip",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.classifiers.trees.RandomTree",
358:       "weka.classifiers.functions.SimpleLinearRegression",
359:       "weka.classifiers.meta.RandomCommittee",
360:       "weka.core.WekaException",
361:       "weka.classifiers.rules.PART",
362:       "weka.classifiers.rules.part.MakeDecList",
363:       "weka.classifiers.functions.SMO",
364:       "weka.classifiers.functions.supportVector.CachedKernel",
365:       "weka.classifiers.functions.supportVector.PolyKernel",
366:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
367:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
368:       "weka.classifiers.meta.Stacking",
369:       "weka.classifiers.misc.SerializedClassifier",
370:       "weka.attributeSelection.WrapperSubsetEval",
371:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
372:       "weka.classifiers.lazy.LWL",
373:       "weka.classifiers.functions.SGD",
374:       "weka.classifiers.trees.j48.ClassifierTree",
375:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
376:       "weka.classifiers.meta.RandomSubSpace",
377:       "weka.classifiers.functions.SMOreg",
378:       "weka.classifiers.functions.supportVector.RegOptimizer",
379:       "weka.classifiers.functions.supportVector.RegSMO",
380:       "weka.classifiers.functions.supportVector.RegSMOImproved",
381:       "weka.classifiers.functions.MultilayerPerceptron",
382:       "weka.core.FastVector",
383:       "weka.filters.unsupervised.attribute.NominalToBinary",
384:       "weka.classifiers.functions.neural.SigmoidUnit",
385:       "weka.classifiers.functions.neural.LinearUnit",
386:       "weka.classifiers.meta.Vote",
387:       "weka.filters.SimpleFilter",
388:       "weka.filters.SimpleStreamFilter",
389:       "weka.filters.MultiFilter",
390:       "weka.filters.AllFilter",
391:       "weka.attributeSelection.CorrelationAttributeEval",
392:       "weka.classifiers.meta.AttributeSelectedClassifier",
393:       "weka.classifiers.meta.AdditiveRegression",
394:       "weka.classifiers.functions.Logistic",
395:       "weka.attributeSelection.GainRatioAttributeEval",
396:       "weka.classifiers.rules.DecisionTable",
397:       "weka.attributeSelection.OneRAttributeEval",
398:       "weka.classifiers.meta.ClassificationViaRegression",
399:       "weka.classifiers.trees.M5P",
400:       "weka.classifiers.meta.MultiClassClassifier",
401:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
402:       "weka.classifiers.functions.supportVector.Puk",
403:       "weka.classifiers.meta.AdaBoostM1",
404:       "weka.core.UnsupportedAttributeTypeException",
405:       "weka.attributeSelection.InfoGainAttributeEval",
406:       "weka.classifiers.meta.RegressionByDiscretization",
407:       "weka.filters.unsupervised.attribute.Discretize",
408:       "weka.classifiers.meta.CVParameterSelection",
409:       "weka.classifiers.functions.VotedPerceptron",
410:       "weka.classifiers.functions.supportVector.StringKernel",
411:       "weka.classifiers.functions.SGDText$Count",
412:       "weka.core.Javadoc",
413:       "weka.core.TechnicalInformationHandlerJavadoc",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
416:       "weka.core.AttributeStats",
417:       "weka.experiment.Stats",
418:       "weka.core.matrix.Matrix",
419:       "weka.estimators.MahalanobisEstimator",
420:       "weka.attributeSelection.ReliefFAttributeEval",
421:       "weka.core.stemmers.Stemming",
422:       "weka.core.ChebyshevDistance",
423:       "weka.estimators.NormalEstimator",
424:       "weka.core.ListOptions",
425:       "weka.classifiers.functions.GaussianProcesses",
426:       "weka.core.MinkowskiDistance",
427:       "weka.core.ClassDiscovery",
428:       "weka.classifiers.functions.supportVector.RBFKernel",
429:       "weka.core.OptionHandlerJavadoc",
430:       "weka.classifiers.rules.OneR",
431:       "weka.core.ManhattanDistance",
432:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
433:       "weka.core.Statistics",
434:       "weka.core.ClassCache",
435:       "weka.core.AllJavadoc",
436:       "weka.core.CheckOptionHandler",
437:       "weka.core.Queue",
438:       "weka.core.AttributeLocator",
439:       "weka.core.StringLocator",
440:       "weka.core.RelationalLocator",
441:       "weka.core.ContingencyTables",
442:       "weka.core.Queue$QueueNode",
443:       "weka.core.GlobalInfoJavadoc",
444:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
445:       "weka.classifiers.functions.neural.NeuralConnection",
446:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd"
447:     );
448:   }
449: }

[MASTER] 08:03:35.059 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());

HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(73);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
Integer integer1 = new Integer(2631);
naiveBayesMultinomialText0.m_periodicP = (-1);
hashMap0.put(integer1, linkedHashMap0);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_69_1575273815060/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_69_1575273815060/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.java]]
[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 08:03:35.090 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 08:03:35.091 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_69_1575273815060/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 08:03:35 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_69_tmp__ESTest extends NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
30:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
31:       
32:       Integer integer0 = new Integer(72);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       hashMap0.put(integer0, linkedHashMap0);
35:       naiveBayesMultinomialText0.m_periodicP = 73;
36:       naiveBayesMultinomialText0.pruneDictionary();
37:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_69_1575273815060/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 08:03:35 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "weka.classifiers.meta.LogitBoost",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.functions.SMOreg",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Capabilities",
124:       "weka.core.Copyable",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.functions.supportVector.CachedKernel",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.functions.supportVector.RegOptimizer",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.estimators.DiscreteEstimator",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.core.Version",
146:       "weka.core.Tag",
147:       "weka.classifiers.IteratedSingleClassifierEnhancer",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.filters.unsupervised.attribute.Center",
151:       "weka.core.FindWithCapabilities",
152:       "weka.core.OptionHandler",
153:       "weka.core.WekaException",
154:       "weka.core.ClassDiscovery",
155:       "weka.filters.StreamableFilter",
156:       "weka.core.Range",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.attributeSelection.AttributeTransformer",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
167:       "weka.attributeSelection.PrincipalComponents",
168:       "weka.core.stemmers.SnowballStemmer",
169:       "weka.core.stemmers.LovinsStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.classifiers.functions.supportVector.Kernel",
172:       "weka.core.WekaPackageManager",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.neighboursearch.LinearNNSearch",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.classifiers.meta.CostSensitiveClassifier",
178:       "weka.core.Option",
179:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
180:       "weka.core.neighboursearch.PerformanceStats",
181:       "weka.filters.Sourcable",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.classifiers.functions.supportVector.RegSMOImproved",
188:       "weka.classifiers.RandomizableClassifier",
189:       "weka.classifiers.meta.CVParameterSelection",
190:       "weka.classifiers.trees.RandomTree",
191:       "weka.classifiers.SingleClassifierEnhancer",
192:       "weka.core.RevisionUtils",
193:       "weka.core.Instance",
194:       "weka.classifiers.functions.supportVector.RegSMO",
195:       "weka.classifiers.functions.supportVector.PolyKernel",
196:       "weka.estimators.Estimator",
197:       "weka.core.ProtectedProperties",
198:       "weka.core.AttributeStats",
199:       "weka.core.WeightedInstancesHandler",
200:       "weka.core.neighboursearch.NearestNeighbourSearch",
201:       "weka.classifiers.trees.DecisionStump",
202:       "weka.core.neighboursearch.covertrees.Stack",
203:       "weka.filters.unsupervised.attribute.Remove",
204:       "weka.core.Randomizable",
205:       "weka.classifiers.functions.SGD",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
209:       "weka.filters.unsupervised.attribute.Normalize",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.filters.unsupervised.attribute.Standardize",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.core.stemmers.IteratedLovinsStemmer",
215:       "weka.core.stemmers.Stemming",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.core.TechnicalInformation",
218:       "weka.classifiers.Sourcable",
219:       "weka.core.RevisionHandler",
220:       "weka.classifiers.evaluation.output.prediction.PlainText",
221:       "weka.core.neighboursearch.TreePerformanceStats",
222:       "weka.core.xml.XMLSerialization",
223:       "weka.classifiers.xml.XMLClassifier",
224:       "weka.filters.Filter",
225:       "weka.classifiers.lazy.IBk",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.Attribute",
306:       "weka.core.ProtectedProperties",
307:       "weka.core.FindWithCapabilities",
308:       "weka.core.SingleIndex",
309:       "weka.estimators.Estimator",
310:       "weka.estimators.PoissonEstimator",
311:       "weka.core.WekaEnumeration",
312:       "weka.core.Attribute$1",
313:       "weka.classifiers.bayes.BayesNet",
314:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
315:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
316:       "weka.classifiers.bayes.net.search.local.K2",
317:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
318:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
319:       "weka.core.Check",
320:       "weka.core.CheckGOE",
321:       "weka.classifiers.functions.supportVector.Kernel",
322:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
323:       "weka.classifiers.trees.m5.M5Base",
324:       "weka.classifiers.rules.M5Rules",
325:       "weka.classifiers.functions.LinearRegression",
326:       "weka.core.TechnicalInformation",
327:       "weka.core.TechnicalInformation$Type",
328:       "weka.core.TechnicalInformation$Field",
329:       "weka.classifiers.IteratedSingleClassifierEnhancer",
330:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.Bagging",
333:       "weka.classifiers.trees.REPTree",
334:       "weka.classifiers.bayes.NaiveBayesMultinomial",
335:       "weka.core.neighboursearch.KDTree",
336:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
337:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
338:       "weka.estimators.DiscreteEstimator",
339:       "weka.classifiers.bayes.NaiveBayesUpdateable",
340:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
341:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
342:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.meta.LogitBoost",
344:       "weka.classifiers.trees.DecisionStump",
345:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
346:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
347:       "weka.estimators.KernelEstimator",
348:       "weka.core.UnassignedClassException",
349:       "weka.classifiers.lazy.KStar",
350:       "weka.classifiers.MultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.MultiScheme",
353:       "weka.core.converters.ArffLoader$ArffReader",
354:       "weka.classifiers.bayes.net.BIFReader",
355:       "weka.classifiers.rules.JRip",
356:       "weka.classifiers.trees.RandomForest",
357:       "weka.classifiers.trees.RandomTree",
358:       "weka.classifiers.functions.SimpleLinearRegression",
359:       "weka.classifiers.meta.RandomCommittee",
360:       "weka.core.WekaException",
361:       "weka.classifiers.rules.PART",
362:       "weka.classifiers.rules.part.MakeDecList",
363:       "weka.classifiers.functions.SMO",
364:       "weka.classifiers.functions.supportVector.CachedKernel",
365:       "weka.classifiers.functions.supportVector.PolyKernel",
366:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
367:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
368:       "weka.classifiers.meta.Stacking",
369:       "weka.classifiers.misc.SerializedClassifier",
370:       "weka.attributeSelection.WrapperSubsetEval",
371:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
372:       "weka.classifiers.lazy.LWL",
373:       "weka.classifiers.functions.SGD",
374:       "weka.classifiers.trees.j48.ClassifierTree",
375:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
376:       "weka.classifiers.meta.RandomSubSpace",
377:       "weka.classifiers.functions.SMOreg",
378:       "weka.classifiers.functions.supportVector.RegOptimizer",
379:       "weka.classifiers.functions.supportVector.RegSMO",
380:       "weka.classifiers.functions.supportVector.RegSMOImproved",
381:       "weka.classifiers.functions.MultilayerPerceptron",
382:       "weka.core.FastVector",
383:       "weka.filters.unsupervised.attribute.NominalToBinary",
384:       "weka.classifiers.functions.neural.SigmoidUnit",
385:       "weka.classifiers.functions.neural.LinearUnit",
386:       "weka.classifiers.meta.Vote",
387:       "weka.filters.SimpleFilter",
388:       "weka.filters.SimpleStreamFilter",
389:       "weka.filters.MultiFilter",
390:       "weka.filters.AllFilter",
391:       "weka.attributeSelection.CorrelationAttributeEval",
392:       "weka.classifiers.meta.AttributeSelectedClassifier",
393:       "weka.classifiers.meta.AdditiveRegression",
394:       "weka.classifiers.functions.Logistic",
395:       "weka.attributeSelection.GainRatioAttributeEval",
396:       "weka.classifiers.rules.DecisionTable",
397:       "weka.attributeSelection.OneRAttributeEval",
398:       "weka.classifiers.meta.ClassificationViaRegression",
399:       "weka.classifiers.trees.M5P",
400:       "weka.classifiers.meta.MultiClassClassifier",
401:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
402:       "weka.classifiers.functions.supportVector.Puk",
403:       "weka.classifiers.meta.AdaBoostM1",
404:       "weka.core.UnsupportedAttributeTypeException",
405:       "weka.attributeSelection.InfoGainAttributeEval",
406:       "weka.classifiers.meta.RegressionByDiscretization",
407:       "weka.filters.unsupervised.attribute.Discretize",
408:       "weka.classifiers.meta.CVParameterSelection",
409:       "weka.classifiers.functions.VotedPerceptron",
410:       "weka.classifiers.functions.supportVector.StringKernel",
411:       "weka.classifiers.functions.SGDText$Count",
412:       "weka.core.Javadoc",
413:       "weka.core.TechnicalInformationHandlerJavadoc",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
416:       "weka.core.AttributeStats",
417:       "weka.experiment.Stats",
418:       "weka.core.matrix.Matrix",
419:       "weka.estimators.MahalanobisEstimator",
420:       "weka.attributeSelection.ReliefFAttributeEval",
421:       "weka.core.stemmers.Stemming",
422:       "weka.core.ChebyshevDistance",
423:       "weka.estimators.NormalEstimator",
424:       "weka.core.ListOptions",
425:       "weka.classifiers.functions.GaussianProcesses",
426:       "weka.core.MinkowskiDistance",
427:       "weka.core.ClassDiscovery",
428:       "weka.classifiers.functions.supportVector.RBFKernel",
429:       "weka.core.OptionHandlerJavadoc",
430:       "weka.classifiers.rules.OneR",
431:       "weka.core.ManhattanDistance",
432:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
433:       "weka.core.Statistics",
434:       "weka.core.ClassCache",
435:       "weka.core.AllJavadoc",
436:       "weka.core.CheckOptionHandler",
437:       "weka.core.Queue",
438:       "weka.core.AttributeLocator",
439:       "weka.core.StringLocator",
440:       "weka.core.RelationalLocator",
441:       "weka.core.ContingencyTables",
442:       "weka.core.Queue$QueueNode",
443:       "weka.core.GlobalInfoJavadoc",
444:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
445:       "weka.classifiers.functions.neural.NeuralConnection",
446:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd"
447:     );
448:   }
449: }

[MASTER] 08:03:35.091 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());

Integer integer0 = new Integer(72);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.m_periodicP = 73;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 08:03:38.023 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 08:03:38.121 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2399
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2400
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2404
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:13:53.124 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:13:53.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:13:53.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:13:53.367 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 08:13:58.033 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:13:58.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:13:58.080 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:14:01.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:14:02.169 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:14:02.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
[MASTER] 08:14:03.943 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:14:03.959 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:14:03.960 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:14:03.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Using seed 1008
* Starting evolution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 08:14:06.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 08:14:26.951 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1133
[MASTER] 08:14:26.951 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true
[MASTER] 08:14:26.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true
[MASTER] 08:14:26.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 363: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceComparisonOperator >= -> >
[MASTER] 08:14:26.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 387: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1119 - ReplaceComparisonOperator >= -> >
[MASTER] 08:14:26.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 08:14:26.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 08:14:28.984 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I35 Branch 181 IFEQ L1117 - false
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 370: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable result -> b
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 371: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable j -> n
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 372: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp Negation of j
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 373: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp IINC 1 j
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 374: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - InsertUnaryOp IINC -1 j
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 375: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceConstant - 0.0 -> 1.0
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 376: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceConstant - 0.0 -> -1.0
[MASTER] 08:14:28.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 377: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceVariable j -> n
[MASTER] 08:14:28.988 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I35 Branch 181 IFEQ L1117 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 08:17:14.737 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getMeasure(Ljava/lang/String;)D
[MASTER] 08:17:31.427 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
* Search finished after 218s and 128 generations, 83759 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 144
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Search finished after 235s and 262 generations, 123610 statements, best individual has fitness: 12208.0
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 705
* Number of covered goals: 267
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 416
* Number of covered goals: 119
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 993
* Number of covered goals: 571
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 416
* Number of covered goals: 119
* Generated 82 tests with total length 624
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 08:18:56.097 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 08:18:56.866 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Search finished after 303s and 49 generations, 45651 statements, best individual has fitness: 2016.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 627
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 421
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 678
* Number of covered goals: 632
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 112
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 411
* Generated 228 tests with total length 3798
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 08:24:36.574 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6703333333333333% of time used, but only 52/228 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
