* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7354
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:27:42.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:27:42.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:27:42.667 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:27:42.675 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 08:27:46.699 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 08:28:34.429 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1149
[MASTER] 08:28:34.430 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I175 Branch 190 IFNE L1142 - true
[MASTER] 08:28:34.434 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I175 Branch 190 IFNE L1142 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 231s and 128 generations, 82468 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 195
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7354
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:34:15.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:34:15.380 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:34:15.381 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:34:15.521 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
* Search finished after 372s and 49 generations, 47777 statements, best individual has fitness: 2296.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 625
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 626
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 394
* Generated 206 tests with total length 3713
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 08:46:12.209 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.67835625% of time used, but only 61/206 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 08:47:49.308 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7355
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
* Search finished after 253s and 243 generations, 97506 statements, best individual has fitness: 2632.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 291
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 260
* Number of covered goals: 241
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 291
* Generated 103 tests with total length 250
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7353
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7356
* Connecting to master process on port 7358
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:56:01.265 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:56:01.286 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:56:01.290 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:56:01.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:56:01.533 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:56:01.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 08:56:03.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:56:03.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:56:03.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:56:03.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:56:03.596 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:56:03.597 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 08:56:15.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: Line 536
[MASTER] 08:56:15.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: Line 564
[MASTER] 08:56:15.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: Line 574
[MASTER] 08:56:15.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 08:56:15.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: Line 615
[MASTER] 08:56:15.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: Line 635
[MASTER] 08:56:15.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: Line 666
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: Line 704
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z: Line 733
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: Line 780
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 828
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 829
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 831
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 832
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 834
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: Line 843
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1034
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1036
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1039
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1040
[MASTER] 08:56:15.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1042
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1045
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1046
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1047
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1050
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1053
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1057
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1058
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1059
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1060
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1062
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1064
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1065
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1066
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1067
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1071
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1074
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 08:56:15.136 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 08:56:15.137 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true
[MASTER] 08:56:15.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 243: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:574 - ReplaceConstant - The tokenizing algorithm to use on the strings. -> 
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 256: weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;:615 - ReplaceConstant - Whether to convert all tokens to lowercase -> 
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 267: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - InsertUnaryOp Negation
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 273: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp Negation
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 274: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp +1
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 275: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp -1
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 283: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_norm
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 284: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_t
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 285: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_leplace
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 286: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_lnorm
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 287: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - InsertUnaryOp Negation
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 299: weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z:733 - InsertUnaryOp Negation
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 313: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_norm
[MASTER] 08:56:15.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 314: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_minWordP
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 315: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_t
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 316: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_leplace
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 317: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - InsertUnaryOp Negation
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 336: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 337: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceComparisonOperator != null -> = null
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 338: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:829 - ReplaceConstant - user.dir -> 
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 339: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:831 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 341: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 423: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1036 - ReplaceComparisonOperator == -> !=
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 425: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1039 - ReplaceConstant - -P -> 
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 426: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1040 - ReplaceConstant - -M -> 
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 427: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1042 - ReplaceComparisonOperator == -> !=
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1045 - ReplaceConstant - -norm -> 
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1046 - ReplaceConstant - -lnorm -> 
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1047 - ReplaceComparisonOperator == -> !=
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1050 - ReplaceComparisonOperator == -> !=
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 08:56:15.157 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 08:56:15.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 08:56:15.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 08:56:15.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 08:56:15.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 08:56:15.158 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 08:56:15.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 08:56:15.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 08:56:15.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 08:56:15.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 08:56:15.163 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:tokenizerTipText()Ljava/lang/String;
[MASTER] 08:56:15.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 08:56:15.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 08:56:15.164 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:56:20.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 326: weka.classifiers.bayes.NaiveBayesMultinomialText.setUseStopList(Z)V:808 - ReplaceVariable u -> m_wordFrequencies
[MASTER] 08:56:20.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 327: weka.classifiers.bayes.NaiveBayesMultinomialText.setUseStopList(Z)V:808 - ReplaceVariable u -> m_useStopList
[MASTER] 08:56:20.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 328: weka.classifiers.bayes.NaiveBayesMultinomialText.setUseStopList(Z)V:808 - ReplaceVariable u -> m_lowercaseTokens
[MASTER] 08:56:23.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 08:56:23.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 08:56:23.517 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 08:56:23.517 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 08:56:24.434 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:56:24.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:56:24.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:56:25.302 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:56:26.564 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:56:26.565 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:56:28.320 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:56:28.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:56:28.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:56:28.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:56:28.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:56:28.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:56:28.354 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:56:28.355 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:56:28.355 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:56:28.436 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 08:56:28.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 08:56:32.562 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 08:56:32.606 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 08:56:32.710 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 08:56:40.641 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: Line 414
[MASTER] 08:56:40.646 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3363
[MASTER] 08:56:40.646 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3367
[MASTER] 08:56:40.646 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3368
[MASTER] 08:56:40.647 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: Line 3370
[MASTER] 08:56:40.647 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true
[MASTER] 08:56:40.648 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: I141 Branch 324 IF_ICMPGE L3362 - false
[MASTER] 08:56:40.648 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: I168 Branch 325 IF_ICMPGE L3366 - false
[MASTER] 08:56:40.648 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.setPriors(Lweka/core/Instances;)V: I175 Branch 326 IFNE L3367 - false
[MASTER] 08:56:40.648 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: I80 Branch 2 IF_ICMPGE L413 - false
[MASTER] 08:56:40.651 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V
[MASTER] 08:56:40.652 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V: I80 Branch 2 IF_ICMPGE L413 - false in context: weka.classifiers.Evaluation:<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V
[MASTER] 08:56:40.652 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true in context: 
[MASTER] 08:57:10.092 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 08:57:10.093 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 224s and 369 generations, 206682 statements, best individual has fitness: 9080.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 153
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 194
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Generated 58 tests with total length 399
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 240s and 118 generations, 63621 statements, best individual has fitness: 13920.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 1378
* Number of covered goals: 870
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 809
* Number of covered goals: 384
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 83
* Number of covered goals: 83
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 65%
* Total number of goals: 424
* Number of covered goals: 277
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 278
* Number of covered goals: 66
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 809
* Number of covered goals: 375
* Search finished after 269s and 315 generations, 192272 statements, best individual has fitness: 2256.0
* Generated 196 tests with total length 2210
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 338
* Number of covered goals: 283
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 194
* Number of covered goals: 149
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 476
* Number of covered goals: 390
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 147
* Generated 86 tests with total length 918
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 09:00:57.975 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:00:58.465 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 49%
* Compiling and checking tests
[MASTER] 09:04:16.944 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_29_1575277456913/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_29_1575277456913/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.java]]
[MASTER] 09:04:16.944 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:16.944 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:16.947 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 09:04:16.947 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 09:04:16.948 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_29_1575277456913/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 09:04:16 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_29_tmp__ESTest extends NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.543056733112554
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.m_periodicP = 513;
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       String[] stringArray0 = new String[3];
30:       stringArray0[0] = "-M";
31:       stringArray0[1] = "-M";
32:       stringArray0[2] = "-M";
33:       try { 
34:         naiveBayesMultinomialText0.setOptions(stringArray0);
35:         fail("Expecting exception: NumberFormatException");
36:       
37:       } catch(NumberFormatException e) {
38:       }
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_29_1575277456913/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 09:04:16 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.functions.SMOreg",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.functions.supportVector.CachedKernel",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.classifiers.functions.supportVector.RegOptimizer",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.core.neighboursearch.balltrees.BallSplitter",
141:       "weka.core.Version",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.estimators.KernelEstimator",
172:       "weka.filters.Sourcable",
173:       "weka.core.Attribute",
174:       "weka.core.Stopwords",
175:       "weka.core.tokenizers.AlphabeticTokenizer",
176:       "weka.core.FastVector",
177:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
178:       "weka.core.UnassignedDatasetException",
179:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
180:       "weka.classifiers.functions.supportVector.RegSMOImproved",
181:       "weka.core.RevisionUtils",
182:       "weka.core.Instance",
183:       "weka.classifiers.functions.supportVector.RegSMO",
184:       "weka.classifiers.functions.supportVector.PolyKernel",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.filters.unsupervised.attribute.Discretize",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.filters.unsupervised.attribute.Normalize",
198:       "weka.core.UnassignedClassException",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.UnsupportedAttributeTypeException",
202:       "weka.core.TechnicalInformation",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter"
210:     );
211:   } 
212: 
213:   private static void resetClasses() {
214:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader()); 
215: 
216:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
217:       "weka.classifiers.AbstractClassifier",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
220:       "weka.core.Capabilities$Capability",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
223:       "weka.core.tokenizers.WordTokenizer",
224:       "weka.core.stemmers.NullStemmer",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.Attribute",
230:       "weka.core.ProtectedProperties",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Utils",
234:       "weka.core.RevisionUtils",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.Instances",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.Stopwords",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.SerializedObject",
248:       "weka.core.DenseInstance",
249:       "weka.core.neighboursearch.NearestNeighbourSearch",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.NormalizableDistance",
252:       "weka.core.EuclideanDistance",
253:       "weka.core.Range",
254:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
255:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.attributeSelection.ASEvaluation",
263:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
264:       "weka.attributeSelection.PrincipalComponents",
265:       "weka.core.stemmers.SnowballStemmer",
266:       "weka.core.WekaEnumeration",
267:       "weka.core.Attribute$1",
268:       "weka.core.stemmers.LovinsStemmer",
269:       "weka.core.stemmers.IteratedLovinsStemmer",
270:       "weka.core.converters.ArffLoader$ArffReader",
271:       "weka.core.TestInstances",
272:       "weka.core.neighboursearch.BallTree",
273:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
274:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
275:       "weka.core.neighboursearch.balltrees.BallSplitter",
276:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
278:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.supportVector.Kernel",
282:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.classifiers.lazy.IBk",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.classifiers.CostMatrix",
287:       "weka.core.WekaException",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.ClassDiscovery",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.rules.ZeroR",
296:       "weka.filters.Filter",
297:       "weka.filters.supervised.attribute.Discretize",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.classifiers.trees.RandomTree",
300:       "weka.classifiers.functions.GaussianProcesses",
301:       "weka.classifiers.functions.supportVector.CachedKernel",
302:       "weka.classifiers.functions.supportVector.PolyKernel",
303:       "weka.classifiers.meta.FilteredClassifier",
304:       "weka.filters.supervised.attribute.AttributeSelection",
305:       "weka.attributeSelection.AttributeSelection",
306:       "weka.attributeSelection.CfsSubsetEval",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.GreedyStepwise",
309:       "weka.attributeSelection.BestFirst",
310:       "weka.classifiers.trees.J48",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.misc.InputMappedClassifier",
313:       "weka.core.tokenizers.AlphabeticTokenizer",
314:       "weka.core.UnassignedClassException",
315:       "weka.core.stemmers.Stemming",
316:       "weka.classifiers.trees.m5.M5Base",
317:       "weka.classifiers.rules.M5Rules",
318:       "weka.classifiers.MultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.MultiScheme",
321:       "weka.attributeSelection.CorrelationAttributeEval",
322:       "weka.classifiers.rules.DecisionTable",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.meta.MultiClassClassifier",
327:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
328:       "weka.classifiers.functions.Logistic",
329:       "weka.filters.AllFilter",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
334:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
335:       "weka.classifiers.functions.SMOreg",
336:       "weka.classifiers.functions.supportVector.RegOptimizer",
337:       "weka.classifiers.functions.supportVector.RegSMO",
338:       "weka.classifiers.functions.supportVector.RegSMOImproved",
339:       "weka.classifiers.rules.JRip",
340:       "weka.classifiers.bayes.NaiveBayesMultinomial",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.attributeSelection.OneRAttributeEval",
344:       "weka.classifiers.meta.ClassificationViaRegression",
345:       "weka.classifiers.trees.M5P",
346:       "weka.core.TechnicalInformation",
347:       "weka.core.TechnicalInformation$Type",
348:       "weka.core.TechnicalInformation$Field",
349:       "weka.classifiers.functions.SGD",
350:       "weka.attributeSelection.GainRatioAttributeEval",
351:       "weka.classifiers.functions.SMO",
352:       "weka.core.AttributeStats",
353:       "weka.classifiers.rules.OneR",
354:       "weka.classifiers.bayes.net.BIFReader",
355:       "weka.classifiers.meta.RegressionByDiscretization",
356:       "weka.filters.unsupervised.attribute.Discretize",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.classifiers.functions.MultilayerPerceptron",
360:       "weka.core.FastVector",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.classifiers.trees.RandomForest",
365:       "weka.classifiers.IteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.trees.DecisionStump",
369:       "weka.classifiers.functions.LinearRegression",
370:       "weka.classifiers.trees.REPTree",
371:       "weka.attributeSelection.ReliefFAttributeEval",
372:       "weka.attributeSelection.WrapperSubsetEval",
373:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.estimators.Estimator",
376:       "weka.estimators.DiscreteEstimator",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.attributeSelection.InfoGainAttributeEval",
381:       "weka.experiment.Stats",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
384:       "weka.core.ManhattanDistance",
385:       "weka.classifiers.functions.supportVector.RBFKernel",
386:       "weka.classifiers.functions.VotedPerceptron",
387:       "weka.classifiers.meta.AdditiveRegression",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.core.matrix.Matrix",
390:       "weka.estimators.NormalEstimator",
391:       "weka.classifiers.meta.Vote",
392:       "weka.core.SerializationHelper",
393:       "weka.classifiers.lazy.KStar",
394:       "weka.classifiers.meta.AttributeSelectedClassifier",
395:       "weka.estimators.KernelEstimator",
396:       "weka.classifiers.meta.LogitBoost",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.core.SelectedTag",
399:       "weka.classifiers.functions.supportVector.Puk",
400:       "weka.classifiers.lazy.LWL",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.functions.SimpleLinearRegression",
404:       "weka.classifiers.functions.supportVector.StringKernel",
405:       "weka.classifiers.meta.RandomSubSpace",
406:       "weka.classifiers.trees.LMT",
407:       "weka.core.Check",
408:       "weka.core.CheckGOE",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.core.Javadoc",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.MahalanobisEstimator",
413:       "weka.core.MinkowskiDistance",
414:       "weka.core.ChebyshevDistance"
415:     );
416:   }
417: }

[MASTER] 09:04:16.948 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 513;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
String[] stringArray0 = new String[3];
stringArray0[0] = "-M";
stringArray0[1] = "-M";
stringArray0[2] = "-M";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 09:04:17.970 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1575277457936/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1575277457936/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 09:04:17.970 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:17.970 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:17.970 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 09:04:17.971 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1575277457936/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 09:04:17 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Attribute;
20: import weka.core.Capabilities;
21: import weka.core.Instances;
22: import weka.core.TestInstances;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=1.64775395208359
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
35:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
36:       String[] stringArray0 = new String[5];
37:       stringArray0[0] = "-stemmer";
38:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
39:       capabilities0.disableAllClasses();
40:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
41:       capabilities0.disableAllAttributeDependencies();
42:       testInstances0.setNumNumeric((-1));
43:       naiveBayesMultinomialText0.m_normalize = true;
44:       Instances instances0 = testInstances0.generate("~'xb");
45:       naiveBayesMultinomialText0.buildClassifier(instances0);
46:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
47:       ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
48:       Instances instances1 = null;
49:       try {
50:         instances1 = new Instances("@relation", arrayList0, (-492));
51:         fail("Expecting exception: IllegalArgumentException");
52:       
53:       } catch(IllegalArgumentException e) {
54:          //
55:          // Illegal Capacity: -492
56:          //
57:          verifyException("java.util.ArrayList", e);
58:       }
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_56_1575277457936/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 09:04:17 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.functions.SMOreg",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.functions.supportVector.CachedKernel",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.classifiers.functions.supportVector.RegOptimizer",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.core.neighboursearch.balltrees.BallSplitter",
141:       "weka.core.Version",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.estimators.KernelEstimator",
172:       "weka.filters.Sourcable",
173:       "weka.core.Attribute",
174:       "weka.core.Stopwords",
175:       "weka.core.tokenizers.AlphabeticTokenizer",
176:       "weka.core.FastVector",
177:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
178:       "weka.core.UnassignedDatasetException",
179:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
180:       "weka.classifiers.functions.supportVector.RegSMOImproved",
181:       "weka.core.RevisionUtils",
182:       "weka.core.Instance",
183:       "weka.classifiers.functions.supportVector.RegSMO",
184:       "weka.classifiers.functions.supportVector.PolyKernel",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.filters.unsupervised.attribute.Discretize",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.filters.unsupervised.attribute.Normalize",
198:       "weka.core.UnassignedClassException",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.UnsupportedAttributeTypeException",
202:       "weka.core.TechnicalInformation",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter"
210:     );
211:   } 
212: 
213:   private static void resetClasses() {
214:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
215: 
216:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
217:       "weka.classifiers.AbstractClassifier",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
220:       "weka.core.Capabilities$Capability",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
223:       "weka.core.tokenizers.WordTokenizer",
224:       "weka.core.stemmers.NullStemmer",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.Attribute",
230:       "weka.core.ProtectedProperties",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Utils",
234:       "weka.core.RevisionUtils",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.Instances",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.Stopwords",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.SerializedObject",
248:       "weka.core.DenseInstance",
249:       "weka.core.neighboursearch.NearestNeighbourSearch",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.NormalizableDistance",
252:       "weka.core.EuclideanDistance",
253:       "weka.core.Range",
254:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
255:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.attributeSelection.ASEvaluation",
263:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
264:       "weka.attributeSelection.PrincipalComponents",
265:       "weka.core.stemmers.SnowballStemmer",
266:       "weka.core.WekaEnumeration",
267:       "weka.core.Attribute$1",
268:       "weka.core.stemmers.LovinsStemmer",
269:       "weka.core.stemmers.IteratedLovinsStemmer",
270:       "weka.core.converters.ArffLoader$ArffReader",
271:       "weka.core.TestInstances",
272:       "weka.core.neighboursearch.BallTree",
273:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
274:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
275:       "weka.core.neighboursearch.balltrees.BallSplitter",
276:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
278:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.supportVector.Kernel",
282:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.classifiers.lazy.IBk",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.classifiers.CostMatrix",
287:       "weka.core.WekaException",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.ClassDiscovery",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.rules.ZeroR",
296:       "weka.filters.Filter",
297:       "weka.filters.supervised.attribute.Discretize",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.classifiers.trees.RandomTree",
300:       "weka.classifiers.functions.GaussianProcesses",
301:       "weka.classifiers.functions.supportVector.CachedKernel",
302:       "weka.classifiers.functions.supportVector.PolyKernel",
303:       "weka.classifiers.meta.FilteredClassifier",
304:       "weka.filters.supervised.attribute.AttributeSelection",
305:       "weka.attributeSelection.AttributeSelection",
306:       "weka.attributeSelection.CfsSubsetEval",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.GreedyStepwise",
309:       "weka.attributeSelection.BestFirst",
310:       "weka.classifiers.trees.J48",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.misc.InputMappedClassifier",
313:       "weka.core.tokenizers.AlphabeticTokenizer",
314:       "weka.core.UnassignedClassException",
315:       "weka.core.stemmers.Stemming",
316:       "weka.classifiers.trees.m5.M5Base",
317:       "weka.classifiers.rules.M5Rules",
318:       "weka.classifiers.MultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.MultiScheme",
321:       "weka.attributeSelection.CorrelationAttributeEval",
322:       "weka.classifiers.rules.DecisionTable",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.meta.MultiClassClassifier",
327:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
328:       "weka.classifiers.functions.Logistic",
329:       "weka.filters.AllFilter",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
334:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
335:       "weka.classifiers.functions.SMOreg",
336:       "weka.classifiers.functions.supportVector.RegOptimizer",
337:       "weka.classifiers.functions.supportVector.RegSMO",
338:       "weka.classifiers.functions.supportVector.RegSMOImproved",
339:       "weka.classifiers.rules.JRip",
340:       "weka.classifiers.bayes.NaiveBayesMultinomial",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.attributeSelection.OneRAttributeEval",
344:       "weka.classifiers.meta.ClassificationViaRegression",
345:       "weka.classifiers.trees.M5P",
346:       "weka.core.TechnicalInformation",
347:       "weka.core.TechnicalInformation$Type",
348:       "weka.core.TechnicalInformation$Field",
349:       "weka.classifiers.functions.SGD",
350:       "weka.attributeSelection.GainRatioAttributeEval",
351:       "weka.classifiers.functions.SMO",
352:       "weka.core.AttributeStats",
353:       "weka.classifiers.rules.OneR",
354:       "weka.classifiers.bayes.net.BIFReader",
355:       "weka.classifiers.meta.RegressionByDiscretization",
356:       "weka.filters.unsupervised.attribute.Discretize",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.classifiers.functions.MultilayerPerceptron",
360:       "weka.core.FastVector",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.classifiers.trees.RandomForest",
365:       "weka.classifiers.IteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.trees.DecisionStump",
369:       "weka.classifiers.functions.LinearRegression",
370:       "weka.classifiers.trees.REPTree",
371:       "weka.attributeSelection.ReliefFAttributeEval",
372:       "weka.attributeSelection.WrapperSubsetEval",
373:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.estimators.Estimator",
376:       "weka.estimators.DiscreteEstimator",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.attributeSelection.InfoGainAttributeEval",
381:       "weka.experiment.Stats",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
384:       "weka.core.ManhattanDistance",
385:       "weka.classifiers.functions.supportVector.RBFKernel",
386:       "weka.classifiers.functions.VotedPerceptron",
387:       "weka.classifiers.meta.AdditiveRegression",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.core.matrix.Matrix",
390:       "weka.estimators.NormalEstimator",
391:       "weka.classifiers.meta.Vote",
392:       "weka.core.SerializationHelper",
393:       "weka.classifiers.lazy.KStar",
394:       "weka.classifiers.meta.AttributeSelectedClassifier",
395:       "weka.estimators.KernelEstimator",
396:       "weka.classifiers.meta.LogitBoost",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.core.SelectedTag",
399:       "weka.classifiers.functions.supportVector.Puk",
400:       "weka.classifiers.lazy.LWL",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.functions.SimpleLinearRegression",
404:       "weka.classifiers.functions.supportVector.StringKernel",
405:       "weka.classifiers.meta.RandomSubSpace",
406:       "weka.classifiers.trees.LMT",
407:       "weka.core.Check",
408:       "weka.core.CheckGOE",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.core.Javadoc",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.MahalanobisEstimator",
413:       "weka.core.MinkowskiDistance",
414:       "weka.core.ChebyshevDistance"
415:     );
416:   }
417: }

[MASTER] 09:04:17.972 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
String[] stringArray0 = new String[5];
stringArray0[0] = "-stemmer";
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
capabilities0.disableAllClasses();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
capabilities0.disableAllAttributeDependencies();
testInstances0.setNumNumeric((-1));
naiveBayesMultinomialText0.m_normalize = true;
Instances instances0 = testInstances0.generate("~'xb");
naiveBayesMultinomialText0.buildClassifier(instances0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances1 = new Instances("@relation", arrayList0, (-492));

[MASTER] 09:04:18.393 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_70_1575277458366/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_70_1575277458366/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.java]]
[MASTER] 09:04:18.393 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:18.393 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:18.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 09:04:18.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 09:04:18.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 09:04:18.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 09:04:18.394 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 09:04:18.395 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_70_1575277458366/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 09:04:18 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_70_tmp__ESTest extends NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_periodicP = 513;
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       Integer integer0 = Integer.valueOf(513);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       hashMap0.put(integer0, linkedHashMap0);
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
37:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
38:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
39:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_70_1575277458366/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 09:04:18 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.functions.SMOreg",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.functions.supportVector.CachedKernel",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.classifiers.functions.supportVector.RegOptimizer",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.core.neighboursearch.balltrees.BallSplitter",
141:       "weka.core.Version",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.estimators.KernelEstimator",
172:       "weka.filters.Sourcable",
173:       "weka.core.Attribute",
174:       "weka.core.Stopwords",
175:       "weka.core.tokenizers.AlphabeticTokenizer",
176:       "weka.core.FastVector",
177:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
178:       "weka.core.UnassignedDatasetException",
179:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
180:       "weka.classifiers.functions.supportVector.RegSMOImproved",
181:       "weka.core.RevisionUtils",
182:       "weka.core.Instance",
183:       "weka.classifiers.functions.supportVector.RegSMO",
184:       "weka.classifiers.functions.supportVector.PolyKernel",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.filters.unsupervised.attribute.Discretize",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.filters.unsupervised.attribute.Normalize",
198:       "weka.core.UnassignedClassException",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.UnsupportedAttributeTypeException",
202:       "weka.core.TechnicalInformation",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter"
210:     );
211:   } 
212: 
213:   private static void resetClasses() {
214:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.class.getClassLoader()); 
215: 
216:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
217:       "weka.classifiers.AbstractClassifier",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
220:       "weka.core.Capabilities$Capability",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
223:       "weka.core.tokenizers.WordTokenizer",
224:       "weka.core.stemmers.NullStemmer",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.Attribute",
230:       "weka.core.ProtectedProperties",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Utils",
234:       "weka.core.RevisionUtils",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.Instances",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.Stopwords",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.SerializedObject",
248:       "weka.core.DenseInstance",
249:       "weka.core.neighboursearch.NearestNeighbourSearch",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.NormalizableDistance",
252:       "weka.core.EuclideanDistance",
253:       "weka.core.Range",
254:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
255:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.attributeSelection.ASEvaluation",
263:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
264:       "weka.attributeSelection.PrincipalComponents",
265:       "weka.core.stemmers.SnowballStemmer",
266:       "weka.core.WekaEnumeration",
267:       "weka.core.Attribute$1",
268:       "weka.core.stemmers.LovinsStemmer",
269:       "weka.core.stemmers.IteratedLovinsStemmer",
270:       "weka.core.converters.ArffLoader$ArffReader",
271:       "weka.core.TestInstances",
272:       "weka.core.neighboursearch.BallTree",
273:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
274:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
275:       "weka.core.neighboursearch.balltrees.BallSplitter",
276:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
278:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.supportVector.Kernel",
282:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.classifiers.lazy.IBk",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.classifiers.CostMatrix",
287:       "weka.core.WekaException",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.ClassDiscovery",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.rules.ZeroR",
296:       "weka.filters.Filter",
297:       "weka.filters.supervised.attribute.Discretize",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.classifiers.trees.RandomTree",
300:       "weka.classifiers.functions.GaussianProcesses",
301:       "weka.classifiers.functions.supportVector.CachedKernel",
302:       "weka.classifiers.functions.supportVector.PolyKernel",
303:       "weka.classifiers.meta.FilteredClassifier",
304:       "weka.filters.supervised.attribute.AttributeSelection",
305:       "weka.attributeSelection.AttributeSelection",
306:       "weka.attributeSelection.CfsSubsetEval",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.GreedyStepwise",
309:       "weka.attributeSelection.BestFirst",
310:       "weka.classifiers.trees.J48",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.misc.InputMappedClassifier",
313:       "weka.core.tokenizers.AlphabeticTokenizer",
314:       "weka.core.UnassignedClassException",
315:       "weka.core.stemmers.Stemming",
316:       "weka.classifiers.trees.m5.M5Base",
317:       "weka.classifiers.rules.M5Rules",
318:       "weka.classifiers.MultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.MultiScheme",
321:       "weka.attributeSelection.CorrelationAttributeEval",
322:       "weka.classifiers.rules.DecisionTable",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.meta.MultiClassClassifier",
327:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
328:       "weka.classifiers.functions.Logistic",
329:       "weka.filters.AllFilter",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
334:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
335:       "weka.classifiers.functions.SMOreg",
336:       "weka.classifiers.functions.supportVector.RegOptimizer",
337:       "weka.classifiers.functions.supportVector.RegSMO",
338:       "weka.classifiers.functions.supportVector.RegSMOImproved",
339:       "weka.classifiers.rules.JRip",
340:       "weka.classifiers.bayes.NaiveBayesMultinomial",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.attributeSelection.OneRAttributeEval",
344:       "weka.classifiers.meta.ClassificationViaRegression",
345:       "weka.classifiers.trees.M5P",
346:       "weka.core.TechnicalInformation",
347:       "weka.core.TechnicalInformation$Type",
348:       "weka.core.TechnicalInformation$Field",
349:       "weka.classifiers.functions.SGD",
350:       "weka.attributeSelection.GainRatioAttributeEval",
351:       "weka.classifiers.functions.SMO",
352:       "weka.core.AttributeStats",
353:       "weka.classifiers.rules.OneR",
354:       "weka.classifiers.bayes.net.BIFReader",
355:       "weka.classifiers.meta.RegressionByDiscretization",
356:       "weka.filters.unsupervised.attribute.Discretize",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.classifiers.functions.MultilayerPerceptron",
360:       "weka.core.FastVector",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.classifiers.trees.RandomForest",
365:       "weka.classifiers.IteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.trees.DecisionStump",
369:       "weka.classifiers.functions.LinearRegression",
370:       "weka.classifiers.trees.REPTree",
371:       "weka.attributeSelection.ReliefFAttributeEval",
372:       "weka.attributeSelection.WrapperSubsetEval",
373:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.estimators.Estimator",
376:       "weka.estimators.DiscreteEstimator",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.attributeSelection.InfoGainAttributeEval",
381:       "weka.experiment.Stats",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
384:       "weka.core.ManhattanDistance",
385:       "weka.classifiers.functions.supportVector.RBFKernel",
386:       "weka.classifiers.functions.VotedPerceptron",
387:       "weka.classifiers.meta.AdditiveRegression",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.core.matrix.Matrix",
390:       "weka.estimators.NormalEstimator",
391:       "weka.classifiers.meta.Vote",
392:       "weka.core.SerializationHelper",
393:       "weka.classifiers.lazy.KStar",
394:       "weka.classifiers.meta.AttributeSelectedClassifier",
395:       "weka.estimators.KernelEstimator",
396:       "weka.classifiers.meta.LogitBoost",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.core.SelectedTag",
399:       "weka.classifiers.functions.supportVector.Puk",
400:       "weka.classifiers.lazy.LWL",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.functions.SimpleLinearRegression",
404:       "weka.classifiers.functions.supportVector.StringKernel",
405:       "weka.classifiers.meta.RandomSubSpace",
406:       "weka.classifiers.trees.LMT",
407:       "weka.core.Check",
408:       "weka.core.CheckGOE",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.core.Javadoc",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.MahalanobisEstimator",
413:       "weka.core.MinkowskiDistance",
414:       "weka.core.ChebyshevDistance"
415:     );
416:   }
417: }

[MASTER] 09:04:18.395 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 513;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = Integer.valueOf(513);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 09:04:18.423 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_71_1575277458396/weka/classifiers/bayes/NaiveBayesMultinomialText_71_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_71_1575277458396/weka/classifiers/bayes/NaiveBayesMultinomialText_71_tmp__ESTest_scaffolding.java]]
[MASTER] 09:04:18.423 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:18.423 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:18.423 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 09:04:18.423 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 09:04:18.423 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 09:04:18.424 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 09:04:18.424 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 09:04:18.424 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_71_1575277458396/weka/classifiers/bayes/NaiveBayesMultinomialText_71_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 09:04:18 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_71_tmp__ESTest extends NaiveBayesMultinomialText_71_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=1.830738805564335
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       naiveBayesMultinomialText0.m_periodicP = 513;
27:       Integer integer0 = new Integer(513);
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       Integer integer1 = new Integer(2013265920);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.lowercaseTokensTipText();
33:       naiveBayesMultinomialText0.normTipText();
34:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
35:       assertEquals(513, int0);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_71_1575277458396/weka/classifiers/bayes/NaiveBayesMultinomialText_71_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 09:04:18 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_71_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_71_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.functions.SMOreg",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.functions.supportVector.CachedKernel",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.classifiers.functions.supportVector.RegOptimizer",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.core.neighboursearch.balltrees.BallSplitter",
141:       "weka.core.Version",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.estimators.KernelEstimator",
172:       "weka.filters.Sourcable",
173:       "weka.core.Attribute",
174:       "weka.core.Stopwords",
175:       "weka.core.tokenizers.AlphabeticTokenizer",
176:       "weka.core.FastVector",
177:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
178:       "weka.core.UnassignedDatasetException",
179:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
180:       "weka.classifiers.functions.supportVector.RegSMOImproved",
181:       "weka.core.RevisionUtils",
182:       "weka.core.Instance",
183:       "weka.classifiers.functions.supportVector.RegSMO",
184:       "weka.classifiers.functions.supportVector.PolyKernel",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.filters.unsupervised.attribute.Discretize",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.filters.unsupervised.attribute.Normalize",
198:       "weka.core.UnassignedClassException",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.UnsupportedAttributeTypeException",
202:       "weka.core.TechnicalInformation",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter"
210:     );
211:   } 
212: 
213:   private static void resetClasses() {
214:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_71_tmp__ESTest_scaffolding.class.getClassLoader()); 
215: 
216:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
217:       "weka.classifiers.AbstractClassifier",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
220:       "weka.core.Capabilities$Capability",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
223:       "weka.core.tokenizers.WordTokenizer",
224:       "weka.core.stemmers.NullStemmer",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.Attribute",
230:       "weka.core.ProtectedProperties",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Utils",
234:       "weka.core.RevisionUtils",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.Instances",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.Stopwords",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.SerializedObject",
248:       "weka.core.DenseInstance",
249:       "weka.core.neighboursearch.NearestNeighbourSearch",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.NormalizableDistance",
252:       "weka.core.EuclideanDistance",
253:       "weka.core.Range",
254:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
255:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.attributeSelection.ASEvaluation",
263:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
264:       "weka.attributeSelection.PrincipalComponents",
265:       "weka.core.stemmers.SnowballStemmer",
266:       "weka.core.WekaEnumeration",
267:       "weka.core.Attribute$1",
268:       "weka.core.stemmers.LovinsStemmer",
269:       "weka.core.stemmers.IteratedLovinsStemmer",
270:       "weka.core.converters.ArffLoader$ArffReader",
271:       "weka.core.TestInstances",
272:       "weka.core.neighboursearch.BallTree",
273:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
274:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
275:       "weka.core.neighboursearch.balltrees.BallSplitter",
276:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
278:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.supportVector.Kernel",
282:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.classifiers.lazy.IBk",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.classifiers.CostMatrix",
287:       "weka.core.WekaException",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.ClassDiscovery",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.rules.ZeroR",
296:       "weka.filters.Filter",
297:       "weka.filters.supervised.attribute.Discretize",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.classifiers.trees.RandomTree",
300:       "weka.classifiers.functions.GaussianProcesses",
301:       "weka.classifiers.functions.supportVector.CachedKernel",
302:       "weka.classifiers.functions.supportVector.PolyKernel",
303:       "weka.classifiers.meta.FilteredClassifier",
304:       "weka.filters.supervised.attribute.AttributeSelection",
305:       "weka.attributeSelection.AttributeSelection",
306:       "weka.attributeSelection.CfsSubsetEval",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.GreedyStepwise",
309:       "weka.attributeSelection.BestFirst",
310:       "weka.classifiers.trees.J48",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.misc.InputMappedClassifier",
313:       "weka.core.tokenizers.AlphabeticTokenizer",
314:       "weka.core.UnassignedClassException",
315:       "weka.core.stemmers.Stemming",
316:       "weka.classifiers.trees.m5.M5Base",
317:       "weka.classifiers.rules.M5Rules",
318:       "weka.classifiers.MultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.MultiScheme",
321:       "weka.attributeSelection.CorrelationAttributeEval",
322:       "weka.classifiers.rules.DecisionTable",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.meta.MultiClassClassifier",
327:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
328:       "weka.classifiers.functions.Logistic",
329:       "weka.filters.AllFilter",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
334:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
335:       "weka.classifiers.functions.SMOreg",
336:       "weka.classifiers.functions.supportVector.RegOptimizer",
337:       "weka.classifiers.functions.supportVector.RegSMO",
338:       "weka.classifiers.functions.supportVector.RegSMOImproved",
339:       "weka.classifiers.rules.JRip",
340:       "weka.classifiers.bayes.NaiveBayesMultinomial",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.attributeSelection.OneRAttributeEval",
344:       "weka.classifiers.meta.ClassificationViaRegression",
345:       "weka.classifiers.trees.M5P",
346:       "weka.core.TechnicalInformation",
347:       "weka.core.TechnicalInformation$Type",
348:       "weka.core.TechnicalInformation$Field",
349:       "weka.classifiers.functions.SGD",
350:       "weka.attributeSelection.GainRatioAttributeEval",
351:       "weka.classifiers.functions.SMO",
352:       "weka.core.AttributeStats",
353:       "weka.classifiers.rules.OneR",
354:       "weka.classifiers.bayes.net.BIFReader",
355:       "weka.classifiers.meta.RegressionByDiscretization",
356:       "weka.filters.unsupervised.attribute.Discretize",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.classifiers.functions.MultilayerPerceptron",
360:       "weka.core.FastVector",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.classifiers.trees.RandomForest",
365:       "weka.classifiers.IteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.trees.DecisionStump",
369:       "weka.classifiers.functions.LinearRegression",
370:       "weka.classifiers.trees.REPTree",
371:       "weka.attributeSelection.ReliefFAttributeEval",
372:       "weka.attributeSelection.WrapperSubsetEval",
373:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.estimators.Estimator",
376:       "weka.estimators.DiscreteEstimator",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.attributeSelection.InfoGainAttributeEval",
381:       "weka.experiment.Stats",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
384:       "weka.core.ManhattanDistance",
385:       "weka.classifiers.functions.supportVector.RBFKernel",
386:       "weka.classifiers.functions.VotedPerceptron",
387:       "weka.classifiers.meta.AdditiveRegression",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.core.matrix.Matrix",
390:       "weka.estimators.NormalEstimator",
391:       "weka.classifiers.meta.Vote",
392:       "weka.core.SerializationHelper",
393:       "weka.classifiers.lazy.KStar",
394:       "weka.classifiers.meta.AttributeSelectedClassifier",
395:       "weka.estimators.KernelEstimator",
396:       "weka.classifiers.meta.LogitBoost",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.core.SelectedTag",
399:       "weka.classifiers.functions.supportVector.Puk",
400:       "weka.classifiers.lazy.LWL",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.functions.SimpleLinearRegression",
404:       "weka.classifiers.functions.supportVector.StringKernel",
405:       "weka.classifiers.meta.RandomSubSpace",
406:       "weka.classifiers.trees.LMT",
407:       "weka.core.Check",
408:       "weka.core.CheckGOE",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.core.Javadoc",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.MahalanobisEstimator",
413:       "weka.core.MinkowskiDistance",
414:       "weka.core.ChebyshevDistance"
415:     );
416:   }
417: }

[MASTER] 09:04:18.425 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 513;
Integer integer0 = new Integer(513);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer1 = new Integer(2013265920);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.normTipText();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals(513, int0);


[MASTER] 09:04:18.648 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_79_1575277458614/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_79_1575277458614/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding.java]]
[MASTER] 09:04:18.648 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:18.648 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:04:18.649 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 09:04:18.649 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_79_1575277458614/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 09:04:18 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.Attribute;
21: import weka.core.Capabilities;
22: import weka.core.Instances;
23: import weka.core.TestInstances;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_79_tmp__ESTest extends NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.2896497645867044
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
36:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
37:       String[] stringArray0 = new String[5];
38:       stringArray0[0] = "-stemmer";
39:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
40:       capabilities0.disableAllClasses();
41:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
42:       capabilities0.disableAllAttributeDependencies();
43:       testInstances0.setNumNumeric((-1));
44:       naiveBayesMultinomialText0.setLowercaseTokens(true);
45:       naiveBayesMultinomialText0.m_normalize = true;
46:       Instances instances0 = testInstances0.generate("~'xb");
47:       naiveBayesMultinomialText0.buildClassifier(instances0);
48:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
49:       ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
50:       Instances instances1 = null;
51:       try {
52:         instances1 = new Instances("@relation", arrayList0, (-492));
53:         fail("Expecting exception: IllegalArgumentException");
54:       
55:       } catch(IllegalArgumentException e) {
56:          //
57:          // Illegal Capacity: -492
58:          //
59:          verifyException("java.util.ArrayList", e);
60:       }
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_79_1575277458614/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 09:04:18 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.estimators.Estimator$Builder",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.functions.SMOreg",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.MultiInstanceCapabilitiesHandler",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.core.AttributeLocator",
125:       "weka.classifiers.functions.supportVector.CachedKernel",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.classifiers.functions.supportVector.RegOptimizer",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.core.neighboursearch.balltrees.BallSplitter",
141:       "weka.core.Version",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.filters.StreamableFilter",
149:       "weka.core.Range",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.classifiers.misc.SerializedClassifier",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
168:       "weka.core.Option",
169:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.estimators.KernelEstimator",
172:       "weka.filters.Sourcable",
173:       "weka.core.Attribute",
174:       "weka.core.Stopwords",
175:       "weka.core.tokenizers.AlphabeticTokenizer",
176:       "weka.core.FastVector",
177:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
178:       "weka.core.UnassignedDatasetException",
179:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
180:       "weka.classifiers.functions.supportVector.RegSMOImproved",
181:       "weka.core.RevisionUtils",
182:       "weka.core.Instance",
183:       "weka.classifiers.functions.supportVector.RegSMO",
184:       "weka.classifiers.functions.supportVector.PolyKernel",
185:       "weka.estimators.Estimator",
186:       "weka.core.ProtectedProperties",
187:       "weka.core.StringLocator",
188:       "weka.core.AttributeStats",
189:       "weka.core.WeightedInstancesHandler",
190:       "weka.core.neighboursearch.NearestNeighbourSearch",
191:       "weka.core.neighboursearch.covertrees.Stack",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.filters.unsupervised.attribute.Discretize",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
197:       "weka.filters.unsupervised.attribute.Normalize",
198:       "weka.core.UnassignedClassException",
199:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
200:       "weka.filters.unsupervised.attribute.Standardize",
201:       "weka.core.UnsupportedAttributeTypeException",
202:       "weka.core.TechnicalInformation",
203:       "weka.classifiers.Sourcable",
204:       "weka.core.RevisionHandler",
205:       "weka.classifiers.evaluation.output.prediction.PlainText",
206:       "weka.core.neighboursearch.TreePerformanceStats",
207:       "weka.core.xml.XMLSerialization",
208:       "weka.classifiers.xml.XMLClassifier",
209:       "weka.filters.Filter"
210:     );
211:   } 
212: 
213:   private static void resetClasses() {
214:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding.class.getClassLoader()); 
215: 
216:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
217:       "weka.classifiers.AbstractClassifier",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
219:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
220:       "weka.core.Capabilities$Capability",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
223:       "weka.core.tokenizers.WordTokenizer",
224:       "weka.core.stemmers.NullStemmer",
225:       "weka.core.Option",
226:       "weka.core.AbstractInstance",
227:       "weka.core.SparseInstance",
228:       "weka.core.BinarySparseInstance",
229:       "weka.core.Attribute",
230:       "weka.core.ProtectedProperties",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Utils",
234:       "weka.core.RevisionUtils",
235:       "weka.classifiers.RandomizableClassifier",
236:       "weka.core.Tag",
237:       "weka.classifiers.functions.SGDText",
238:       "weka.core.Instances",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.Stopwords",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.SerializedObject",
248:       "weka.core.DenseInstance",
249:       "weka.core.neighboursearch.NearestNeighbourSearch",
250:       "weka.core.neighboursearch.KDTree",
251:       "weka.core.NormalizableDistance",
252:       "weka.core.EuclideanDistance",
253:       "weka.core.Range",
254:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
255:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.attributeSelection.ASEvaluation",
263:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
264:       "weka.attributeSelection.PrincipalComponents",
265:       "weka.core.stemmers.SnowballStemmer",
266:       "weka.core.WekaEnumeration",
267:       "weka.core.Attribute$1",
268:       "weka.core.stemmers.LovinsStemmer",
269:       "weka.core.stemmers.IteratedLovinsStemmer",
270:       "weka.core.converters.ArffLoader$ArffReader",
271:       "weka.core.TestInstances",
272:       "weka.core.neighboursearch.BallTree",
273:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
274:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
275:       "weka.core.neighboursearch.balltrees.BallSplitter",
276:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
278:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
279:       "weka.core.FindWithCapabilities",
280:       "weka.core.SingleIndex",
281:       "weka.classifiers.functions.supportVector.Kernel",
282:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.classifiers.lazy.IBk",
285:       "weka.core.neighboursearch.LinearNNSearch",
286:       "weka.classifiers.CostMatrix",
287:       "weka.core.WekaException",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.ClassDiscovery",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.core.neighboursearch.balltrees.BallNode",
292:       "weka.classifiers.SingleClassifierEnhancer",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.rules.ZeroR",
296:       "weka.filters.Filter",
297:       "weka.filters.supervised.attribute.Discretize",
298:       "weka.classifiers.misc.SerializedClassifier",
299:       "weka.classifiers.trees.RandomTree",
300:       "weka.classifiers.functions.GaussianProcesses",
301:       "weka.classifiers.functions.supportVector.CachedKernel",
302:       "weka.classifiers.functions.supportVector.PolyKernel",
303:       "weka.classifiers.meta.FilteredClassifier",
304:       "weka.filters.supervised.attribute.AttributeSelection",
305:       "weka.attributeSelection.AttributeSelection",
306:       "weka.attributeSelection.CfsSubsetEval",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.GreedyStepwise",
309:       "weka.attributeSelection.BestFirst",
310:       "weka.classifiers.trees.J48",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.misc.InputMappedClassifier",
313:       "weka.core.tokenizers.AlphabeticTokenizer",
314:       "weka.core.UnassignedClassException",
315:       "weka.core.stemmers.Stemming",
316:       "weka.classifiers.trees.m5.M5Base",
317:       "weka.classifiers.rules.M5Rules",
318:       "weka.classifiers.MultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.MultiScheme",
321:       "weka.attributeSelection.CorrelationAttributeEval",
322:       "weka.classifiers.rules.DecisionTable",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.meta.MultiClassClassifier",
327:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
328:       "weka.classifiers.functions.Logistic",
329:       "weka.filters.AllFilter",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
334:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
335:       "weka.classifiers.functions.SMOreg",
336:       "weka.classifiers.functions.supportVector.RegOptimizer",
337:       "weka.classifiers.functions.supportVector.RegSMO",
338:       "weka.classifiers.functions.supportVector.RegSMOImproved",
339:       "weka.classifiers.rules.JRip",
340:       "weka.classifiers.bayes.NaiveBayesMultinomial",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.attributeSelection.OneRAttributeEval",
344:       "weka.classifiers.meta.ClassificationViaRegression",
345:       "weka.classifiers.trees.M5P",
346:       "weka.core.TechnicalInformation",
347:       "weka.core.TechnicalInformation$Type",
348:       "weka.core.TechnicalInformation$Field",
349:       "weka.classifiers.functions.SGD",
350:       "weka.attributeSelection.GainRatioAttributeEval",
351:       "weka.classifiers.functions.SMO",
352:       "weka.core.AttributeStats",
353:       "weka.classifiers.rules.OneR",
354:       "weka.classifiers.bayes.net.BIFReader",
355:       "weka.classifiers.meta.RegressionByDiscretization",
356:       "weka.filters.unsupervised.attribute.Discretize",
357:       "weka.classifiers.rules.PART",
358:       "weka.classifiers.rules.part.MakeDecList",
359:       "weka.classifiers.functions.MultilayerPerceptron",
360:       "weka.core.FastVector",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.classifiers.trees.RandomForest",
365:       "weka.classifiers.IteratedSingleClassifierEnhancer",
366:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
367:       "weka.classifiers.meta.AdaBoostM1",
368:       "weka.classifiers.trees.DecisionStump",
369:       "weka.classifiers.functions.LinearRegression",
370:       "weka.classifiers.trees.REPTree",
371:       "weka.attributeSelection.ReliefFAttributeEval",
372:       "weka.attributeSelection.WrapperSubsetEval",
373:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.estimators.Estimator",
376:       "weka.estimators.DiscreteEstimator",
377:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.attributeSelection.InfoGainAttributeEval",
381:       "weka.experiment.Stats",
382:       "weka.estimators.PoissonEstimator",
383:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
384:       "weka.core.ManhattanDistance",
385:       "weka.classifiers.functions.supportVector.RBFKernel",
386:       "weka.classifiers.functions.VotedPerceptron",
387:       "weka.classifiers.meta.AdditiveRegression",
388:       "weka.classifiers.meta.RandomCommittee",
389:       "weka.core.matrix.Matrix",
390:       "weka.estimators.NormalEstimator",
391:       "weka.classifiers.meta.Vote",
392:       "weka.core.SerializationHelper",
393:       "weka.classifiers.lazy.KStar",
394:       "weka.classifiers.meta.AttributeSelectedClassifier",
395:       "weka.estimators.KernelEstimator",
396:       "weka.classifiers.meta.LogitBoost",
397:       "weka.classifiers.bayes.NaiveBayesUpdateable",
398:       "weka.core.SelectedTag",
399:       "weka.classifiers.functions.supportVector.Puk",
400:       "weka.classifiers.lazy.LWL",
401:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
402:       "weka.classifiers.meta.CVParameterSelection",
403:       "weka.classifiers.functions.SimpleLinearRegression",
404:       "weka.classifiers.functions.supportVector.StringKernel",
405:       "weka.classifiers.meta.RandomSubSpace",
406:       "weka.classifiers.trees.LMT",
407:       "weka.core.Check",
408:       "weka.core.CheckGOE",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.core.Javadoc",
411:       "weka.core.GlobalInfoJavadoc",
412:       "weka.estimators.MahalanobisEstimator",
413:       "weka.core.MinkowskiDistance",
414:       "weka.core.ChebyshevDistance"
415:     );
416:   }
417: }

[MASTER] 09:04:18.650 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props/Capabilities.props");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
String[] stringArray0 = new String[5];
stringArray0[0] = "-stemmer";
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
capabilities0.disableAllClasses();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
capabilities0.disableAllAttributeDependencies();
testInstances0.setNumNumeric((-1));
naiveBayesMultinomialText0.setLowercaseTokens(true);
naiveBayesMultinomialText0.m_normalize = true;
Instances instances0 = testInstances0.generate("~'xb");
naiveBayesMultinomialText0.buildClassifier(instances0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances1 = new Instances("@relation", arrayList0, (-492));

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 09:06:43.116 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:06:43.412 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:06:43.412 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 09:06:44.875 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7354
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:10:37.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:10:37.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:10:37.139 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:10:40.160 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:10:40.739 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:10:40.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 09:10:44.535 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 09:11:50.762 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 09:12:12.979 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getDebug()Z:True
* Search finished after 224s and 262 generations, 160999 statements, best individual has fitness: 12376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 260
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 114
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 567
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 114
* Generated 74 tests with total length 704
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 09:15:21.981 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:15:22.107 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:15:22.276 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:15:22.277 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
