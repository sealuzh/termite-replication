* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14955
* Connecting to master process on port 14961
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:48:56.704 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:48:56.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:48:56.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:48:56.792 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:48:56.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:48:56.869 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1000
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:49:04.049 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:49:04.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:49:04.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:49:04.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
[MASTER] 20:49:05.002 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Using seed 1000
* Starting evolution
[MASTER] 20:49:08.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.buildClassifier(Lweka/core/Instances;)V
[MASTER] 20:49:09.321 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 20:50:42.539 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 20:50:42.539 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 226s and 128 generations, 82333 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 147
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 289s and 315 generations, 193318 statements, best individual has fitness: 1392.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 308
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 165
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 162
* Generated 98 tests with total length 925
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 20:57:20.963 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_43_1575233840926/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_43_1575233840926/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.java]]
[MASTER] 20:57:20.963 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:57:20.963 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:57:20.967 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 20:57:20.967 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_43_1575233840926/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Dec 01 20:57:20 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Instance;
18: import weka.core.stemmers.LovinsStemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_43_tmp__ESTest extends NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.1375916250043898
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.setDebug(false);
31:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
32:       naiveBayesMultinomialText0.m_useStopList = false;
33:       naiveBayesMultinomialText0.m_normalize = true;
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
35:       Instance instance0 = null;
36:       naiveBayesMultinomialText0.getLowercaseTokens();
37:       try { 
38:         naiveBayesMultinomialText0.distributionForInstance((Instance) null);
39:         fail("Expecting exception: NullPointerException");
40:       
41:       } catch(NullPointerException e) {
42:          //
43:          // no message in exception (getMessage() returned null)
44:          //
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_43_1575233840926/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Dec 01 20:57:20 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.functions.SGDText",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.core.AdditionalMeasureProducer",
127:       "weka.core.neighboursearch.balltrees.BallNode",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.SingleIndex",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.FindWithCapabilities",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.core.ClassDiscovery",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.filters.Sourcable",
173:       "weka.core.Attribute",
174:       "weka.core.Stopwords",
175:       "weka.core.tokenizers.AlphabeticTokenizer",
176:       "weka.core.FastVector",
177:       "weka.core.UnassignedDatasetException",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.StringLocator",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.core.neighboursearch.covertrees.Stack",
188:       "weka.filters.unsupervised.attribute.Remove",
189:       "weka.core.Randomizable",
190:       "weka.classifiers.functions.SGD",
191:       "weka.core.EuclideanDistance",
192:       "weka.core.Instances",
193:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
194:       "weka.core.UnassignedClassException",
195:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
196:       "weka.filters.unsupervised.attribute.Standardize",
197:       "weka.core.UnsupportedAttributeTypeException",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.RevisionHandler",
200:       "weka.classifiers.evaluation.output.prediction.PlainText",
201:       "weka.core.neighboursearch.TreePerformanceStats",
202:       "weka.core.xml.XMLSerialization",
203:       "weka.classifiers.xml.XMLClassifier",
204:       "weka.filters.Filter"
205:     );
206:   } 
207: 
208:   private static void resetClasses() {
209:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader()); 
210: 
211:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
212:       "weka.classifiers.AbstractClassifier",
213:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
214:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
215:       "weka.core.Capabilities$Capability",
216:       "weka.core.tokenizers.Tokenizer",
217:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
218:       "weka.core.tokenizers.WordTokenizer",
219:       "weka.core.stemmers.NullStemmer",
220:       "weka.core.tokenizers.NGramTokenizer",
221:       "weka.core.Option",
222:       "weka.core.Utils",
223:       "weka.core.neighboursearch.NearestNeighbourSearch",
224:       "weka.core.neighboursearch.LinearNNSearch",
225:       "weka.core.NormalizableDistance",
226:       "weka.core.EuclideanDistance",
227:       "weka.core.Range",
228:       "weka.core.AbstractInstance",
229:       "weka.core.SparseInstance",
230:       "weka.core.BinarySparseInstance",
231:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
232:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
233:       "weka.core.stemmers.LovinsStemmer",
234:       "weka.core.stemmers.IteratedLovinsStemmer",
235:       "weka.core.TechnicalInformation",
236:       "weka.core.TechnicalInformation$Type",
237:       "weka.core.TechnicalInformation$Field",
238:       "weka.core.neighboursearch.balltrees.BallNode",
239:       "weka.core.SerializedObject",
240:       "weka.core.DenseInstance",
241:       "weka.core.Attribute",
242:       "weka.core.ProtectedProperties",
243:       "weka.classifiers.RandomizableClassifier",
244:       "weka.core.Tag",
245:       "weka.classifiers.functions.SGDText",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.tokenizers.AlphabeticTokenizer",
256:       "weka.filters.Filter",
257:       "weka.filters.supervised.attribute.Discretize",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.core.TestInstances",
263:       "weka.core.Instances",
264:       "weka.core.UnassignedDatasetException",
265:       "weka.classifiers.bayes.BayesNet",
266:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
268:       "weka.classifiers.bayes.net.search.local.K2",
269:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
270:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
271:       "weka.core.neighboursearch.CoverTree",
272:       "weka.core.stemmers.SnowballStemmer",
273:       "weka.core.stemmers.Stemming",
274:       "weka.classifiers.Evaluation",
275:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
276:       "weka.classifiers.meta.CostSensitiveClassifier",
277:       "weka.classifiers.CostMatrix",
278:       "weka.core.Stopwords",
279:       "weka.classifiers.meta.CVParameterSelection",
280:       "weka.core.FastVector",
281:       "weka.attributeSelection.OneRAttributeEval",
282:       "weka.classifiers.MultipleClassifiersCombiner",
283:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
284:       "weka.classifiers.meta.MultiScheme",
285:       "weka.core.SelectedTag",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.filters.SimpleFilter",
288:       "weka.filters.SimpleStreamFilter",
289:       "weka.filters.MultiFilter",
290:       "weka.filters.AllFilter",
291:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
292:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
293:       "weka.core.FindWithCapabilities",
294:       "weka.core.SingleIndex",
295:       "weka.classifiers.meta.RegressionByDiscretization",
296:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
297:       "weka.filters.unsupervised.attribute.Discretize",
298:       "weka.classifiers.trees.J48",
299:       "weka.classifiers.trees.j48.ClassifierTree",
300:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
301:       "weka.classifiers.bayes.NaiveBayesMultinomial",
302:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.core.neighboursearch.KDTree",
306:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
307:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
308:       "weka.classifiers.misc.SerializedClassifier",
309:       "weka.classifiers.meta.FilteredClassifier",
310:       "weka.filters.supervised.attribute.AttributeSelection",
311:       "weka.attributeSelection.AttributeSelection",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.attributeSelection.ASSearch",
314:       "weka.attributeSelection.GreedyStepwise",
315:       "weka.attributeSelection.BestFirst",
316:       "weka.classifiers.functions.SimpleLinearRegression",
317:       "weka.core.WekaException",
318:       "weka.core.UnsupportedAttributeTypeException",
319:       "weka.classifiers.functions.supportVector.CachedKernel",
320:       "weka.classifiers.functions.supportVector.PolyKernel",
321:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
322:       "weka.classifiers.lazy.KStar",
323:       "weka.classifiers.meta.ClassificationViaRegression",
324:       "weka.classifiers.trees.m5.M5Base",
325:       "weka.classifiers.trees.M5P",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.core.neighboursearch.BallTree",
328:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
329:       "weka.core.neighboursearch.balltrees.BallSplitter",
330:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
331:       "weka.attributeSelection.GainRatioAttributeEval",
332:       "weka.core.WekaEnumeration",
333:       "weka.core.Attribute$1",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.classifiers.lazy.LWL",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.classifiers.meta.MultiClassClassifier",
338:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
339:       "weka.classifiers.functions.Logistic",
340:       "weka.classifiers.functions.SimpleLogistic",
341:       "weka.core.AttributeStats",
342:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
343:       "weka.classifiers.rules.PART",
344:       "weka.classifiers.bayes.NaiveBayes",
345:       "weka.classifiers.functions.LinearRegression",
346:       "weka.classifiers.rules.DecisionTable",
347:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
348:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.Stacking",
351:       "weka.classifiers.meta.AttributeSelectedClassifier",
352:       "weka.classifiers.trees.REPTree",
353:       "weka.classifiers.trees.RandomTree",
354:       "weka.classifiers.rules.M5Rules",
355:       "weka.classifiers.functions.VotedPerceptron",
356:       "weka.classifiers.functions.SMO",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.classifiers.rules.JRip",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.classifiers.functions.GaussianProcesses",
363:       "weka.attributeSelection.InfoGainAttributeEval",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.RandomSubSpace",
367:       "weka.classifiers.meta.AdditiveRegression",
368:       "weka.classifiers.functions.MultilayerPerceptron",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.core.UnassignedClassException",
373:       "weka.classifiers.functions.SMOreg",
374:       "weka.classifiers.functions.supportVector.RegOptimizer",
375:       "weka.classifiers.functions.supportVector.RegSMO",
376:       "weka.classifiers.functions.supportVector.RegSMOImproved",
377:       "weka.estimators.Estimator",
378:       "weka.estimators.PoissonEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.classifiers.functions.supportVector.RBFKernel",
381:       "weka.classifiers.meta.Bagging",
382:       "weka.classifiers.trees.LMT",
383:       "weka.estimators.KernelEstimator",
384:       "weka.attributeSelection.WrapperSubsetEval",
385:       "weka.classifiers.rules.OneR",
386:       "weka.classifiers.trees.RandomForest",
387:       "weka.estimators.DiscreteEstimator",
388:       "weka.estimators.NormalEstimator",
389:       "weka.classifiers.rules.OneR$OneRRule",
390:       "weka.attributeSelection.ReliefFAttributeEval",
391:       "weka.classifiers.meta.Vote",
392:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
393:       "weka.estimators.Estimator$Builder",
394:       "weka.core.neighboursearch.PerformanceStats",
395:       "weka.attributeSelection.CorrelationAttributeEval",
396:       "weka.classifiers.functions.supportVector.Puk",
397:       "weka.classifiers.functions.SGD",
398:       "weka.classifiers.functions.supportVector.StringKernel",
399:       "weka.core.ClassDiscovery",
400:       "weka.core.Queue",
401:       "weka.core.AttributeLocator",
402:       "weka.core.StringLocator",
403:       "weka.core.RelationalLocator",
404:       "weka.core.ContingencyTables",
405:       "weka.core.Queue$QueueNode",
406:       "weka.core.ManhattanDistance",
407:       "weka.classifiers.bayes.NaiveBayesUpdateable",
408:       "weka.classifiers.meta.LogitBoost",
409:       "weka.core.Check",
410:       "weka.core.CheckOptionHandler",
411:       "weka.core.matrix.Matrix",
412:       "weka.estimators.MahalanobisEstimator",
413:       "weka.classifiers.functions.neural.NeuralConnection",
414:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
415:       "weka.core.Javadoc",
416:       "weka.core.ClassCache",
417:       "weka.core.AllJavadoc",
418:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
419:       "weka.core.GlobalInfoJavadoc",
420:       "weka.core.SpecialFunctions",
421:       "weka.core.Statistics",
422:       "weka.core.neighboursearch.covertrees.Stack",
423:       "weka.core.neighboursearch.CoverTree$DistanceNode",
424:       "weka.core.neighboursearch.CoverTree$CoverTreeNode"
425:     );
426:   }
427: }

[MASTER] 20:57:20.968 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setDebug(false);
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_useStopList = false;
naiveBayesMultinomialText0.m_normalize = true;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
Instance instance0 = null;
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.distributionForInstance((Instance) null);

[MASTER] 20:57:21.548 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_60_1575233841515/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_60_1575233841515/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.java]]
[MASTER] 20:57:21.549 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:57:21.549 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:57:21.549 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 20:57:21.549 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 20:57:21.550 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_60_1575233841515/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Dec 01 20:57:21 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.stemmers.LovinsStemmer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_60_tmp__ESTest extends NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.5271837172395382
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_periodicP = (-2);
30:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
31:       
32:       naiveBayesMultinomialText0.m_wordFrequencies = true;
33:       naiveBayesMultinomialText0.getLowercaseTokens();
34:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
35:       String string0 = naiveBayesMultinomialText0.lowercaseTokensTipText();
36:       assertEquals("Whether to convert all tokens to lowercase", string0);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_60_1575233841515/weka/classifiers/bayes/NaiveBayesMultinomialText_60_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Dec 01 20:57:21 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.functions.SGDText",
109:       "weka.core.RelationalLocator",
110:       "weka.core.Utils",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NormalizableDistance",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.core.AdditionalMeasureProducer",
127:       "weka.core.neighboursearch.balltrees.BallNode",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.Drawable",
130:       "weka.core.matrix.Matrix",
131:       "weka.core.SingleIndex",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.core.Tag",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.FindWithCapabilities",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.core.ClassDiscovery",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
160:       "weka.attributeSelection.PrincipalComponents",
161:       "weka.core.stemmers.SnowballStemmer",
162:       "weka.core.stemmers.LovinsStemmer",
163:       "weka.classifiers.Evaluation",
164:       "weka.classifiers.functions.supportVector.Kernel",
165:       "weka.core.WekaPackageManager",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.core.neighboursearch.PerformanceStats",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.filters.Sourcable",
173:       "weka.core.Attribute",
174:       "weka.core.Stopwords",
175:       "weka.core.tokenizers.AlphabeticTokenizer",
176:       "weka.core.FastVector",
177:       "weka.core.UnassignedDatasetException",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.StringLocator",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.core.neighboursearch.covertrees.Stack",
188:       "weka.filters.unsupervised.attribute.Remove",
189:       "weka.core.Randomizable",
190:       "weka.classifiers.functions.SGD",
191:       "weka.core.EuclideanDistance",
192:       "weka.core.Instances",
193:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
194:       "weka.core.UnassignedClassException",
195:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
196:       "weka.filters.unsupervised.attribute.Standardize",
197:       "weka.core.UnsupportedAttributeTypeException",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.RevisionHandler",
200:       "weka.classifiers.evaluation.output.prediction.PlainText",
201:       "weka.core.neighboursearch.TreePerformanceStats",
202:       "weka.core.xml.XMLSerialization",
203:       "weka.classifiers.xml.XMLClassifier",
204:       "weka.filters.Filter"
205:     );
206:   } 
207: 
208:   private static void resetClasses() {
209:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_60_tmp__ESTest_scaffolding.class.getClassLoader()); 
210: 
211:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
212:       "weka.classifiers.AbstractClassifier",
213:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
214:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
215:       "weka.core.Capabilities$Capability",
216:       "weka.core.tokenizers.Tokenizer",
217:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
218:       "weka.core.tokenizers.WordTokenizer",
219:       "weka.core.stemmers.NullStemmer",
220:       "weka.core.tokenizers.NGramTokenizer",
221:       "weka.core.Option",
222:       "weka.core.Utils",
223:       "weka.core.neighboursearch.NearestNeighbourSearch",
224:       "weka.core.neighboursearch.LinearNNSearch",
225:       "weka.core.NormalizableDistance",
226:       "weka.core.EuclideanDistance",
227:       "weka.core.Range",
228:       "weka.core.AbstractInstance",
229:       "weka.core.SparseInstance",
230:       "weka.core.BinarySparseInstance",
231:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
232:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
233:       "weka.core.stemmers.LovinsStemmer",
234:       "weka.core.stemmers.IteratedLovinsStemmer",
235:       "weka.core.TechnicalInformation",
236:       "weka.core.TechnicalInformation$Type",
237:       "weka.core.TechnicalInformation$Field",
238:       "weka.core.neighboursearch.balltrees.BallNode",
239:       "weka.core.SerializedObject",
240:       "weka.core.DenseInstance",
241:       "weka.core.Attribute",
242:       "weka.core.ProtectedProperties",
243:       "weka.classifiers.RandomizableClassifier",
244:       "weka.core.Tag",
245:       "weka.classifiers.functions.SGDText",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.tokenizers.AlphabeticTokenizer",
256:       "weka.filters.Filter",
257:       "weka.filters.supervised.attribute.Discretize",
258:       "weka.core.RevisionUtils",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.core.TestInstances",
263:       "weka.core.Instances",
264:       "weka.core.UnassignedDatasetException",
265:       "weka.classifiers.bayes.BayesNet",
266:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
267:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
268:       "weka.classifiers.bayes.net.search.local.K2",
269:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
270:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
271:       "weka.core.neighboursearch.CoverTree",
272:       "weka.core.stemmers.SnowballStemmer",
273:       "weka.core.stemmers.Stemming",
274:       "weka.classifiers.Evaluation",
275:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
276:       "weka.classifiers.meta.CostSensitiveClassifier",
277:       "weka.classifiers.CostMatrix",
278:       "weka.core.Stopwords",
279:       "weka.classifiers.meta.CVParameterSelection",
280:       "weka.core.FastVector",
281:       "weka.attributeSelection.OneRAttributeEval",
282:       "weka.classifiers.MultipleClassifiersCombiner",
283:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
284:       "weka.classifiers.meta.MultiScheme",
285:       "weka.core.SelectedTag",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.filters.SimpleFilter",
288:       "weka.filters.SimpleStreamFilter",
289:       "weka.filters.MultiFilter",
290:       "weka.filters.AllFilter",
291:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
292:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
293:       "weka.core.FindWithCapabilities",
294:       "weka.core.SingleIndex",
295:       "weka.classifiers.meta.RegressionByDiscretization",
296:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
297:       "weka.filters.unsupervised.attribute.Discretize",
298:       "weka.classifiers.trees.J48",
299:       "weka.classifiers.trees.j48.ClassifierTree",
300:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
301:       "weka.classifiers.bayes.NaiveBayesMultinomial",
302:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
303:       "weka.classifiers.functions.supportVector.Kernel",
304:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
305:       "weka.core.neighboursearch.KDTree",
306:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
307:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
308:       "weka.classifiers.misc.SerializedClassifier",
309:       "weka.classifiers.meta.FilteredClassifier",
310:       "weka.filters.supervised.attribute.AttributeSelection",
311:       "weka.attributeSelection.AttributeSelection",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.attributeSelection.ASSearch",
314:       "weka.attributeSelection.GreedyStepwise",
315:       "weka.attributeSelection.BestFirst",
316:       "weka.classifiers.functions.SimpleLinearRegression",
317:       "weka.core.WekaException",
318:       "weka.core.UnsupportedAttributeTypeException",
319:       "weka.classifiers.functions.supportVector.CachedKernel",
320:       "weka.classifiers.functions.supportVector.PolyKernel",
321:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
322:       "weka.classifiers.lazy.KStar",
323:       "weka.classifiers.meta.ClassificationViaRegression",
324:       "weka.classifiers.trees.m5.M5Base",
325:       "weka.classifiers.trees.M5P",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.core.neighboursearch.BallTree",
328:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
329:       "weka.core.neighboursearch.balltrees.BallSplitter",
330:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
331:       "weka.attributeSelection.GainRatioAttributeEval",
332:       "weka.core.WekaEnumeration",
333:       "weka.core.Attribute$1",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.classifiers.lazy.LWL",
336:       "weka.classifiers.trees.DecisionStump",
337:       "weka.classifiers.meta.MultiClassClassifier",
338:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
339:       "weka.classifiers.functions.Logistic",
340:       "weka.classifiers.functions.SimpleLogistic",
341:       "weka.core.AttributeStats",
342:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
343:       "weka.classifiers.rules.PART",
344:       "weka.classifiers.bayes.NaiveBayes",
345:       "weka.classifiers.functions.LinearRegression",
346:       "weka.classifiers.rules.DecisionTable",
347:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
348:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
350:       "weka.classifiers.meta.Stacking",
351:       "weka.classifiers.meta.AttributeSelectedClassifier",
352:       "weka.classifiers.trees.REPTree",
353:       "weka.classifiers.trees.RandomTree",
354:       "weka.classifiers.rules.M5Rules",
355:       "weka.classifiers.functions.VotedPerceptron",
356:       "weka.classifiers.functions.SMO",
357:       "weka.classifiers.IteratedSingleClassifierEnhancer",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.classifiers.rules.JRip",
361:       "weka.classifiers.rules.part.MakeDecList",
362:       "weka.classifiers.functions.GaussianProcesses",
363:       "weka.attributeSelection.InfoGainAttributeEval",
364:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
366:       "weka.classifiers.meta.RandomSubSpace",
367:       "weka.classifiers.meta.AdditiveRegression",
368:       "weka.classifiers.functions.MultilayerPerceptron",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.core.UnassignedClassException",
373:       "weka.classifiers.functions.SMOreg",
374:       "weka.classifiers.functions.supportVector.RegOptimizer",
375:       "weka.classifiers.functions.supportVector.RegSMO",
376:       "weka.classifiers.functions.supportVector.RegSMOImproved",
377:       "weka.estimators.Estimator",
378:       "weka.estimators.PoissonEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.classifiers.functions.supportVector.RBFKernel",
381:       "weka.classifiers.meta.Bagging",
382:       "weka.classifiers.trees.LMT",
383:       "weka.estimators.KernelEstimator",
384:       "weka.attributeSelection.WrapperSubsetEval",
385:       "weka.classifiers.rules.OneR",
386:       "weka.classifiers.trees.RandomForest",
387:       "weka.estimators.DiscreteEstimator",
388:       "weka.estimators.NormalEstimator",
389:       "weka.classifiers.rules.OneR$OneRRule",
390:       "weka.attributeSelection.ReliefFAttributeEval",
391:       "weka.classifiers.meta.Vote",
392:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
393:       "weka.estimators.Estimator$Builder",
394:       "weka.core.neighboursearch.PerformanceStats",
395:       "weka.attributeSelection.CorrelationAttributeEval",
396:       "weka.classifiers.functions.supportVector.Puk",
397:       "weka.classifiers.functions.SGD",
398:       "weka.classifiers.functions.supportVector.StringKernel",
399:       "weka.core.ClassDiscovery",
400:       "weka.core.Queue",
401:       "weka.core.AttributeLocator",
402:       "weka.core.StringLocator",
403:       "weka.core.RelationalLocator",
404:       "weka.core.ContingencyTables",
405:       "weka.core.Queue$QueueNode",
406:       "weka.core.ManhattanDistance",
407:       "weka.classifiers.bayes.NaiveBayesUpdateable",
408:       "weka.classifiers.meta.LogitBoost",
409:       "weka.core.Check",
410:       "weka.core.CheckOptionHandler",
411:       "weka.core.matrix.Matrix",
412:       "weka.estimators.MahalanobisEstimator",
413:       "weka.classifiers.functions.neural.NeuralConnection",
414:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
415:       "weka.core.Javadoc",
416:       "weka.core.ClassCache",
417:       "weka.core.AllJavadoc",
418:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
419:       "weka.core.GlobalInfoJavadoc",
420:       "weka.core.SpecialFunctions",
421:       "weka.core.Statistics",
422:       "weka.core.neighboursearch.covertrees.Stack",
423:       "weka.core.neighboursearch.CoverTree$DistanceNode",
424:       "weka.core.neighboursearch.CoverTree$CoverTreeNode"
425:     );
426:   }
427: }

[MASTER] 20:57:21.550 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_periodicP = (-2);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());

naiveBayesMultinomialText0.m_wordFrequencies = true;
naiveBayesMultinomialText0.getLowercaseTokens();
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
String string0 = naiveBayesMultinomialText0.lowercaseTokensTipText();
assertEquals("Whether to convert all tokens to lowercase", string0);


[MASTER] 20:57:25.257 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 20:57:25.386 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14959
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14956
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:11:28.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:11:28.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:11:28.997 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:11:29.175 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:11:29.187 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:11:29.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1000
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:11:47.421 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:11:47.427 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:11:47.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:11:48.321 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:11:49.786 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:11:49.788 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:11:52.030 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:11:52.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:11:52.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:11:52.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:11:52.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:11:52.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:11:52.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:11:52.074 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:11:52.075 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 21:11:52.154 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 21:11:52.165 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1000
* Starting evolution
[MASTER] 21:12:01.774 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 21:12:14.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: Line 3568
[MASTER] 21:12:14.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: Line 3569
[MASTER] 21:12:14.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: I357 Branch 350 IFEQ L3562 - true
[MASTER] 21:12:14.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: I374 Branch 351 IFEQ L3567 - false
[MASTER] 21:12:14.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: I374 Branch 351 IFEQ L3567 - false in context: 
[MASTER] 21:12:14.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: I357 Branch 350 IFEQ L3562 - true in context: 
[MASTER] 21:12:22.181 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:12:48.702 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 21:13:18.232 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 234s and 118 generations, 77516 statements, best individual has fitness: 15584.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 778
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 340
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 60
* Number of covered goals: 60
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 424
* Number of covered goals: 260
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 329
* Generated 162 tests with total length 1894
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 298s and 369 generations, 188201 statements, best individual has fitness: 3904.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 268
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 242
* Number of covered goals: 151
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 713
* Number of covered goals: 542
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 242
* Number of covered goals: 151
* Generated 91 tests with total length 774
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
[MASTER] 21:19:05.876 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:19:06.615 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:19:24.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:19:24.778 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute0 = new Attribute("/rD]", protectedProperties0);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.add(attribute0);
Instances instances0 = new Instances("/rD]", arrayList0, 0);
LinkedList<String> linkedList0 = new LinkedList<String>();
Attribute attribute1 = new Attribute("/rD]", instances0, protectedProperties0);
arrayList0.add(attribute1);
discretize0.setInputFormat(instances0);

[MASTER] 21:19:29.773 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:19:29.775 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances(" 8PAf yGxT/n<}u^vFh", arrayList0, 1481);
Attribute attribute0 = new Attribute(" 8PAf yGxT/n<}u^vFh", instances0, 1481);
arrayList0.add(attribute0);
Instances instances1 = new Instances(".bsi", arrayList0, 4);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 21:21:11.941 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:21:12.346 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:21:12.346 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 21:21:13.706 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:21:13.723 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 21:21:14.157 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14955
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:23:34.975 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:23:34.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:23:34.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:23:35.086 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1000
* Starting evolution
* Search finished after 314s and 49 generations, 43961 statements, best individual has fitness: 2768.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 612
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 403
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 611
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 441
* Number of covered goals: 376
* Generated 202 tests with total length 3440
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:34:54.175 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7082395833333334% of time used, but only 64/202 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 21:36:31.857 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14960
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1000
* Starting evolution
* Search finished after 269s and 243 generations, 153750 statements, best individual has fitness: 2744.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 93 tests with total length 276
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 83%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14957
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:01:49.812 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:01:49.828 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:01:49.838 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:01:52.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:01:53.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:01:53.221 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1000
* Starting evolution
[MASTER] 22:01:57.910 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 22:03:54.299 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 22:05:54.248 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 246s and 262 generations, 124218 statements, best individual has fitness: 12528.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 253
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 563
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 78 tests with total length 522
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 22:06:52.567 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:06:53.428 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
