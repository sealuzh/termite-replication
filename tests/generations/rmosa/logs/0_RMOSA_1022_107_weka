* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5240
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:35:53.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:35:53.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:35:53.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:35:56.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:35:57.989 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:35:57.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 01:36:02.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 01:36:14.685 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:getMinimumNumberInstances()I:Positive
[MASTER] 01:36:14.685 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:hasDependencies()Z:False
[MASTER] 01:36:14.685 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getCapabilities()Lweka/core/Capabilities;
[MASTER] 01:36:14.686 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getCapabilities()Lweka/core/Capabilities;
[MASTER] 01:36:14.686 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getCapabilities()Lweka/core/Capabilities;: root-Branch in context: weka.classifiers.rules.JRip:getCapabilities()Lweka/core/Capabilities;
* Search finished after 319s and 262 generations, 148380 statements, best individual has fitness: 11368.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 705
* Number of covered goals: 301
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 34%
* Total number of goals: 416
* Number of covered goals: 140
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 993
* Number of covered goals: 599
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 34%
* Total number of goals: 416
* Number of covered goals: 140
* Generated 80 tests with total length 725
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 01:42:29.222 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:42:30.189 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5239
* Connecting to master process on port 5242
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Using seed 1022
* Starting evolution
[MASTER] 02:31:53.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:31:53.944 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:31:53.945 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:31:53.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 02:32:03.665 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColNameWidth()I: Line 685
[MASTER] 02:32:03.668 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowNameWidth()I: Line 723
[MASTER] 02:32:03.669 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getShowStdDev()Z: Line 912
[MASTER] 02:32:03.669 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getShowAverage()Z: Line 949
[MASTER] 02:32:03.669 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRemoveFilterName()Z: Line 986
[MASTER] 02:32:03.672 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getPrintColNames()Z: Line 1028
[MASTER] 02:32:03.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getEnumerateColNames()Z: Line 1107
[MASTER] 02:32:03.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1184
[MASTER] 02:32:03.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1185
[MASTER] 02:32:03.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1186
[MASTER] 02:32:03.673 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1187
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleColCount()I: Line 1190
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1211
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1212
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1213
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1214
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getVisibleRowCount()I: Line 1217
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1247
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1249
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1250
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1253
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1255
[MASTER] 02:32:03.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1256
[MASTER] 02:32:03.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1260
[MASTER] 02:32:03.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: Line 1264
[MASTER] 02:32:03.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColHidden(I)Z: Line 1333
[MASTER] 02:32:03.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getColHidden(I)Z: Line 1334
[MASTER] 02:32:03.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowHidden(I)Z: Line 1358
[MASTER] 02:32:03.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getRowHidden(I)Z: Line 1359
[MASTER] 02:32:03.727 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayCol(I)I: Line 1631
[MASTER] 02:32:03.727 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayCol(I)I: Line 1632
[MASTER] 02:32:03.727 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getDisplayCol(I)I: Line 1633
[MASTER] 02:32:03.727 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: Line 1679
[MASTER] 02:32:03.727 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: Line 1682
[MASTER] 02:32:03.738 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;: Line 1781
[MASTER] 02:32:03.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;: Line 1786
[MASTER] 02:32:03.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1812
[MASTER] 02:32:03.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1813
[MASTER] 02:32:03.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1815
[MASTER] 02:32:03.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1816
[MASTER] 02:32:03.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1819
[MASTER] 02:32:03.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1821
[MASTER] 02:32:03.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1824
[MASTER] 02:32:03.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1825
[MASTER] 02:32:03.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1826
[MASTER] 02:32:03.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1827
[MASTER] 02:32:03.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1828
[MASTER] 02:32:03.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1831
[MASTER] 02:32:03.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1833
[MASTER] 02:32:03.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1835
[MASTER] 02:32:03.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1840
[MASTER] 02:32:03.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: Line 1841
[MASTER] 02:32:03.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 880: weka.experiment.ResultMatrix.setStdDevWidth(I)V:789 - ReplaceComparisonOperator < -> <=
[MASTER] 02:32:03.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1156: weka.experiment.ResultMatrix.getVisibleColCount()I:1184 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1157: weka.experiment.ResultMatrix.getVisibleColCount()I:1185 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1173: weka.experiment.ResultMatrix.getVisibleColCount()I:1185 - ReplaceComparisonOperator >= -> -1
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1174: weka.experiment.ResultMatrix.getVisibleColCount()I:1185 - ReplaceComparisonOperator >= -> >
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1191: weka.experiment.ResultMatrix.getVisibleColCount()I:1186 - ReplaceComparisonOperator != -> ==
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1210: weka.experiment.ResultMatrix.getVisibleRowCount()I:1211 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1211: weka.experiment.ResultMatrix.getVisibleRowCount()I:1212 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1227: weka.experiment.ResultMatrix.getVisibleRowCount()I:1212 - ReplaceComparisonOperator >= -> -1
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1228: weka.experiment.ResultMatrix.getVisibleRowCount()I:1212 - ReplaceComparisonOperator >= -> >
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1245: weka.experiment.ResultMatrix.getVisibleRowCount()I:1213 - ReplaceComparisonOperator != -> ==
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1332: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator < -> !=
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1333: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator < -> <=
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1348: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator >= -> -1
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1350: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1249 - ReplaceComparisonOperator >= -> ==
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1351: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1250 - ReplaceComparisonOperator == -> !=
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1367: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1255 - ReplaceComparisonOperator == -> !=
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1386: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceConstant - 1 -> 0
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1387: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> %
[MASTER] 02:32:03.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1388: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> -
[MASTER] 02:32:03.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1389: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> *
[MASTER] 02:32:03.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1390: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceArithmeticOperator + -> /
[MASTER] 02:32:03.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1395: weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;:1256 - ReplaceConstant -   -> 
[MASTER] 02:32:03.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1627: weka.experiment.ResultMatrix.getColHidden(I)Z:1333 - ReplaceComparisonOperator < -> !=
[MASTER] 02:32:03.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1628: weka.experiment.ResultMatrix.getColHidden(I)Z:1333 - ReplaceComparisonOperator < -> <=
[MASTER] 02:32:03.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1643: weka.experiment.ResultMatrix.getColHidden(I)Z:1333 - ReplaceComparisonOperator >= -> -1
[MASTER] 02:32:03.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1729: weka.experiment.ResultMatrix.getRowHidden(I)Z:1358 - ReplaceComparisonOperator < -> <=
[MASTER] 02:32:03.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1744: weka.experiment.ResultMatrix.getRowHidden(I)Z:1358 - ReplaceComparisonOperator >= -> -1
[MASTER] 02:32:03.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3115: weka.experiment.ResultMatrix.getDisplayCol(I)I:1631 - ReplaceComparisonOperator < -> !=
[MASTER] 02:32:03.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3116: weka.experiment.ResultMatrix.getDisplayCol(I)I:1631 - ReplaceComparisonOperator < -> <=
[MASTER] 02:32:03.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3131: weka.experiment.ResultMatrix.getDisplayCol(I)I:1631 - ReplaceComparisonOperator >= -> -1
[MASTER] 02:32:03.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3134: weka.experiment.ResultMatrix.getDisplayCol(I)I:1632 - ReplaceComparisonOperator != null -> = null
[MASTER] 02:32:03.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3296: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> -1
[MASTER] 02:32:03.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3298: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> <
[MASTER] 02:32:03.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3320: weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;:1679 - ReplaceComparisonOperator <= -> ==
[MASTER] 02:32:03.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3743: weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;:1781 - ReplaceComparisonOperator == -> !=
[MASTER] 02:32:03.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3757: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1813 - ReplaceComparisonOperator == -> !=
[MASTER] 02:32:03.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3758: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1816 - ReplaceComparisonOperator == -> !=
[MASTER] 02:32:03.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3798: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> 0
[MASTER] 02:32:03.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3799: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> 1
[MASTER] 02:32:03.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3800: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> -1
[MASTER] 02:32:03.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3801: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceConstant - 2 -> 3
[MASTER] 02:32:03.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3802: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> +
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3803: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> %
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3804: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> -
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3805: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1819 - ReplaceArithmeticOperator * -> /
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3821: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> 0
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3822: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> 1
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3823: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> -1
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3824: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 2 -> 3
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3825: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> %
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3826: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> -
[MASTER] 02:32:03.837 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3827: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> *
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3828: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> /
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3844: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceConstant - 1 -> 0
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3845: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> %
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3846: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> -
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3847: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> *
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3848: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1821 - ReplaceArithmeticOperator + -> /
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3849: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1824 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3850: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1824 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3851: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1824 - ReplaceConstant - Dataset -> 
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3852: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1825 - ReplaceConstant - 1 -> 0
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3853: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1826 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3871: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1826 - ReplaceComparisonOperator >= -> -1
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3909: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1828 - ReplaceComparisonOperator == -> !=
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3910: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1831 - ReplaceConstant - 0 -> 1
[MASTER] 02:32:03.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 3951: weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;:1835 - ReplaceComparisonOperator == -> !=
[MASTER] 02:32:03.855 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;
[MASTER] 02:32:03.858 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;
[MASTER] 02:32:03.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.clear()V: root-Branch in context: weka.experiment.ResultMatrix:clear()V
[MASTER] 02:32:03.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I3 Branch 116 IFLE L1679 - false in context: 
[MASTER] 02:32:03.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I7 Branch 117 IF_ICMPLE L1679 - true in context: 
[MASTER] 02:32:03.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;: I3 Branch 116 IFLE L1679 - true in context: 
[MASTER] 02:32:03.896 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I109 Branch 135 IFEQ L1835 - true in context: 
[MASTER] 02:32:03.896 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: I7 Branch 46 IFLT L1249 - false in context: weka.experiment.ResultMatrix:getColName(I)Ljava/lang/String;
[MASTER] 02:32:03.896 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I82 Branch 134 IFEQ L1828 - true in context: 
[MASTER] 02:32:03.896 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.removeFilterName(Ljava/lang/String;)Ljava/lang/String;: I4 Branch 130 IFEQ L1781 - true in context: 
[MASTER] 02:32:03.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I70 Branch 133 IF_ICMPGE L1826 - false in context: 
[MASTER] 02:32:03.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I9 Branch 131 IFEQ L1813 - true in context: 
[MASTER] 02:32:03.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getColName(I)Ljava/lang/String;: I11 Branch 47 IF_ICMPGE L1249 - true in context: weka.experiment.ResultMatrix:getColName(I)Ljava/lang/String;
[MASTER] 02:32:03.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;: I22 Branch 132 IFEQ L1816 - true in context: 
* Search finished after 204s and 243 generations, 98773 statements, best individual has fitness: 3088.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 278
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 260
* Number of covered goals: 215
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 278
* Generated 93 tests with total length 304
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 73%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 348s and 49 generations, 38938 statements, best individual has fitness: 2216.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 633
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 420
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 617
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 112
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 397
* Generated 204 tests with total length 3549
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 02:43:24.273 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6679791666666667% of time used, but only 57/204 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
[MASTER] 02:45:09.359 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5238
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5243
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5245
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5246
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:56:36.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:56:36.385 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:56:36.400 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:56:36.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:56:36.662 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:56:36.664 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 02:56:37.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:56:37.932 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:56:37.941 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 02:56:37.969 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:56:37.989 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:56:37.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 02:56:47.385 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:56:47.399 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:56:47.400 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:56:47.407 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 02:56:49.379 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 108
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 148
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 151
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 157
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 166
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 169
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 172
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 175
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 178
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 181
[MASTER] 02:56:49.386 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 184
[MASTER] 02:56:49.390 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch
[MASTER] 02:56:49.447 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 02:56:49.449 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 02:56:49.457 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:<init>()V
[MASTER] 02:56:51.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 724
[MASTER] 02:56:51.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 725
[MASTER] 02:56:51.071 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch
[MASTER] 02:56:51.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 02:56:51.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 02:56:51.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 291: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_useStopList
[MASTER] 02:56:51.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 02:56:51.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 293: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp Negation of norm
[MASTER] 02:56:51.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 294: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC 1 norm
[MASTER] 02:56:51.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 295: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC -1 norm
[MASTER] 02:56:51.114 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 02:56:51.115 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 02:56:51.117 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setNormalizeDocLength(Z)V
[MASTER] 02:56:52.125 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:57:01.293 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:57:01.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:57:01.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:57:01.873 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:57:02.606 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:57:02.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 02:57:04.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 02:57:04.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 02:57:04.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 02:57:04.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 02:57:04.989 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 02:57:04.989 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 02:57:04.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 02:57:04.991 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 02:57:04.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 02:57:05.204 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 02:57:05.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
[MASTER] 02:57:06.232 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 02:57:12.110 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 02:57:12.110 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 02:57:14.686 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 02:57:46.984 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 02:59:50.017 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:isDirectory()Z:False
[MASTER] 02:59:50.018 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;:NonNull:java.io.File:isFile()Z:True
* Search finished after 221s and 128 generations, 67549 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 20 tests with total length 185
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Search finished after 224s and 118 generations, 64291 statements, best individual has fitness: 14768.0
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 820
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 809
* Number of covered goals: 369
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 269
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 351
* Generated 173 tests with total length 1966
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 291s and 369 generations, 183394 statements, best individual has fitness: 3936.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 370
* Number of covered goals: 269
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 242
* Number of covered goals: 150
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 713
* Number of covered goals: 541
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 242
* Number of covered goals: 150
* Generated 93 tests with total length 683
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 325s and 315 generations, 200742 statements, best individual has fitness: 1424.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 306
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 194
* Number of covered goals: 166
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 443
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 112
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 163
* Generated 88 tests with total length 813
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 03:04:29.946 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:04:30.787 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:04:43.852 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 03:04:43.853 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("yZ6Is$& 1lG:1g~", arrayList0, 9);
Attribute attribute0 = new Attribute("yZ6Is$& 1lG:1g~", instances0);
Attribute attribute1 = attribute0.copy("@data");
arrayList0.add(attribute1);
Instances instances1 = new Instances("@end", arrayList0, 1);
discretize0.setInputFormat(instances1);

[MASTER] 03:04:57.360 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 03:04:57.362 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute("6dR&");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("numeric", arrayList0, 0);
Attribute attribute1 = new Attribute("@attribute", instances0);
arrayList0.add(attribute1);
Instances instances1 = new Instances(".* line", arrayList0, 1);
discretize0.setInputFormat(instances1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 03:05:33.914 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1575342333876/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1575342333876/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.java]]
[MASTER] 03:05:33.915 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:05:33.915 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:05:33.918 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 03:05:33.919 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 03:05:33.920 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1575342333876/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 03:05:33 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.BinarySparseInstance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_16_tmp__ESTest extends NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=0.42857142857142855
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
34:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(19);
35:       try { 
36:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
37:         fail("Expecting exception: RuntimeException");
38:       
39:       } catch(RuntimeException e) {
40:          //
41:          // DenseInstance doesn't have access to a dataset!
42:          //
43:          verifyException("weka.core.AbstractInstance", e);
44:       }
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_16_1575342333876/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 03:05:33 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
98:       "weka.core.DenseInstance",
99:       "weka.core.stemmers.Stemmer",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.filters.SimpleFilter",
103:       "weka.filters.SimpleStreamFilter",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.classifiers.meta.AdaBoostM1",
111:       "weka.core.CustomDisplayStringProvider",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
121:       "weka.core.AttributeLocator",
122:       "weka.core.SerializedObject",
123:       "weka.clusterers.UpdateableClusterer",
124:       "weka.core.Summarizable",
125:       "weka.core.AdditionalMeasureProducer",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.OptionHandlerJavadoc",
128:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
129:       "weka.core.SingleIndex",
130:       "weka.core.CapabilitiesHandler",
131:       "weka.core.AbstractInstance",
132:       "weka.core.scripting.JythonObject",
133:       "weka.core.SelectedTag",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.estimators.DiscreteEstimator",
136:       "weka.core.Version",
137:       "weka.filters.AllFilter",
138:       "weka.core.Tag",
139:       "weka.classifiers.IteratedSingleClassifierEnhancer",
140:       "weka.classifiers.AbstractClassifier",
141:       "weka.core.FindWithCapabilities",
142:       "weka.core.OptionHandler",
143:       "weka.core.WekaException",
144:       "weka.filters.StreamableFilter",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.Capabilities$Capability",
148:       "weka.core.SparseInstance",
149:       "org.pentaho.packageManagement.PackageManager",
150:       "weka.core.tokenizers.WordTokenizer",
151:       "weka.classifiers.misc.SerializedClassifier",
152:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
153:       "weka.core.stemmers.SnowballStemmer",
154:       "weka.classifiers.Evaluation",
155:       "weka.core.WekaPackageManager",
156:       "weka.core.TechnicalInformationHandler",
157:       "weka.classifiers.functions.SimpleLogistic",
158:       "weka.core.neighboursearch.LinearNNSearch",
159:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
160:       "weka.core.Option",
161:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
162:       "weka.core.neighboursearch.PerformanceStats",
163:       "weka.estimators.NormalEstimator",
164:       "weka.filters.Sourcable",
165:       "weka.core.Attribute",
166:       "weka.core.Stopwords",
167:       "weka.core.tokenizers.AlphabeticTokenizer",
168:       "weka.core.FastVector",
169:       "weka.core.UnassignedDatasetException",
170:       "weka.classifiers.RandomizableClassifier",
171:       "weka.classifiers.SingleClassifierEnhancer",
172:       "weka.core.RevisionUtils",
173:       "weka.core.Instance",
174:       "weka.estimators.Estimator",
175:       "weka.core.ProtectedProperties",
176:       "weka.core.StringLocator",
177:       "weka.core.AttributeStats",
178:       "weka.filters.MultiFilter",
179:       "weka.core.WeightedInstancesHandler",
180:       "weka.core.neighboursearch.NearestNeighbourSearch",
181:       "weka.classifiers.trees.DecisionStump",
182:       "weka.core.Randomizable",
183:       "weka.core.Javadoc",
184:       "weka.core.Instances",
185:       "weka.classifiers.bayes.NaiveBayesMultinomial",
186:       "weka.core.UnassignedClassException",
187:       "weka.classifiers.rules.ZeroR",
188:       "weka.core.TechnicalInformation",
189:       "weka.core.UnsupportedAttributeTypeException",
190:       "weka.classifiers.Sourcable",
191:       "weka.core.RevisionHandler",
192:       "weka.classifiers.evaluation.output.prediction.PlainText",
193:       "weka.core.xml.XMLSerialization",
194:       "weka.classifiers.xml.XMLClassifier",
195:       "weka.filters.Filter"
196:     );
197:   } 
198: 
199:   private static void resetClasses() {
200:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
201: 
202:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
203:       "weka.classifiers.AbstractClassifier",
204:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
205:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
206:       "weka.core.Capabilities$Capability",
207:       "weka.core.tokenizers.Tokenizer",
208:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
209:       "weka.core.tokenizers.WordTokenizer",
210:       "weka.core.stemmers.NullStemmer",
211:       "weka.core.Utils",
212:       "weka.core.AbstractInstance",
213:       "weka.core.SparseInstance",
214:       "weka.classifiers.bayes.NaiveBayes",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Option",
217:       "weka.core.Capabilities",
218:       "org.pentaho.packageManagement.PackageManager",
219:       "org.pentaho.packageManagement.DefaultPackageManager",
220:       "weka.core.Version",
221:       "weka.core.Environment",
222:       "weka.core.WekaPackageManager",
223:       "weka.core.BinarySparseInstance",
224:       "weka.core.UnassignedDatasetException",
225:       "weka.core.stemmers.SnowballStemmer",
226:       "weka.core.Tag",
227:       "weka.classifiers.lazy.IBk",
228:       "weka.core.neighboursearch.NearestNeighbourSearch",
229:       "weka.core.neighboursearch.LinearNNSearch",
230:       "weka.core.NormalizableDistance",
231:       "weka.core.EuclideanDistance",
232:       "weka.core.Range",
233:       "weka.core.neighboursearch.CoverTree",
234:       "weka.core.Instances",
235:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
237:       "weka.attributeSelection.ASEvaluation",
238:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
239:       "weka.attributeSelection.PrincipalComponents",
240:       "weka.core.TestInstances",
241:       "weka.core.Attribute",
242:       "weka.core.ProtectedProperties",
243:       "weka.core.DenseInstance",
244:       "weka.core.tokenizers.NGramTokenizer",
245:       "weka.classifiers.bayes.BayesNet",
246:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
247:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
248:       "weka.classifiers.bayes.net.search.local.K2",
249:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
250:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
251:       "weka.classifiers.functions.SimpleLogistic",
252:       "weka.core.RevisionUtils",
253:       "weka.core.TechnicalInformation",
254:       "weka.core.TechnicalInformation$Type",
255:       "weka.core.TechnicalInformation$Field",
256:       "weka.core.tokenizers.AlphabeticTokenizer",
257:       "weka.core.SerializedObject",
258:       "weka.classifiers.RandomizableClassifier",
259:       "weka.classifiers.functions.SGDText",
260:       "weka.core.neighboursearch.BallTree",
261:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
262:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
263:       "weka.core.neighboursearch.balltrees.BallSplitter",
264:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
265:       "weka.core.stemmers.LovinsStemmer",
266:       "weka.core.stemmers.IteratedLovinsStemmer",
267:       "weka.classifiers.SingleClassifierEnhancer",
268:       "weka.classifiers.misc.InputMappedClassifier",
269:       "weka.classifiers.rules.ZeroR",
270:       "weka.filters.Filter",
271:       "weka.filters.supervised.attribute.Discretize",
272:       "weka.core.Stopwords",
273:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
274:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
275:       "weka.core.neighboursearch.balltrees.BallNode",
276:       "weka.core.neighboursearch.KDTree",
277:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
278:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
279:       "weka.classifiers.functions.VotedPerceptron",
280:       "weka.classifiers.misc.SerializedClassifier",
281:       "weka.classifiers.trees.DecisionStump",
282:       "weka.classifiers.bayes.net.BIFReader",
283:       "weka.classifiers.functions.supportVector.Kernel",
284:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
285:       "weka.classifiers.IteratedSingleClassifierEnhancer",
286:       "weka.classifiers.meta.AdditiveRegression",
287:       "weka.core.WekaException",
288:       "weka.core.UnsupportedAttributeTypeException",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.bayes.NaiveBayesMultinomial",
291:       "weka.classifiers.lazy.LWL",
292:       "weka.core.WekaEnumeration",
293:       "weka.attributeSelection.InfoGainAttributeEval",
294:       "weka.core.stemmers.Stemming",
295:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
296:       "weka.classifiers.meta.CostSensitiveClassifier",
297:       "weka.classifiers.CostMatrix",
298:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
299:       "weka.classifiers.functions.supportVector.CachedKernel",
300:       "weka.classifiers.functions.supportVector.RBFKernel",
301:       "weka.estimators.Estimator",
302:       "weka.estimators.DiscreteEstimator",
303:       "weka.core.UnassignedClassException",
304:       "weka.classifiers.lazy.KStar",
305:       "weka.classifiers.trees.J48",
306:       "weka.classifiers.trees.j48.ClassifierTree",
307:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
308:       "weka.classifiers.functions.SimpleLinearRegression",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.functions.LinearRegression",
311:       "weka.classifiers.functions.SMO",
312:       "weka.classifiers.functions.supportVector.PolyKernel",
313:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
314:       "weka.filters.SimpleFilter",
315:       "weka.filters.SimpleStreamFilter",
316:       "weka.filters.MultiFilter",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.functions.Logistic",
319:       "weka.core.matrix.Matrix",
320:       "weka.estimators.MahalanobisEstimator",
321:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
322:       "weka.classifiers.meta.LogitBoost",
323:       "weka.classifiers.functions.SGD",
324:       "weka.attributeSelection.OneRAttributeEval",
325:       "weka.classifiers.meta.MultiClassClassifier",
326:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
327:       "weka.classifiers.functions.MultilayerPerceptron",
328:       "weka.core.FastVector",
329:       "weka.filters.unsupervised.attribute.NominalToBinary",
330:       "weka.classifiers.functions.neural.SigmoidUnit",
331:       "weka.classifiers.functions.neural.LinearUnit",
332:       "weka.attributeSelection.WrapperSubsetEval",
333:       "weka.classifiers.meta.ClassificationViaRegression",
334:       "weka.classifiers.trees.m5.M5Base",
335:       "weka.classifiers.trees.M5P",
336:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
337:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
338:       "weka.classifiers.meta.RandomCommittee",
339:       "weka.classifiers.trees.RandomTree",
340:       "weka.attributeSelection.GainRatioAttributeEval",
341:       "weka.classifiers.rules.PART",
342:       "weka.classifiers.rules.part.MakeDecList",
343:       "weka.core.FindWithCapabilities",
344:       "weka.core.SingleIndex",
345:       "weka.classifiers.meta.AttributeSelectedClassifier",
346:       "weka.attributeSelection.CfsSubsetEval",
347:       "weka.attributeSelection.ASSearch",
348:       "weka.attributeSelection.BestFirst",
349:       "weka.classifiers.rules.OneR",
350:       "weka.classifiers.trees.RandomForest",
351:       "weka.classifiers.functions.supportVector.StringKernel",
352:       "weka.core.Attribute$1",
353:       "weka.classifiers.functions.GaussianProcesses",
354:       "weka.classifiers.MultipleClassifiersCombiner",
355:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
356:       "weka.classifiers.meta.MultiScheme",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.AttributeSelection",
360:       "weka.attributeSelection.GreedyStepwise",
361:       "weka.estimators.PoissonEstimator",
362:       "weka.estimators.KernelEstimator",
363:       "weka.classifiers.meta.Vote",
364:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
365:       "weka.attributeSelection.ReliefFAttributeEval",
366:       "weka.classifiers.rules.JRip",
367:       "weka.classifiers.trees.REPTree",
368:       "weka.core.ClassDiscovery",
369:       "weka.attributeSelection.CorrelationAttributeEval",
370:       "weka.classifiers.functions.SMOreg",
371:       "weka.classifiers.functions.supportVector.RegOptimizer",
372:       "weka.classifiers.functions.supportVector.RegSMO",
373:       "weka.classifiers.functions.supportVector.RegSMOImproved",
374:       "weka.estimators.NormalEstimator",
375:       "weka.core.SerializationHelper",
376:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
377:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
378:       "weka.classifiers.meta.Stacking",
379:       "weka.classifiers.trees.LMT",
380:       "weka.classifiers.functions.supportVector.Puk",
381:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
382:       "weka.classifiers.rules.M5Rules",
383:       "weka.classifiers.meta.CVParameterSelection",
384:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
385:       "weka.core.SelectedTag",
386:       "weka.core.ManhattanDistance",
387:       "weka.core.MinkowskiDistance",
388:       "weka.core.Javadoc",
389:       "weka.core.OptionHandlerJavadoc",
390:       "weka.core.Check",
391:       "weka.core.CheckOptionHandler",
392:       "weka.core.ClassCache",
393:       "weka.core.AllJavadoc",
394:       "weka.core.CheckGOE",
395:       "weka.classifiers.rules.DecisionTable",
396:       "weka.core.AttributeStats",
397:       "weka.classifiers.meta.AdaBoostM1",
398:       "weka.classifiers.meta.RegressionByDiscretization",
399:       "weka.filters.unsupervised.attribute.Discretize",
400:       "weka.classifiers.meta.Bagging",
401:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
402:       "weka.core.Queue",
403:       "weka.core.AttributeLocator",
404:       "weka.core.StringLocator",
405:       "weka.core.RelationalLocator",
406:       "weka.core.Queue$QueueNode",
407:       "weka.filters.unsupervised.attribute.RemoveUseless",
408:       "weka.experiment.Stats",
409:       "weka.filters.unsupervised.attribute.Remove",
410:       "weka.classifiers.functions.Logistic$OptObject",
411:       "weka.core.Optimization",
412:       "weka.classifiers.functions.Logistic$OptEng",
413:       "weka.core.Optimization$DynamicIntArray",
414:       "weka.core.neighboursearch.PerformanceStats",
415:       "weka.core.neighboursearch.TreePerformanceStats"
416:     );
417:   }
418: }

[MASTER] 03:05:33.920 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(19);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 03:05:39.499 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 03:05:39.600 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 03:06:28.898 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 03:07:13.994 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_103_1575342433965/weka/classifiers/Evaluation_103_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_103_1575342433965/weka/classifiers/Evaluation_103_tmp__ESTest_scaffolding.java]]
[MASTER] 03:07:13.994 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:07:13.994 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:07:13.998 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_103_tmp__ESTest: 39
[MASTER] 03:07:13.999 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_103_1575342433965/weka/classifiers/Evaluation_103_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 03:07:13 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.evosuite.runtime.testdata.EvoSuiteFile;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.Evaluation;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: import weka.core.converters.CSVLoader;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class Evaluation_103_tmp__ESTest extends Evaluation_103_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.1746286620414268
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       TestInstances testInstances0 = new TestInstances();
30:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
31:       Instances instances0 = testInstances0.generate(" ");
32:       Evaluation evaluation0 = new Evaluation(instances0);
33:       Evaluation evaluation1 = new Evaluation(instances0);
34:       evaluation0.toMatrixString(".bsi");
35:       evaluation1.useNoPriors();
36:       CSVLoader cSVLoader0 = new CSVLoader();
37:       evaluation1.SFMeanPriorEntropy();
38:       double double0 = evaluation0.m_SumSqrErr;
39:       assertNotEquals(double0, double1, 0.01);
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_103_1575342433965/weka/classifiers/Evaluation_103_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 03:07:13 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_103_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_103_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
91:       "weka.core.converters.TextDirectoryLoader",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.filters.UnsupervisedFilter",
95:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
96:       "weka.core.DenseInstance",
97:       "weka.classifiers.trees.J48",
98:       "weka.core.converters.DatabaseConverter",
99:       "weka.classifiers.functions.SimpleLinearRegression",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "weka.estimators.UnivariateIntervalEstimator",
102:       "org.bounce.net.DefaultAuthenticator",
103:       "weka.core.converters.JSONLoader",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.core.neighboursearch.KDTree",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.CustomDisplayStringProvider",
109:       "weka.core.NormalizableDistance",
110:       "weka.classifiers.functions.SMOreg",
111:       "weka.core.TechnicalInformation$Type",
112:       "weka.core.Copyable",
113:       "weka.core.BinarySparseInstance",
114:       "weka.filters.supervised.attribute.NominalToBinary",
115:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
116:       "weka.core.SerializedObject",
117:       "weka.clusterers.UpdateableClusterer",
118:       "weka.core.AdditionalMeasureProducer",
119:       "weka.core.neighboursearch.balltrees.BallNode",
120:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
121:       "weka.core.Optimization",
122:       "weka.experiment.InstanceQuery",
123:       "weka.classifiers.functions.supportVector.RegOptimizer",
124:       "weka.classifiers.misc.InputMappedClassifier",
125:       "weka.experiment.ResultProducer",
126:       "weka.classifiers.functions.neural.NeuralConnection",
127:       "weka.core.Version",
128:       "weka.classifiers.functions.supportVector.Puk",
129:       "weka.experiment.InstanceQueryAdapter",
130:       "weka.classifiers.AbstractClassifier",
131:       "weka.core.converters.ArffLoader",
132:       "weka.filters.unsupervised.attribute.Center",
133:       "weka.core.FindWithCapabilities",
134:       "weka.core.WekaException",
135:       "weka.classifiers.functions.neural.NeuralNode",
136:       "weka.filters.StreamableFilter",
137:       "weka.core.Attribute$1",
138:       "weka.core.PartitionGenerator",
139:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
140:       "weka.core.SparseInstance",
141:       "weka.estimators.PoissonEstimator",
142:       "weka.classifiers.trees.j48.ClassifierSplitModel",
143:       "weka.attributeSelection.AttributeTransformer",
144:       "weka.classifiers.trees.j48.ClassifierTree",
145:       "weka.classifiers.misc.SerializedClassifier",
146:       "weka.core.tokenizers.WordTokenizer",
147:       "weka.classifiers.functions.MultilayerPerceptron",
148:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
149:       "weka.attributeSelection.PrincipalComponents",
150:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
151:       "weka.classifiers.trees.j48.PruneableClassifierTree",
152:       "weka.classifiers.Evaluation",
153:       "weka.core.converters.CSVLoader",
154:       "weka.classifiers.functions.supportVector.Kernel",
155:       "weka.classifiers.functions.neural.LinearUnit",
156:       "weka.classifiers.evaluation.ThresholdCurve",
157:       "weka.core.converters.URLSourcedLoader",
158:       "weka.core.converters.FileSourcedConverter",
159:       "weka.core.neighboursearch.LinearNNSearch",
160:       "weka.core.neighboursearch.PerformanceStats",
161:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
162:       "weka.estimators.UnivariateKernelEstimator",
163:       "weka.core.UnassignedDatasetException",
164:       "weka.classifiers.RandomizableClassifier",
165:       "weka.core.RevisionUtils",
166:       "weka.core.converters.Loader",
167:       "weka.classifiers.functions.supportVector.RegSMO",
168:       "weka.estimators.Estimator",
169:       "weka.core.ProtectedProperties",
170:       "weka.core.StringLocator",
171:       "weka.core.AttributeStats",
172:       "weka.classifiers.trees.DecisionStump",
173:       "weka.estimators.UnivariateQuantileEstimator",
174:       "weka.filters.unsupervised.attribute.Remove",
175:       "weka.core.Randomizable",
176:       "weka.classifiers.trees.j48.NoSplit",
177:       "weka.core.EuclideanDistance",
178:       "weka.core.Instances",
179:       "weka.core.converters.AbstractFileLoader",
180:       "weka.classifiers.bayes.NaiveBayesMultinomial",
181:       "weka.core.converters.ConverterUtils$DataSink",
182:       "weka.core.converters.DatabaseConnection",
183:       "weka.core.TechnicalInformation",
184:       "weka.core.UnsupportedAttributeTypeException",
185:       "weka.classifiers.functions.Logistic$OptEngCG",
186:       "weka.core.RevisionHandler",
187:       "weka.experiment.Stats",
188:       "weka.core.converters.ConverterUtils$DataSource",
189:       "weka.classifiers.xml.XMLClassifier",
190:       "weka.filters.Filter",
191:       "weka.filters.supervised.attribute.Discretize",
192:       "weka.core.TestInstances",
193:       "weka.core.converters.ConverterUtils",
194:       "weka.core.DistanceFunction",
195:       "weka.attributeSelection.AttributeEvaluator",
196:       "org.pentaho.packageManagement.Package",
197:       "weka.classifiers.trees.m5.M5Base",
198:       "weka.attributeSelection.SubsetEvaluator",
199:       "weka.classifiers.CostMatrix",
200:       "weka.core.logging.Logger$Level",
201:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
202:       "weka.core.ConjugateGradientOptimization",
203:       "weka.core.stemmers.Stemmer",
204:       "weka.core.converters.IncrementalConverter",
205:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
206:       "weka.classifiers.meta.LogitBoost",
207:       "weka.classifiers.bayes.NaiveBayes",
208:       "weka.estimators.Estimator$Builder",
209:       "weka.core.EnvironmentHandler",
210:       "weka.classifiers.trees.j48.C45ModelSelection",
211:       "weka.classifiers.functions.Logistic",
212:       "weka.core.RelationalLocator",
213:       "weka.core.Utils",
214:       "weka.core.tokenizers.Tokenizer",
215:       "weka.core.NoSupportForMissingValuesException",
216:       "weka.classifiers.UpdateableClassifier",
217:       "weka.core.MultiInstanceCapabilitiesHandler",
218:       "weka.core.Capabilities",
219:       "weka.core.AttributeLocator",
220:       "weka.core.converters.SVMLightLoader",
221:       "weka.classifiers.functions.supportVector.CachedKernel",
222:       "weka.classifiers.meta.RegressionByDiscretization",
223:       "weka.core.Summarizable",
224:       "weka.classifiers.trees.j48.ModelSelection",
225:       "org.pentaho.packageManagement.PackageManager$1",
226:       "weka.core.Drawable",
227:       "weka.classifiers.ConditionalDensityEstimator",
228:       "weka.core.SingleIndex",
229:       "weka.core.CapabilitiesHandler",
230:       "weka.classifiers.trees.REPTree",
231:       "weka.attributeSelection.ASEvaluation",
232:       "weka.core.AbstractInstance",
233:       "weka.core.converters.LibSVMLoader",
234:       "weka.core.scripting.JythonObject",
235:       "weka.core.SelectedTag",
236:       "org.pentaho.packageManagement.DefaultPackage",
237:       "weka.estimators.DiscreteEstimator",
238:       "weka.classifiers.bayes.NaiveBayesUpdateable",
239:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
240:       "weka.classifiers.bayes.BayesNet",
241:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
242:       "weka.classifiers.meta.AdditiveRegression",
243:       "weka.core.converters.AbstractLoader",
244:       "weka.filters.AllFilter",
245:       "weka.filters.unsupervised.attribute.RemoveUseless",
246:       "weka.core.converters.BatchConverter",
247:       "weka.core.Tag",
248:       "weka.classifiers.IteratedSingleClassifierEnhancer",
249:       "weka.classifiers.trees.j48.BinC45ModelSelection",
250:       "weka.estimators.UnivariateDensityEstimator",
251:       "weka.core.OptionHandler",
252:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
253:       "weka.classifiers.trees.REPTree$Tree",
254:       "weka.core.Range",
255:       "weka.attributeSelection.WrapperSubsetEval",
256:       "weka.core.scripting.JythonSerializableObject",
257:       "weka.classifiers.Classifier",
258:       "weka.core.Capabilities$Capability",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "weka.core.WekaEnumeration",
261:       "weka.classifiers.trees.M5P",
262:       "weka.classifiers.meta.Bagging",
263:       "weka.core.WekaPackageManager",
264:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
265:       "weka.filters.SupervisedFilter",
266:       "weka.core.TechnicalInformationHandler",
267:       "weka.experiment.DatabaseUtils",
268:       "weka.classifiers.functions.SimpleLogistic",
269:       "weka.classifiers.lazy.LWL",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
272:       "weka.core.Option",
273:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
274:       "weka.classifiers.functions.neural.NeuralMethod",
275:       "weka.filters.Sourcable",
276:       "weka.core.Attribute",
277:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
278:       "weka.classifiers.meta.MultiScheme",
279:       "weka.core.FastVector",
280:       "weka.classifiers.MultipleClassifiersCombiner",
281:       "weka.core.BatchPredictor",
282:       "weka.classifiers.functions.supportVector.RegSMOImproved",
283:       "weka.classifiers.functions.neural.SigmoidUnit",
284:       "weka.classifiers.trees.RandomTree",
285:       "weka.classifiers.SingleClassifierEnhancer",
286:       "weka.core.Instance",
287:       "weka.classifiers.functions.supportVector.PolyKernel",
288:       "weka.classifiers.IntervalEstimator",
289:       "weka.core.Matchable",
290:       "weka.core.WeightedInstancesHandler",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.classifiers.functions.GaussianProcesses",
293:       "weka.core.TechnicalInformation$Field",
294:       "weka.filters.unsupervised.attribute.Discretize",
295:       "weka.core.converters.DatabaseLoader",
296:       "weka.filters.unsupervised.attribute.Normalize",
297:       "weka.core.UnassignedClassException",
298:       "weka.classifiers.rules.ZeroR",
299:       "weka.filters.unsupervised.attribute.Standardize",
300:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
301:       "weka.classifiers.Sourcable",
302:       "weka.classifiers.functions.Logistic$OptEng",
303:       "weka.classifiers.evaluation.output.prediction.PlainText",
304:       "weka.core.xml.XMLSerialization",
305:       "weka.core.neighboursearch.TreePerformanceStats",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
307:       "weka.classifiers.lazy.IBk"
308:     );
309:   } 
310: 
311:   private static void resetClasses() {
312:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_103_tmp__ESTest_scaffolding.class.getClassLoader()); 
313: 
314:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
315:       "weka.classifiers.Evaluation",
316:       "weka.core.pmml.PMMLFactory$ModelType",
317:       "weka.core.pmml.PMMLFactory$1",
318:       "weka.core.xml.KOML",
319:       "weka.core.Version",
320:       "weka.core.Utils",
321:       "weka.classifiers.AbstractClassifier",
322:       "weka.classifiers.SingleClassifierEnhancer",
323:       "weka.classifiers.IteratedSingleClassifierEnhancer",
324:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
325:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
326:       "weka.classifiers.meta.Bagging",
327:       "weka.classifiers.rules.ZeroR",
328:       "weka.classifiers.trees.REPTree",
329:       "weka.core.Option",
330:       "weka.core.TechnicalInformation",
331:       "weka.core.TechnicalInformation$Type",
332:       "weka.core.TechnicalInformation$Field",
333:       "weka.core.converters.AbstractLoader",
334:       "weka.core.converters.AbstractFileLoader",
335:       "weka.core.converters.LibSVMLoader",
336:       "weka.core.converters.SVMLightLoader",
337:       "weka.core.neighboursearch.NearestNeighbourSearch",
338:       "weka.core.neighboursearch.CoverTree",
339:       "weka.core.NormalizableDistance",
340:       "weka.core.EuclideanDistance",
341:       "weka.core.Range",
342:       "weka.attributeSelection.ASEvaluation",
343:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
344:       "weka.attributeSelection.PrincipalComponents",
345:       "weka.core.AbstractInstance",
346:       "weka.core.SparseInstance",
347:       "weka.core.BinarySparseInstance",
348:       "weka.core.Instances",
349:       "weka.core.converters.SerializedInstancesLoader",
350:       "weka.core.converters.MatlabLoader",
351:       "weka.core.converters.ConverterUtils$DataSource",
352:       "weka.core.converters.ArffLoader$ArffReader",
353:       "weka.classifiers.misc.InputMappedClassifier",
354:       "weka.core.converters.JSONLoader",
355:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
356:       "weka.classifiers.evaluation.output.prediction.Null",
357:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
358:       "weka.core.Tag",
359:       "weka.classifiers.meta.CostSensitiveClassifier",
360:       "weka.classifiers.CostMatrix",
361:       "weka.core.xml.XMLDocument",
362:       "weka.core.xml.XMLInstances",
363:       "weka.core.converters.XRFFLoader",
364:       "weka.classifiers.MultipleClassifiersCombiner",
365:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.core.SerializedObject",
368:       "weka.core.converters.DatabaseLoader",
369:       "weka.core.Environment",
370:       "weka.experiment.DatabaseUtils",
371:       "weka.core.converters.DatabaseConnection",
372:       "org.pentaho.packageManagement.PackageManager",
373:       "org.pentaho.packageManagement.DefaultPackageManager",
374:       "weka.core.WekaPackageManager",
375:       "weka.experiment.InstanceQuery",
376:       "weka.core.UnassignedDatasetException",
377:       "weka.core.converters.C45Loader",
378:       "weka.core.converters.TextDirectoryLoader",
379:       "weka.core.converters.ArffLoader",
380:       "weka.core.TestInstances",
381:       "weka.classifiers.bayes.BayesNet",
382:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
383:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
384:       "weka.classifiers.bayes.net.search.local.K2",
385:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
386:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
387:       "weka.classifiers.lazy.IBk",
388:       "weka.core.neighboursearch.LinearNNSearch",
389:       "weka.classifiers.evaluation.output.prediction.CSV",
390:       "weka.clusterers.AbstractClusterer",
391:       "weka.clusterers.RandomizableClusterer",
392:       "weka.clusterers.SimpleKMeans",
393:       "weka.core.Attribute",
394:       "weka.core.ProtectedProperties",
395:       "weka.classifiers.meta.AdditiveRegression",
396:       "weka.classifiers.trees.DecisionStump",
397:       "weka.classifiers.misc.SerializedClassifier",
398:       "weka.core.converters.CSVLoader",
399:       "weka.gui.GenericPropertiesCreator",
400:       "weka.gui.GenericObjectEditor",
401:       "weka.core.converters.ConverterUtils",
402:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
403:       "weka.classifiers.meta.LogitBoost",
404:       "weka.core.Capabilities",
405:       "weka.core.Capabilities$Capability",
406:       "weka.core.neighboursearch.balltrees.BallNode",
407:       "weka.core.RevisionUtils",
408:       "weka.core.DenseInstance",
409:       "weka.classifiers.functions.VotedPerceptron",
410:       "weka.classifiers.pmml.consumer.PMMLClassifier",
411:       "weka.classifiers.pmml.consumer.NeuralNetwork",
412:       "weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction",
413:       "weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction",
414:       "weka.classifiers.pmml.consumer.NeuralNetwork$Normalization",
415:       "weka.classifiers.rules.DecisionTable",
416:       "weka.attributeSelection.ASSearch",
417:       "weka.attributeSelection.BestFirst",
418:       "weka.classifiers.meta.AdaBoostM1",
419:       "weka.classifiers.trees.J48",
420:       "weka.core.FindWithCapabilities",
421:       "weka.core.SingleIndex",
422:       "weka.classifiers.meta.RegressionByDiscretization",
423:       "weka.filters.Filter",
424:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
425:       "weka.filters.unsupervised.attribute.Discretize",
426:       "weka.core.SelectedTag",
427:       "weka.classifiers.rules.PART",
428:       "weka.classifiers.functions.SimpleLogistic",
429:       "weka.core.WekaEnumeration",
430:       "weka.core.Attribute$1",
431:       "weka.experiment.Stats",
432:       "weka.filters.AllFilter",
433:       "weka.classifiers.meta.CVParameterSelection",
434:       "weka.core.FastVector",
435:       "weka.core.matrix.Matrix",
436:       "weka.classifiers.evaluation.output.prediction.XML",
437:       "weka.classifiers.meta.FilteredClassifier",
438:       "weka.filters.supervised.attribute.AttributeSelection",
439:       "weka.attributeSelection.AttributeSelection",
440:       "weka.attributeSelection.CfsSubsetEval",
441:       "weka.attributeSelection.GreedyStepwise",
442:       "weka.filters.supervised.attribute.Discretize",
443:       "weka.classifiers.bayes.NaiveBayes",
444:       "weka.classifiers.meta.AttributeSelectedClassifier",
445:       "weka.attributeSelection.WrapperSubsetEval",
446:       "weka.classifiers.lazy.LWL",
447:       "weka.core.SerializationHelper",
448:       "weka.classifiers.bayes.NaiveBayesUpdateable",
449:       "weka.core.UnassignedClassException",
450:       "weka.classifiers.bayes.NaiveBayesMultinomial",
451:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
452:       "weka.classifiers.functions.GaussianProcesses",
453:       "weka.classifiers.functions.supportVector.Kernel",
454:       "weka.classifiers.functions.supportVector.CachedKernel",
455:       "weka.classifiers.functions.supportVector.PolyKernel",
456:       "weka.estimators.UnivariateKernelEstimator",
457:       "weka.classifiers.functions.MultilayerPerceptron",
458:       "weka.filters.unsupervised.attribute.NominalToBinary",
459:       "weka.classifiers.functions.neural.SigmoidUnit",
460:       "weka.classifiers.functions.neural.LinearUnit",
461:       "weka.classifiers.evaluation.output.prediction.HTML",
462:       "weka.classifiers.trees.LMT",
463:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
464:       "weka.core.tokenizers.Tokenizer",
465:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
466:       "weka.core.tokenizers.WordTokenizer",
467:       "weka.core.stemmers.NullStemmer",
468:       "weka.estimators.Estimator",
469:       "weka.estimators.PoissonEstimator",
470:       "weka.classifiers.trees.RandomTree",
471:       "weka.classifiers.lazy.KStar",
472:       "weka.classifiers.meta.ClassificationViaRegression",
473:       "weka.classifiers.trees.m5.M5Base",
474:       "weka.classifiers.trees.M5P",
475:       "weka.classifiers.functions.LinearRegression",
476:       "weka.core.AttributeStats",
477:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
478:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
479:       "weka.classifiers.rules.M5Rules",
480:       "weka.classifiers.evaluation.output.prediction.PlainText",
481:       "weka.classifiers.functions.SMOreg",
482:       "weka.classifiers.functions.supportVector.RegOptimizer",
483:       "weka.classifiers.functions.supportVector.RegSMO",
484:       "weka.classifiers.functions.supportVector.RegSMOImproved",
485:       "weka.attributeSelection.ReliefFAttributeEval",
486:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
487:       "weka.classifiers.functions.SimpleLinearRegression",
488:       "weka.clusterers.SingleClustererEnhancer",
489:       "weka.clusterers.FilteredClusterer",
490:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
491:       "weka.classifiers.functions.supportVector.RBFKernel",
492:       "weka.classifiers.trees.j48.ModelSelection",
493:       "weka.classifiers.trees.j48.C45ModelSelection",
494:       "weka.classifiers.trees.j48.ClassifierTree",
495:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
496:       "weka.attributeSelection.InfoGainAttributeEval",
497:       "weka.classifiers.meta.MultiClassClassifier",
498:       "weka.classifiers.functions.Logistic",
499:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
500:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
501:       "weka.classifiers.meta.Stacking",
502:       "weka.filters.SimpleFilter",
503:       "weka.filters.SimpleStreamFilter",
504:       "weka.filters.MultiFilter",
505:       "weka.classifiers.RandomizableClassifier",
506:       "weka.classifiers.functions.SGDText",
507:       "weka.classifiers.meta.RandomCommittee",
508:       "weka.clusterers.Cobweb",
509:       "weka.classifiers.rules.OneR",
510:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
511:       "weka.core.neighboursearch.BallTree",
512:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
513:       "weka.core.neighboursearch.balltrees.BallSplitter",
514:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
515:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
516:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
517:       "weka.estimators.NormalEstimator",
518:       "weka.classifiers.rules.JRip",
519:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
520:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
521:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
522:       "weka.classifiers.functions.SMO",
523:       "weka.classifiers.functions.SGD",
524:       "weka.classifiers.functions.neural.NeuralConnection",
525:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
526:       "weka.classifiers.trees.RandomForest",
527:       "weka.classifiers.rules.part.MakeDecList",
528:       "weka.core.neighboursearch.KDTree",
529:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
530:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
531:       "weka.core.WekaException",
532:       "weka.core.UnsupportedAttributeTypeException",
533:       "weka.core.ClassDiscovery",
534:       "weka.attributeSelection.CorrelationAttributeEval",
535:       "weka.core.Check",
536:       "weka.core.CheckGOE",
537:       "weka.attributeSelection.OneRAttributeEval",
538:       "weka.classifiers.meta.Vote",
539:       "weka.core.CheckOptionHandler",
540:       "weka.core.tokenizers.AlphabeticTokenizer",
541:       "weka.core.tokenizers.NGramTokenizer",
542:       "weka.core.Javadoc",
543:       "weka.core.TechnicalInformationHandlerJavadoc",
544:       "weka.attributeSelection.GainRatioAttributeEval",
545:       "weka.classifiers.pmml.consumer.Regression",
546:       "weka.classifiers.pmml.consumer.Regression$Normalization",
547:       "weka.clusterers.AbstractDensityBasedClusterer",
548:       "weka.clusterers.MakeDensityBasedClusterer",
549:       "weka.core.Queue",
550:       "weka.core.AttributeLocator",
551:       "weka.core.StringLocator",
552:       "weka.core.RelationalLocator",
553:       "weka.estimators.DiscreteEstimator",
554:       "weka.classifiers.functions.supportVector.Puk",
555:       "weka.classifiers.meta.RandomSubSpace",
556:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
557:       "weka.clusterers.HierarchicalClusterer",
558:       "weka.classifiers.evaluation.ThresholdCurve"
559:     );
560:   }
561: }

[MASTER] 03:07:13.999 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
Instances instances0 = testInstances0.generate(" ");
Evaluation evaluation0 = new Evaluation(instances0);
Evaluation evaluation1 = new Evaluation(instances0);
evaluation0.toMatrixString(".bsi");
evaluation1.useNoPriors();
CSVLoader cSVLoader0 = new CSVLoader();
evaluation1.SFMeanPriorEntropy();
double double0 = evaluation0.m_SumSqrErr;
assertNotEquals(double0, double1, 0.01);


[MASTER] 03:07:17.234 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:07:17.588 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:07:17.588 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 03:07:19.103 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
