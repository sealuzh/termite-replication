* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
* Search finished after 198s and 243 generations, 96084 statements, best individual has fitness: 2848.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 279
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 279
* Generated 85 tests with total length 220
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:14:00.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:14:00.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:14:00.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:14:00.601 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:14:00.605 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:14:00.645 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
* Search finished after 241s and 369 generations, 147710 statements, best individual has fitness: 4200.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 264
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 242
* Number of covered goals: 143
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 713
* Number of covered goals: 530
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 242
* Number of covered goals: 143
* Generated 80 tests with total length 525
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 21:20:22.402 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:20:23.162 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:20:45.562 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:20:45.564 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
ArrayList<String> arrayList1 = new ArrayList<String>();
Instances instances0 = new Instances("weka.filters.unsupervised.attribute.Discretize", arrayList0, 4096);
Instances instances1 = new Instances(instances0);
Attribute attribute0 = new Attribute("weka.filters.unsupervised.attribute.Discretize", instances1);
arrayList0.add(attribute0);
FileSystemHandling.shouldAllThrowIOExceptions();
Instances instances2 = new Instances("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", arrayList0, 2);
instances0.deleteAttributeType(841);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances2);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18383
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:28:33.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:28:33.345 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:28:33.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:28:37.587 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:28:38.486 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:28:38.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 21:28:43.026 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 21:28:43.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 21:28:47.210 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setFolds(I)V: Line 473
[MASTER] 21:28:47.210 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setFolds(I)V: Line 474
[MASTER] 21:28:47.211 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 21:28:47.212 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setFolds(I)V: root-Branch
[MASTER] 21:28:47.212 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 21:28:47.213 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 188: weka.classifiers.rules.JRip.setFolds(I)V:473 - InsertUnaryOp Negation of fold
[MASTER] 21:28:47.213 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 189: weka.classifiers.rules.JRip.setFolds(I)V:473 - InsertUnaryOp IINC 1 fold
[MASTER] 21:28:47.213 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 190: weka.classifiers.rules.JRip.setFolds(I)V:473 - InsertUnaryOp IINC -1 fold
[MASTER] 21:28:47.214 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 21:28:47.215 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 21:28:47.215 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setFolds(I)V
[MASTER] 21:28:47.215 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 21:28:47.216 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setFolds(I)V
[MASTER] 21:28:47.216 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 21:28:47.219 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setFolds(I)V: root-Branch in context: weka.classifiers.rules.JRip:setFolds(I)V
[MASTER] 21:28:47.219 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
[MASTER] 21:32:15.628 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 21:32:15.846 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 268s and 262 generations, 155182 statements, best individual has fitness: 12392.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 256
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 570
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Generated 74 tests with total length 654
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 21:34:28.914 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:34:29.943 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18381
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18385
* Connecting to master process on port 18387
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18388
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:37:06.232 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:37:06.236 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:37:06.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:37:06.323 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 21:37:08.787 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:37:08.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:37:08.817 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:37:08.908 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:37:08.925 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:37:08.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 21:37:15.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 21:37:15.364 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:37:17.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:37:17.876 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:37:17.877 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:37:17.899 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 21:37:20.207 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true
[MASTER] 21:37:20.209 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 21:37:20.209 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 21:37:20.209 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 21:37:20.210 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 21:37:20.213 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 21:37:21.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 21:37:21.258 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 21:37:21.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 21:37:21.260 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 21:37:21.276 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 21:37:21.277 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 21:37:21.277 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 21:37:21.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:37:28.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 21:37:28.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 21:37:28.145 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 21:37:28.612 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:37:28.621 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:37:28.623 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:37:29.638 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:37:30.383 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:37:30.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:37:32.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:37:32.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:37:32.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:37:32.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:37:32.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:37:32.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:37:32.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:37:32.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:37:32.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 21:37:32.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 21:37:32.868 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1018
* Starting evolution
[MASTER] 21:37:37.802 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 21:38:08.619 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:39:38.603 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:39:38.607 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:39:46.701 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:40:03.839 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.makeDistribution(D)[D
[MASTER] 21:40:05.333 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 244s and 128 generations, 81304 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 21 tests with total length 174
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 21:42:11.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D
* Search finished after 306s and 315 generations, 231355 statements, best individual has fitness: 936.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 338
* Number of covered goals: 332
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 194
* Number of covered goals: 177
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 476
* Number of covered goals: 457
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 112
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 194
* Number of covered goals: 173
* Generated 88 tests with total length 1036
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 309s and 118 generations, 65902 statements, best individual has fitness: 15064.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 811
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 357
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 63
* Number of covered goals: 63
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 264
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 278
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 348
* Generated 164 tests with total length 1790
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 352s and 49 generations, 50240 statements, best individual has fitness: 2328.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 626
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 414
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 624
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 391
* Generated 205 tests with total length 3924
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 21:46:51.536 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1575323211487/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1575323211487/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.java]]
[MASTER] 21:46:51.536 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:51.536 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:51.540 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 21:46:51.540 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 21:46:51.540 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 21:46:51.542 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1575323211487/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 21:46:51 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.LinkedList;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.functions.SGDText;
19: import weka.classifiers.lazy.IBk;
20: import weka.core.Instances;
21: import weka.core.tokenizers.Tokenizer;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_24_tmp__ESTest extends NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.5500297769739535
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.getCapabilities();
34:       naiveBayesMultinomialText0.getUseWordFrequencies();
35:       naiveBayesMultinomialText0.periodicPruningTipText();
36:       MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
38:       naiveBayesMultinomialText0.m_inputVector = null;
39:       LinkedList<NaiveBayesMultinomialText.Count> linkedList0 = new LinkedList<NaiveBayesMultinomialText.Count>();
40:       naiveBayesMultinomialText0.getStopwords();
41:       naiveBayesMultinomialText0.setPeriodicPruning(0);
42:       SGDText sGDText0 = new SGDText();
43:       Tokenizer tokenizer0 = sGDText0.getTokenizer();
44:       naiveBayesMultinomialText0.m_tokenizer = tokenizer0;
45:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
46:       naiveBayesMultinomialText0.getLNorm();
47:       naiveBayesMultinomialText0.getLowercaseTokens();
48:       IBk iBk0 = new IBk(0);
49:       Instances instances0 = null;
50:       try {
51:         instances0 = new Instances((Instances) null, 2);
52:         fail("Expecting exception: NullPointerException");
53:       
54:       } catch(NullPointerException e) {
55:          //
56:          // no message in exception (getMessage() returned null)
57:          //
58:          verifyException("weka.core.Instances", e);
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_24_1575323211487/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 21:46:51 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.attributeSelection.CfsSubsetEval",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.estimators.Estimator$Builder",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.attributeSelection.BestFirst",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.attributeSelection.GreedyStepwise",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.SingleIndex",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.attributeSelection.ASEvaluation",
141:       "weka.core.AbstractInstance",
142:       "weka.core.scripting.JythonObject",
143:       "weka.core.SelectedTag",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
147:       "weka.core.Version",
148:       "weka.attributeSelection.AttributeSelection",
149:       "weka.core.Tag",
150:       "weka.classifiers.IteratedSingleClassifierEnhancer",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.classifiers.meta.Stacking",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
161:       "weka.core.PartitionGenerator",
162:       "weka.attributeSelection.WrapperSubsetEval",
163:       "weka.core.scripting.JythonSerializableObject",
164:       "weka.classifiers.Classifier",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.core.tokenizers.WordTokenizer",
169:       "weka.classifiers.misc.SerializedClassifier",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.classifiers.functions.supportVector.Kernel",
174:       "weka.core.WekaPackageManager",
175:       "weka.attributeSelection.ASSearch",
176:       "weka.filters.SupervisedFilter",
177:       "weka.core.TechnicalInformationHandler",
178:       "weka.core.neighboursearch.LinearNNSearch",
179:       "weka.attributeSelection.StartSetHandler",
180:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
181:       "weka.core.Option",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.estimators.KernelEstimator",
184:       "weka.filters.Sourcable",
185:       "weka.core.Attribute",
186:       "weka.core.Stopwords",
187:       "weka.core.tokenizers.AlphabeticTokenizer",
188:       "weka.core.FastVector",
189:       "weka.classifiers.MultipleClassifiersCombiner",
190:       "weka.core.UnassignedDatasetException",
191:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
192:       "weka.classifiers.RandomizableClassifier",
193:       "weka.classifiers.trees.RandomTree",
194:       "weka.attributeSelection.RankedOutputSearch",
195:       "weka.classifiers.SingleClassifierEnhancer",
196:       "weka.core.RevisionUtils",
197:       "weka.core.Instance",
198:       "weka.classifiers.meta.RandomCommittee",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.core.AttributeStats",
203:       "weka.core.WeightedInstancesHandler",
204:       "weka.core.neighboursearch.NearestNeighbourSearch",
205:       "weka.filters.unsupervised.attribute.Remove",
206:       "weka.core.Randomizable",
207:       "weka.core.EuclideanDistance",
208:       "weka.core.Instances",
209:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
210:       "weka.classifiers.bayes.NaiveBayesMultinomial",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.rules.ZeroR",
213:       "weka.core.stemmers.IteratedLovinsStemmer",
214:       "weka.attributeSelection.Ranker",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.core.TechnicalInformation",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
223:       "weka.classifiers.lazy.IBk",
224:       "weka.filters.Filter",
225:       "weka.filters.supervised.attribute.Discretize"
226:     );
227:   } 
228: 
229:   private static void resetClasses() {
230:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
231: 
232:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
233:       "weka.classifiers.AbstractClassifier",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
236:       "weka.core.Capabilities$Capability",
237:       "weka.core.tokenizers.Tokenizer",
238:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
239:       "weka.core.tokenizers.WordTokenizer",
240:       "weka.core.stemmers.NullStemmer",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Utils",
243:       "weka.core.Option",
244:       "weka.core.Instances",
245:       "weka.core.converters.ArffLoader$ArffReader",
246:       "weka.core.AbstractInstance",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.UnassignedDatasetException",
250:       "weka.classifiers.bayes.NaiveBayes",
251:       "weka.core.TechnicalInformation",
252:       "weka.core.TechnicalInformation$Type",
253:       "weka.core.TechnicalInformation$Field",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SMO",
256:       "weka.classifiers.functions.supportVector.Kernel",
257:       "weka.classifiers.functions.supportVector.CachedKernel",
258:       "weka.classifiers.functions.supportVector.PolyKernel",
259:       "weka.core.SerializedObject",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.core.neighboursearch.NearestNeighbourSearch",
267:       "weka.core.neighboursearch.CoverTree",
268:       "weka.core.NormalizableDistance",
269:       "weka.core.EuclideanDistance",
270:       "weka.core.Range",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.BIFReader",
273:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
275:       "weka.classifiers.bayes.net.search.local.K2",
276:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
277:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
278:       "weka.core.RevisionUtils",
279:       "weka.core.TestInstances",
280:       "weka.core.tokenizers.NGramTokenizer",
281:       "weka.classifiers.RandomizableClassifier",
282:       "weka.classifiers.functions.SGDText",
283:       "weka.core.Attribute",
284:       "weka.core.ProtectedProperties",
285:       "weka.core.DenseInstance",
286:       "weka.core.neighboursearch.balltrees.BallNode",
287:       "weka.classifiers.lazy.IBk",
288:       "weka.core.neighboursearch.LinearNNSearch",
289:       "weka.core.neighboursearch.BallTree",
290:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
291:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
292:       "weka.core.neighboursearch.balltrees.BallSplitter",
293:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
294:       "weka.classifiers.SingleClassifierEnhancer",
295:       "weka.classifiers.misc.InputMappedClassifier",
296:       "weka.classifiers.rules.ZeroR",
297:       "weka.core.FindWithCapabilities",
298:       "weka.core.SingleIndex",
299:       "weka.core.stemmers.SnowballStemmer",
300:       "weka.classifiers.misc.SerializedClassifier",
301:       "weka.attributeSelection.ASEvaluation",
302:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
303:       "weka.attributeSelection.PrincipalComponents",
304:       "weka.filters.Filter",
305:       "weka.filters.supervised.attribute.Discretize",
306:       "weka.classifiers.trees.m5.M5Base",
307:       "weka.classifiers.trees.M5P",
308:       "weka.core.neighboursearch.KDTree",
309:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
310:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
311:       "weka.core.Stopwords",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.classifiers.bayes.NaiveBayesMultinomial",
315:       "weka.classifiers.CostMatrix",
316:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.lazy.LWL",
319:       "weka.classifiers.trees.DecisionStump",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.core.WekaEnumeration",
323:       "weka.core.Attribute$1",
324:       "weka.core.tokenizers.AlphabeticTokenizer",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.classifiers.meta.CVParameterSelection",
327:       "weka.core.FastVector",
328:       "weka.core.WekaException",
329:       "weka.core.UnsupportedAttributeTypeException",
330:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.functions.LinearRegression",
333:       "weka.classifiers.IteratedSingleClassifierEnhancer",
334:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
336:       "weka.classifiers.meta.RandomCommittee",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
340:       "weka.core.ClassDiscovery",
341:       "weka.filters.SimpleFilter",
342:       "weka.filters.SimpleStreamFilter",
343:       "weka.filters.MultiFilter",
344:       "weka.filters.AllFilter",
345:       "weka.classifiers.MultipleClassifiersCombiner",
346:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Stacking",
349:       "weka.classifiers.meta.RegressionByDiscretization",
350:       "weka.filters.unsupervised.attribute.Discretize",
351:       "weka.classifiers.trees.J48",
352:       "weka.classifiers.trees.j48.ClassifierTree",
353:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
354:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
355:       "weka.classifiers.meta.AttributeSelectedClassifier",
356:       "weka.attributeSelection.ASSearch",
357:       "weka.attributeSelection.BestFirst",
358:       "weka.core.stemmers.LovinsStemmer",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.MultiScheme",
361:       "weka.classifiers.functions.Logistic",
362:       "weka.classifiers.meta.Vote",
363:       "weka.classifiers.rules.JRip",
364:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
365:       "weka.classifiers.lazy.KStar",
366:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
367:       "weka.estimators.Estimator",
368:       "weka.estimators.DiscreteEstimator",
369:       "weka.core.UnassignedClassException",
370:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
371:       "weka.attributeSelection.CorrelationAttributeEval",
372:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
373:       "weka.classifiers.meta.LogitBoost",
374:       "weka.classifiers.functions.supportVector.RBFKernel",
375:       "weka.classifiers.rules.OneR",
376:       "weka.attributeSelection.WrapperSubsetEval",
377:       "weka.classifiers.bayes.NaiveBayesUpdateable",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.trees.RandomForest",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.OneRAttributeEval",
383:       "weka.core.matrix.Matrix",
384:       "weka.estimators.MahalanobisEstimator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.VotedPerceptron",
388:       "weka.classifiers.functions.supportVector.StringKernel",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.estimators.NormalEstimator",
392:       "weka.classifiers.functions.SimpleLogistic",
393:       "weka.estimators.PoissonEstimator",
394:       "weka.classifiers.meta.FilteredClassifier",
395:       "weka.filters.supervised.attribute.AttributeSelection",
396:       "weka.attributeSelection.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.trees.LMT",
400:       "weka.core.stemmers.IteratedLovinsStemmer",
401:       "weka.classifiers.rules.M5Rules",
402:       "weka.classifiers.rules.PART",
403:       "weka.classifiers.rules.part.MakeDecList",
404:       "weka.classifiers.functions.SMOreg",
405:       "weka.classifiers.functions.supportVector.RegOptimizer",
406:       "weka.classifiers.functions.supportVector.RegSMO",
407:       "weka.classifiers.functions.supportVector.RegSMOImproved",
408:       "weka.classifiers.meta.MultiClassClassifier",
409:       "weka.classifiers.functions.MultilayerPerceptron",
410:       "weka.filters.unsupervised.attribute.NominalToBinary",
411:       "weka.classifiers.functions.neural.SigmoidUnit",
412:       "weka.classifiers.functions.neural.LinearUnit",
413:       "weka.classifiers.functions.GaussianProcesses",
414:       "weka.classifiers.functions.SGD",
415:       "weka.classifiers.rules.DecisionTable",
416:       "weka.classifiers.meta.RandomSubSpace",
417:       "weka.core.AttributeStats",
418:       "weka.experiment.Stats",
419:       "weka.classifiers.functions.supportVector.Puk",
420:       "weka.attributeSelection.GainRatioAttributeEval",
421:       "weka.core.MinkowskiDistance",
422:       "weka.core.neighboursearch.PerformanceStats",
423:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
424:       "weka.core.Javadoc",
425:       "weka.core.TechnicalInformationHandlerJavadoc",
426:       "weka.filters.unsupervised.attribute.Remove",
427:       "weka.core.SelectedTag",
428:       "weka.core.Queue",
429:       "weka.core.AttributeLocator",
430:       "weka.core.StringLocator",
431:       "weka.core.RelationalLocator",
432:       "weka.core.ContingencyTables",
433:       "weka.core.Queue$QueueNode",
434:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
435:       "weka.attributeSelection.BestFirst$LinkedList2",
436:       "weka.classifiers.rules.DecisionTableHashKey",
437:       "weka.attributeSelection.BestFirst$Link2",
438:       "weka.core.OptionHandlerJavadoc",
439:       "weka.core.ManhattanDistance",
440:       "weka.core.ClassCache",
441:       "weka.core.AllJavadoc",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader"
446:     );
447:   }
448: }

[MASTER] 21:46:51.543 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.periodicPruningTipText();
MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
LinkedList<NaiveBayesMultinomialText.Count> linkedList0 = new LinkedList<NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.setPeriodicPruning(0);
SGDText sGDText0 = new SGDText();
Tokenizer tokenizer0 = sGDText0.getTokenizer();
naiveBayesMultinomialText0.m_tokenizer = tokenizer0;
naiveBayesMultinomialText0.m_lowercaseTokens = true;
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.getLowercaseTokens();
IBk iBk0 = new IBk(0);
Instances instances0 = new Instances((Instances) null, 2);

[MASTER] 21:46:54.405 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_85_1575323214352/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_85_1575323214352/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding.java]]
[MASTER] 21:46:54.405 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:54.405 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:46:54.405 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 21:46:54.405 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 48
[MASTER] 21:46:54.405 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 49
[MASTER] 21:46:54.407 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_85_1575323214352/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 21:46:54 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.classifiers.meta.RandomCommittee;
19: import weka.core.BinarySparseInstance;
20: import weka.core.Capabilities;
21: import weka.core.Instance;
22: import weka.core.Instances;
23: import weka.core.SparseInstance;
24: import weka.core.TestInstances;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_85_tmp__ESTest extends NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=2.1076835264691884
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       RandomCommittee randomCommittee0 = new RandomCommittee();
37:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
38:       FileSystemHandling.shouldAllThrowIOExceptions();
39:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
40:       testInstances0.toString();
41:       Instances instances0 = testInstances0.generate("weka/core/Capabilities.props");
42:       naiveBayesMultinomialText0.buildClassifier(instances0);
43:       capabilities0.getClassCapabilities();
44:       capabilities0.disableAllAttributeDependencies();
45:       double[] doubleArray0 = new double[0];
46:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-262.12), doubleArray0);
47:       SparseInstance sparseInstance0 = new SparseInstance((Instance) binarySparseInstance0);
48:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
49:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
50:       // Undeclared exception!
51:       try { 
52:         naiveBayesMultinomialText0.toString();
53:         fail("Expecting exception: NullPointerException");
54:       
55:       } catch(NullPointerException e) {
56:          //
57:          // no message in exception (getMessage() returned null)
58:          //
59:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
60:       }
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_85_1575323214352/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 21:46:54 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.attributeSelection.CfsSubsetEval",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.estimators.IncrementalEstimator",
106:       "weka.estimators.Estimator$Builder",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.attributeSelection.BestFirst",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.attributeSelection.GreedyStepwise",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.SingleIndex",
138:       "weka.core.CapabilitiesHandler",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
140:       "weka.attributeSelection.ASEvaluation",
141:       "weka.core.AbstractInstance",
142:       "weka.core.scripting.JythonObject",
143:       "weka.core.SelectedTag",
144:       "org.pentaho.packageManagement.DefaultPackage",
145:       "weka.classifiers.misc.InputMappedClassifier",
146:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
147:       "weka.core.Version",
148:       "weka.attributeSelection.AttributeSelection",
149:       "weka.core.Tag",
150:       "weka.classifiers.IteratedSingleClassifierEnhancer",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.core.FindWithCapabilities",
153:       "weka.classifiers.meta.Stacking",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
161:       "weka.core.PartitionGenerator",
162:       "weka.attributeSelection.WrapperSubsetEval",
163:       "weka.core.scripting.JythonSerializableObject",
164:       "weka.classifiers.Classifier",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.core.tokenizers.WordTokenizer",
169:       "weka.classifiers.misc.SerializedClassifier",
170:       "weka.core.stemmers.SnowballStemmer",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.classifiers.functions.supportVector.Kernel",
174:       "weka.core.WekaPackageManager",
175:       "weka.attributeSelection.ASSearch",
176:       "weka.filters.SupervisedFilter",
177:       "weka.core.TechnicalInformationHandler",
178:       "weka.core.neighboursearch.LinearNNSearch",
179:       "weka.attributeSelection.StartSetHandler",
180:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
181:       "weka.core.Option",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.estimators.KernelEstimator",
184:       "weka.filters.Sourcable",
185:       "weka.core.Attribute",
186:       "weka.core.Stopwords",
187:       "weka.core.tokenizers.AlphabeticTokenizer",
188:       "weka.core.FastVector",
189:       "weka.classifiers.MultipleClassifiersCombiner",
190:       "weka.core.UnassignedDatasetException",
191:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
192:       "weka.classifiers.RandomizableClassifier",
193:       "weka.classifiers.trees.RandomTree",
194:       "weka.attributeSelection.RankedOutputSearch",
195:       "weka.classifiers.SingleClassifierEnhancer",
196:       "weka.core.RevisionUtils",
197:       "weka.core.Instance",
198:       "weka.classifiers.meta.RandomCommittee",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.core.AttributeStats",
203:       "weka.core.WeightedInstancesHandler",
204:       "weka.core.neighboursearch.NearestNeighbourSearch",
205:       "weka.filters.unsupervised.attribute.Remove",
206:       "weka.core.Randomizable",
207:       "weka.core.EuclideanDistance",
208:       "weka.core.Instances",
209:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
210:       "weka.classifiers.bayes.NaiveBayesMultinomial",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.rules.ZeroR",
213:       "weka.core.stemmers.IteratedLovinsStemmer",
214:       "weka.attributeSelection.Ranker",
215:       "weka.core.UnsupportedAttributeTypeException",
216:       "weka.core.TechnicalInformation",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
223:       "weka.classifiers.lazy.IBk",
224:       "weka.filters.Filter",
225:       "weka.filters.supervised.attribute.Discretize"
226:     );
227:   } 
228: 
229:   private static void resetClasses() {
230:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding.class.getClassLoader()); 
231: 
232:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
233:       "weka.classifiers.AbstractClassifier",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
236:       "weka.core.Capabilities$Capability",
237:       "weka.core.tokenizers.Tokenizer",
238:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
239:       "weka.core.tokenizers.WordTokenizer",
240:       "weka.core.stemmers.NullStemmer",
241:       "weka.classifiers.Evaluation",
242:       "weka.core.Utils",
243:       "weka.core.Option",
244:       "weka.core.Instances",
245:       "weka.core.converters.ArffLoader$ArffReader",
246:       "weka.core.AbstractInstance",
247:       "weka.core.SparseInstance",
248:       "weka.core.BinarySparseInstance",
249:       "weka.core.UnassignedDatasetException",
250:       "weka.classifiers.bayes.NaiveBayes",
251:       "weka.core.TechnicalInformation",
252:       "weka.core.TechnicalInformation$Type",
253:       "weka.core.TechnicalInformation$Field",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SMO",
256:       "weka.classifiers.functions.supportVector.Kernel",
257:       "weka.classifiers.functions.supportVector.CachedKernel",
258:       "weka.classifiers.functions.supportVector.PolyKernel",
259:       "weka.core.SerializedObject",
260:       "weka.core.Capabilities",
261:       "org.pentaho.packageManagement.PackageManager",
262:       "org.pentaho.packageManagement.DefaultPackageManager",
263:       "weka.core.Version",
264:       "weka.core.Environment",
265:       "weka.core.WekaPackageManager",
266:       "weka.core.neighboursearch.NearestNeighbourSearch",
267:       "weka.core.neighboursearch.CoverTree",
268:       "weka.core.NormalizableDistance",
269:       "weka.core.EuclideanDistance",
270:       "weka.core.Range",
271:       "weka.classifiers.bayes.BayesNet",
272:       "weka.classifiers.bayes.net.BIFReader",
273:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
275:       "weka.classifiers.bayes.net.search.local.K2",
276:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
277:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
278:       "weka.core.RevisionUtils",
279:       "weka.core.TestInstances",
280:       "weka.core.tokenizers.NGramTokenizer",
281:       "weka.classifiers.RandomizableClassifier",
282:       "weka.classifiers.functions.SGDText",
283:       "weka.core.Attribute",
284:       "weka.core.ProtectedProperties",
285:       "weka.core.DenseInstance",
286:       "weka.core.neighboursearch.balltrees.BallNode",
287:       "weka.classifiers.lazy.IBk",
288:       "weka.core.neighboursearch.LinearNNSearch",
289:       "weka.core.neighboursearch.BallTree",
290:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
291:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
292:       "weka.core.neighboursearch.balltrees.BallSplitter",
293:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
294:       "weka.classifiers.SingleClassifierEnhancer",
295:       "weka.classifiers.misc.InputMappedClassifier",
296:       "weka.classifiers.rules.ZeroR",
297:       "weka.core.FindWithCapabilities",
298:       "weka.core.SingleIndex",
299:       "weka.core.stemmers.SnowballStemmer",
300:       "weka.classifiers.misc.SerializedClassifier",
301:       "weka.attributeSelection.ASEvaluation",
302:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
303:       "weka.attributeSelection.PrincipalComponents",
304:       "weka.filters.Filter",
305:       "weka.filters.supervised.attribute.Discretize",
306:       "weka.classifiers.trees.m5.M5Base",
307:       "weka.classifiers.trees.M5P",
308:       "weka.core.neighboursearch.KDTree",
309:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
310:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
311:       "weka.core.Stopwords",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.classifiers.bayes.NaiveBayesMultinomial",
315:       "weka.classifiers.CostMatrix",
316:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.lazy.LWL",
319:       "weka.classifiers.trees.DecisionStump",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.core.WekaEnumeration",
323:       "weka.core.Attribute$1",
324:       "weka.core.tokenizers.AlphabeticTokenizer",
325:       "weka.attributeSelection.CfsSubsetEval",
326:       "weka.classifiers.meta.CVParameterSelection",
327:       "weka.core.FastVector",
328:       "weka.core.WekaException",
329:       "weka.core.UnsupportedAttributeTypeException",
330:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
331:       "weka.classifiers.meta.ClassificationViaRegression",
332:       "weka.classifiers.functions.LinearRegression",
333:       "weka.classifiers.IteratedSingleClassifierEnhancer",
334:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
335:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
336:       "weka.classifiers.meta.RandomCommittee",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.core.stemmers.Stemming",
339:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
340:       "weka.core.ClassDiscovery",
341:       "weka.filters.SimpleFilter",
342:       "weka.filters.SimpleStreamFilter",
343:       "weka.filters.MultiFilter",
344:       "weka.filters.AllFilter",
345:       "weka.classifiers.MultipleClassifiersCombiner",
346:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Stacking",
349:       "weka.classifiers.meta.RegressionByDiscretization",
350:       "weka.filters.unsupervised.attribute.Discretize",
351:       "weka.classifiers.trees.J48",
352:       "weka.classifiers.trees.j48.ClassifierTree",
353:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
354:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
355:       "weka.classifiers.meta.AttributeSelectedClassifier",
356:       "weka.attributeSelection.ASSearch",
357:       "weka.attributeSelection.BestFirst",
358:       "weka.core.stemmers.LovinsStemmer",
359:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
360:       "weka.classifiers.meta.MultiScheme",
361:       "weka.classifiers.functions.Logistic",
362:       "weka.classifiers.meta.Vote",
363:       "weka.classifiers.rules.JRip",
364:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
365:       "weka.classifiers.lazy.KStar",
366:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
367:       "weka.estimators.Estimator",
368:       "weka.estimators.DiscreteEstimator",
369:       "weka.core.UnassignedClassException",
370:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
371:       "weka.attributeSelection.CorrelationAttributeEval",
372:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
373:       "weka.classifiers.meta.LogitBoost",
374:       "weka.classifiers.functions.supportVector.RBFKernel",
375:       "weka.classifiers.rules.OneR",
376:       "weka.attributeSelection.WrapperSubsetEval",
377:       "weka.classifiers.bayes.NaiveBayesUpdateable",
378:       "weka.attributeSelection.ReliefFAttributeEval",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.trees.RandomForest",
381:       "weka.classifiers.meta.AdditiveRegression",
382:       "weka.attributeSelection.OneRAttributeEval",
383:       "weka.core.matrix.Matrix",
384:       "weka.estimators.MahalanobisEstimator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.VotedPerceptron",
388:       "weka.classifiers.functions.supportVector.StringKernel",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.meta.AdaBoostM1",
391:       "weka.estimators.NormalEstimator",
392:       "weka.classifiers.functions.SimpleLogistic",
393:       "weka.estimators.PoissonEstimator",
394:       "weka.classifiers.meta.FilteredClassifier",
395:       "weka.filters.supervised.attribute.AttributeSelection",
396:       "weka.attributeSelection.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.classifiers.functions.SimpleLinearRegression",
399:       "weka.classifiers.trees.LMT",
400:       "weka.core.stemmers.IteratedLovinsStemmer",
401:       "weka.classifiers.rules.M5Rules",
402:       "weka.classifiers.rules.PART",
403:       "weka.classifiers.rules.part.MakeDecList",
404:       "weka.classifiers.functions.SMOreg",
405:       "weka.classifiers.functions.supportVector.RegOptimizer",
406:       "weka.classifiers.functions.supportVector.RegSMO",
407:       "weka.classifiers.functions.supportVector.RegSMOImproved",
408:       "weka.classifiers.meta.MultiClassClassifier",
409:       "weka.classifiers.functions.MultilayerPerceptron",
410:       "weka.filters.unsupervised.attribute.NominalToBinary",
411:       "weka.classifiers.functions.neural.SigmoidUnit",
412:       "weka.classifiers.functions.neural.LinearUnit",
413:       "weka.classifiers.functions.GaussianProcesses",
414:       "weka.classifiers.functions.SGD",
415:       "weka.classifiers.rules.DecisionTable",
416:       "weka.classifiers.meta.RandomSubSpace",
417:       "weka.core.AttributeStats",
418:       "weka.experiment.Stats",
419:       "weka.classifiers.functions.supportVector.Puk",
420:       "weka.attributeSelection.GainRatioAttributeEval",
421:       "weka.core.MinkowskiDistance",
422:       "weka.core.neighboursearch.PerformanceStats",
423:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
424:       "weka.core.Javadoc",
425:       "weka.core.TechnicalInformationHandlerJavadoc",
426:       "weka.filters.unsupervised.attribute.Remove",
427:       "weka.core.SelectedTag",
428:       "weka.core.Queue",
429:       "weka.core.AttributeLocator",
430:       "weka.core.StringLocator",
431:       "weka.core.RelationalLocator",
432:       "weka.core.ContingencyTables",
433:       "weka.core.Queue$QueueNode",
434:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
435:       "weka.attributeSelection.BestFirst$LinkedList2",
436:       "weka.classifiers.rules.DecisionTableHashKey",
437:       "weka.attributeSelection.BestFirst$Link2",
438:       "weka.core.OptionHandlerJavadoc",
439:       "weka.core.ManhattanDistance",
440:       "weka.core.ClassCache",
441:       "weka.core.AllJavadoc",
442:       "weka.core.converters.ConverterUtils$DataSource",
443:       "weka.core.converters.AbstractLoader",
444:       "weka.core.converters.AbstractFileLoader",
445:       "weka.core.converters.ArffLoader"
446:     );
447:   }
448: }

[MASTER] 21:46:54.408 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
RandomCommittee randomCommittee0 = new RandomCommittee();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
FileSystemHandling.shouldAllThrowIOExceptions();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
testInstances0.toString();
Instances instances0 = testInstances0.generate("weka/core/Capabilities.props");
naiveBayesMultinomialText0.buildClassifier(instances0);
capabilities0.getClassCapabilities();
capabilities0.disableAllAttributeDependencies();
double[] doubleArray0 = new double[0];
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-262.12), doubleArray0);
SparseInstance sparseInstance0 = new SparseInstance((Instance) binarySparseInstance0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.toString();

[MASTER] 21:46:57.383 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:46:57.593 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 21:46:57.730 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 21:46:58.687 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 21:48:58.763 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7042708333333333% of time used, but only 49/205 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Permissions denied during test execution: 
[MASTER] 21:50:36.425 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Resulting test suite's mutation score: 7%
[MASTER] 21:50:53.571 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 21:50:56.974 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1575323456937/weka/classifiers/Evaluation_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1575323456937/weka/classifiers/Evaluation_16_tmp__ESTest_scaffolding.java]]
[MASTER] 21:50:56.974 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:50:56.974 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:50:56.978 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double2
  location: class weka.classifiers.Evaluation_16_tmp__ESTest: 40
[MASTER] 21:50:56.979 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1575323456937/weka/classifiers/Evaluation_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 21:50:56 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.evosuite.runtime.testdata.EvoSuiteFile;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.CostMatrix;
16: import weka.classifiers.Evaluation;
17: import weka.classifiers.meta.CostSensitiveClassifier;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class Evaluation_16_tmp__ESTest extends Evaluation_16_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=0.45454545454545453
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       TestInstances testInstances0 = new TestInstances();
31:       Instances instances0 = testInstances0.generate();
32:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
33:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
34:       Evaluation evaluation0 = new Evaluation(instances0, (CostMatrix) null);
35:       evaluation0.toSummaryString("useStopListTipText", true);
36:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
37:       evaluation0.areaUnderROC(106);
38:       double double0 = evaluation0.m_Correct;
39:       double double1 = evaluation0.m_SumClassPredicted;
40:       assertNotEquals(double1, double2, 0.01);
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_16_1575323456937/weka/classifiers/Evaluation_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 21:50:56 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_16_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.clusterers.AbstractClusterer",
91:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
92:       "weka.core.converters.TextDirectoryLoader",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.neighboursearch.BallTree",
97:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
98:       "weka.core.DenseInstance",
99:       "weka.core.converters.DatabaseConverter",
100:       "weka.classifiers.trees.J48",
101:       "weka.classifiers.functions.SimpleLinearRegression",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "weka.estimators.UnivariateIntervalEstimator",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.converters.JSONLoader",
106:       "weka.clusterers.NumberOfClustersRequestable",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.classifiers.meta.AdaBoostM1",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.NormalizableDistance",
111:       "weka.classifiers.rules.Rule",
112:       "weka.classifiers.functions.SMOreg",
113:       "weka.clusterers.SimpleKMeans",
114:       "weka.core.TechnicalInformation$Type",
115:       "weka.core.Copyable",
116:       "weka.core.BinarySparseInstance",
117:       "weka.filters.supervised.attribute.NominalToBinary",
118:       "weka.core.SerializedObject",
119:       "weka.clusterers.UpdateableClusterer",
120:       "weka.core.AdditionalMeasureProducer",
121:       "weka.core.neighboursearch.balltrees.BallNode",
122:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
123:       "weka.classifiers.meta.MultiClassClassifier",
124:       "weka.classifiers.functions.supportVector.RegOptimizer",
125:       "weka.classifiers.misc.InputMappedClassifier",
126:       "weka.classifiers.functions.neural.NeuralConnection",
127:       "weka.core.Version",
128:       "weka.classifiers.meta.MultiClassClassifier$Code",
129:       "weka.classifiers.evaluation.NominalPrediction",
130:       "weka.classifiers.AbstractClassifier",
131:       "weka.core.converters.ArffLoader",
132:       "weka.filters.unsupervised.attribute.Center",
133:       "weka.classifiers.meta.Stacking",
134:       "weka.classifiers.functions.neural.NeuralNode",
135:       "weka.core.WekaException",
136:       "weka.filters.StreamableFilter",
137:       "weka.core.Attribute$1",
138:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
139:       "weka.core.PartitionGenerator",
140:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
141:       "weka.core.SparseInstance",
142:       "weka.classifiers.trees.j48.ClassifierSplitModel",
143:       "weka.attributeSelection.AttributeTransformer",
144:       "weka.core.tokenizers.WordTokenizer",
145:       "weka.classifiers.misc.SerializedClassifier",
146:       "weka.classifiers.trees.j48.ClassifierTree",
147:       "weka.classifiers.functions.MultilayerPerceptron",
148:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
149:       "weka.attributeSelection.PrincipalComponents",
150:       "weka.classifiers.trees.j48.C45Split",
151:       "weka.classifiers.trees.j48.PruneableClassifierTree",
152:       "weka.classifiers.Evaluation",
153:       "weka.classifiers.functions.supportVector.Kernel",
154:       "weka.classifiers.functions.neural.LinearUnit",
155:       "weka.classifiers.trees.lmt.LogisticBase",
156:       "weka.classifiers.functions.SMO",
157:       "weka.classifiers.evaluation.ThresholdCurve",
158:       "weka.core.converters.URLSourcedLoader",
159:       "weka.core.converters.FileSourcedConverter",
160:       "weka.core.neighboursearch.LinearNNSearch",
161:       "weka.clusterers.Clusterer",
162:       "weka.core.neighboursearch.PerformanceStats",
163:       "weka.core.Stopwords",
164:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
165:       "weka.estimators.UnivariateKernelEstimator",
166:       "weka.core.UnassignedDatasetException",
167:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
168:       "weka.classifiers.trees.lmt.LMTNode",
169:       "weka.classifiers.RandomizableClassifier",
170:       "weka.core.Queue$QueueNode",
171:       "weka.core.RevisionUtils",
172:       "weka.core.converters.Loader",
173:       "weka.classifiers.functions.supportVector.RegSMO",
174:       "weka.core.ProtectedProperties",
175:       "weka.core.converters.C45Loader",
176:       "weka.core.StringLocator",
177:       "weka.core.AttributeStats",
178:       "weka.classifiers.trees.DecisionStump",
179:       "weka.estimators.UnivariateQuantileEstimator",
180:       "weka.filters.unsupervised.attribute.Remove",
181:       "weka.core.Randomizable",
182:       "weka.classifiers.trees.LMT",
183:       "weka.classifiers.rules.M5Rules",
184:       "weka.classifiers.trees.j48.NoSplit",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.core.converters.AbstractFileLoader",
188:       "weka.core.converters.ConverterUtils$DataSink",
189:       "weka.core.converters.DatabaseConnection",
190:       "weka.core.UnsupportedAttributeTypeException",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.RevisionHandler",
193:       "weka.experiment.Stats",
194:       "weka.core.converters.ConverterUtils$DataSource",
195:       "weka.classifiers.rules.OneR$OneRRule",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.classifiers.rules.JRip$RipperRule",
199:       "weka.core.TestInstances",
200:       "weka.core.converters.ConverterUtils",
201:       "weka.core.DistanceFunction",
202:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
203:       "weka.attributeSelection.AttributeEvaluator",
204:       "org.pentaho.packageManagement.Package",
205:       "weka.classifiers.trees.m5.M5Base",
206:       "weka.classifiers.rules.RuleStats",
207:       "weka.classifiers.CostMatrix",
208:       "weka.core.logging.Logger$Level",
209:       "weka.classifiers.functions.LinearRegression",
210:       "weka.core.stemmers.Stemmer",
211:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
212:       "weka.core.converters.IncrementalConverter",
213:       "weka.filters.supervised.attribute.ClassOrder",
214:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
215:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
216:       "weka.core.EnvironmentHandler",
217:       "weka.classifiers.trees.j48.C45ModelSelection",
218:       "weka.classifiers.trees.m5.RuleNode",
219:       "weka.core.RelationalLocator",
220:       "weka.core.Utils",
221:       "weka.core.tokenizers.Tokenizer",
222:       "weka.filters.unsupervised.instance.RemoveWithValues",
223:       "weka.core.NoSupportForMissingValuesException",
224:       "weka.classifiers.UpdateableClassifier",
225:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
227:       "weka.core.MultiInstanceCapabilitiesHandler",
228:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
229:       "weka.core.Capabilities",
230:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
231:       "weka.core.AttributeLocator",
232:       "weka.core.converters.SVMLightLoader",
233:       "weka.classifiers.functions.supportVector.CachedKernel",
234:       "weka.classifiers.meta.RegressionByDiscretization",
235:       "weka.core.Summarizable",
236:       "weka.classifiers.trees.j48.ModelSelection",
237:       "org.pentaho.packageManagement.PackageManager$1",
238:       "weka.core.Drawable",
239:       "weka.core.matrix.Matrix",
240:       "weka.classifiers.ConditionalDensityEstimator",
241:       "weka.core.CapabilitiesHandler",
242:       "weka.classifiers.trees.REPTree",
243:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
244:       "weka.attributeSelection.ASEvaluation",
245:       "weka.core.AbstractInstance",
246:       "weka.core.converters.LibSVMLoader",
247:       "weka.core.scripting.JythonObject",
248:       "weka.core.SelectedTag",
249:       "org.pentaho.packageManagement.DefaultPackage",
250:       "weka.core.neighboursearch.balltrees.BallSplitter",
251:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
252:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.core.Queue",
255:       "weka.clusterers.RandomizableClusterer",
256:       "weka.classifiers.evaluation.Prediction",
257:       "weka.core.converters.AbstractLoader",
258:       "weka.classifiers.trees.lmt.ResidualModelSelection",
259:       "weka.filters.AllFilter",
260:       "weka.filters.unsupervised.attribute.RemoveUseless",
261:       "weka.core.converters.BatchConverter",
262:       "weka.core.converters.ArffLoader$ArffReader",
263:       "weka.core.Tag",
264:       "weka.classifiers.IteratedSingleClassifierEnhancer",
265:       "weka.classifiers.trees.j48.BinC45ModelSelection",
266:       "weka.estimators.UnivariateDensityEstimator",
267:       "weka.core.OptionHandler",
268:       "weka.core.converters.MatlabLoader",
269:       "weka.classifiers.rules.JRip",
270:       "weka.core.Range",
271:       "weka.core.scripting.JythonSerializableObject",
272:       "weka.classifiers.Classifier",
273:       "weka.core.Capabilities$Capability",
274:       "org.pentaho.packageManagement.PackageManager",
275:       "weka.core.WekaEnumeration",
276:       "weka.classifiers.trees.M5P",
277:       "weka.classifiers.meta.Bagging",
278:       "weka.core.WekaPackageManager",
279:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
280:       "weka.filters.SupervisedFilter",
281:       "weka.core.TechnicalInformationHandler",
282:       "weka.experiment.DatabaseUtils",
283:       "weka.classifiers.lazy.LWL",
284:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.core.Option",
287:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
288:       "weka.classifiers.functions.neural.NeuralMethod",
289:       "weka.filters.Sourcable",
290:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
291:       "weka.core.Attribute",
292:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
293:       "weka.core.FastVector",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.core.BatchPredictor",
296:       "weka.classifiers.functions.supportVector.RegSMOImproved",
297:       "weka.classifiers.functions.neural.SigmoidUnit",
298:       "weka.classifiers.SingleClassifierEnhancer",
299:       "weka.core.Instance",
300:       "weka.core.converters.SerializedInstancesLoader",
301:       "weka.classifiers.functions.supportVector.PolyKernel",
302:       "weka.classifiers.IntervalEstimator",
303:       "weka.core.Matchable",
304:       "weka.core.WeightedInstancesHandler",
305:       "weka.core.neighboursearch.NearestNeighbourSearch",
306:       "weka.classifiers.functions.GaussianProcesses",
307:       "weka.core.TechnicalInformation$Field",
308:       "weka.filters.unsupervised.attribute.Discretize",
309:       "weka.core.converters.DatabaseLoader",
310:       "weka.classifiers.functions.SGD",
311:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
312:       "weka.filters.unsupervised.attribute.Normalize",
313:       "weka.classifiers.rules.OneR",
314:       "weka.core.UnassignedClassException",
315:       "weka.classifiers.rules.ZeroR",
316:       "weka.filters.unsupervised.attribute.Standardize",
317:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
318:       "weka.classifiers.Sourcable",
319:       "weka.classifiers.evaluation.output.prediction.PlainText",
320:       "weka.core.xml.XMLSerialization",
321:       "weka.core.neighboursearch.TreePerformanceStats",
322:       "weka.filters.unsupervised.attribute.MakeIndicator",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer"
324:     );
325:   } 
326: 
327:   private static void resetClasses() {
328:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
329: 
330:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
331:       "weka.classifiers.Evaluation",
332:       "weka.core.pmml.PMMLFactory$ModelType",
333:       "weka.core.pmml.PMMLFactory$1",
334:       "weka.core.xml.KOML",
335:       "weka.core.Version",
336:       "weka.core.Utils",
337:       "weka.classifiers.AbstractClassifier",
338:       "weka.core.Tag",
339:       "weka.classifiers.functions.SMOreg",
340:       "weka.classifiers.functions.supportVector.RegOptimizer",
341:       "weka.classifiers.functions.supportVector.RegSMO",
342:       "weka.classifiers.functions.supportVector.RegSMOImproved",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.CachedKernel",
345:       "weka.classifiers.functions.supportVector.PolyKernel",
346:       "weka.core.SelectedTag",
347:       "weka.core.TechnicalInformation",
348:       "weka.core.TechnicalInformation$Type",
349:       "weka.core.TechnicalInformation$Field",
350:       "weka.core.converters.AbstractLoader",
351:       "weka.core.converters.AbstractFileLoader",
352:       "weka.core.converters.MatlabLoader",
353:       "weka.classifiers.bayes.NaiveBayesMultinomial",
354:       "weka.core.Option",
355:       "weka.core.converters.ArffLoader",
356:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
357:       "weka.classifiers.evaluation.output.prediction.Null",
358:       "weka.core.AbstractInstance",
359:       "weka.core.DenseInstance",
360:       "weka.core.SparseInstance",
361:       "weka.core.BinarySparseInstance",
362:       "weka.core.UnassignedDatasetException",
363:       "weka.core.converters.JSONLoader",
364:       "weka.core.neighboursearch.NearestNeighbourSearch",
365:       "weka.core.neighboursearch.CoverTree",
366:       "weka.core.NormalizableDistance",
367:       "weka.core.EuclideanDistance",
368:       "weka.core.Range",
369:       "weka.core.Instances",
370:       "weka.classifiers.CostMatrix",
371:       "weka.core.converters.SerializedInstancesLoader",
372:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
373:       "weka.core.tokenizers.Tokenizer",
374:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
375:       "weka.core.tokenizers.WordTokenizer",
376:       "weka.core.stemmers.NullStemmer",
377:       "weka.core.converters.TextDirectoryLoader",
378:       "weka.core.Attribute",
379:       "weka.core.ProtectedProperties",
380:       "weka.core.Capabilities",
381:       "org.pentaho.packageManagement.PackageManager",
382:       "org.pentaho.packageManagement.DefaultPackageManager",
383:       "weka.core.Environment",
384:       "weka.core.WekaPackageManager",
385:       "weka.core.WekaException",
386:       "weka.core.UnsupportedAttributeTypeException",
387:       "weka.core.TestInstances",
388:       "weka.core.xml.XMLDocument",
389:       "weka.core.xml.XMLInstances",
390:       "weka.core.converters.XRFFLoader",
391:       "weka.core.WekaEnumeration",
392:       "weka.core.Attribute$1",
393:       "weka.core.converters.C45Loader",
394:       "weka.attributeSelection.ASEvaluation",
395:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
396:       "weka.attributeSelection.PrincipalComponents",
397:       "weka.core.converters.LibSVMLoader",
398:       "weka.classifiers.rules.ZeroR",
399:       "weka.core.converters.SVMLightLoader",
400:       "weka.clusterers.AbstractClusterer",
401:       "weka.clusterers.RandomizableClusterer",
402:       "weka.clusterers.SimpleKMeans",
403:       "weka.core.SerializedObject",
404:       "weka.core.converters.ConverterUtils$DataSource",
405:       "weka.gui.GenericPropertiesCreator",
406:       "weka.gui.GenericObjectEditor",
407:       "weka.core.converters.ConverterUtils",
408:       "weka.core.converters.DatabaseLoader",
409:       "weka.experiment.DatabaseUtils",
410:       "weka.core.converters.DatabaseConnection",
411:       "weka.classifiers.evaluation.output.prediction.HTML",
412:       "weka.core.converters.ArffLoader$ArffReader",
413:       "weka.classifiers.SingleClassifierEnhancer",
414:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
415:       "weka.classifiers.meta.MultiClassClassifier",
416:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
417:       "weka.classifiers.functions.Logistic",
418:       "weka.core.RevisionUtils",
419:       "weka.classifiers.lazy.IBk",
420:       "weka.core.neighboursearch.LinearNNSearch",
421:       "weka.filters.Filter",
422:       "weka.filters.AllFilter",
423:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
424:       "weka.classifiers.rules.PART",
425:       "weka.classifiers.rules.part.MakeDecList",
426:       "weka.classifiers.bayes.BayesNet",
427:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
428:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
429:       "weka.classifiers.bayes.net.search.local.K2",
430:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
431:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
432:       "weka.classifiers.functions.supportVector.RBFKernel",
433:       "weka.classifiers.trees.m5.M5Base",
434:       "weka.classifiers.trees.M5P",
435:       "weka.classifiers.evaluation.output.prediction.CSV",
436:       "weka.classifiers.meta.AttributeSelectedClassifier",
437:       "weka.attributeSelection.CfsSubsetEval",
438:       "weka.attributeSelection.ASSearch",
439:       "weka.attributeSelection.BestFirst",
440:       "weka.classifiers.trees.J48",
441:       "weka.classifiers.misc.InputMappedClassifier",
442:       "weka.core.converters.CSVLoader",
443:       "weka.classifiers.meta.FilteredClassifier",
444:       "weka.filters.supervised.attribute.AttributeSelection",
445:       "weka.attributeSelection.AttributeSelection",
446:       "weka.attributeSelection.GreedyStepwise",
447:       "weka.filters.supervised.attribute.Discretize",
448:       "weka.experiment.InstanceQuery",
449:       "weka.classifiers.lazy.LWL",
450:       "weka.classifiers.trees.DecisionStump",
451:       "weka.core.AttributeStats",
452:       "weka.classifiers.trees.RandomTree",
453:       "weka.classifiers.bayes.NaiveBayes",
454:       "weka.classifiers.bayes.NaiveBayesUpdateable",
455:       "weka.core.neighboursearch.BallTree",
456:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
457:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
458:       "weka.core.neighboursearch.balltrees.BallSplitter",
459:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
460:       "weka.classifiers.meta.CostSensitiveClassifier",
461:       "weka.classifiers.IteratedSingleClassifierEnhancer",
462:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
463:       "weka.classifiers.meta.AdaBoostM1",
464:       "weka.filters.SimpleFilter",
465:       "weka.filters.SimpleStreamFilter",
466:       "weka.filters.MultiFilter",
467:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
468:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
469:       "weka.classifiers.meta.Bagging",
470:       "weka.classifiers.trees.REPTree",
471:       "weka.attributeSelection.WrapperSubsetEval",
472:       "weka.classifiers.meta.CVParameterSelection",
473:       "weka.core.FastVector",
474:       "weka.classifiers.evaluation.output.prediction.PlainText",
475:       "weka.classifiers.meta.AdditiveRegression",
476:       "weka.classifiers.MultipleClassifiersCombiner",
477:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
478:       "weka.classifiers.meta.Vote",
479:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
480:       "weka.classifiers.meta.LogitBoost",
481:       "weka.classifiers.functions.GaussianProcesses",
482:       "weka.core.neighboursearch.KDTree",
483:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
484:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
485:       "weka.attributeSelection.InfoGainAttributeEval",
486:       "weka.classifiers.rules.JRip",
487:       "weka.classifiers.functions.LinearRegression",
488:       "weka.classifiers.meta.RegressionByDiscretization",
489:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
490:       "weka.filters.unsupervised.attribute.Discretize",
491:       "weka.core.FindWithCapabilities",
492:       "weka.core.SingleIndex",
493:       "weka.core.ClassDiscovery",
494:       "weka.classifiers.rules.OneR",
495:       "weka.classifiers.rules.OneR$OneRRule",
496:       "weka.classifiers.misc.SerializedClassifier",
497:       "weka.classifiers.meta.ClassificationViaRegression",
498:       "weka.core.neighboursearch.balltrees.BallNode",
499:       "weka.clusterers.HierarchicalClusterer",
500:       "weka.core.UnassignedClassException",
501:       "weka.classifiers.lazy.KStar",
502:       "weka.classifiers.functions.supportVector.Puk",
503:       "weka.classifiers.functions.MultilayerPerceptron",
504:       "weka.filters.unsupervised.attribute.NominalToBinary",
505:       "weka.classifiers.functions.neural.SigmoidUnit",
506:       "weka.classifiers.functions.neural.LinearUnit",
507:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
508:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
509:       "weka.classifiers.meta.Stacking",
510:       "weka.estimators.UnivariateKernelEstimator",
511:       "weka.core.Javadoc",
512:       "weka.core.OptionHandlerJavadoc",
513:       "weka.classifiers.functions.SimpleLogistic",
514:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
515:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
516:       "weka.classifiers.functions.VotedPerceptron",
517:       "weka.estimators.Estimator",
518:       "weka.estimators.PoissonEstimator",
519:       "weka.classifiers.meta.MultiScheme",
520:       "weka.classifiers.rules.M5Rules",
521:       "weka.classifiers.RandomizableClassifier",
522:       "weka.classifiers.functions.SGDText",
523:       "weka.clusterers.FarthestFirst",
524:       "weka.classifiers.rules.DecisionTable",
525:       "weka.core.matrix.Matrix",
526:       "weka.classifiers.functions.neural.NeuralConnection",
527:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
528:       "weka.classifiers.functions.SGD",
529:       "weka.classifiers.functions.SimpleLinearRegression",
530:       "weka.experiment.Stats",
531:       "weka.classifiers.functions.SMO",
532:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
533:       "weka.attributeSelection.GainRatioAttributeEval",
534:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
535:       "weka.clusterers.AbstractDensityBasedClusterer",
536:       "weka.clusterers.MakeDensityBasedClusterer",
537:       "weka.clusterers.SingleClustererEnhancer",
538:       "weka.clusterers.FilteredClusterer",
539:       "weka.core.ClassCache",
540:       "weka.core.AllJavadoc",
541:       "weka.classifiers.pmml.consumer.PMMLClassifier",
542:       "weka.classifiers.pmml.consumer.Regression",
543:       "weka.classifiers.pmml.consumer.Regression$Normalization",
544:       "weka.core.tokenizers.NGramTokenizer",
545:       "weka.classifiers.evaluation.output.prediction.XML",
546:       "weka.classifiers.trees.LMT",
547:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
548:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
549:       "weka.estimators.KernelEstimator",
550:       "weka.clusterers.RandomizableDensityBasedClusterer",
551:       "weka.clusterers.EM",
552:       "weka.classifiers.meta.RandomCommittee",
553:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
554:       "weka.classifiers.meta.RandomSubSpace",
555:       "weka.attributeSelection.ReliefFAttributeEval",
556:       "weka.estimators.MahalanobisEstimator",
557:       "weka.classifiers.trees.j48.ClassifierTree",
558:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
559:       "weka.classifiers.trees.RandomForest",
560:       "weka.attributeSelection.CorrelationAttributeEval",
561:       "weka.core.MinkowskiDistance",
562:       "weka.classifiers.functions.supportVector.StringKernel",
563:       "weka.estimators.NormalEstimator",
564:       "weka.core.ManhattanDistance",
565:       "weka.core.Capabilities$Capability",
566:       "weka.classifiers.evaluation.ThresholdCurve",
567:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
568:       "weka.core.Queue",
569:       "weka.core.AttributeLocator",
570:       "weka.core.StringLocator",
571:       "weka.core.RelationalLocator",
572:       "weka.core.Queue$QueueNode",
573:       "weka.classifiers.trees.j48.ModelSelection",
574:       "weka.classifiers.trees.j48.C45ModelSelection",
575:       "weka.classifiers.trees.lmt.LogisticBase",
576:       "weka.classifiers.trees.lmt.LMTNode",
577:       "weka.filters.supervised.attribute.NominalToBinary",
578:       "weka.classifiers.evaluation.NominalPrediction",
579:       "weka.classifiers.evaluation.Prediction"
580:     );
581:   }
582: }

[MASTER] 21:50:56.979 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
Evaluation evaluation0 = new Evaluation(instances0, (CostMatrix) null);
evaluation0.toSummaryString("useStopListTipText", true);
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
evaluation0.areaUnderROC(106);
double double0 = evaluation0.m_Correct;
double double1 = evaluation0.m_SumClassPredicted;
assertNotEquals(double1, double2, 0.01);


[MASTER] 21:51:03.725 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:51:04.086 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:51:04.086 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 21:51:05.710 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:51:05.729 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 21:51:06.204 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
