* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19147
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:45:10.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:45:10.752 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:45:10.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:45:10.786 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Search finished after 299s and 49 generations, 43390 statements, best individual has fitness: 2208.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 632
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 420
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 620
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 105
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 406
* Generated 188 tests with total length 3672
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 17:55:44.183 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6674375% of time used, but only 58/188 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
[MASTER] 17:57:18.921 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19150
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19151
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19153
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:58:03.421 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:58:03.471 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:58:03.473 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:58:03.741 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:58:03.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:58:03.772 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 17:58:06.522 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:58:06.526 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:58:06.533 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:58:06.644 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:58:06.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:58:06.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 17:58:14.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 17:58:14.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 17:58:14.745 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 17:58:14.746 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:58:25.046 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.updateClassifier(Lweka/core/Instance;Z)V
[MASTER] 17:58:28.174 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:58:28.188 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:58:28.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:58:29.343 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:58:30.273 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:58:30.276 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:58:31.034 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:58:31.144 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 17:58:33.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:58:34.030 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:58:34.031 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:58:34.031 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:58:34.035 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:58:34.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:58:34.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:58:34.037 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:58:34.046 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:58:34.239 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 17:58:34.272 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 17:58:49.781 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 17:59:24.404 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:59:39.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: Line 445
[MASTER] 17:59:39.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: Line 447
[MASTER] 17:59:39.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: Line 448
[MASTER] 17:59:39.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: Line 450
[MASTER] 17:59:39.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: Line 459
[MASTER] 17:59:39.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I207 Branch 34 IFEQ L444 - false
[MASTER] 17:59:39.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I218 Branch 35 IFEQ L445 - true
[MASTER] 17:59:39.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I218 Branch 35 IFEQ L445 - false
[MASTER] 17:59:39.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I227 Branch 36 IFEQ L447 - true
[MASTER] 17:59:39.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I295 Branch 39 IFEQ L458 - false
[MASTER] 17:59:39.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 186: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V:412 - ReplaceVariable m_lowercaseTokens -> m_normalize
[MASTER] 17:59:39.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I295 Branch 39 IFEQ L458 - false in context: 
[MASTER] 17:59:39.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I218 Branch 35 IFEQ L445 - true in context: 
[MASTER] 17:59:39.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I207 Branch 34 IFEQ L444 - false in context: 
[MASTER] 17:59:39.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I218 Branch 35 IFEQ L445 - false in context: 
[MASTER] 17:59:39.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V: I227 Branch 36 IFEQ L447 - true in context: 
[MASTER] 18:00:32.715 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 262s and 369 generations, 141103 statements, best individual has fitness: 4544.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 261
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 138
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 70%
* Total number of goals: 713
* Number of covered goals: 498
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 138
* Generated 86 tests with total length 651
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 244s and 118 generations, 61485 statements, best individual has fitness: 15856.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 1378
* Number of covered goals: 781
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 331
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 76
* Number of covered goals: 76
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 250
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 809
* Number of covered goals: 318
* Generated 169 tests with total length 1579
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 319s and 315 generations, 282652 statements, best individual has fitness: 1344.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 338
* Number of covered goals: 315
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 194
* Number of covered goals: 172
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 476
* Number of covered goals: 429
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 194
* Number of covered goals: 170
* Generated 89 tests with total length 1188
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 18:06:09.718 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:06:11.107 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:06:47.845 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 18:06:47.847 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute("..");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.add(attribute0);
arrayList0.parallelStream();
Instances instances0 = new Instances("numeric", arrayList0, 3);
Attribute attribute1 = new Attribute("relational", instances0, 60);
arrayList0.add(attribute1);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 18:11:04.769 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:11:05.163 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:11:05.163 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 18:11:06.188 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:11:36.962 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 18:11:39.670 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_13_1575310299569/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_13_1575310299569/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.java]]
[MASTER] 18:11:39.670 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:39.674 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:39.678 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 18:11:39.678 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 18:11:39.678 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:39.679 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_13_1575310299569/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 18:11:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.stemmers.Stemmer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_13_tmp__ESTest extends NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       naiveBayesMultinomialText0.setStemmer((Stemmer) null);
31:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
32:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
33:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
34:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
35:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
36:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_13_1575310299569/weka/classifiers/bayes/NaiveBayesMultinomialText_13_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 18:11:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.WekaEnumeration",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.classifiers.meta.CostSensitiveClassifier",
175:       "weka.core.Option",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.UnassignedDatasetException",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.core.neighboursearch.covertrees.Stack",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_13_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Utils",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.UnassignedDatasetException",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.DenseInstance",
239:       "weka.core.TestInstances",
240:       "weka.classifiers.SingleClassifierEnhancer",
241:       "weka.classifiers.misc.InputMappedClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.core.neighboursearch.balltrees.BallNode",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.SerializedObject",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.classifiers.functions.SGDText",
255:       "weka.core.stemmers.SnowballStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.SingleIndex",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.Stopwords",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.Instances",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.CoverTree",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.filters.Filter",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
283:       "weka.classifiers.meta.CostSensitiveClassifier",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.stemmers.LovinsStemmer",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
289:       "weka.core.tokenizers.NGramTokenizer",
290:       "weka.core.tokenizers.AlphabeticTokenizer",
291:       "weka.core.ClassDiscovery",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.Stacking",
298:       "weka.core.ManhattanDistance",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.core.stemmers.Stemming",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
309:       "weka.classifiers.bayes.NaiveBayesMultinomial",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.KernelEstimator",
316:       "weka.filters.SimpleFilter",
317:       "weka.filters.SimpleStreamFilter",
318:       "weka.filters.MultiFilter",
319:       "weka.filters.AllFilter",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.attributeSelection.AttributeSelection",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.PolyKernel",
331:       "weka.classifiers.misc.SerializedClassifier",
332:       "weka.core.WekaEnumeration",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.attributeSelection.CfsSubsetEval",
335:       "weka.attributeSelection.ASSearch",
336:       "weka.attributeSelection.BestFirst",
337:       "weka.classifiers.trees.J48",
338:       "weka.classifiers.meta.RegressionByDiscretization",
339:       "weka.filters.unsupervised.attribute.Discretize",
340:       "weka.core.Attribute$1",
341:       "weka.classifiers.functions.MultilayerPerceptron",
342:       "weka.core.FastVector",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.meta.CVParameterSelection",
347:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.attributeSelection.CorrelationAttributeEval",
357:       "weka.classifiers.functions.supportVector.RBFKernel",
358:       "weka.attributeSelection.ReliefFAttributeEval",
359:       "weka.classifiers.functions.SGD",
360:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.trees.DecisionStump",
363:       "weka.classifiers.functions.supportVector.Puk",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.OptionHandlerJavadoc",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.core.SelectedTag",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.core.matrix.Matrix",
373:       "weka.attributeSelection.GainRatioAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.LogitBoost",
376:       "weka.core.UnassignedClassException",
377:       "weka.classifiers.rules.JRip",
378:       "weka.classifiers.rules.M5Rules",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.estimators.NormalEstimator",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.supportVector.StringKernel",
388:       "weka.classifiers.meta.MultiClassClassifier",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.trees.j48.ClassifierTree",
394:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
395:       "weka.classifiers.meta.FilteredClassifier",
396:       "weka.filters.supervised.attribute.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.core.ContingencyTables",
399:       "weka.core.Queue$QueueNode",
400:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
401:       "weka.classifiers.meta.AdditiveRegression",
402:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
405:       "weka.core.SerializationHelper",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.functions.SimpleLogistic",
409:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.trees.LMT",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.meta.MultiScheme",
414:       "weka.classifiers.functions.SMOreg",
415:       "weka.classifiers.functions.supportVector.RegOptimizer",
416:       "weka.classifiers.functions.supportVector.RegSMO",
417:       "weka.classifiers.functions.supportVector.RegSMOImproved",
418:       "weka.attributeSelection.OneRAttributeEval",
419:       "weka.core.AttributeStats",
420:       "weka.classifiers.functions.VotedPerceptron",
421:       "weka.classifiers.functions.SimpleLinearRegression",
422:       "weka.experiment.Stats",
423:       "weka.core.neighboursearch.PerformanceStats",
424:       "weka.core.ListOptions"
425:     );
426:   }
427: }

[MASTER] 18:11:39.680 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setStemmer((Stemmer) null);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 18:11:40.423 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1575310300382/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1575310300382/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.java]]
[MASTER] 18:11:40.423 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:40.423 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:40.424 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:40.424 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:40.424 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 18:11:40.425 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1575310300382/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 18:11:40 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_24_tmp__ESTest extends NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.4241710186205303
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
28:       
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       Integer integer0 = new Integer(30);
31:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
32:       naiveBayesMultinomialText0.pruneDictionary();
33:       String[] stringArray0 = new String[4];
34:       stringArray0[0] = ";";
35:       stringArray0[1] = "-lnorm";
36:       stringArray0[2] = "";
37:       stringArray0[3] = "nbMMpK(y8EIZ,b_y!r&";
38:       naiveBayesMultinomialText0.setOptions(stringArray0);
39:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
40:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
41:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
42:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
43:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
44:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
45:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_24_1575310300382/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 18:11:40 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.WekaEnumeration",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.classifiers.meta.CostSensitiveClassifier",
175:       "weka.core.Option",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.UnassignedDatasetException",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.core.neighboursearch.covertrees.Stack",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Utils",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.UnassignedDatasetException",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.DenseInstance",
239:       "weka.core.TestInstances",
240:       "weka.classifiers.SingleClassifierEnhancer",
241:       "weka.classifiers.misc.InputMappedClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.core.neighboursearch.balltrees.BallNode",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.SerializedObject",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.classifiers.functions.SGDText",
255:       "weka.core.stemmers.SnowballStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.SingleIndex",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.Stopwords",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.Instances",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.CoverTree",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.filters.Filter",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
283:       "weka.classifiers.meta.CostSensitiveClassifier",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.stemmers.LovinsStemmer",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
289:       "weka.core.tokenizers.NGramTokenizer",
290:       "weka.core.tokenizers.AlphabeticTokenizer",
291:       "weka.core.ClassDiscovery",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.Stacking",
298:       "weka.core.ManhattanDistance",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.core.stemmers.Stemming",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
309:       "weka.classifiers.bayes.NaiveBayesMultinomial",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.KernelEstimator",
316:       "weka.filters.SimpleFilter",
317:       "weka.filters.SimpleStreamFilter",
318:       "weka.filters.MultiFilter",
319:       "weka.filters.AllFilter",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.attributeSelection.AttributeSelection",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.PolyKernel",
331:       "weka.classifiers.misc.SerializedClassifier",
332:       "weka.core.WekaEnumeration",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.attributeSelection.CfsSubsetEval",
335:       "weka.attributeSelection.ASSearch",
336:       "weka.attributeSelection.BestFirst",
337:       "weka.classifiers.trees.J48",
338:       "weka.classifiers.meta.RegressionByDiscretization",
339:       "weka.filters.unsupervised.attribute.Discretize",
340:       "weka.core.Attribute$1",
341:       "weka.classifiers.functions.MultilayerPerceptron",
342:       "weka.core.FastVector",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.meta.CVParameterSelection",
347:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.attributeSelection.CorrelationAttributeEval",
357:       "weka.classifiers.functions.supportVector.RBFKernel",
358:       "weka.attributeSelection.ReliefFAttributeEval",
359:       "weka.classifiers.functions.SGD",
360:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.trees.DecisionStump",
363:       "weka.classifiers.functions.supportVector.Puk",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.OptionHandlerJavadoc",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.core.SelectedTag",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.core.matrix.Matrix",
373:       "weka.attributeSelection.GainRatioAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.LogitBoost",
376:       "weka.core.UnassignedClassException",
377:       "weka.classifiers.rules.JRip",
378:       "weka.classifiers.rules.M5Rules",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.estimators.NormalEstimator",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.supportVector.StringKernel",
388:       "weka.classifiers.meta.MultiClassClassifier",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.trees.j48.ClassifierTree",
394:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
395:       "weka.classifiers.meta.FilteredClassifier",
396:       "weka.filters.supervised.attribute.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.core.ContingencyTables",
399:       "weka.core.Queue$QueueNode",
400:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
401:       "weka.classifiers.meta.AdditiveRegression",
402:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
405:       "weka.core.SerializationHelper",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.functions.SimpleLogistic",
409:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.trees.LMT",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.meta.MultiScheme",
414:       "weka.classifiers.functions.SMOreg",
415:       "weka.classifiers.functions.supportVector.RegOptimizer",
416:       "weka.classifiers.functions.supportVector.RegSMO",
417:       "weka.classifiers.functions.supportVector.RegSMOImproved",
418:       "weka.attributeSelection.OneRAttributeEval",
419:       "weka.core.AttributeStats",
420:       "weka.classifiers.functions.VotedPerceptron",
421:       "weka.classifiers.functions.SimpleLinearRegression",
422:       "weka.experiment.Stats",
423:       "weka.core.neighboursearch.PerformanceStats",
424:       "weka.core.ListOptions"
425:     );
426:   }
427: }

[MASTER] 18:11:40.426 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());

HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(30);
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.pruneDictionary();
String[] stringArray0 = new String[4];
stringArray0[0] = ";";
stringArray0[1] = "-lnorm";
stringArray0[2] = "";
stringArray0[3] = "nbMMpK(y8EIZ,b_y!r&";
naiveBayesMultinomialText0.setOptions(stringArray0);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 18:11:40.539 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1575310300427/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1575310300427/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.java]]
[MASTER] 18:11:40.539 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:40.539 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:40.539 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 18:11:40.539 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 18:11:40.540 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 18:11:40.541 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1575310300427/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 18:11:40 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.HashMap;
13: import java.util.LinkedHashMap;
14: import java.util.Map;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.AbstractClassifier;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.classifiers.misc.SerializedClassifier;
21: import weka.core.Instance;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_25_tmp__ESTest extends NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.4241710186205303
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       Integer integer0 = new Integer(1302);
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       String[] stringArray0 = new String[5];
38:       stringArray0[0] = "-stopwords";
39:       stringArray0[1] = "";
40:       stringArray0[2] = "#a~BD/bmV>p";
41:       stringArray0[3] = "";
42:       stringArray0[4] = "}J>7=W(4tt9l2='CJ";
43:       naiveBayesMultinomialText1.setOptions(stringArray0);
44:       SerializedClassifier serializedClassifier0 = new SerializedClassifier();
45:       try { 
46:         AbstractClassifier.forName((String) null, stringArray0);
47:         fail("Expecting exception: Exception");
48:       
49:       } catch(Exception e) {
50:          //
51:          // Can't find class called: null
52:          //
53:          verifyException("weka.core.Utils", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_25_1575310300427/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 18:11:40 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.WekaEnumeration",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.classifiers.meta.CostSensitiveClassifier",
175:       "weka.core.Option",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.UnassignedDatasetException",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.core.neighboursearch.covertrees.Stack",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Utils",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.UnassignedDatasetException",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.DenseInstance",
239:       "weka.core.TestInstances",
240:       "weka.classifiers.SingleClassifierEnhancer",
241:       "weka.classifiers.misc.InputMappedClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.core.neighboursearch.balltrees.BallNode",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.SerializedObject",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.classifiers.functions.SGDText",
255:       "weka.core.stemmers.SnowballStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.SingleIndex",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.Stopwords",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.Instances",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.CoverTree",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.filters.Filter",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
283:       "weka.classifiers.meta.CostSensitiveClassifier",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.stemmers.LovinsStemmer",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
289:       "weka.core.tokenizers.NGramTokenizer",
290:       "weka.core.tokenizers.AlphabeticTokenizer",
291:       "weka.core.ClassDiscovery",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.Stacking",
298:       "weka.core.ManhattanDistance",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.core.stemmers.Stemming",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
309:       "weka.classifiers.bayes.NaiveBayesMultinomial",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.KernelEstimator",
316:       "weka.filters.SimpleFilter",
317:       "weka.filters.SimpleStreamFilter",
318:       "weka.filters.MultiFilter",
319:       "weka.filters.AllFilter",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.attributeSelection.AttributeSelection",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.PolyKernel",
331:       "weka.classifiers.misc.SerializedClassifier",
332:       "weka.core.WekaEnumeration",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.attributeSelection.CfsSubsetEval",
335:       "weka.attributeSelection.ASSearch",
336:       "weka.attributeSelection.BestFirst",
337:       "weka.classifiers.trees.J48",
338:       "weka.classifiers.meta.RegressionByDiscretization",
339:       "weka.filters.unsupervised.attribute.Discretize",
340:       "weka.core.Attribute$1",
341:       "weka.classifiers.functions.MultilayerPerceptron",
342:       "weka.core.FastVector",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.meta.CVParameterSelection",
347:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.attributeSelection.CorrelationAttributeEval",
357:       "weka.classifiers.functions.supportVector.RBFKernel",
358:       "weka.attributeSelection.ReliefFAttributeEval",
359:       "weka.classifiers.functions.SGD",
360:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.trees.DecisionStump",
363:       "weka.classifiers.functions.supportVector.Puk",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.OptionHandlerJavadoc",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.core.SelectedTag",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.core.matrix.Matrix",
373:       "weka.attributeSelection.GainRatioAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.LogitBoost",
376:       "weka.core.UnassignedClassException",
377:       "weka.classifiers.rules.JRip",
378:       "weka.classifiers.rules.M5Rules",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.estimators.NormalEstimator",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.supportVector.StringKernel",
388:       "weka.classifiers.meta.MultiClassClassifier",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.trees.j48.ClassifierTree",
394:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
395:       "weka.classifiers.meta.FilteredClassifier",
396:       "weka.filters.supervised.attribute.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.core.ContingencyTables",
399:       "weka.core.Queue$QueueNode",
400:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
401:       "weka.classifiers.meta.AdditiveRegression",
402:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
405:       "weka.core.SerializationHelper",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.functions.SimpleLogistic",
409:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.trees.LMT",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.meta.MultiScheme",
414:       "weka.classifiers.functions.SMOreg",
415:       "weka.classifiers.functions.supportVector.RegOptimizer",
416:       "weka.classifiers.functions.supportVector.RegSMO",
417:       "weka.classifiers.functions.supportVector.RegSMOImproved",
418:       "weka.attributeSelection.OneRAttributeEval",
419:       "weka.core.AttributeStats",
420:       "weka.classifiers.functions.VotedPerceptron",
421:       "weka.classifiers.functions.SimpleLinearRegression",
422:       "weka.experiment.Stats",
423:       "weka.core.neighboursearch.PerformanceStats",
424:       "weka.core.ListOptions"
425:     );
426:   }
427: }

[MASTER] 18:11:40.542 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
Integer integer0 = new Integer(1302);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[5];
stringArray0[0] = "-stopwords";
stringArray0[1] = "";
stringArray0[2] = "#a~BD/bmV>p";
stringArray0[3] = "";
stringArray0[4] = "}J>7=W(4tt9l2='CJ";
naiveBayesMultinomialText1.setOptions(stringArray0);
SerializedClassifier serializedClassifier0 = new SerializedClassifier();
AbstractClassifier.forName((String) null, stringArray0);

[MASTER] 18:11:40.884 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_30_1575310300826/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_30_1575310300826/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.java]]
[MASTER] 18:11:40.884 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:40.884 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:40.884 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:40.884 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:40.886 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_30_1575310300826/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 18:11:40 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_30_tmp__ESTest extends NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_t = 3368.126601982;
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
31:       naiveBayesMultinomialText0.m_useStopList = false;
32:       // Undeclared exception!
33:       try { 
34:         naiveBayesMultinomialText0.tokenizeInstance((Instance) null, false);
35:         fail("Expecting exception: NullPointerException");
36:       
37:       } catch(NullPointerException e) {
38:          //
39:          // no message in exception (getMessage() returned null)
40:          //
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_30_1575310300826/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 18:11:40 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.WekaEnumeration",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.classifiers.meta.CostSensitiveClassifier",
175:       "weka.core.Option",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.UnassignedDatasetException",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.core.neighboursearch.covertrees.Stack",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Utils",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.UnassignedDatasetException",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.DenseInstance",
239:       "weka.core.TestInstances",
240:       "weka.classifiers.SingleClassifierEnhancer",
241:       "weka.classifiers.misc.InputMappedClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.core.neighboursearch.balltrees.BallNode",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.SerializedObject",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.classifiers.functions.SGDText",
255:       "weka.core.stemmers.SnowballStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.SingleIndex",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.Stopwords",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.Instances",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.CoverTree",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.filters.Filter",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
283:       "weka.classifiers.meta.CostSensitiveClassifier",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.stemmers.LovinsStemmer",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
289:       "weka.core.tokenizers.NGramTokenizer",
290:       "weka.core.tokenizers.AlphabeticTokenizer",
291:       "weka.core.ClassDiscovery",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.Stacking",
298:       "weka.core.ManhattanDistance",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.core.stemmers.Stemming",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
309:       "weka.classifiers.bayes.NaiveBayesMultinomial",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.KernelEstimator",
316:       "weka.filters.SimpleFilter",
317:       "weka.filters.SimpleStreamFilter",
318:       "weka.filters.MultiFilter",
319:       "weka.filters.AllFilter",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.attributeSelection.AttributeSelection",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.PolyKernel",
331:       "weka.classifiers.misc.SerializedClassifier",
332:       "weka.core.WekaEnumeration",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.attributeSelection.CfsSubsetEval",
335:       "weka.attributeSelection.ASSearch",
336:       "weka.attributeSelection.BestFirst",
337:       "weka.classifiers.trees.J48",
338:       "weka.classifiers.meta.RegressionByDiscretization",
339:       "weka.filters.unsupervised.attribute.Discretize",
340:       "weka.core.Attribute$1",
341:       "weka.classifiers.functions.MultilayerPerceptron",
342:       "weka.core.FastVector",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.meta.CVParameterSelection",
347:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.attributeSelection.CorrelationAttributeEval",
357:       "weka.classifiers.functions.supportVector.RBFKernel",
358:       "weka.attributeSelection.ReliefFAttributeEval",
359:       "weka.classifiers.functions.SGD",
360:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.trees.DecisionStump",
363:       "weka.classifiers.functions.supportVector.Puk",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.OptionHandlerJavadoc",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.core.SelectedTag",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.core.matrix.Matrix",
373:       "weka.attributeSelection.GainRatioAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.LogitBoost",
376:       "weka.core.UnassignedClassException",
377:       "weka.classifiers.rules.JRip",
378:       "weka.classifiers.rules.M5Rules",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.estimators.NormalEstimator",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.supportVector.StringKernel",
388:       "weka.classifiers.meta.MultiClassClassifier",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.trees.j48.ClassifierTree",
394:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
395:       "weka.classifiers.meta.FilteredClassifier",
396:       "weka.filters.supervised.attribute.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.core.ContingencyTables",
399:       "weka.core.Queue$QueueNode",
400:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
401:       "weka.classifiers.meta.AdditiveRegression",
402:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
405:       "weka.core.SerializationHelper",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.functions.SimpleLogistic",
409:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.trees.LMT",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.meta.MultiScheme",
414:       "weka.classifiers.functions.SMOreg",
415:       "weka.classifiers.functions.supportVector.RegOptimizer",
416:       "weka.classifiers.functions.supportVector.RegSMO",
417:       "weka.classifiers.functions.supportVector.RegSMOImproved",
418:       "weka.attributeSelection.OneRAttributeEval",
419:       "weka.core.AttributeStats",
420:       "weka.classifiers.functions.VotedPerceptron",
421:       "weka.classifiers.functions.SimpleLinearRegression",
422:       "weka.experiment.Stats",
423:       "weka.core.neighboursearch.PerformanceStats",
424:       "weka.core.ListOptions"
425:     );
426:   }
427: }

[MASTER] 18:11:40.886 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_t = 3368.126601982;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.m_useStopList = false;
naiveBayesMultinomialText0.tokenizeInstance((Instance) null, false);

[MASTER] 18:11:41.926 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_50_1575310301888/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_50_1575310301888/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.java]]
[MASTER] 18:11:41.926 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:41.926 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:41.926 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 18:11:41.926 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 18:11:41.934 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:41.935 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_50_1575310301888/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 18:11:41 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_50_tmp__ESTest extends NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
30:       naiveBayesMultinomialText0.m_periodicP = 1302;
31:       naiveBayesMultinomialText0.pruneDictionary();
32:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
33:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
34:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
35:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
36:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_50_1575310301888/weka/classifiers/bayes/NaiveBayesMultinomialText_50_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 18:11:41 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.WekaEnumeration",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.classifiers.meta.CostSensitiveClassifier",
175:       "weka.core.Option",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.UnassignedDatasetException",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.core.neighboursearch.covertrees.Stack",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_50_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Utils",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.UnassignedDatasetException",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.DenseInstance",
239:       "weka.core.TestInstances",
240:       "weka.classifiers.SingleClassifierEnhancer",
241:       "weka.classifiers.misc.InputMappedClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.core.neighboursearch.balltrees.BallNode",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.SerializedObject",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.classifiers.functions.SGDText",
255:       "weka.core.stemmers.SnowballStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.SingleIndex",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.Stopwords",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.Instances",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.CoverTree",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.filters.Filter",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
283:       "weka.classifiers.meta.CostSensitiveClassifier",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.stemmers.LovinsStemmer",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
289:       "weka.core.tokenizers.NGramTokenizer",
290:       "weka.core.tokenizers.AlphabeticTokenizer",
291:       "weka.core.ClassDiscovery",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.Stacking",
298:       "weka.core.ManhattanDistance",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.core.stemmers.Stemming",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
309:       "weka.classifiers.bayes.NaiveBayesMultinomial",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.KernelEstimator",
316:       "weka.filters.SimpleFilter",
317:       "weka.filters.SimpleStreamFilter",
318:       "weka.filters.MultiFilter",
319:       "weka.filters.AllFilter",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.attributeSelection.AttributeSelection",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.PolyKernel",
331:       "weka.classifiers.misc.SerializedClassifier",
332:       "weka.core.WekaEnumeration",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.attributeSelection.CfsSubsetEval",
335:       "weka.attributeSelection.ASSearch",
336:       "weka.attributeSelection.BestFirst",
337:       "weka.classifiers.trees.J48",
338:       "weka.classifiers.meta.RegressionByDiscretization",
339:       "weka.filters.unsupervised.attribute.Discretize",
340:       "weka.core.Attribute$1",
341:       "weka.classifiers.functions.MultilayerPerceptron",
342:       "weka.core.FastVector",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.meta.CVParameterSelection",
347:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.attributeSelection.CorrelationAttributeEval",
357:       "weka.classifiers.functions.supportVector.RBFKernel",
358:       "weka.attributeSelection.ReliefFAttributeEval",
359:       "weka.classifiers.functions.SGD",
360:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.trees.DecisionStump",
363:       "weka.classifiers.functions.supportVector.Puk",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.OptionHandlerJavadoc",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.core.SelectedTag",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.core.matrix.Matrix",
373:       "weka.attributeSelection.GainRatioAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.LogitBoost",
376:       "weka.core.UnassignedClassException",
377:       "weka.classifiers.rules.JRip",
378:       "weka.classifiers.rules.M5Rules",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.estimators.NormalEstimator",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.supportVector.StringKernel",
388:       "weka.classifiers.meta.MultiClassClassifier",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.trees.j48.ClassifierTree",
394:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
395:       "weka.classifiers.meta.FilteredClassifier",
396:       "weka.filters.supervised.attribute.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.core.ContingencyTables",
399:       "weka.core.Queue$QueueNode",
400:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
401:       "weka.classifiers.meta.AdditiveRegression",
402:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
405:       "weka.core.SerializationHelper",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.functions.SimpleLogistic",
409:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.trees.LMT",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.meta.MultiScheme",
414:       "weka.classifiers.functions.SMOreg",
415:       "weka.classifiers.functions.supportVector.RegOptimizer",
416:       "weka.classifiers.functions.supportVector.RegSMO",
417:       "weka.classifiers.functions.supportVector.RegSMOImproved",
418:       "weka.attributeSelection.OneRAttributeEval",
419:       "weka.core.AttributeStats",
420:       "weka.classifiers.functions.VotedPerceptron",
421:       "weka.classifiers.functions.SimpleLinearRegression",
422:       "weka.experiment.Stats",
423:       "weka.core.neighboursearch.PerformanceStats",
424:       "weka.core.ListOptions"
425:     );
426:   }
427: }

[MASTER] 18:11:41.935 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.m_periodicP = 1302;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 18:11:44.147 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_78_1575310304106/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_78_1575310304106/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding.java]]
[MASTER] 18:11:44.147 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:44.147 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:44.147 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 18:11:44.149 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_78_1575310304106/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 18:11:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_78_tmp__ESTest extends NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.8408398156653452
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
31:       naiveBayesMultinomialText0.m_periodicP = 10000;
32:       naiveBayesMultinomialText0.m_minWordP = (double) 10000;
33:       naiveBayesMultinomialText0.getRevision();
34:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
35:       naiveBayesMultinomialText0.m_periodicP = 2601;
36:       naiveBayesMultinomialText0.m_t = (-1034.5);
37:       naiveBayesMultinomialText0.LNormTipText();
38:       naiveBayesMultinomialText0.m_data = null;
39:       Random.setNextRandom(2601);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
41:       naiveBayesMultinomialText0.m_inputVector = null;
42:       Random.setNextRandom(125);
43:       naiveBayesMultinomialText0.lowercaseTokensTipText();
44:       // Undeclared exception!
45:       try { 
46:         naiveBayesMultinomialText0.pruneDictionary();
47:         fail("Expecting exception: NullPointerException");
48:       
49:       } catch(NullPointerException e) {
50:          //
51:          // no message in exception (getMessage() returned null)
52:          //
53:       }
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_78_1575310304106/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 18:11:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.WekaEnumeration",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.classifiers.meta.CostSensitiveClassifier",
175:       "weka.core.Option",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.UnassignedDatasetException",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.core.neighboursearch.covertrees.Stack",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Utils",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.UnassignedDatasetException",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.DenseInstance",
239:       "weka.core.TestInstances",
240:       "weka.classifiers.SingleClassifierEnhancer",
241:       "weka.classifiers.misc.InputMappedClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.core.neighboursearch.balltrees.BallNode",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.SerializedObject",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.classifiers.functions.SGDText",
255:       "weka.core.stemmers.SnowballStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.SingleIndex",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.Stopwords",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.Instances",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.CoverTree",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.filters.Filter",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
283:       "weka.classifiers.meta.CostSensitiveClassifier",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.stemmers.LovinsStemmer",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
289:       "weka.core.tokenizers.NGramTokenizer",
290:       "weka.core.tokenizers.AlphabeticTokenizer",
291:       "weka.core.ClassDiscovery",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.Stacking",
298:       "weka.core.ManhattanDistance",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.core.stemmers.Stemming",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
309:       "weka.classifiers.bayes.NaiveBayesMultinomial",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.KernelEstimator",
316:       "weka.filters.SimpleFilter",
317:       "weka.filters.SimpleStreamFilter",
318:       "weka.filters.MultiFilter",
319:       "weka.filters.AllFilter",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.attributeSelection.AttributeSelection",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.PolyKernel",
331:       "weka.classifiers.misc.SerializedClassifier",
332:       "weka.core.WekaEnumeration",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.attributeSelection.CfsSubsetEval",
335:       "weka.attributeSelection.ASSearch",
336:       "weka.attributeSelection.BestFirst",
337:       "weka.classifiers.trees.J48",
338:       "weka.classifiers.meta.RegressionByDiscretization",
339:       "weka.filters.unsupervised.attribute.Discretize",
340:       "weka.core.Attribute$1",
341:       "weka.classifiers.functions.MultilayerPerceptron",
342:       "weka.core.FastVector",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.meta.CVParameterSelection",
347:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.attributeSelection.CorrelationAttributeEval",
357:       "weka.classifiers.functions.supportVector.RBFKernel",
358:       "weka.attributeSelection.ReliefFAttributeEval",
359:       "weka.classifiers.functions.SGD",
360:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.trees.DecisionStump",
363:       "weka.classifiers.functions.supportVector.Puk",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.OptionHandlerJavadoc",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.core.SelectedTag",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.core.matrix.Matrix",
373:       "weka.attributeSelection.GainRatioAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.LogitBoost",
376:       "weka.core.UnassignedClassException",
377:       "weka.classifiers.rules.JRip",
378:       "weka.classifiers.rules.M5Rules",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.estimators.NormalEstimator",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.supportVector.StringKernel",
388:       "weka.classifiers.meta.MultiClassClassifier",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.trees.j48.ClassifierTree",
394:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
395:       "weka.classifiers.meta.FilteredClassifier",
396:       "weka.filters.supervised.attribute.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.core.ContingencyTables",
399:       "weka.core.Queue$QueueNode",
400:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
401:       "weka.classifiers.meta.AdditiveRegression",
402:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
405:       "weka.core.SerializationHelper",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.functions.SimpleLogistic",
409:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.trees.LMT",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.meta.MultiScheme",
414:       "weka.classifiers.functions.SMOreg",
415:       "weka.classifiers.functions.supportVector.RegOptimizer",
416:       "weka.classifiers.functions.supportVector.RegSMO",
417:       "weka.classifiers.functions.supportVector.RegSMOImproved",
418:       "weka.attributeSelection.OneRAttributeEval",
419:       "weka.core.AttributeStats",
420:       "weka.classifiers.functions.VotedPerceptron",
421:       "weka.classifiers.functions.SimpleLinearRegression",
422:       "weka.experiment.Stats",
423:       "weka.core.neighboursearch.PerformanceStats",
424:       "weka.core.ListOptions"
425:     );
426:   }
427: }

[MASTER] 18:11:44.150 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.m_periodicP = 10000;
naiveBayesMultinomialText0.m_minWordP = (double) 10000;
naiveBayesMultinomialText0.getRevision();
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
naiveBayesMultinomialText0.m_periodicP = 2601;
naiveBayesMultinomialText0.m_t = (-1034.5);
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.m_data = null;
Random.setNextRandom(2601);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
Random.setNextRandom(125);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 18:11:44.177 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_79_1575310304150/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_79_1575310304150/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding.java]]
[MASTER] 18:11:44.177 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:44.177 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 18:11:44.178 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:44.178 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 18:11:44.178 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 18:11:44.178 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 18:11:44.178 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 18:11:44.178 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 18:11:44.179 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_79_1575310304150/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 18:11:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_79_tmp__ESTest extends NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=0.4
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       Integer integer0 = new Integer(3);
31:       Integer integer1 = new Integer(3);
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       hashMap0.put(integer0, linkedHashMap0);
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       Integer integer2 = new Integer(1302);
36:       Integer integer3 = new Integer(3);
37:       hashMap0.put(integer2, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
38:       naiveBayesMultinomialText0.m_periodicP = 1302;
39:       // Undeclared exception!
40:       try { 
41:         naiveBayesMultinomialText0.pruneDictionary();
42:         fail("Expecting exception: NullPointerException");
43:       
44:       } catch(NullPointerException e) {
45:          //
46:          // no message in exception (getMessage() returned null)
47:          //
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_79_1575310304150/weka/classifiers/bayes/NaiveBayesMultinomialText_79_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 18:11:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.estimators.DiscreteEstimator",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.WekaEnumeration",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.classifiers.meta.CostSensitiveClassifier",
175:       "weka.core.Option",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.UnassignedDatasetException",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.core.neighboursearch.covertrees.Stack",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_79_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Utils",
232:       "weka.core.AbstractInstance",
233:       "weka.core.SparseInstance",
234:       "weka.core.BinarySparseInstance",
235:       "weka.core.UnassignedDatasetException",
236:       "weka.classifiers.Evaluation",
237:       "weka.core.Option",
238:       "weka.core.DenseInstance",
239:       "weka.core.TestInstances",
240:       "weka.classifiers.SingleClassifierEnhancer",
241:       "weka.classifiers.misc.InputMappedClassifier",
242:       "weka.classifiers.rules.ZeroR",
243:       "weka.core.neighboursearch.balltrees.BallNode",
244:       "weka.classifiers.bayes.NaiveBayes",
245:       "weka.core.Tag",
246:       "weka.classifiers.lazy.IBk",
247:       "weka.core.neighboursearch.NearestNeighbourSearch",
248:       "weka.core.neighboursearch.LinearNNSearch",
249:       "weka.core.NormalizableDistance",
250:       "weka.core.EuclideanDistance",
251:       "weka.core.Range",
252:       "weka.core.SerializedObject",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.classifiers.functions.SGDText",
255:       "weka.core.stemmers.SnowballStemmer",
256:       "weka.core.RevisionUtils",
257:       "weka.core.FindWithCapabilities",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.SingleIndex",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.Stopwords",
268:       "weka.core.neighboursearch.BallTree",
269:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
270:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
271:       "weka.core.neighboursearch.balltrees.BallSplitter",
272:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
273:       "weka.core.Instances",
274:       "weka.classifiers.functions.supportVector.Kernel",
275:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
276:       "weka.core.neighboursearch.CoverTree",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.filters.Filter",
281:       "weka.filters.supervised.attribute.Discretize",
282:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
283:       "weka.classifiers.meta.CostSensitiveClassifier",
284:       "weka.classifiers.CostMatrix",
285:       "weka.core.stemmers.LovinsStemmer",
286:       "weka.core.stemmers.IteratedLovinsStemmer",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
289:       "weka.core.tokenizers.NGramTokenizer",
290:       "weka.core.tokenizers.AlphabeticTokenizer",
291:       "weka.core.ClassDiscovery",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.MultipleClassifiersCombiner",
295:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.Stacking",
298:       "weka.core.ManhattanDistance",
299:       "weka.classifiers.bayes.BayesNet",
300:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
301:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
302:       "weka.classifiers.bayes.net.search.local.K2",
303:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
304:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.core.stemmers.Stemming",
307:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
308:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
309:       "weka.classifiers.bayes.NaiveBayesMultinomial",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.estimators.Estimator",
315:       "weka.estimators.KernelEstimator",
316:       "weka.filters.SimpleFilter",
317:       "weka.filters.SimpleStreamFilter",
318:       "weka.filters.MultiFilter",
319:       "weka.filters.AllFilter",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.core.TechnicalInformation",
324:       "weka.core.TechnicalInformation$Type",
325:       "weka.core.TechnicalInformation$Field",
326:       "weka.core.converters.ArffLoader$ArffReader",
327:       "weka.attributeSelection.AttributeSelection",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.PolyKernel",
331:       "weka.classifiers.misc.SerializedClassifier",
332:       "weka.core.WekaEnumeration",
333:       "weka.classifiers.meta.AttributeSelectedClassifier",
334:       "weka.attributeSelection.CfsSubsetEval",
335:       "weka.attributeSelection.ASSearch",
336:       "weka.attributeSelection.BestFirst",
337:       "weka.classifiers.trees.J48",
338:       "weka.classifiers.meta.RegressionByDiscretization",
339:       "weka.filters.unsupervised.attribute.Discretize",
340:       "weka.core.Attribute$1",
341:       "weka.classifiers.functions.MultilayerPerceptron",
342:       "weka.core.FastVector",
343:       "weka.filters.unsupervised.attribute.NominalToBinary",
344:       "weka.classifiers.functions.neural.SigmoidUnit",
345:       "weka.classifiers.functions.neural.LinearUnit",
346:       "weka.classifiers.meta.CVParameterSelection",
347:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
348:       "weka.classifiers.IteratedSingleClassifierEnhancer",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomCommittee",
352:       "weka.attributeSelection.WrapperSubsetEval",
353:       "weka.core.Javadoc",
354:       "weka.core.GlobalInfoJavadoc",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.attributeSelection.CorrelationAttributeEval",
357:       "weka.classifiers.functions.supportVector.RBFKernel",
358:       "weka.attributeSelection.ReliefFAttributeEval",
359:       "weka.classifiers.functions.SGD",
360:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.trees.DecisionStump",
363:       "weka.classifiers.functions.supportVector.Puk",
364:       "weka.classifiers.meta.ClassificationViaRegression",
365:       "weka.classifiers.trees.m5.M5Base",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.LinearRegression",
368:       "weka.core.OptionHandlerJavadoc",
369:       "weka.classifiers.functions.GaussianProcesses",
370:       "weka.core.SelectedTag",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.core.matrix.Matrix",
373:       "weka.attributeSelection.GainRatioAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.LogitBoost",
376:       "weka.core.UnassignedClassException",
377:       "weka.classifiers.rules.JRip",
378:       "weka.classifiers.rules.M5Rules",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.estimators.NormalEstimator",
381:       "weka.core.Queue",
382:       "weka.core.AttributeLocator",
383:       "weka.core.StringLocator",
384:       "weka.core.RelationalLocator",
385:       "weka.classifiers.meta.Bagging",
386:       "weka.classifiers.trees.REPTree",
387:       "weka.classifiers.functions.supportVector.StringKernel",
388:       "weka.classifiers.meta.MultiClassClassifier",
389:       "weka.classifiers.functions.Logistic",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
392:       "weka.estimators.DiscreteEstimator",
393:       "weka.classifiers.trees.j48.ClassifierTree",
394:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
395:       "weka.classifiers.meta.FilteredClassifier",
396:       "weka.filters.supervised.attribute.AttributeSelection",
397:       "weka.attributeSelection.GreedyStepwise",
398:       "weka.core.ContingencyTables",
399:       "weka.core.Queue$QueueNode",
400:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
401:       "weka.classifiers.meta.AdditiveRegression",
402:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
405:       "weka.core.SerializationHelper",
406:       "weka.classifiers.rules.OneR",
407:       "weka.classifiers.rules.PART",
408:       "weka.classifiers.functions.SimpleLogistic",
409:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
410:       "weka.classifiers.meta.Vote",
411:       "weka.classifiers.trees.LMT",
412:       "weka.classifiers.rules.part.MakeDecList",
413:       "weka.classifiers.meta.MultiScheme",
414:       "weka.classifiers.functions.SMOreg",
415:       "weka.classifiers.functions.supportVector.RegOptimizer",
416:       "weka.classifiers.functions.supportVector.RegSMO",
417:       "weka.classifiers.functions.supportVector.RegSMOImproved",
418:       "weka.attributeSelection.OneRAttributeEval",
419:       "weka.core.AttributeStats",
420:       "weka.classifiers.functions.VotedPerceptron",
421:       "weka.classifiers.functions.SimpleLinearRegression",
422:       "weka.experiment.Stats",
423:       "weka.core.neighboursearch.PerformanceStats",
424:       "weka.core.ListOptions"
425:     );
426:   }
427: }

[MASTER] 18:11:44.179 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(3);
Integer integer1 = new Integer(3);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
Integer integer2 = new Integer(1302);
Integer integer3 = new Integer(3);
hashMap0.put(integer2, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_periodicP = 1302;
naiveBayesMultinomialText0.pruneDictionary();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19151
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Search finished after 233s and 243 generations, 91946 statements, best individual has fitness: 2808.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 282
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 282
* Generated 90 tests with total length 233
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19149
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19152
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:56:20.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:56:20.721 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:56:20.731 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:56:25.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:56:26.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:56:26.254 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 18:56:28.138 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:56:28.154 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:56:28.155 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:56:28.163 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 18:56:31.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 18:56:32.364 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 19:00:30.423 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 251s and 262 generations, 138184 statements, best individual has fitness: 10304.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 46%
* Total number of goals: 705
* Number of covered goals: 322
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 416
* Number of covered goals: 151
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 69%
* Total number of goals: 993
* Number of covered goals: 690
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 416
* Number of covered goals: 151
* Generated 78 tests with total length 782
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 271s and 128 generations, 86420 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 110
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 33%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/107_weka/evosuite-tests
* Done!

* Computation finished
