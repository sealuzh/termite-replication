* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 7490
* Connecting to master process on port 7489
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1014
* Starting evolution
[MASTER] 15:29:47.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:29:47.296 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:29:47.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:29:47.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 15:29:49.131 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:29:49.131 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:29:49.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:29:50.858 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:29:50.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:29:50.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:29:51.066 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:29:51.086 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:29:51.088 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:29:51.088 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:29:51.090 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:29:51.091 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:29:51.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 15:29:51.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBCachedFetcher
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1014
* Starting evolution
[MASTER] 15:30:02.748 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.firebirdsql.jca.FBConnectionRequestInfo due to org.evosuite.ga.ConstructionFailedException: Have no generator for class org.firebirdsql.gds.impl.wire.JavaGDSImpl canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 15:30:05.705 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.firebirdsql.jdbc.FBConnection canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 15:30:31.505 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 15:30:39.794 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 15:31:39.317 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 214s and 567 generations, 271328 statements, best individual has fitness: 1608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 158
* Number of covered goals: 100
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 118
* Number of covered goals: 60
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 347
* Number of covered goals: 335
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 96%
* Total number of goals: 28
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 118
* Number of covered goals: 47
* Generated 56 tests with total length 407
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 65%
* Compiling and checking tests
[MASTER] 15:33:42.991 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.JniGDSImpl: no jaybird22_x64 in java.library.path
[MASTER] 15:33:43.048 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
* Permissions denied during test execution: 
  - javax.security.auth.AuthPermission: 
         getSubject: 5
* Writing JUnit test case 'FBCachedFetcher_ESTest' to /home/ubuntu/termite/rmosa/tests/s1014/110_firebird/evosuite-tests
* Done!

* Computation finished
* Search finished after 266s and 795 generations, 212038 statements, best individual has fitness: 584.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 117
* Number of covered goals: 111
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 98
* Number of covered goals: 87
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 347
* Number of covered goals: 323
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 73%
* Total number of goals: 70
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 98
* Number of covered goals: 87
* Generated 84 tests with total length 339
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
[MASTER] 15:34:36.640 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 15:34:36.640 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));

fBProcedureCall0.setName("*j");
FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall2);
assertFalse(fBProcedureCall2.equals((Object)fBProcedureCall0));
assertTrue(boolean0);


[MASTER] 15:34:38.223 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 15:34:38.223 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
fBProcedureCall1.setName("hy1");
boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
assertFalse(boolean0);

fBProcedureCall1.setName("hy1");
assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));


[MASTER] 15:34:38.635 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 15:34:38.635 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.registerOutParam(2147483645, 2147483645);

[MASTER] 15:34:38.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 15:34:38.682 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.addParam(2147483645, "i?*");

[MASTER] 15:34:38.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 15:34:38.723 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.getInputParam(2147483645);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/rmosa/tests/s1014/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 7489
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1014
* Starting evolution
* Search finished after 224s and 562 generations, 146006 statements, best individual has fitness: 624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 242
* Number of covered goals: 228
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 188
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 387
* Number of covered goals: 351
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 188
* Generated 92 tests with total length 113
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 35%
* Compiling and checking tests
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/rmosa/tests/s1014/110_firebird/evosuite-tests
* Done!

* Computation finished
