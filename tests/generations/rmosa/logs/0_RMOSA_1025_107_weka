* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21006
* Connecting to master process on port 21007
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:37:03.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:37:03.309 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:37:03.311 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:37:03.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:37:03.640 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:37:03.643 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 05:37:08.980 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getBins()I: Line 631
[MASTER] 05:37:08.982 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;: Line 1195
[MASTER] 05:37:08.982 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getBins()I: root-Branch
[MASTER] 05:37:08.983 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 05:37:08.988 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 251: weka.filters.unsupervised.attribute.Discretize.getBins()I:631 - InsertUnaryOp Negation
[MASTER] 05:37:08.988 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 252: weka.filters.unsupervised.attribute.Discretize.getBins()I:631 - InsertUnaryOp +1
[MASTER] 05:37:08.988 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 253: weka.filters.unsupervised.attribute.Discretize.getBins()I:631 - InsertUnaryOp -1
[MASTER] 05:37:09.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1110: weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;:1195 - ReplaceConstant - $Revision: 8964 $ -> 
[MASTER] 05:37:09.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.filters.unsupervised.attribute.Discretize.getBins()I:Positive
[MASTER] 05:37:09.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 05:37:09.008 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.getBins()I
[MASTER] 05:37:09.008 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;
[MASTER] 05:37:09.009 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.getBins()I
[MASTER] 05:37:09.009 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;
[MASTER] 05:37:09.011 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.getRevision()Ljava/lang/String;: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:getRevision()Ljava/lang/String;
[MASTER] 05:37:09.011 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.getBins()I: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:getBins()I
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:37:14.270 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:37:14.274 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:37:14.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:37:14.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 05:37:19.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 05:37:45.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true
[MASTER] 05:37:45.864 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true
[MASTER] 05:37:45.868 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 363: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1117 - ReplaceComparisonOperator >= -> >
[MASTER] 05:37:45.868 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 387: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1119 - ReplaceComparisonOperator >= -> >
[MASTER] 05:37:45.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:EmptyArray
[MASTER] 05:37:45.873 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I31 Branch 180 IF_ICMPGE L1117 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 05:37:45.874 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I46 Branch 182 IF_ICMPGE L1119 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
* Search finished after 267s and 128 generations, 82677 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 22 tests with total length 247
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 565s and 369 generations, 143120 statements, best individual has fitness: 7896.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 59 tests with total length 341
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 05:47:54.685 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:47:55.445 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21010
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1025
* Starting evolution
* Search finished after 314s and 243 generations, 113758 statements, best individual has fitness: 2808.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 288
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 260
* Number of covered goals: 227
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 288
* Generated 93 tests with total length 252
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21004
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21006
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:00:02.918 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:00:02.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:00:02.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:00:03.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 06:00:05.458 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:00:05.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:00:05.502 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:00:05.648 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:00:05.670 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:00:05.681 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 06:00:12.483 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:00:12.484 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:00:15.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 527
[MASTER] 06:00:15.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 06:00:15.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 06:00:15.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 828
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 829
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 831
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 832
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 834
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 961
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 963
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 965
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 967
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 968
[MASTER] 06:00:15.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 971
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 972
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 976
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 978
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 979
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 982
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 983
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 987
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 988
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 990
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 991
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 994
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 997
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 998
[MASTER] 06:00:15.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 999
[MASTER] 06:00:15.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1012
[MASTER] 06:00:15.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1013
[MASTER] 06:00:15.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1014
[MASTER] 06:00:15.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1026
[MASTER] 06:00:15.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 06:00:15.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false
[MASTER] 06:00:15.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 06:00:15.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 06:00:15.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - true
[MASTER] 06:00:15.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I26 Branch 51 IFLE L968 - true
[MASTER] 06:00:15.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I43 Branch 52 IFLE L972 - true
[MASTER] 06:00:15.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I67 Branch 53 IFLE L979 - true
[MASTER] 06:00:15.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I84 Branch 54 IFLE L983 - true
[MASTER] 06:00:15.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I115 Branch 55 IFLE L991 - true
[MASTER] 06:00:15.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I153 Branch 56 IFNE L998 - false
[MASTER] 06:00:15.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I236 Branch 59 IFNE L1013 - false
[MASTER] 06:00:15.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 242: weka.classifiers.bayes.NaiveBayesMultinomialText.setTokenizer(Lweka/core/tokenizers/Tokenizer;)V:555 - ReplaceVariable value -> m_tokenizer
[MASTER] 06:00:15.598 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 260: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_lowercaseTokens
[MASTER] 06:00:15.598 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 06:00:15.598 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 06:00:15.598 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 06:00:15.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 336: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 06:00:15.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 337: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceComparisonOperator != null -> = null
[MASTER] 06:00:15.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 338: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:829 - ReplaceConstant - user.dir -> 
[MASTER] 06:00:15.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 339: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:831 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 06:00:15.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 341: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 06:00:15.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 383: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:965 - ReplaceConstant - W -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 384: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:967 - ReplaceConstant - P -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 387: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:968 - ReplaceComparisonOperator <= -> <
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 388: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:971 - ReplaceConstant - M -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 392: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:972 - ReplaceComparisonOperator <= -> <
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 394: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:976 - ReplaceConstant - normalize -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 395: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:978 - ReplaceConstant - norm -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 400: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:979 - ReplaceComparisonOperator <= -> <
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 403: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:982 - ReplaceConstant - lnorm -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 409: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:983 - ReplaceComparisonOperator <= -> <
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 413: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:987 - ReplaceConstant - lowercase -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 414: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:988 - ReplaceConstant - stoplist -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 415: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:990 - ReplaceConstant - stopwords -> 
[MASTER] 06:00:15.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 422: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:991 - ReplaceComparisonOperator <= -> <
[MASTER] 06:00:15.603 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I26 Branch 51 IFLE L968 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I153 Branch 56 IFNE L998 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I115 Branch 55 IFLE L991 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I84 Branch 54 IFLE L983 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I67 Branch 53 IFLE L979 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I236 Branch 59 IFNE L1013 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 06:00:15.744 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I43 Branch 52 IFLE L972 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: Line 666
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1034
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1036
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1039
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1040
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1042
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1045
[MASTER] 06:00:16.755 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1046
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1047
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1050
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1053
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1057
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1058
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1059
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1060
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1062
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1064
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1065
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1066
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1067
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1071
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1074
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: root-Branch
[MASTER] 06:00:16.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true
[MASTER] 06:00:16.757 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true
[MASTER] 06:00:16.757 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true
[MASTER] 06:00:16.757 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true
[MASTER] 06:00:16.757 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true
[MASTER] 06:00:16.757 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false
[MASTER] 06:00:16.757 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false
[MASTER] 06:00:16.757 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 273: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp Negation
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 274: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp +1
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 275: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp -1
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 423: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1036 - ReplaceComparisonOperator == -> !=
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 425: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1039 - ReplaceConstant - -P -> 
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 426: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1040 - ReplaceConstant - -M -> 
[MASTER] 06:00:16.765 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 427: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1042 - ReplaceComparisonOperator == -> !=
[MASTER] 06:00:16.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1045 - ReplaceConstant - -norm -> 
[MASTER] 06:00:16.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1046 - ReplaceConstant - -lnorm -> 
[MASTER] 06:00:16.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1047 - ReplaceComparisonOperator == -> !=
[MASTER] 06:00:16.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1050 - ReplaceComparisonOperator == -> !=
[MASTER] 06:00:16.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 06:00:16.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 06:00:18.780 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.globalInfo()Ljava/lang/String;: Line 196
[MASTER] 06:00:18.781 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stemmerTipText()Ljava/lang/String;: Line 546
[MASTER] 06:00:18.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stemmerTipText()Ljava/lang/String;: root-Branch
[MASTER] 06:00:18.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.globalInfo()Ljava/lang/String;: root-Branch
[MASTER] 06:00:18.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - true
[MASTER] 06:00:18.785 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 0: weka.classifiers.bayes.NaiveBayesMultinomialText.globalInfo()Ljava/lang/String;:196 - ReplaceConstant - Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification -> 
[MASTER] 06:00:18.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 241: weka.classifiers.bayes.NaiveBayesMultinomialText.stemmerTipText()Ljava/lang/String;:546 - ReplaceConstant - The stemming algorithm to use on the words. -> 
[MASTER] 06:00:18.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.stemmerTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 06:00:18.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 06:00:18.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.globalInfo()Ljava/lang/String;:NonEmptyString
[MASTER] 06:00:18.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.stemmerTipText()Ljava/lang/String;
[MASTER] 06:00:18.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 06:00:18.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.globalInfo()Ljava/lang/String;
[MASTER] 06:00:18.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.stemmerTipText()Ljava/lang/String;
[MASTER] 06:00:18.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 06:00:18.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.globalInfo()Ljava/lang/String;
[MASTER] 06:00:18.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.stemmerTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:stemmerTipText()Ljava/lang/String;
[MASTER] 06:00:18.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.globalInfo()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:globalInfo()Ljava/lang/String;
[MASTER] 06:00:18.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 06:00:18.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 06:01:59.004 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 06:03:44.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1068
[MASTER] 06:03:44.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - false
[MASTER] 06:03:44.879 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
* Search finished after 301s and 315 generations, 192987 statements, best individual has fitness: 1448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 305
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Generated 85 tests with total length 954
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 438s and 49 generations, 50563 statements, best individual has fitness: 2088.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 621
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 420
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 627
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 244
* Number of covered goals: 115
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 409
* Generated 216 tests with total length 4215
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 06:10:22.910 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1575353422868/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1575353422868/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 06:10:22.910 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:22.910 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:22.914 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 06:10:22.914 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 06:10:22.915 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 06:10:22.915 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:10:22.915 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 06:10:22.915 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 06:10:22.915 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 06:10:22.915 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 06:10:22.915 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 06:10:22.916 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1575353422868/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 06:10:22 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.198959292011301
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
32:       Integer integer0 = Integer.getInteger("{~S>K[>G 0", 18);
33:       Integer integer1 = new Integer((-3571));
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
35:       linkedHashMap0.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "cp;s?c[h{zj3w|lq");
39:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
40:       Integer.toUnsignedString(18);
41:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
42:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
43:       naiveBayesMultinomialText0.getRevision();
44:       naiveBayesMultinomialText0.getNormalizeDocLength();
45:       FileSystemHandling.createFolder((EvoSuiteFile) null);
46:       naiveBayesMultinomialText0.getNormalizeDocLength();
47:       naiveBayesMultinomialText0.listOptions();
48:       naiveBayesMultinomialText0.getTokenizer();
49:       naiveBayesMultinomialText0.getNormalizeDocLength();
50:       naiveBayesMultinomialText0.getMinWordFrequency();
51:       Random.setNextRandom(0);
52:       naiveBayesMultinomialText0.getStopwords();
53:       Random.setNextRandom((-3571));
54:       naiveBayesMultinomialText0.getRevision();
55:       naiveBayesMultinomialText0.getOptions();
56:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_34_1575353422868/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 06:10:22 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.classifiers.functions.LinearRegression",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.bayes.NaiveBayes",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.core.BinarySparseInstance",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.AttributeLocator",
134:       "weka.filters.supervised.attribute.NominalToBinary",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.attributeSelection.GreedyStepwise",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.classifiers.trees.REPTree",
149:       "weka.attributeSelection.ASEvaluation",
150:       "weka.core.AbstractInstance",
151:       "weka.core.scripting.JythonObject",
152:       "weka.core.SelectedTag",
153:       "org.pentaho.packageManagement.DefaultPackage",
154:       "weka.estimators.DiscreteEstimator",
155:       "weka.classifiers.bayes.NaiveBayesUpdateable",
156:       "weka.core.neighboursearch.balltrees.BallSplitter",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.bayes.BayesNet",
159:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
160:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
161:       "weka.core.Version",
162:       "weka.attributeSelection.AttributeSelection",
163:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
164:       "weka.core.converters.ArffLoader$ArffReader",
165:       "weka.core.Tag",
166:       "weka.classifiers.IteratedSingleClassifierEnhancer",
167:       "weka.classifiers.trees.j48.BinC45ModelSelection",
168:       "weka.core.neighboursearch.CoverTree",
169:       "weka.classifiers.AbstractClassifier",
170:       "weka.estimators.UnivariateDensityEstimator",
171:       "weka.core.OptionHandler",
172:       "weka.core.WekaException",
173:       "weka.filters.StreamableFilter",
174:       "weka.core.Range",
175:       "weka.core.PartitionGenerator",
176:       "weka.core.scripting.JythonSerializableObject",
177:       "weka.classifiers.Classifier",
178:       "weka.attributeSelection.OneRAttributeEval",
179:       "weka.core.Capabilities$Capability",
180:       "weka.core.SparseInstance",
181:       "org.pentaho.packageManagement.PackageManager",
182:       "weka.classifiers.trees.j48.ClassifierSplitModel",
183:       "weka.core.tokenizers.WordTokenizer",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.core.stemmers.SnowballStemmer",
187:       "weka.classifiers.meta.Bagging",
188:       "weka.classifiers.trees.j48.PruneableClassifierTree",
189:       "weka.classifiers.Evaluation",
190:       "weka.classifiers.functions.supportVector.Kernel",
191:       "weka.core.WekaPackageManager",
192:       "weka.attributeSelection.ASSearch",
193:       "weka.filters.SupervisedFilter",
194:       "weka.core.TechnicalInformationHandler",
195:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
196:       "weka.attributeSelection.StartSetHandler",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.classifiers.meta.CostSensitiveClassifier",
200:       "weka.core.neighboursearch.PerformanceStats",
201:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
202:       "weka.estimators.NormalEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.attributeSelection.RankedOutputSearch",
214:       "weka.classifiers.SingleClassifierEnhancer",
215:       "weka.core.RevisionUtils",
216:       "weka.core.Instance",
217:       "weka.estimators.Estimator",
218:       "weka.core.ProtectedProperties",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.core.Matchable",
222:       "weka.classifiers.bayes.net.ADNode",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
227:       "weka.filters.unsupervised.attribute.Remove",
228:       "weka.filters.unsupervised.attribute.Discretize",
229:       "weka.core.Randomizable",
230:       "weka.classifiers.functions.SGD",
231:       "weka.classifiers.trees.j48.NoSplit",
232:       "weka.core.EuclideanDistance",
233:       "weka.core.Instances",
234:       "weka.filters.unsupervised.attribute.Normalize",
235:       "weka.core.UnassignedClassException",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.bayes.net.ParentSet",
238:       "weka.core.UnsupportedAttributeTypeException",
239:       "weka.core.TechnicalInformation",
240:       "weka.classifiers.Sourcable",
241:       "weka.core.RevisionHandler",
242:       "weka.classifiers.evaluation.output.prediction.PlainText",
243:       "weka.core.neighboursearch.TreePerformanceStats",
244:       "weka.core.xml.XMLSerialization",
245:       "weka.classifiers.xml.XMLClassifier",
246:       "weka.filters.Filter",
247:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
248:       "weka.filters.supervised.attribute.Discretize"
249:     );
250:   } 
251: 
252:   private static void resetClasses() {
253:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
254: 
255:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
256:       "weka.classifiers.AbstractClassifier",
257:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
258:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
259:       "weka.core.Capabilities$Capability",
260:       "weka.core.tokenizers.Tokenizer",
261:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
262:       "weka.core.tokenizers.WordTokenizer",
263:       "weka.core.stemmers.NullStemmer",
264:       "weka.core.AbstractInstance",
265:       "weka.core.DenseInstance",
266:       "weka.core.SerializedObject",
267:       "weka.classifiers.Evaluation",
268:       "weka.core.Utils",
269:       "weka.core.Option",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.core.Tag",
273:       "weka.classifiers.meta.CostSensitiveClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.classifiers.CostMatrix",
276:       "weka.core.RevisionUtils",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.Capabilities",
282:       "org.pentaho.packageManagement.PackageManager",
283:       "org.pentaho.packageManagement.DefaultPackageManager",
284:       "weka.core.Version",
285:       "weka.core.Environment",
286:       "weka.core.WekaPackageManager",
287:       "weka.core.UnassignedDatasetException",
288:       "weka.classifiers.lazy.IBk",
289:       "weka.core.neighboursearch.NearestNeighbourSearch",
290:       "weka.core.neighboursearch.LinearNNSearch",
291:       "weka.core.NormalizableDistance",
292:       "weka.core.EuclideanDistance",
293:       "weka.core.Range",
294:       "weka.filters.Filter",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.core.stemmers.LovinsStemmer",
299:       "weka.core.SparseInstance",
300:       "weka.core.BinarySparseInstance",
301:       "weka.attributeSelection.ASEvaluation",
302:       "weka.attributeSelection.OneRAttributeEval",
303:       "weka.attributeSelection.AttributeSelection",
304:       "weka.filters.supervised.attribute.Discretize",
305:       "weka.classifiers.trees.REPTree",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.neighboursearch.CoverTree",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.bayes.BayesNet",
311:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
312:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
313:       "weka.classifiers.bayes.net.search.local.K2",
314:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
315:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
316:       "weka.classifiers.RandomizableClassifier",
317:       "weka.classifiers.functions.SGDText",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.core.SerializationHelper",
320:       "weka.core.neighboursearch.balltrees.BallNode",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.stemmers.SnowballStemmer",
330:       "weka.core.stemmers.IteratedLovinsStemmer",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.AdditiveRegression",
333:       "weka.core.stemmers.Stemming",
334:       "weka.classifiers.meta.RegressionByDiscretization",
335:       "weka.filters.unsupervised.attribute.Discretize",
336:       "weka.classifiers.trees.j48.ClassifierTree",
337:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
338:       "weka.core.WekaException",
339:       "weka.core.UnsupportedAttributeTypeException",
340:       "weka.classifiers.functions.supportVector.Kernel",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.core.SelectedTag",
343:       "weka.classifiers.functions.supportVector.CachedKernel",
344:       "weka.classifiers.functions.supportVector.Puk",
345:       "weka.estimators.Estimator",
346:       "weka.estimators.NormalEstimator",
347:       "weka.core.Stopwords",
348:       "weka.core.neighboursearch.BallTree",
349:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
350:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
351:       "weka.core.neighboursearch.balltrees.BallSplitter",
352:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.MultipleClassifiersCombiner",
356:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
357:       "weka.classifiers.meta.Vote",
358:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.bayes.net.BIFReader",
362:       "weka.classifiers.rules.JRip",
363:       "weka.core.WekaEnumeration",
364:       "weka.core.Attribute$1",
365:       "weka.filters.SimpleFilter",
366:       "weka.filters.SimpleStreamFilter",
367:       "weka.filters.MultiFilter",
368:       "weka.filters.AllFilter",
369:       "weka.core.converters.ConverterUtils$DataSource",
370:       "weka.core.converters.AbstractLoader",
371:       "weka.core.converters.AbstractFileLoader",
372:       "weka.core.converters.ArffLoader",
373:       "weka.core.converters.ArffLoader$ArffReader",
374:       "weka.classifiers.functions.MultilayerPerceptron",
375:       "weka.core.FastVector",
376:       "weka.filters.unsupervised.attribute.NominalToBinary",
377:       "weka.classifiers.functions.neural.SigmoidUnit",
378:       "weka.classifiers.functions.neural.LinearUnit",
379:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
380:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.Stacking",
382:       "weka.classifiers.bayes.NaiveBayes",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.classifiers.functions.LinearRegression",
385:       "weka.core.UnassignedClassException",
386:       "weka.classifiers.functions.SimpleLogistic",
387:       "weka.classifiers.lazy.KStar",
388:       "weka.classifiers.functions.VotedPerceptron",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
393:       "weka.classifiers.meta.LogitBoost",
394:       "weka.classifiers.trees.DecisionStump",
395:       "weka.classifiers.trees.RandomForest",
396:       "weka.classifiers.trees.RandomTree",
397:       "weka.classifiers.bayes.NaiveBayesMultinomial",
398:       "weka.classifiers.rules.OneR",
399:       "weka.classifiers.functions.SGD",
400:       "weka.classifiers.trees.m5.M5Base",
401:       "weka.classifiers.trees.M5P",
402:       "weka.classifiers.rules.M5Rules",
403:       "weka.core.TechnicalInformation",
404:       "weka.core.TechnicalInformation$Type",
405:       "weka.core.TechnicalInformation$Field",
406:       "weka.classifiers.functions.SMO",
407:       "weka.classifiers.functions.supportVector.PolyKernel",
408:       "weka.estimators.DiscreteEstimator",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.classifiers.functions.Logistic",
413:       "weka.classifiers.lazy.LWL",
414:       "weka.classifiers.bayes.NaiveBayesUpdateable",
415:       "weka.classifiers.meta.FilteredClassifier",
416:       "weka.filters.supervised.attribute.AttributeSelection",
417:       "weka.attributeSelection.GreedyStepwise",
418:       "weka.classifiers.meta.ClassificationViaRegression",
419:       "weka.classifiers.meta.CVParameterSelection",
420:       "weka.core.Queue",
421:       "weka.core.AttributeLocator",
422:       "weka.core.StringLocator",
423:       "weka.core.RelationalLocator",
424:       "weka.core.ContingencyTables",
425:       "weka.core.Queue$QueueNode",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.attributeSelection.CorrelationAttributeEval",
428:       "weka.core.tokenizers.NGramTokenizer",
429:       "weka.classifiers.meta.AdaBoostM1",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.SMOreg",
432:       "weka.classifiers.functions.supportVector.RegOptimizer",
433:       "weka.classifiers.functions.supportVector.RegSMO",
434:       "weka.classifiers.functions.supportVector.RegSMOImproved",
435:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
436:       "weka.classifiers.functions.SimpleLinearRegression",
437:       "weka.classifiers.trees.LMT",
438:       "weka.core.ClassDiscovery",
439:       "weka.classifiers.functions.GaussianProcesses",
440:       "weka.classifiers.functions.supportVector.StringKernel",
441:       "weka.classifiers.rules.DecisionTable",
442:       "weka.attributeSelection.WrapperSubsetEval",
443:       "weka.classifiers.rules.PART",
444:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
445:       "weka.classifiers.meta.RandomCommittee",
446:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
447:       "weka.attributeSelection.InfoGainAttributeEval",
448:       "weka.core.matrix.Matrix",
449:       "weka.classifiers.rules.part.MakeDecList",
450:       "weka.attributeSelection.GainRatioAttributeEval",
451:       "weka.classifiers.meta.MultiScheme",
452:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
453:       "weka.estimators.PoissonEstimator",
454:       "weka.classifiers.functions.supportVector.RBFKernel",
455:       "weka.classifiers.meta.RandomSubSpace",
456:       "weka.core.AttributeStats",
457:       "weka.core.ManhattanDistance",
458:       "weka.core.ChebyshevDistance",
459:       "weka.experiment.Stats"
460:     );
461:   }
462: }

[MASTER] 06:10:22.917 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = Integer.getInteger("{~S>K[>G 0", 18);
Integer integer1 = new Integer((-3571));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer1, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = naiveBayesMultinomialText0.m_inputVector;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap3 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "cp;s?c[h{zj3w|lq");
naiveBayesMultinomialText0.setNormalizeDocLength(true);
Integer.toUnsignedString(18);
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.getNormalizeDocLength();
FileSystemHandling.createFolder((EvoSuiteFile) null);
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.getMinWordFrequency();
Random.setNextRandom(0);
naiveBayesMultinomialText0.getStopwords();
Random.setNextRandom((-3571));
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.getOptions();
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 06:10:23.130 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_39_1575353423087/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_39_1575353423087/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.java]]
[MASTER] 06:10:23.130 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:23.130 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:23.131 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 06:10:23.131 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 06:10:23.131 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 06:10:23.132 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_39_1575353423087/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 06:10:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_39_tmp__ESTest extends NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=0.4
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
29:       naiveBayesMultinomialText0.m_periodicP = 13;
30:       naiveBayesMultinomialText0.pruneDictionary();
31:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
32:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
33:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
34:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
35:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_39_1575353423087/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 06:10:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.classifiers.functions.LinearRegression",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.bayes.NaiveBayes",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.core.BinarySparseInstance",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.AttributeLocator",
134:       "weka.filters.supervised.attribute.NominalToBinary",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.attributeSelection.GreedyStepwise",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.classifiers.trees.REPTree",
149:       "weka.attributeSelection.ASEvaluation",
150:       "weka.core.AbstractInstance",
151:       "weka.core.scripting.JythonObject",
152:       "weka.core.SelectedTag",
153:       "org.pentaho.packageManagement.DefaultPackage",
154:       "weka.estimators.DiscreteEstimator",
155:       "weka.classifiers.bayes.NaiveBayesUpdateable",
156:       "weka.core.neighboursearch.balltrees.BallSplitter",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.bayes.BayesNet",
159:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
160:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
161:       "weka.core.Version",
162:       "weka.attributeSelection.AttributeSelection",
163:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
164:       "weka.core.converters.ArffLoader$ArffReader",
165:       "weka.core.Tag",
166:       "weka.classifiers.IteratedSingleClassifierEnhancer",
167:       "weka.classifiers.trees.j48.BinC45ModelSelection",
168:       "weka.core.neighboursearch.CoverTree",
169:       "weka.classifiers.AbstractClassifier",
170:       "weka.estimators.UnivariateDensityEstimator",
171:       "weka.core.OptionHandler",
172:       "weka.core.WekaException",
173:       "weka.filters.StreamableFilter",
174:       "weka.core.Range",
175:       "weka.core.PartitionGenerator",
176:       "weka.core.scripting.JythonSerializableObject",
177:       "weka.classifiers.Classifier",
178:       "weka.attributeSelection.OneRAttributeEval",
179:       "weka.core.Capabilities$Capability",
180:       "weka.core.SparseInstance",
181:       "org.pentaho.packageManagement.PackageManager",
182:       "weka.classifiers.trees.j48.ClassifierSplitModel",
183:       "weka.core.tokenizers.WordTokenizer",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.core.stemmers.SnowballStemmer",
187:       "weka.classifiers.meta.Bagging",
188:       "weka.classifiers.trees.j48.PruneableClassifierTree",
189:       "weka.classifiers.Evaluation",
190:       "weka.classifiers.functions.supportVector.Kernel",
191:       "weka.core.WekaPackageManager",
192:       "weka.attributeSelection.ASSearch",
193:       "weka.filters.SupervisedFilter",
194:       "weka.core.TechnicalInformationHandler",
195:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
196:       "weka.attributeSelection.StartSetHandler",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.classifiers.meta.CostSensitiveClassifier",
200:       "weka.core.neighboursearch.PerformanceStats",
201:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
202:       "weka.estimators.NormalEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.attributeSelection.RankedOutputSearch",
214:       "weka.classifiers.SingleClassifierEnhancer",
215:       "weka.core.RevisionUtils",
216:       "weka.core.Instance",
217:       "weka.estimators.Estimator",
218:       "weka.core.ProtectedProperties",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.core.Matchable",
222:       "weka.classifiers.bayes.net.ADNode",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
227:       "weka.filters.unsupervised.attribute.Remove",
228:       "weka.filters.unsupervised.attribute.Discretize",
229:       "weka.core.Randomizable",
230:       "weka.classifiers.functions.SGD",
231:       "weka.classifiers.trees.j48.NoSplit",
232:       "weka.core.EuclideanDistance",
233:       "weka.core.Instances",
234:       "weka.filters.unsupervised.attribute.Normalize",
235:       "weka.core.UnassignedClassException",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.bayes.net.ParentSet",
238:       "weka.core.UnsupportedAttributeTypeException",
239:       "weka.core.TechnicalInformation",
240:       "weka.classifiers.Sourcable",
241:       "weka.core.RevisionHandler",
242:       "weka.classifiers.evaluation.output.prediction.PlainText",
243:       "weka.core.neighboursearch.TreePerformanceStats",
244:       "weka.core.xml.XMLSerialization",
245:       "weka.classifiers.xml.XMLClassifier",
246:       "weka.filters.Filter",
247:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
248:       "weka.filters.supervised.attribute.Discretize"
249:     );
250:   } 
251: 
252:   private static void resetClasses() {
253:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader()); 
254: 
255:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
256:       "weka.classifiers.AbstractClassifier",
257:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
258:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
259:       "weka.core.Capabilities$Capability",
260:       "weka.core.tokenizers.Tokenizer",
261:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
262:       "weka.core.tokenizers.WordTokenizer",
263:       "weka.core.stemmers.NullStemmer",
264:       "weka.core.AbstractInstance",
265:       "weka.core.DenseInstance",
266:       "weka.core.SerializedObject",
267:       "weka.classifiers.Evaluation",
268:       "weka.core.Utils",
269:       "weka.core.Option",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.core.Tag",
273:       "weka.classifiers.meta.CostSensitiveClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.classifiers.CostMatrix",
276:       "weka.core.RevisionUtils",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.Capabilities",
282:       "org.pentaho.packageManagement.PackageManager",
283:       "org.pentaho.packageManagement.DefaultPackageManager",
284:       "weka.core.Version",
285:       "weka.core.Environment",
286:       "weka.core.WekaPackageManager",
287:       "weka.core.UnassignedDatasetException",
288:       "weka.classifiers.lazy.IBk",
289:       "weka.core.neighboursearch.NearestNeighbourSearch",
290:       "weka.core.neighboursearch.LinearNNSearch",
291:       "weka.core.NormalizableDistance",
292:       "weka.core.EuclideanDistance",
293:       "weka.core.Range",
294:       "weka.filters.Filter",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.core.stemmers.LovinsStemmer",
299:       "weka.core.SparseInstance",
300:       "weka.core.BinarySparseInstance",
301:       "weka.attributeSelection.ASEvaluation",
302:       "weka.attributeSelection.OneRAttributeEval",
303:       "weka.attributeSelection.AttributeSelection",
304:       "weka.filters.supervised.attribute.Discretize",
305:       "weka.classifiers.trees.REPTree",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.neighboursearch.CoverTree",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.bayes.BayesNet",
311:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
312:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
313:       "weka.classifiers.bayes.net.search.local.K2",
314:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
315:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
316:       "weka.classifiers.RandomizableClassifier",
317:       "weka.classifiers.functions.SGDText",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.core.SerializationHelper",
320:       "weka.core.neighboursearch.balltrees.BallNode",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.stemmers.SnowballStemmer",
330:       "weka.core.stemmers.IteratedLovinsStemmer",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.AdditiveRegression",
333:       "weka.core.stemmers.Stemming",
334:       "weka.classifiers.meta.RegressionByDiscretization",
335:       "weka.filters.unsupervised.attribute.Discretize",
336:       "weka.classifiers.trees.j48.ClassifierTree",
337:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
338:       "weka.core.WekaException",
339:       "weka.core.UnsupportedAttributeTypeException",
340:       "weka.classifiers.functions.supportVector.Kernel",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.core.SelectedTag",
343:       "weka.classifiers.functions.supportVector.CachedKernel",
344:       "weka.classifiers.functions.supportVector.Puk",
345:       "weka.estimators.Estimator",
346:       "weka.estimators.NormalEstimator",
347:       "weka.core.Stopwords",
348:       "weka.core.neighboursearch.BallTree",
349:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
350:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
351:       "weka.core.neighboursearch.balltrees.BallSplitter",
352:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.MultipleClassifiersCombiner",
356:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
357:       "weka.classifiers.meta.Vote",
358:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.bayes.net.BIFReader",
362:       "weka.classifiers.rules.JRip",
363:       "weka.core.WekaEnumeration",
364:       "weka.core.Attribute$1",
365:       "weka.filters.SimpleFilter",
366:       "weka.filters.SimpleStreamFilter",
367:       "weka.filters.MultiFilter",
368:       "weka.filters.AllFilter",
369:       "weka.core.converters.ConverterUtils$DataSource",
370:       "weka.core.converters.AbstractLoader",
371:       "weka.core.converters.AbstractFileLoader",
372:       "weka.core.converters.ArffLoader",
373:       "weka.core.converters.ArffLoader$ArffReader",
374:       "weka.classifiers.functions.MultilayerPerceptron",
375:       "weka.core.FastVector",
376:       "weka.filters.unsupervised.attribute.NominalToBinary",
377:       "weka.classifiers.functions.neural.SigmoidUnit",
378:       "weka.classifiers.functions.neural.LinearUnit",
379:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
380:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.Stacking",
382:       "weka.classifiers.bayes.NaiveBayes",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.classifiers.functions.LinearRegression",
385:       "weka.core.UnassignedClassException",
386:       "weka.classifiers.functions.SimpleLogistic",
387:       "weka.classifiers.lazy.KStar",
388:       "weka.classifiers.functions.VotedPerceptron",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
393:       "weka.classifiers.meta.LogitBoost",
394:       "weka.classifiers.trees.DecisionStump",
395:       "weka.classifiers.trees.RandomForest",
396:       "weka.classifiers.trees.RandomTree",
397:       "weka.classifiers.bayes.NaiveBayesMultinomial",
398:       "weka.classifiers.rules.OneR",
399:       "weka.classifiers.functions.SGD",
400:       "weka.classifiers.trees.m5.M5Base",
401:       "weka.classifiers.trees.M5P",
402:       "weka.classifiers.rules.M5Rules",
403:       "weka.core.TechnicalInformation",
404:       "weka.core.TechnicalInformation$Type",
405:       "weka.core.TechnicalInformation$Field",
406:       "weka.classifiers.functions.SMO",
407:       "weka.classifiers.functions.supportVector.PolyKernel",
408:       "weka.estimators.DiscreteEstimator",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.classifiers.functions.Logistic",
413:       "weka.classifiers.lazy.LWL",
414:       "weka.classifiers.bayes.NaiveBayesUpdateable",
415:       "weka.classifiers.meta.FilteredClassifier",
416:       "weka.filters.supervised.attribute.AttributeSelection",
417:       "weka.attributeSelection.GreedyStepwise",
418:       "weka.classifiers.meta.ClassificationViaRegression",
419:       "weka.classifiers.meta.CVParameterSelection",
420:       "weka.core.Queue",
421:       "weka.core.AttributeLocator",
422:       "weka.core.StringLocator",
423:       "weka.core.RelationalLocator",
424:       "weka.core.ContingencyTables",
425:       "weka.core.Queue$QueueNode",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.attributeSelection.CorrelationAttributeEval",
428:       "weka.core.tokenizers.NGramTokenizer",
429:       "weka.classifiers.meta.AdaBoostM1",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.SMOreg",
432:       "weka.classifiers.functions.supportVector.RegOptimizer",
433:       "weka.classifiers.functions.supportVector.RegSMO",
434:       "weka.classifiers.functions.supportVector.RegSMOImproved",
435:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
436:       "weka.classifiers.functions.SimpleLinearRegression",
437:       "weka.classifiers.trees.LMT",
438:       "weka.core.ClassDiscovery",
439:       "weka.classifiers.functions.GaussianProcesses",
440:       "weka.classifiers.functions.supportVector.StringKernel",
441:       "weka.classifiers.rules.DecisionTable",
442:       "weka.attributeSelection.WrapperSubsetEval",
443:       "weka.classifiers.rules.PART",
444:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
445:       "weka.classifiers.meta.RandomCommittee",
446:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
447:       "weka.attributeSelection.InfoGainAttributeEval",
448:       "weka.core.matrix.Matrix",
449:       "weka.classifiers.rules.part.MakeDecList",
450:       "weka.attributeSelection.GainRatioAttributeEval",
451:       "weka.classifiers.meta.MultiScheme",
452:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
453:       "weka.estimators.PoissonEstimator",
454:       "weka.classifiers.functions.supportVector.RBFKernel",
455:       "weka.classifiers.meta.RandomSubSpace",
456:       "weka.core.AttributeStats",
457:       "weka.core.ManhattanDistance",
458:       "weka.core.ChebyshevDistance",
459:       "weka.experiment.Stats"
460:     );
461:   }
462: }

[MASTER] 06:10:23.132 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.m_periodicP = 13;
naiveBayesMultinomialText0.pruneDictionary();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 06:10:23.243 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1575353423203/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1575353423203/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 06:10:23.243 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:23.243 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:23.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 06:10:23.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 06:10:23.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 06:10:23.244 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1575353423203/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 06:10:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.BayesNet;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.classifiers.meta.CostSensitiveClassifier;
20: import weka.core.DenseInstance;
21: import weka.filters.supervised.attribute.Discretize;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=1.5531577432135641
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
34:       MockFile.createTempFile("ku]TD", "XWjmInl");
35:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
37:       naiveBayesMultinomialText0.m_periodicP = 30;
38:       costSensitiveClassifier0.setSeed(30);
39:       naiveBayesMultinomialText0.getRevision();
40:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
41:       double[] doubleArray0 = new double[3];
42:       doubleArray0[0] = 273.4;
43:       doubleArray0[1] = (double) 1;
44:       doubleArray0[2] = (-859.3921388427166);
45:       DenseInstance denseInstance0 = new DenseInstance(30, doubleArray0);
46:       try { 
47:         naiveBayesMultinomialText0.distributionForInstance(denseInstance0);
48:         fail("Expecting exception: RuntimeException");
49:       
50:       } catch(RuntimeException e) {
51:          //
52:          // DenseInstance doesn't have access to a dataset!
53:          //
54:          verifyException("weka.core.AbstractInstance", e);
55:       }
56:   }
57: }
RegularFileObject[/tmp/EvoSuite_42_1575353423203/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 06:10:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.classifiers.functions.LinearRegression",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.bayes.NaiveBayes",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.core.BinarySparseInstance",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.AttributeLocator",
134:       "weka.filters.supervised.attribute.NominalToBinary",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.attributeSelection.GreedyStepwise",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.classifiers.trees.REPTree",
149:       "weka.attributeSelection.ASEvaluation",
150:       "weka.core.AbstractInstance",
151:       "weka.core.scripting.JythonObject",
152:       "weka.core.SelectedTag",
153:       "org.pentaho.packageManagement.DefaultPackage",
154:       "weka.estimators.DiscreteEstimator",
155:       "weka.classifiers.bayes.NaiveBayesUpdateable",
156:       "weka.core.neighboursearch.balltrees.BallSplitter",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.bayes.BayesNet",
159:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
160:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
161:       "weka.core.Version",
162:       "weka.attributeSelection.AttributeSelection",
163:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
164:       "weka.core.converters.ArffLoader$ArffReader",
165:       "weka.core.Tag",
166:       "weka.classifiers.IteratedSingleClassifierEnhancer",
167:       "weka.classifiers.trees.j48.BinC45ModelSelection",
168:       "weka.core.neighboursearch.CoverTree",
169:       "weka.classifiers.AbstractClassifier",
170:       "weka.estimators.UnivariateDensityEstimator",
171:       "weka.core.OptionHandler",
172:       "weka.core.WekaException",
173:       "weka.filters.StreamableFilter",
174:       "weka.core.Range",
175:       "weka.core.PartitionGenerator",
176:       "weka.core.scripting.JythonSerializableObject",
177:       "weka.classifiers.Classifier",
178:       "weka.attributeSelection.OneRAttributeEval",
179:       "weka.core.Capabilities$Capability",
180:       "weka.core.SparseInstance",
181:       "org.pentaho.packageManagement.PackageManager",
182:       "weka.classifiers.trees.j48.ClassifierSplitModel",
183:       "weka.core.tokenizers.WordTokenizer",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.core.stemmers.SnowballStemmer",
187:       "weka.classifiers.meta.Bagging",
188:       "weka.classifiers.trees.j48.PruneableClassifierTree",
189:       "weka.classifiers.Evaluation",
190:       "weka.classifiers.functions.supportVector.Kernel",
191:       "weka.core.WekaPackageManager",
192:       "weka.attributeSelection.ASSearch",
193:       "weka.filters.SupervisedFilter",
194:       "weka.core.TechnicalInformationHandler",
195:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
196:       "weka.attributeSelection.StartSetHandler",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.classifiers.meta.CostSensitiveClassifier",
200:       "weka.core.neighboursearch.PerformanceStats",
201:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
202:       "weka.estimators.NormalEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.attributeSelection.RankedOutputSearch",
214:       "weka.classifiers.SingleClassifierEnhancer",
215:       "weka.core.RevisionUtils",
216:       "weka.core.Instance",
217:       "weka.estimators.Estimator",
218:       "weka.core.ProtectedProperties",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.core.Matchable",
222:       "weka.classifiers.bayes.net.ADNode",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
227:       "weka.filters.unsupervised.attribute.Remove",
228:       "weka.filters.unsupervised.attribute.Discretize",
229:       "weka.core.Randomizable",
230:       "weka.classifiers.functions.SGD",
231:       "weka.classifiers.trees.j48.NoSplit",
232:       "weka.core.EuclideanDistance",
233:       "weka.core.Instances",
234:       "weka.filters.unsupervised.attribute.Normalize",
235:       "weka.core.UnassignedClassException",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.bayes.net.ParentSet",
238:       "weka.core.UnsupportedAttributeTypeException",
239:       "weka.core.TechnicalInformation",
240:       "weka.classifiers.Sourcable",
241:       "weka.core.RevisionHandler",
242:       "weka.classifiers.evaluation.output.prediction.PlainText",
243:       "weka.core.neighboursearch.TreePerformanceStats",
244:       "weka.core.xml.XMLSerialization",
245:       "weka.classifiers.xml.XMLClassifier",
246:       "weka.filters.Filter",
247:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
248:       "weka.filters.supervised.attribute.Discretize"
249:     );
250:   } 
251: 
252:   private static void resetClasses() {
253:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
254: 
255:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
256:       "weka.classifiers.AbstractClassifier",
257:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
258:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
259:       "weka.core.Capabilities$Capability",
260:       "weka.core.tokenizers.Tokenizer",
261:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
262:       "weka.core.tokenizers.WordTokenizer",
263:       "weka.core.stemmers.NullStemmer",
264:       "weka.core.AbstractInstance",
265:       "weka.core.DenseInstance",
266:       "weka.core.SerializedObject",
267:       "weka.classifiers.Evaluation",
268:       "weka.core.Utils",
269:       "weka.core.Option",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.core.Tag",
273:       "weka.classifiers.meta.CostSensitiveClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.classifiers.CostMatrix",
276:       "weka.core.RevisionUtils",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.Capabilities",
282:       "org.pentaho.packageManagement.PackageManager",
283:       "org.pentaho.packageManagement.DefaultPackageManager",
284:       "weka.core.Version",
285:       "weka.core.Environment",
286:       "weka.core.WekaPackageManager",
287:       "weka.core.UnassignedDatasetException",
288:       "weka.classifiers.lazy.IBk",
289:       "weka.core.neighboursearch.NearestNeighbourSearch",
290:       "weka.core.neighboursearch.LinearNNSearch",
291:       "weka.core.NormalizableDistance",
292:       "weka.core.EuclideanDistance",
293:       "weka.core.Range",
294:       "weka.filters.Filter",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.core.stemmers.LovinsStemmer",
299:       "weka.core.SparseInstance",
300:       "weka.core.BinarySparseInstance",
301:       "weka.attributeSelection.ASEvaluation",
302:       "weka.attributeSelection.OneRAttributeEval",
303:       "weka.attributeSelection.AttributeSelection",
304:       "weka.filters.supervised.attribute.Discretize",
305:       "weka.classifiers.trees.REPTree",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.neighboursearch.CoverTree",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.bayes.BayesNet",
311:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
312:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
313:       "weka.classifiers.bayes.net.search.local.K2",
314:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
315:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
316:       "weka.classifiers.RandomizableClassifier",
317:       "weka.classifiers.functions.SGDText",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.core.SerializationHelper",
320:       "weka.core.neighboursearch.balltrees.BallNode",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.stemmers.SnowballStemmer",
330:       "weka.core.stemmers.IteratedLovinsStemmer",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.AdditiveRegression",
333:       "weka.core.stemmers.Stemming",
334:       "weka.classifiers.meta.RegressionByDiscretization",
335:       "weka.filters.unsupervised.attribute.Discretize",
336:       "weka.classifiers.trees.j48.ClassifierTree",
337:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
338:       "weka.core.WekaException",
339:       "weka.core.UnsupportedAttributeTypeException",
340:       "weka.classifiers.functions.supportVector.Kernel",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.core.SelectedTag",
343:       "weka.classifiers.functions.supportVector.CachedKernel",
344:       "weka.classifiers.functions.supportVector.Puk",
345:       "weka.estimators.Estimator",
346:       "weka.estimators.NormalEstimator",
347:       "weka.core.Stopwords",
348:       "weka.core.neighboursearch.BallTree",
349:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
350:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
351:       "weka.core.neighboursearch.balltrees.BallSplitter",
352:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.MultipleClassifiersCombiner",
356:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
357:       "weka.classifiers.meta.Vote",
358:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.bayes.net.BIFReader",
362:       "weka.classifiers.rules.JRip",
363:       "weka.core.WekaEnumeration",
364:       "weka.core.Attribute$1",
365:       "weka.filters.SimpleFilter",
366:       "weka.filters.SimpleStreamFilter",
367:       "weka.filters.MultiFilter",
368:       "weka.filters.AllFilter",
369:       "weka.core.converters.ConverterUtils$DataSource",
370:       "weka.core.converters.AbstractLoader",
371:       "weka.core.converters.AbstractFileLoader",
372:       "weka.core.converters.ArffLoader",
373:       "weka.core.converters.ArffLoader$ArffReader",
374:       "weka.classifiers.functions.MultilayerPerceptron",
375:       "weka.core.FastVector",
376:       "weka.filters.unsupervised.attribute.NominalToBinary",
377:       "weka.classifiers.functions.neural.SigmoidUnit",
378:       "weka.classifiers.functions.neural.LinearUnit",
379:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
380:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.Stacking",
382:       "weka.classifiers.bayes.NaiveBayes",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.classifiers.functions.LinearRegression",
385:       "weka.core.UnassignedClassException",
386:       "weka.classifiers.functions.SimpleLogistic",
387:       "weka.classifiers.lazy.KStar",
388:       "weka.classifiers.functions.VotedPerceptron",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
393:       "weka.classifiers.meta.LogitBoost",
394:       "weka.classifiers.trees.DecisionStump",
395:       "weka.classifiers.trees.RandomForest",
396:       "weka.classifiers.trees.RandomTree",
397:       "weka.classifiers.bayes.NaiveBayesMultinomial",
398:       "weka.classifiers.rules.OneR",
399:       "weka.classifiers.functions.SGD",
400:       "weka.classifiers.trees.m5.M5Base",
401:       "weka.classifiers.trees.M5P",
402:       "weka.classifiers.rules.M5Rules",
403:       "weka.core.TechnicalInformation",
404:       "weka.core.TechnicalInformation$Type",
405:       "weka.core.TechnicalInformation$Field",
406:       "weka.classifiers.functions.SMO",
407:       "weka.classifiers.functions.supportVector.PolyKernel",
408:       "weka.estimators.DiscreteEstimator",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.classifiers.functions.Logistic",
413:       "weka.classifiers.lazy.LWL",
414:       "weka.classifiers.bayes.NaiveBayesUpdateable",
415:       "weka.classifiers.meta.FilteredClassifier",
416:       "weka.filters.supervised.attribute.AttributeSelection",
417:       "weka.attributeSelection.GreedyStepwise",
418:       "weka.classifiers.meta.ClassificationViaRegression",
419:       "weka.classifiers.meta.CVParameterSelection",
420:       "weka.core.Queue",
421:       "weka.core.AttributeLocator",
422:       "weka.core.StringLocator",
423:       "weka.core.RelationalLocator",
424:       "weka.core.ContingencyTables",
425:       "weka.core.Queue$QueueNode",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.attributeSelection.CorrelationAttributeEval",
428:       "weka.core.tokenizers.NGramTokenizer",
429:       "weka.classifiers.meta.AdaBoostM1",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.SMOreg",
432:       "weka.classifiers.functions.supportVector.RegOptimizer",
433:       "weka.classifiers.functions.supportVector.RegSMO",
434:       "weka.classifiers.functions.supportVector.RegSMOImproved",
435:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
436:       "weka.classifiers.functions.SimpleLinearRegression",
437:       "weka.classifiers.trees.LMT",
438:       "weka.core.ClassDiscovery",
439:       "weka.classifiers.functions.GaussianProcesses",
440:       "weka.classifiers.functions.supportVector.StringKernel",
441:       "weka.classifiers.rules.DecisionTable",
442:       "weka.attributeSelection.WrapperSubsetEval",
443:       "weka.classifiers.rules.PART",
444:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
445:       "weka.classifiers.meta.RandomCommittee",
446:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
447:       "weka.attributeSelection.InfoGainAttributeEval",
448:       "weka.core.matrix.Matrix",
449:       "weka.classifiers.rules.part.MakeDecList",
450:       "weka.attributeSelection.GainRatioAttributeEval",
451:       "weka.classifiers.meta.MultiScheme",
452:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
453:       "weka.estimators.PoissonEstimator",
454:       "weka.classifiers.functions.supportVector.RBFKernel",
455:       "weka.classifiers.meta.RandomSubSpace",
456:       "weka.core.AttributeStats",
457:       "weka.core.ManhattanDistance",
458:       "weka.core.ChebyshevDistance",
459:       "weka.experiment.Stats"
460:     );
461:   }
462: }

[MASTER] 06:10:23.245 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
MockFile.createTempFile("ku]TD", "XWjmInl");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.m_periodicP = 30;
costSensitiveClassifier0.setSeed(30);
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
double[] doubleArray0 = new double[3];
doubleArray0[0] = 273.4;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (-859.3921388427166);
DenseInstance denseInstance0 = new DenseInstance(30, doubleArray0);
naiveBayesMultinomialText0.distributionForInstance(denseInstance0);

[MASTER] 06:10:23.728 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_55_1575353423699/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_55_1575353423699/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.java]]
[MASTER] 06:10:23.728 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:23.728 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:10:23.728 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 06:10:23.729 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 06:10:23.729 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 06:10:23.729 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 06:10:23.729 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 06:10:23.729 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_55_1575353423699/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 06:10:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_55_tmp__ESTest extends NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
30:       Integer integer0 = new Integer(16);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       hashMap0.put(integer0, linkedHashMap0);
33:       naiveBayesMultinomialText0.m_periodicP = 16;
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
36:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
37:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
38:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
39:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_55_1575353423699/weka/classifiers/bayes/NaiveBayesMultinomialText_55_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 06:10:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.neighboursearch.BallTree",
101:       "weka.core.logging.Logger$Level",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.attributeSelection.CfsSubsetEval",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.trees.J48",
106:       "weka.classifiers.functions.LinearRegression",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
110:       "org.pentaho.packageManagement.DefaultPackageManager",
111:       "org.bounce.net.DefaultAuthenticator",
112:       "weka.classifiers.bayes.NaiveBayes",
113:       "weka.estimators.IncrementalEstimator",
114:       "weka.estimators.Estimator$Builder",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.trees.j48.C45ModelSelection",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.MultiInstanceCapabilitiesHandler",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.core.BinarySparseInstance",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.AttributeLocator",
134:       "weka.filters.supervised.attribute.NominalToBinary",
135:       "weka.core.SerializedObject",
136:       "weka.classifiers.meta.RegressionByDiscretization",
137:       "weka.clusterers.UpdateableClusterer",
138:       "weka.core.Summarizable",
139:       "weka.classifiers.trees.j48.ModelSelection",
140:       "weka.core.AdditionalMeasureProducer",
141:       "weka.core.neighboursearch.balltrees.BallNode",
142:       "org.pentaho.packageManagement.PackageManager$1",
143:       "weka.attributeSelection.GreedyStepwise",
144:       "weka.core.Drawable",
145:       "weka.core.matrix.Matrix",
146:       "weka.classifiers.ConditionalDensityEstimator",
147:       "weka.core.CapabilitiesHandler",
148:       "weka.classifiers.trees.REPTree",
149:       "weka.attributeSelection.ASEvaluation",
150:       "weka.core.AbstractInstance",
151:       "weka.core.scripting.JythonObject",
152:       "weka.core.SelectedTag",
153:       "org.pentaho.packageManagement.DefaultPackage",
154:       "weka.estimators.DiscreteEstimator",
155:       "weka.classifiers.bayes.NaiveBayesUpdateable",
156:       "weka.core.neighboursearch.balltrees.BallSplitter",
157:       "weka.classifiers.misc.InputMappedClassifier",
158:       "weka.classifiers.bayes.BayesNet",
159:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
160:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
161:       "weka.core.Version",
162:       "weka.attributeSelection.AttributeSelection",
163:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
164:       "weka.core.converters.ArffLoader$ArffReader",
165:       "weka.core.Tag",
166:       "weka.classifiers.IteratedSingleClassifierEnhancer",
167:       "weka.classifiers.trees.j48.BinC45ModelSelection",
168:       "weka.core.neighboursearch.CoverTree",
169:       "weka.classifiers.AbstractClassifier",
170:       "weka.estimators.UnivariateDensityEstimator",
171:       "weka.core.OptionHandler",
172:       "weka.core.WekaException",
173:       "weka.filters.StreamableFilter",
174:       "weka.core.Range",
175:       "weka.core.PartitionGenerator",
176:       "weka.core.scripting.JythonSerializableObject",
177:       "weka.classifiers.Classifier",
178:       "weka.attributeSelection.OneRAttributeEval",
179:       "weka.core.Capabilities$Capability",
180:       "weka.core.SparseInstance",
181:       "org.pentaho.packageManagement.PackageManager",
182:       "weka.classifiers.trees.j48.ClassifierSplitModel",
183:       "weka.core.tokenizers.WordTokenizer",
184:       "weka.classifiers.trees.j48.ClassifierTree",
185:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
186:       "weka.core.stemmers.SnowballStemmer",
187:       "weka.classifiers.meta.Bagging",
188:       "weka.classifiers.trees.j48.PruneableClassifierTree",
189:       "weka.classifiers.Evaluation",
190:       "weka.classifiers.functions.supportVector.Kernel",
191:       "weka.core.WekaPackageManager",
192:       "weka.attributeSelection.ASSearch",
193:       "weka.filters.SupervisedFilter",
194:       "weka.core.TechnicalInformationHandler",
195:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
196:       "weka.attributeSelection.StartSetHandler",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.Option",
199:       "weka.classifiers.meta.CostSensitiveClassifier",
200:       "weka.core.neighboursearch.PerformanceStats",
201:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
202:       "weka.estimators.NormalEstimator",
203:       "weka.filters.Sourcable",
204:       "weka.core.Attribute",
205:       "weka.core.Stopwords",
206:       "weka.core.tokenizers.AlphabeticTokenizer",
207:       "weka.core.FastVector",
208:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
209:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
210:       "weka.core.UnassignedDatasetException",
211:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
212:       "weka.classifiers.RandomizableClassifier",
213:       "weka.attributeSelection.RankedOutputSearch",
214:       "weka.classifiers.SingleClassifierEnhancer",
215:       "weka.core.RevisionUtils",
216:       "weka.core.Instance",
217:       "weka.estimators.Estimator",
218:       "weka.core.ProtectedProperties",
219:       "weka.classifiers.IntervalEstimator",
220:       "weka.core.StringLocator",
221:       "weka.core.Matchable",
222:       "weka.classifiers.bayes.net.ADNode",
223:       "weka.core.AttributeStats",
224:       "weka.core.WeightedInstancesHandler",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
227:       "weka.filters.unsupervised.attribute.Remove",
228:       "weka.filters.unsupervised.attribute.Discretize",
229:       "weka.core.Randomizable",
230:       "weka.classifiers.functions.SGD",
231:       "weka.classifiers.trees.j48.NoSplit",
232:       "weka.core.EuclideanDistance",
233:       "weka.core.Instances",
234:       "weka.filters.unsupervised.attribute.Normalize",
235:       "weka.core.UnassignedClassException",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.bayes.net.ParentSet",
238:       "weka.core.UnsupportedAttributeTypeException",
239:       "weka.core.TechnicalInformation",
240:       "weka.classifiers.Sourcable",
241:       "weka.core.RevisionHandler",
242:       "weka.classifiers.evaluation.output.prediction.PlainText",
243:       "weka.core.neighboursearch.TreePerformanceStats",
244:       "weka.core.xml.XMLSerialization",
245:       "weka.classifiers.xml.XMLClassifier",
246:       "weka.filters.Filter",
247:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
248:       "weka.filters.supervised.attribute.Discretize"
249:     );
250:   } 
251: 
252:   private static void resetClasses() {
253:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_55_tmp__ESTest_scaffolding.class.getClassLoader()); 
254: 
255:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
256:       "weka.classifiers.AbstractClassifier",
257:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
258:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
259:       "weka.core.Capabilities$Capability",
260:       "weka.core.tokenizers.Tokenizer",
261:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
262:       "weka.core.tokenizers.WordTokenizer",
263:       "weka.core.stemmers.NullStemmer",
264:       "weka.core.AbstractInstance",
265:       "weka.core.DenseInstance",
266:       "weka.core.SerializedObject",
267:       "weka.classifiers.Evaluation",
268:       "weka.core.Utils",
269:       "weka.core.Option",
270:       "weka.classifiers.SingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.core.Tag",
273:       "weka.classifiers.meta.CostSensitiveClassifier",
274:       "weka.classifiers.rules.ZeroR",
275:       "weka.classifiers.CostMatrix",
276:       "weka.core.RevisionUtils",
277:       "weka.core.TestInstances",
278:       "weka.core.Attribute",
279:       "weka.core.ProtectedProperties",
280:       "weka.core.Instances",
281:       "weka.core.Capabilities",
282:       "org.pentaho.packageManagement.PackageManager",
283:       "org.pentaho.packageManagement.DefaultPackageManager",
284:       "weka.core.Version",
285:       "weka.core.Environment",
286:       "weka.core.WekaPackageManager",
287:       "weka.core.UnassignedDatasetException",
288:       "weka.classifiers.lazy.IBk",
289:       "weka.core.neighboursearch.NearestNeighbourSearch",
290:       "weka.core.neighboursearch.LinearNNSearch",
291:       "weka.core.NormalizableDistance",
292:       "weka.core.EuclideanDistance",
293:       "weka.core.Range",
294:       "weka.filters.Filter",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.core.tokenizers.AlphabeticTokenizer",
298:       "weka.core.stemmers.LovinsStemmer",
299:       "weka.core.SparseInstance",
300:       "weka.core.BinarySparseInstance",
301:       "weka.attributeSelection.ASEvaluation",
302:       "weka.attributeSelection.OneRAttributeEval",
303:       "weka.attributeSelection.AttributeSelection",
304:       "weka.filters.supervised.attribute.Discretize",
305:       "weka.classifiers.trees.REPTree",
306:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
307:       "weka.attributeSelection.PrincipalComponents",
308:       "weka.core.neighboursearch.CoverTree",
309:       "weka.classifiers.misc.InputMappedClassifier",
310:       "weka.classifiers.bayes.BayesNet",
311:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
312:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
313:       "weka.classifiers.bayes.net.search.local.K2",
314:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
315:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
316:       "weka.classifiers.RandomizableClassifier",
317:       "weka.classifiers.functions.SGDText",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.core.SerializationHelper",
320:       "weka.core.neighboursearch.balltrees.BallNode",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.CfsSubsetEval",
323:       "weka.attributeSelection.ASSearch",
324:       "weka.attributeSelection.BestFirst",
325:       "weka.classifiers.trees.J48",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.stemmers.SnowballStemmer",
330:       "weka.core.stemmers.IteratedLovinsStemmer",
331:       "weka.classifiers.IteratedSingleClassifierEnhancer",
332:       "weka.classifiers.meta.AdditiveRegression",
333:       "weka.core.stemmers.Stemming",
334:       "weka.classifiers.meta.RegressionByDiscretization",
335:       "weka.filters.unsupervised.attribute.Discretize",
336:       "weka.classifiers.trees.j48.ClassifierTree",
337:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
338:       "weka.core.WekaException",
339:       "weka.core.UnsupportedAttributeTypeException",
340:       "weka.classifiers.functions.supportVector.Kernel",
341:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
342:       "weka.core.SelectedTag",
343:       "weka.classifiers.functions.supportVector.CachedKernel",
344:       "weka.classifiers.functions.supportVector.Puk",
345:       "weka.estimators.Estimator",
346:       "weka.estimators.NormalEstimator",
347:       "weka.core.Stopwords",
348:       "weka.core.neighboursearch.BallTree",
349:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
350:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
351:       "weka.core.neighboursearch.balltrees.BallSplitter",
352:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
353:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
354:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
355:       "weka.classifiers.MultipleClassifiersCombiner",
356:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
357:       "weka.classifiers.meta.Vote",
358:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.bayes.net.BIFReader",
362:       "weka.classifiers.rules.JRip",
363:       "weka.core.WekaEnumeration",
364:       "weka.core.Attribute$1",
365:       "weka.filters.SimpleFilter",
366:       "weka.filters.SimpleStreamFilter",
367:       "weka.filters.MultiFilter",
368:       "weka.filters.AllFilter",
369:       "weka.core.converters.ConverterUtils$DataSource",
370:       "weka.core.converters.AbstractLoader",
371:       "weka.core.converters.AbstractFileLoader",
372:       "weka.core.converters.ArffLoader",
373:       "weka.core.converters.ArffLoader$ArffReader",
374:       "weka.classifiers.functions.MultilayerPerceptron",
375:       "weka.core.FastVector",
376:       "weka.filters.unsupervised.attribute.NominalToBinary",
377:       "weka.classifiers.functions.neural.SigmoidUnit",
378:       "weka.classifiers.functions.neural.LinearUnit",
379:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
380:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
381:       "weka.classifiers.meta.Stacking",
382:       "weka.classifiers.bayes.NaiveBayes",
383:       "weka.attributeSelection.ReliefFAttributeEval",
384:       "weka.classifiers.functions.LinearRegression",
385:       "weka.core.UnassignedClassException",
386:       "weka.classifiers.functions.SimpleLogistic",
387:       "weka.classifiers.lazy.KStar",
388:       "weka.classifiers.functions.VotedPerceptron",
389:       "weka.core.FindWithCapabilities",
390:       "weka.core.SingleIndex",
391:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
392:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
393:       "weka.classifiers.meta.LogitBoost",
394:       "weka.classifiers.trees.DecisionStump",
395:       "weka.classifiers.trees.RandomForest",
396:       "weka.classifiers.trees.RandomTree",
397:       "weka.classifiers.bayes.NaiveBayesMultinomial",
398:       "weka.classifiers.rules.OneR",
399:       "weka.classifiers.functions.SGD",
400:       "weka.classifiers.trees.m5.M5Base",
401:       "weka.classifiers.trees.M5P",
402:       "weka.classifiers.rules.M5Rules",
403:       "weka.core.TechnicalInformation",
404:       "weka.core.TechnicalInformation$Type",
405:       "weka.core.TechnicalInformation$Field",
406:       "weka.classifiers.functions.SMO",
407:       "weka.classifiers.functions.supportVector.PolyKernel",
408:       "weka.estimators.DiscreteEstimator",
409:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.classifiers.functions.Logistic",
413:       "weka.classifiers.lazy.LWL",
414:       "weka.classifiers.bayes.NaiveBayesUpdateable",
415:       "weka.classifiers.meta.FilteredClassifier",
416:       "weka.filters.supervised.attribute.AttributeSelection",
417:       "weka.attributeSelection.GreedyStepwise",
418:       "weka.classifiers.meta.ClassificationViaRegression",
419:       "weka.classifiers.meta.CVParameterSelection",
420:       "weka.core.Queue",
421:       "weka.core.AttributeLocator",
422:       "weka.core.StringLocator",
423:       "weka.core.RelationalLocator",
424:       "weka.core.ContingencyTables",
425:       "weka.core.Queue$QueueNode",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.attributeSelection.CorrelationAttributeEval",
428:       "weka.core.tokenizers.NGramTokenizer",
429:       "weka.classifiers.meta.AdaBoostM1",
430:       "weka.estimators.KernelEstimator",
431:       "weka.classifiers.functions.SMOreg",
432:       "weka.classifiers.functions.supportVector.RegOptimizer",
433:       "weka.classifiers.functions.supportVector.RegSMO",
434:       "weka.classifiers.functions.supportVector.RegSMOImproved",
435:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
436:       "weka.classifiers.functions.SimpleLinearRegression",
437:       "weka.classifiers.trees.LMT",
438:       "weka.core.ClassDiscovery",
439:       "weka.classifiers.functions.GaussianProcesses",
440:       "weka.classifiers.functions.supportVector.StringKernel",
441:       "weka.classifiers.rules.DecisionTable",
442:       "weka.attributeSelection.WrapperSubsetEval",
443:       "weka.classifiers.rules.PART",
444:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
445:       "weka.classifiers.meta.RandomCommittee",
446:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
447:       "weka.attributeSelection.InfoGainAttributeEval",
448:       "weka.core.matrix.Matrix",
449:       "weka.classifiers.rules.part.MakeDecList",
450:       "weka.attributeSelection.GainRatioAttributeEval",
451:       "weka.classifiers.meta.MultiScheme",
452:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
453:       "weka.estimators.PoissonEstimator",
454:       "weka.classifiers.functions.supportVector.RBFKernel",
455:       "weka.classifiers.meta.RandomSubSpace",
456:       "weka.core.AttributeStats",
457:       "weka.core.ManhattanDistance",
458:       "weka.core.ChebyshevDistance",
459:       "weka.experiment.Stats"
460:     );
461:   }
462: }

[MASTER] 06:10:23.730 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
Integer integer0 = new Integer(16);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.m_periodicP = 16;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 06:10:28.475 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:10:29.685 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 06:13:29.530 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7151604166666666% of time used, but only 39/216 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21005
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21004
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:16:33.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:16:33.580 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:16:33.603 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:16:37.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:16:38.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:16:38.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 06:16:43.935 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 06:16:43.935 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 06:16:43.947 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 06:16:43.957 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 06:16:43.957 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 06:16:43.957 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 06:16:43.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 06:16:43.981 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 06:16:43.982 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
[MASTER] 06:16:44.750 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.getConsequent()D: Line 1107
[MASTER] 06:16:44.750 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1116
[MASTER] 06:16:44.750 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1117
[MASTER] 06:16:44.750 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1118
[MASTER] 06:16:44.750 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: Line 1119
[MASTER] 06:16:44.750 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1149
[MASTER] 06:16:44.750 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1152
[MASTER] 06:16:44.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: root-Branch
[MASTER] 06:16:44.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.getConsequent()D: root-Branch
[MASTER] 06:16:44.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true
[MASTER] 06:16:44.753 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true
[MASTER] 06:16:44.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.rules.JRip$RipperRule.getConsequent()D:1107 - InsertUnaryOp Negation
[MASTER] 06:16:44.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1117 - ReplaceVariable copy -> this
[MASTER] 06:16:44.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1118 - ReplaceVariable copy -> this
[MASTER] 06:16:44.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 432: weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;:1119 - ReplaceVariable copy -> this
[MASTER] 06:16:44.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 449: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1149 - ReplaceComparisonOperator != null -> = null
[MASTER] 06:16:44.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 453: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceComparisonOperator <= -> <
[MASTER] 06:16:44.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 455: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceConstant - 0 -> 1
[MASTER] 06:16:44.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 06:16:44.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.copy()Ljava/lang/Object;
[MASTER] 06:16:44.772 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 06:16:44.772 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.copy()Ljava/lang/Object;
[MASTER] 06:16:44.773 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true in context: 
[MASTER] 06:16:44.773 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.copy()Ljava/lang/Object;: root-Branch in context: weka.classifiers.rules.JRip$RipperRule:copy()Ljava/lang/Object;
[MASTER] 06:16:44.774 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true in context: 
[MASTER] 06:16:45.632 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:16:50.287 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: Line 536
[MASTER] 06:16:50.293 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: root-Branch
[MASTER] 06:16:50.297 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: weka.classifiers.rules.JRip.getSeed()J:536 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 06:16:50.298 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 201: weka.classifiers.rules.JRip.getSeed()J:536 - InsertUnaryOp Negation
[MASTER] 06:16:50.300 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Positive
[MASTER] 06:16:50.303 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 06:16:50.303 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 06:16:50.303 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getSeed()J: root-Branch in context: weka.classifiers.rules.JRip:getSeed()J
[MASTER] 06:16:54.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:16:54.161 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:16:54.162 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:16:55.287 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:16:56.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:16:56.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:16:56.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 06:16:59.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: Line 1098
[MASTER] 06:16:59.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: Line 1099
[MASTER] 06:16:59.378 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: root-Branch
[MASTER] 06:16:59.379 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 428: weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V:1098 - InsertUnaryOp Negation of cl
[MASTER] 06:16:59.903 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 06:17:00.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 06:17:00.030 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 06:17:00.034 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 06:17:00.035 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 06:17:00.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 06:17:00.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 06:17:00.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 06:17:00.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 06:17:00.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 06:17:00.216 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1025
* Starting evolution
[MASTER] 06:17:05.480 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 06:17:12.264 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 06:18:42.952 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 06:20:42.035 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
[MASTER] 06:20:42.037 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
* Search finished after 312s and 262 generations, 118673 statements, best individual has fitness: 12336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 261
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 114
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 570
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 114
* Generated 80 tests with total length 601
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 375s and 118 generations, 83423 statements, best individual has fitness: 15184.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 801
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 356
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 261
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 340
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
* Generated 165 tests with total length 2243
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 8%
[MASTER] 06:31:31.057 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 06:31:44.551 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:31:44.772 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 06:31:45.090 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 06:31:45.090 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1025/107_weka/evosuite-tests
* Done!

* Computation finished
