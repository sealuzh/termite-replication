* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:17:25.562 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:17:25.587 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:17:25.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:17:26.478 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:17:27.313 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:17:27.320 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:17:29.703 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:17:29.753 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:17:29.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:17:29.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:17:29.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:17:29.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:17:29.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:17:29.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:17:29.757 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:17:29.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 03:17:29.934 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 03:17:34.941 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 03:17:43.915 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 03:18:05.885 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: Line 1644
[MASTER] 03:18:05.885 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: Line 1658
[MASTER] 03:18:05.886 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: Line 1667
[MASTER] 03:18:05.889 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: I14 Branch 167 IFLE L1640 - true
[MASTER] 03:18:05.889 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: I26 Branch 168 IFEQ L1644 - true
[MASTER] 03:18:05.889 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: I89 Branch 171 IF_ICMPGE L1658 - true
[MASTER] 03:18:05.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 869: weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D:1640 - ReplaceComparisonOperator <= -> <
[MASTER] 03:18:05.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 871: weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D:1644 - ReplaceComparisonOperator == -> !=
[MASTER] 03:18:05.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 950: weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D:1658 - ReplaceComparisonOperator >= -> >
[MASTER] 03:18:05.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D:EmptyArray
[MASTER] 03:18:05.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D
[MASTER] 03:18:05.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: I89 Branch 171 IF_ICMPGE L1658 - true in context: weka.classifiers.Evaluation:evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D
[MASTER] 03:18:05.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: I26 Branch 168 IFEQ L1644 - true in context: weka.classifiers.Evaluation:evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D
[MASTER] 03:18:05.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D: I14 Branch 167 IFLE L1640 - true in context: weka.classifiers.Evaluation:evaluateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;[Ljava/lang/Object;)[D
* Search finished after 233s and 118 generations, 64997 statements, best individual has fitness: 13344.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 66%
* Total number of goals: 1378
* Number of covered goals: 911
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 809
* Number of covered goals: 399
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 68%
* Total number of goals: 424
* Number of covered goals: 289
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 65
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 809
* Number of covered goals: 377
* Generated 173 tests with total length 1950
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 03:27:43.252 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_43_1575257263224/weka/classifiers/Evaluation_43_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_43_1575257263224/weka/classifiers/Evaluation_43_tmp__ESTest_scaffolding.java]]
[MASTER] 03:27:43.252 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:27:43.252 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:27:43.256 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_43_tmp__ESTest: 33
[MASTER] 03:27:43.257 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_43_1575257263224/weka/classifiers/Evaluation_43_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:27:43 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.classifiers.Evaluation;
14: import weka.classifiers.meta.RegressionByDiscretization;
15: import weka.core.Instances;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class Evaluation_43_tmp__ESTest extends Evaluation_43_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4444444444444445
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       TestInstances testInstances0 = new TestInstances();
28:       Instances instances0 = testInstances0.generate();
29:       RegressionByDiscretization regressionByDiscretization0 = new RegressionByDiscretization();
30:       Evaluation evaluation0 = new Evaluation(instances0);
31:       evaluation0.falsePositiveRate(1);
32:       double double0 = evaluation0.m_ClassPriorsSum;
33:       assertNotEquals(double0, double1, 0.01);
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_43_1575257263224/weka/classifiers/Evaluation_43_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:27:43 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_43_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_43_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.clusterers.AbstractClusterer",
91:       "weka.core.converters.TextDirectoryLoader",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.filters.UnsupervisedFilter",
95:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
96:       "weka.core.DenseInstance",
97:       "weka.classifiers.trees.J48",
98:       "weka.core.converters.DatabaseConverter",
99:       "weka.classifiers.functions.SimpleLinearRegression",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "weka.estimators.UnivariateIntervalEstimator",
102:       "org.bounce.net.DefaultAuthenticator",
103:       "weka.filters.SimpleStreamFilter",
104:       "weka.clusterers.NumberOfClustersRequestable",
105:       "weka.core.neighboursearch.KDTree",
106:       "weka.classifiers.meta.AdaBoostM1",
107:       "weka.core.CustomDisplayStringProvider",
108:       "weka.core.NormalizableDistance",
109:       "weka.classifiers.functions.SMOreg",
110:       "weka.clusterers.SimpleKMeans",
111:       "weka.core.TechnicalInformation$Type",
112:       "weka.core.Copyable",
113:       "weka.core.BinarySparseInstance",
114:       "weka.filters.supervised.attribute.NominalToBinary",
115:       "weka.core.SerializedObject",
116:       "weka.clusterers.UpdateableClusterer",
117:       "weka.core.AdditionalMeasureProducer",
118:       "weka.core.neighboursearch.balltrees.BallNode",
119:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
120:       "weka.classifiers.lazy.kstar.KStarConstants",
121:       "weka.classifiers.functions.supportVector.RegOptimizer",
122:       "weka.classifiers.misc.InputMappedClassifier",
123:       "weka.experiment.ResultProducer",
124:       "weka.core.Version",
125:       "weka.classifiers.evaluation.NominalPrediction",
126:       "weka.classifiers.AbstractClassifier",
127:       "weka.core.converters.ArffLoader",
128:       "weka.filters.unsupervised.attribute.Center",
129:       "weka.classifiers.meta.Stacking",
130:       "weka.core.WekaException",
131:       "weka.filters.StreamableFilter",
132:       "weka.core.Attribute$1",
133:       "weka.core.PartitionGenerator",
134:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
135:       "weka.core.SparseInstance",
136:       "weka.attributeSelection.AttributeTransformer",
137:       "weka.classifiers.trees.j48.ClassifierTree",
138:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
139:       "weka.attributeSelection.PrincipalComponents",
140:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
141:       "weka.classifiers.functions.VotedPerceptron",
142:       "weka.classifiers.trees.j48.PruneableClassifierTree",
143:       "weka.classifiers.Evaluation",
144:       "weka.classifiers.functions.supportVector.Kernel",
145:       "weka.classifiers.evaluation.TwoClassStats",
146:       "weka.classifiers.evaluation.ThresholdCurve",
147:       "weka.core.converters.URLSourcedLoader",
148:       "weka.core.converters.FileSourcedConverter",
149:       "weka.core.neighboursearch.LinearNNSearch",
150:       "weka.clusterers.Clusterer",
151:       "weka.core.neighboursearch.PerformanceStats",
152:       "weka.estimators.UnivariateKernelEstimator",
153:       "weka.core.UnassignedDatasetException",
154:       "weka.classifiers.meta.CVParameterSelection",
155:       "weka.core.RevisionUtils",
156:       "weka.classifiers.meta.RandomCommittee",
157:       "weka.core.converters.Loader",
158:       "weka.classifiers.functions.supportVector.RegSMO",
159:       "weka.core.ProtectedProperties",
160:       "weka.core.converters.C45Loader",
161:       "weka.core.StringLocator",
162:       "weka.core.AttributeStats",
163:       "weka.filters.MultiFilter",
164:       "weka.classifiers.trees.DecisionStump",
165:       "weka.estimators.UnivariateQuantileEstimator",
166:       "weka.filters.unsupervised.attribute.Remove",
167:       "weka.core.Randomizable",
168:       "weka.classifiers.rules.M5Rules",
169:       "weka.core.EuclideanDistance",
170:       "weka.core.Instances",
171:       "weka.core.converters.AbstractFileLoader",
172:       "weka.classifiers.bayes.NaiveBayesMultinomial",
173:       "weka.core.converters.ConverterUtils$DataSink",
174:       "weka.core.converters.DatabaseConnection",
175:       "weka.core.UnsupportedAttributeTypeException",
176:       "weka.core.TechnicalInformation",
177:       "weka.core.RevisionHandler",
178:       "weka.experiment.Stats",
179:       "weka.core.converters.ConverterUtils$DataSource",
180:       "weka.classifiers.rules.OneR$OneRRule",
181:       "weka.classifiers.xml.XMLClassifier",
182:       "weka.filters.Filter",
183:       "weka.filters.supervised.attribute.Discretize",
184:       "weka.core.TestInstances",
185:       "weka.core.converters.ConverterUtils",
186:       "weka.core.DistanceFunction",
187:       "weka.attributeSelection.AttributeEvaluator",
188:       "weka.clusterers.FilteredClusterer",
189:       "org.pentaho.packageManagement.Package",
190:       "weka.classifiers.trees.m5.M5Base",
191:       "weka.classifiers.CostMatrix",
192:       "weka.classifiers.evaluation.NumericPrediction",
193:       "weka.core.logging.Logger$Level",
194:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
195:       "weka.classifiers.evaluation.output.prediction.Null",
196:       "weka.core.converters.IncrementalConverter",
197:       "weka.clusterers.SingleClustererEnhancer",
198:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
199:       "weka.classifiers.meta.LogitBoost",
200:       "weka.filters.SimpleFilter",
201:       "weka.core.EnvironmentHandler",
202:       "weka.classifiers.trees.j48.C45ModelSelection",
203:       "weka.classifiers.trees.m5.RuleNode",
204:       "weka.core.RelationalLocator",
205:       "weka.core.Utils",
206:       "weka.core.NoSupportForMissingValuesException",
207:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
208:       "weka.classifiers.UpdateableClassifier",
209:       "weka.core.MultiInstanceCapabilitiesHandler",
210:       "weka.core.Capabilities",
211:       "weka.core.AttributeLocator",
212:       "weka.core.converters.SVMLightLoader",
213:       "weka.classifiers.functions.supportVector.CachedKernel",
214:       "weka.classifiers.meta.RegressionByDiscretization",
215:       "weka.core.Summarizable",
216:       "weka.classifiers.trees.j48.ModelSelection",
217:       "org.pentaho.packageManagement.PackageManager$1",
218:       "weka.core.Drawable",
219:       "weka.core.matrix.Matrix",
220:       "weka.classifiers.ConditionalDensityEstimator",
221:       "weka.core.CapabilitiesHandler",
222:       "weka.classifiers.trees.REPTree",
223:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SelectedTag",
227:       "org.pentaho.packageManagement.DefaultPackage",
228:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
229:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
230:       "weka.classifiers.meta.AdditiveRegression",
231:       "weka.clusterers.RandomizableClusterer",
232:       "weka.classifiers.evaluation.Prediction",
233:       "weka.core.converters.AbstractLoader",
234:       "weka.filters.AllFilter",
235:       "weka.filters.unsupervised.attribute.RemoveUseless",
236:       "weka.core.converters.BatchConverter",
237:       "weka.core.converters.ArffLoader$ArffReader",
238:       "weka.core.Tag",
239:       "weka.classifiers.IteratedSingleClassifierEnhancer",
240:       "weka.core.TechnicalInformationHandlerJavadoc",
241:       "weka.classifiers.trees.j48.BinC45ModelSelection",
242:       "weka.estimators.UnivariateDensityEstimator",
243:       "weka.core.OptionHandler",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.core.Range",
246:       "weka.classifiers.Classifier",
247:       "weka.core.Capabilities$Capability",
248:       "org.pentaho.packageManagement.PackageManager",
249:       "weka.core.WekaEnumeration",
250:       "weka.classifiers.trees.M5P",
251:       "weka.core.WekaPackageManager",
252:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
253:       "weka.filters.SupervisedFilter",
254:       "weka.core.TechnicalInformationHandler",
255:       "weka.experiment.DatabaseUtils",
256:       "weka.classifiers.functions.SimpleLogistic",
257:       "weka.classifiers.lazy.LWL",
258:       "weka.classifiers.meta.CostSensitiveClassifier",
259:       "weka.core.Option",
260:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
261:       "weka.filters.Sourcable",
262:       "weka.core.Attribute",
263:       "weka.core.FastVector",
264:       "weka.classifiers.MultipleClassifiersCombiner",
265:       "weka.core.BatchPredictor",
266:       "weka.classifiers.functions.supportVector.RegSMOImproved",
267:       "weka.classifiers.trees.RandomTree",
268:       "weka.classifiers.SingleClassifierEnhancer",
269:       "weka.core.Instance",
270:       "weka.core.converters.SerializedInstancesLoader",
271:       "weka.classifiers.functions.supportVector.PolyKernel",
272:       "weka.classifiers.lazy.KStar",
273:       "weka.classifiers.IntervalEstimator",
274:       "weka.core.Matchable",
275:       "weka.core.WeightedInstancesHandler",
276:       "weka.core.neighboursearch.NearestNeighbourSearch",
277:       "weka.classifiers.functions.GaussianProcesses",
278:       "weka.core.TechnicalInformation$Field",
279:       "weka.filters.unsupervised.attribute.Discretize",
280:       "weka.core.converters.DatabaseLoader",
281:       "weka.core.Javadoc",
282:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
283:       "weka.filters.unsupervised.attribute.Normalize",
284:       "weka.classifiers.rules.OneR",
285:       "weka.core.UnassignedClassException",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
288:       "weka.filters.unsupervised.attribute.Standardize",
289:       "weka.classifiers.Sourcable",
290:       "weka.classifiers.evaluation.output.prediction.PlainText",
291:       "weka.core.xml.XMLSerialization",
292:       "weka.core.neighboursearch.TreePerformanceStats",
293:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
294:       "weka.classifiers.lazy.IBk"
295:     );
296:   } 
297: 
298:   private static void resetClasses() {
299:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_43_tmp__ESTest_scaffolding.class.getClassLoader()); 
300: 
301:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
302:       "weka.classifiers.Evaluation",
303:       "weka.core.pmml.PMMLFactory$ModelType",
304:       "weka.core.pmml.PMMLFactory$1",
305:       "weka.core.xml.KOML",
306:       "weka.core.Version",
307:       "weka.core.Utils",
308:       "weka.core.converters.AbstractLoader",
309:       "weka.core.converters.AbstractFileLoader",
310:       "weka.core.converters.JSONLoader",
311:       "weka.core.converters.ConverterUtils$DataSource",
312:       "weka.core.AbstractInstance",
313:       "weka.core.SparseInstance",
314:       "weka.core.BinarySparseInstance",
315:       "weka.clusterers.AbstractClusterer",
316:       "weka.clusterers.RandomizableClusterer",
317:       "weka.clusterers.SimpleKMeans",
318:       "weka.core.NormalizableDistance",
319:       "weka.core.EuclideanDistance",
320:       "weka.core.Range",
321:       "weka.classifiers.CostMatrix",
322:       "weka.core.converters.SerializedInstancesLoader",
323:       "weka.classifiers.AbstractClassifier",
324:       "weka.core.Tag",
325:       "weka.classifiers.lazy.IBk",
326:       "weka.core.neighboursearch.NearestNeighbourSearch",
327:       "weka.core.neighboursearch.LinearNNSearch",
328:       "weka.core.converters.C45Loader",
329:       "weka.core.converters.CSVLoader",
330:       "weka.core.converters.DatabaseLoader",
331:       "weka.core.Environment",
332:       "weka.experiment.DatabaseUtils",
333:       "weka.core.converters.DatabaseConnection",
334:       "org.pentaho.packageManagement.PackageManager",
335:       "org.pentaho.packageManagement.DefaultPackageManager",
336:       "weka.core.WekaPackageManager",
337:       "weka.experiment.InstanceQuery",
338:       "weka.core.Option",
339:       "weka.core.Instances",
340:       "weka.core.xml.XMLDocument",
341:       "weka.core.xml.XMLInstances",
342:       "weka.core.converters.XRFFLoader",
343:       "weka.core.converters.MatlabLoader",
344:       "weka.classifiers.SingleClassifierEnhancer",
345:       "weka.classifiers.misc.InputMappedClassifier",
346:       "weka.classifiers.rules.ZeroR",
347:       "weka.core.converters.LibSVMLoader",
348:       "weka.classifiers.bayes.BayesNet",
349:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
350:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
351:       "weka.classifiers.bayes.net.search.local.K2",
352:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
353:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
354:       "weka.core.converters.ArffLoader",
355:       "weka.gui.GenericPropertiesCreator",
356:       "weka.gui.GenericObjectEditor",
357:       "weka.core.converters.ConverterUtils",
358:       "weka.core.converters.TextDirectoryLoader",
359:       "weka.core.Attribute",
360:       "weka.core.ProtectedProperties",
361:       "weka.core.WekaEnumeration",
362:       "weka.core.Attribute$1",
363:       "weka.classifiers.lazy.LWL",
364:       "weka.classifiers.trees.DecisionStump",
365:       "weka.core.TestInstances",
366:       "weka.core.DenseInstance",
367:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
368:       "weka.classifiers.meta.CostSensitiveClassifier",
369:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
370:       "weka.classifiers.evaluation.output.prediction.Null",
371:       "weka.core.RevisionUtils",
372:       "weka.core.converters.SVMLightLoader",
373:       "weka.attributeSelection.ASEvaluation",
374:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
375:       "weka.attributeSelection.PrincipalComponents",
376:       "weka.core.neighboursearch.CoverTree",
377:       "weka.classifiers.IteratedSingleClassifierEnhancer",
378:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.meta.LogitBoost",
380:       "weka.classifiers.MultipleClassifiersCombiner",
381:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
382:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
383:       "weka.classifiers.meta.Stacking",
384:       "weka.core.UnassignedClassException",
385:       "weka.core.neighboursearch.balltrees.BallNode",
386:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
387:       "weka.core.Capabilities",
388:       "weka.core.Capabilities$Capability",
389:       "weka.core.SerializedObject",
390:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
391:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
392:       "weka.core.neighboursearch.balltrees.BallSplitter",
393:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
394:       "weka.core.neighboursearch.KDTree",
395:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
396:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
397:       "weka.core.UnassignedDatasetException",
398:       "weka.classifiers.functions.GaussianProcesses",
399:       "weka.classifiers.functions.supportVector.Kernel",
400:       "weka.classifiers.functions.supportVector.CachedKernel",
401:       "weka.classifiers.functions.supportVector.PolyKernel",
402:       "weka.classifiers.meta.FilteredClassifier",
403:       "weka.filters.Filter",
404:       "weka.filters.supervised.attribute.AttributeSelection",
405:       "weka.attributeSelection.AttributeSelection",
406:       "weka.attributeSelection.CfsSubsetEval",
407:       "weka.attributeSelection.ASSearch",
408:       "weka.attributeSelection.GreedyStepwise",
409:       "weka.attributeSelection.BestFirst",
410:       "weka.classifiers.trees.J48",
411:       "weka.filters.supervised.attribute.Discretize",
412:       "weka.filters.AllFilter",
413:       "weka.core.WekaException",
414:       "weka.core.UnsupportedAttributeTypeException",
415:       "weka.classifiers.evaluation.output.prediction.PlainText",
416:       "weka.experiment.Stats",
417:       "weka.classifiers.meta.ClassificationViaRegression",
418:       "weka.classifiers.trees.m5.M5Base",
419:       "weka.classifiers.trees.M5P",
420:       "weka.classifiers.functions.LinearRegression",
421:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
422:       "weka.classifiers.meta.Vote",
423:       "weka.classifiers.bayes.NaiveBayesMultinomial",
424:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
425:       "weka.core.TechnicalInformation",
426:       "weka.core.TechnicalInformation$Type",
427:       "weka.core.TechnicalInformation$Field",
428:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
429:       "weka.filters.SimpleFilter",
430:       "weka.filters.SimpleStreamFilter",
431:       "weka.filters.MultiFilter",
432:       "weka.classifiers.meta.RegressionByDiscretization",
433:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
434:       "weka.filters.unsupervised.attribute.Discretize",
435:       "weka.classifiers.rules.M5Rules",
436:       "weka.clusterers.Cobweb",
437:       "weka.classifiers.meta.AdditiveRegression",
438:       "weka.classifiers.meta.AttributeSelectedClassifier",
439:       "weka.core.converters.ArffLoader$ArffReader",
440:       "weka.classifiers.trees.REPTree",
441:       "weka.classifiers.functions.Logistic",
442:       "weka.classifiers.rules.OneR",
443:       "weka.classifiers.functions.supportVector.SMOset",
444:       "weka.classifiers.bayes.NaiveBayes",
445:       "weka.classifiers.bayes.NaiveBayesUpdateable",
446:       "weka.classifiers.functions.SimpleLinearRegression",
447:       "weka.classifiers.rules.JRip",
448:       "weka.clusterers.FarthestFirst",
449:       "weka.classifiers.evaluation.output.prediction.XML",
450:       "weka.classifiers.meta.CVParameterSelection",
451:       "weka.core.FastVector",
452:       "weka.classifiers.lazy.KStar",
453:       "weka.classifiers.functions.SimpleLogistic",
454:       "weka.core.tokenizers.Tokenizer",
455:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
456:       "weka.core.tokenizers.WordTokenizer",
457:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
458:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
459:       "weka.classifiers.meta.Bagging",
460:       "weka.classifiers.meta.AdaBoostM1",
461:       "weka.clusterers.ClusterEvaluation",
462:       "weka.classifiers.RandomizableClassifier",
463:       "weka.classifiers.functions.SGD",
464:       "weka.classifiers.rules.DecisionTable",
465:       "weka.core.neighboursearch.BallTree",
466:       "weka.clusterers.SingleClustererEnhancer",
467:       "weka.clusterers.FilteredClusterer",
468:       "weka.clusterers.AbstractDensityBasedClusterer",
469:       "weka.clusterers.MakeDensityBasedClusterer",
470:       "weka.classifiers.trees.LMT",
471:       "weka.core.AttributeStats",
472:       "weka.estimators.UnivariateKernelEstimator",
473:       "weka.attributeSelection.InfoGainAttributeEval",
474:       "weka.core.FindWithCapabilities",
475:       "weka.core.SingleIndex",
476:       "weka.classifiers.trees.RandomForest",
477:       "weka.classifiers.trees.RandomTree",
478:       "weka.classifiers.meta.MultiScheme",
479:       "weka.classifiers.functions.VotedPerceptron",
480:       "weka.core.SelectedTag",
481:       "weka.core.MinkowskiDistance",
482:       "weka.classifiers.meta.MultiClassClassifier",
483:       "weka.classifiers.functions.MultilayerPerceptron",
484:       "weka.filters.unsupervised.attribute.NominalToBinary",
485:       "weka.classifiers.functions.neural.SigmoidUnit",
486:       "weka.classifiers.functions.neural.LinearUnit",
487:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
488:       "weka.classifiers.functions.SMOreg",
489:       "weka.classifiers.functions.supportVector.RegOptimizer",
490:       "weka.classifiers.functions.supportVector.RegSMO",
491:       "weka.classifiers.functions.supportVector.RegSMOImproved",
492:       "weka.classifiers.misc.SerializedClassifier",
493:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
494:       "weka.classifiers.evaluation.output.prediction.HTML",
495:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
496:       "weka.core.tokenizers.NGramTokenizer",
497:       "weka.classifiers.evaluation.output.prediction.CSV",
498:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
499:       "weka.core.stemmers.NullStemmer",
500:       "weka.classifiers.rules.PART",
501:       "weka.core.Javadoc",
502:       "weka.core.TechnicalInformationHandlerJavadoc",
503:       "weka.attributeSelection.CorrelationAttributeEval",
504:       "weka.core.tokenizers.AlphabeticTokenizer",
505:       "weka.classifiers.trees.j48.ClassifierTree",
506:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
507:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
508:       "weka.classifiers.meta.RandomCommittee",
509:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
510:       "weka.classifiers.rules.OneR$OneRRule",
511:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
512:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
513:       "weka.clusterers.HierarchicalClusterer",
514:       "weka.classifiers.functions.supportVector.Puk",
515:       "weka.core.ListOptions",
516:       "weka.estimators.Estimator",
517:       "weka.estimators.DiscreteEstimator",
518:       "weka.classifiers.meta.RandomSubSpace",
519:       "weka.classifiers.functions.SGDText",
520:       "weka.classifiers.rules.part.MakeDecList",
521:       "weka.attributeSelection.WrapperSubsetEval",
522:       "weka.core.Check",
523:       "weka.core.CheckGOE",
524:       "weka.classifiers.evaluation.NominalPrediction",
525:       "weka.classifiers.evaluation.Prediction",
526:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
527:       "weka.core.matrix.Matrix",
528:       "weka.classifiers.evaluation.ThresholdCurve",
529:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
530:       "weka.clusterers.RandomizableDensityBasedClusterer",
531:       "weka.clusterers.EM",
532:       "weka.estimators.PoissonEstimator",
533:       "weka.attributeSelection.GainRatioAttributeEval",
534:       "weka.classifiers.evaluation.TwoClassStats",
535:       "weka.classifiers.evaluation.NumericPrediction"
536:     );
537:   }
538: }

[MASTER] 03:27:43.257 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
RegressionByDiscretization regressionByDiscretization0 = new RegressionByDiscretization();
Evaluation evaluation0 = new Evaluation(instances0);
evaluation0.falsePositiveRate(1);
double double0 = evaluation0.m_ClassPriorsSum;
assertNotEquals(double0, double1, 0.01);


[MASTER] 03:27:48.262 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:27:48.581 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:27:48.582 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 03:27:50.047 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14212
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:29:00.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:29:00.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:29:00.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:29:00.527 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 03:29:05.339 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 218s and 128 generations, 85291 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 21 tests with total length 141
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14213
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:35:53.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:35:53.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:35:53.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:35:53.384 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:35:53.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:35:53.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 03:35:55.606 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:35:55.619 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:35:55.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:35:55.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:35:55.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:35:55.753 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 03:36:09.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 03:36:09.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 03:36:09.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 03:36:09.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 252: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - ReplaceVariable m_wordFrequencies -> m_normalize
[MASTER] 03:36:09.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 03:36:09.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 03:36:09.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 03:36:09.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 03:36:09.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 03:36:09.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 03:36:12.770 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:True
[MASTER] 03:36:29.909 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 03:36:31.200 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 03:36:31.200 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 03:39:01.576 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 216s and 315 generations, 196667 statements, best individual has fitness: 1672.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 158
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 476
* Number of covered goals: 428
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 156
* Generated 83 tests with total length 906
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 246s and 369 generations, 163525 statements, best individual has fitness: 4000.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 267
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 148
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 713
* Number of covered goals: 538
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 148
* Generated 86 tests with total length 760
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 03:42:56.044 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:42:56.812 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:43:16.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 03:43:16.554 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
ArrayList<String> arrayList1 = new ArrayList<String>();
ArrayList<String> arrayList2 = new ArrayList<String>(arrayList1);
Instances instances0 = new Instances("X0l{ED^", arrayList0, 80);
Attribute attribute0 = new Attribute("7V;O-q", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances("%\"qrr?V@hG,d`t~9", arrayList0, 2);
discretize0.setInputFormat(instances1);

[MASTER] 03:43:21.654 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 03:43:21.656 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
ArrayList<String> arrayList1 = new ArrayList<String>();
ArrayList<String> arrayList2 = new ArrayList<String>(arrayList1);
Instances instances0 = new Instances("X0l{ED^", arrayList0, 80);
Attribute attribute0 = new Attribute(".arff", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances("%\"qrr?V@hG,d`t~9", arrayList0, 2);
discretize0.setInputFormat(instances1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 03:44:58.929 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_5_1575258298871/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_5_1575258298871/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.java]]
[MASTER] 03:44:58.931 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:44:58.931 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:44:58.935 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 03:44:58.935 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 03:44:58.936 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_5_1575258298871/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:44:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_5_tmp__ESTest extends NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.543056733112554
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       String[] stringArray0 = new String[4];
29:       stringArray0[0] = "-tokenizer";
30:       stringArray0[1] = "-M";
31:       stringArray0[2] = "-tokenizer";
32:       stringArray0[3] = "-tokenizer";
33:       try { 
34:         naiveBayesMultinomialText0.setOptions(stringArray0);
35:         fail("Expecting exception: NumberFormatException");
36:       
37:       } catch(NumberFormatException e) {
38:       }
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_5_1575258298871/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:44:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:44:58.936 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[4];
stringArray0[0] = "-tokenizer";
stringArray0[1] = "-M";
stringArray0[2] = "-tokenizer";
stringArray0[3] = "-tokenizer";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 03:44:59.026 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_7_1575258298990/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_7_1575258298990/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.java]]
[MASTER] 03:44:59.026 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:44:59.028 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:44:59.028 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 03:44:59.028 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 03:44:59.028 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 03:44:59.029 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_7_1575258298990/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:44:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_7_tmp__ESTest extends NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.185851463196929
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       String[] stringArray0 = new String[3];
29:       stringArray0[0] = "-tokenizer";
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
32:       stringArray0[1] = "-tokenizer";
33:       stringArray0[2] = "-tokenizer";
34:       try { 
35:         naiveBayesMultinomialText0.setOptions(stringArray0);
36:         fail("Expecting exception: ClassNotFoundException");
37:       
38:       } catch(ClassNotFoundException e) {
39:       }
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_7_1575258298990/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:44:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:44:59.029 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[3];
stringArray0[0] = "-tokenizer";
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
stringArray0[1] = "-tokenizer";
stringArray0[2] = "-tokenizer";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 03:44:59.577 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_20_1575258299548/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_20_1575258299548/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.java]]
[MASTER] 03:44:59.577 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:44:59.577 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:44:59.578 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:44:59.578 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:44:59.578 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 03:44:59.579 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_20_1575258299548/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:44:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_20_tmp__ESTest extends NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.543056733112554
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       Integer integer0 = new Integer(165);
31:       String[] stringArray0 = new String[2];
32:       stringArray0[0] = "-P";
33:       stringArray0[1] = "+";
34:       try { 
35:         naiveBayesMultinomialText0.setOptions(stringArray0);
36:         fail("Expecting exception: NumberFormatException");
37:       
38:       } catch(NumberFormatException e) {
39:          //
40:          // For input string: \"+\"
41:          //
42:          verifyException("java.lang.NumberFormatException", e);
43:       }
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_20_1575258299548/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:44:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:44:59.579 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(165);
String[] stringArray0 = new String[2];
stringArray0[0] = "-P";
stringArray0[1] = "+";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 03:45:00.029 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_30_1575258300000/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_30_1575258300000/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.java]]
[MASTER] 03:45:00.029 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:00.029 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:00.029 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 03:45:00.029 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 03:45:00.030 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_30_1575258300000/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:45:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_30_tmp__ESTest extends NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.2623477045221723
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       String[] stringArray0 = new String[8];
29:       stringArray0[0] = "-tokenizer";
30:       stringArray0[1] = "-tokenizer";
31:       stringArray0[2] = "*)XI%>iW}vo/}";
32:       stringArray0[3] = "-tokenizer";
33:       stringArray0[4] = "-stopwords";
34:       stringArray0[5] = "-tokenizer";
35:       stringArray0[6] = "-tokenizer";
36:       stringArray0[7] = "-tokenizer";
37:       try { 
38:         naiveBayesMultinomialText0.setOptions(stringArray0);
39:         fail("Expecting exception: ClassNotFoundException");
40:       
41:       } catch(ClassNotFoundException e) {
42:       }
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_30_1575258300000/weka/classifiers/bayes/NaiveBayesMultinomialText_30_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:45:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_30_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:45:00.030 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
String[] stringArray0 = new String[8];
stringArray0[0] = "-tokenizer";
stringArray0[1] = "-tokenizer";
stringArray0[2] = "*)XI%>iW}vo/}";
stringArray0[3] = "-tokenizer";
stringArray0[4] = "-stopwords";
stringArray0[5] = "-tokenizer";
stringArray0[6] = "-tokenizer";
stringArray0[7] = "-tokenizer";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 03:45:01.606 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_66_1575258301583/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_66_1575258301583/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding.java]]
[MASTER] 03:45:01.606 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.606 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.606 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:45:01.606 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:45:01.606 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 03:45:01.607 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_66_1575258301583/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:45:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_66_tmp__ESTest extends NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=1.1217186091313738
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       naiveBayesMultinomialText0.m_useStopList = true;
27:       naiveBayesMultinomialText0.m_t = 16.0;
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       Integer integer0 = new Integer(10000);
30:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
31:       naiveBayesMultinomialText0.setPeriodicPruning(10000);
32:       naiveBayesMultinomialText0.pruneDictionary();
33:       assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_66_1575258301583/weka/classifiers/bayes/NaiveBayesMultinomialText_66_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:45:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_66_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:45:01.608 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
naiveBayesMultinomialText0.m_t = 16.0;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(10000);
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.setPeriodicPruning(10000);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 03:45:01.658 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_68_1575258301635/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_68_1575258301635/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.java]]
[MASTER] 03:45:01.658 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.658 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.658 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:45:01.658 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:45:01.659 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 03:45:01.659 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_68_1575258301635/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:45:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_68_tmp__ESTest extends NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.1217186091313738
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       String[] stringArray0 = new String[4];
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       naiveBayesMultinomialText0.setPeriodicPruning(11);
31:       naiveBayesMultinomialText0.pruneDictionary();
32:       assertEquals(11, naiveBayesMultinomialText0.getPeriodicPruning());
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_68_1575258301635/weka/classifiers/bayes/NaiveBayesMultinomialText_68_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:45:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_68_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:45:01.659 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[4];
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(11);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(11, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 03:45:01.683 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_69_1575258301660/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_69_1575258301660/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.java]]
[MASTER] 03:45:01.683 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.683 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 03:45:01.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 03:45:01.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 03:45:01.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 03:45:01.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 03:45:01.685 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_69_1575258301660/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:45:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_69_tmp__ESTest extends NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.1217186091313738
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
29:       Integer integer0 = new Integer(165);
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       linkedHashMap0.put(integer0, linkedHashMap1);
32:       naiveBayesMultinomialText0.setPeriodicPruning(165);
33:       naiveBayesMultinomialText0.pruneDictionary();
34:       assertEquals(165, naiveBayesMultinomialText0.getPeriodicPruning());
35:   }
36: }
RegularFileObject[/tmp/EvoSuite_69_1575258301660/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:45:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:45:01.685 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(165);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.setPeriodicPruning(165);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(165, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 03:45:01.822 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_73_1575258301789/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_73_1575258301789/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.java]]
[MASTER] 03:45:01.822 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.822 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 03:45:01.822 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 03:45:01.822 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 03:45:01.822 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 03:45:01.823 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_73_1575258301789/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 03:45:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.MultilayerPerceptron;
18: import weka.core.Capabilities;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_73_tmp__ESTest extends NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.0349754054005227
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
33:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
34:       MultilayerPerceptron multilayerPerceptron0 = new MultilayerPerceptron();
35:       Capabilities.Capability capabilities_Capability0 = Capabilities.Capability.NO_CLASS;
36:       capabilities0.enable(capabilities_Capability0);
37:       testInstances0.setNumNominalValues(35);
38:       Capabilities capabilities1 = multilayerPerceptron0.getCapabilities();
39:       capabilities0.or(capabilities1);
40:       Instances instances0 = testInstances0.generate();
41:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
42:       naiveBayesMultinomialText1.buildClassifier(instances0);
43:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
44:       naiveBayesMultinomialText1.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
45:       // Undeclared exception!
46:       try { 
47:         naiveBayesMultinomialText1.toString();
48:         fail("Expecting exception: NullPointerException");
49:       
50:       } catch(NullPointerException e) {
51:          //
52:          // no message in exception (getMessage() returned null)
53:          //
54:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
55:       }
56:   }
57: }
RegularFileObject[/tmp/EvoSuite_73_1575258301789/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 03:45:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.core.MinkowskiDistance",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.estimators.Estimator$Builder",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.estimators.DiscreteEstimator",
141:       "weka.classifiers.functions.neural.NeuralConnection",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.filters.unsupervised.attribute.Center",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.classifiers.functions.neural.NeuralNode",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.estimators.PoissonEstimator",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.functions.MultilayerPerceptron",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.classifiers.functions.neural.LinearUnit",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.estimators.NormalEstimator",
178:       "weka.classifiers.functions.neural.NeuralMethod",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
182:       "weka.core.Stopwords",
183:       "weka.core.FastVector",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.classifiers.functions.neural.SigmoidUnit",
186:       "weka.core.RevisionUtils",
187:       "weka.core.Instance",
188:       "weka.estimators.Estimator",
189:       "weka.core.ProtectedProperties",
190:       "weka.core.StringLocator",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.trees.DecisionStump",
195:       "weka.core.TechnicalInformation$Field",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Stopwords",
232:       "weka.core.Utils",
233:       "weka.core.neighboursearch.NearestNeighbourSearch",
234:       "weka.core.neighboursearch.LinearNNSearch",
235:       "weka.core.NormalizableDistance",
236:       "weka.core.EuclideanDistance",
237:       "weka.core.Range",
238:       "weka.core.AbstractInstance",
239:       "weka.core.SparseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
242:       "weka.core.SerializedObject",
243:       "weka.core.BinarySparseInstance",
244:       "weka.core.DenseInstance",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.core.Tag",
248:       "weka.classifiers.functions.SGDText",
249:       "weka.core.Option",
250:       "weka.core.RevisionUtils",
251:       "weka.classifiers.SingleClassifierEnhancer",
252:       "weka.classifiers.IteratedSingleClassifierEnhancer",
253:       "weka.classifiers.meta.AdditiveRegression",
254:       "weka.classifiers.trees.DecisionStump",
255:       "weka.classifiers.rules.ZeroR",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.stemmers.SnowballStemmer",
268:       "weka.attributeSelection.ASEvaluation",
269:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
270:       "weka.attributeSelection.PrincipalComponents",
271:       "weka.core.stemmers.LovinsStemmer",
272:       "weka.core.stemmers.IteratedLovinsStemmer",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
275:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.filters.Filter",
278:       "weka.filters.supervised.attribute.Discretize",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.Instances",
284:       "weka.estimators.Estimator",
285:       "weka.estimators.NormalEstimator",
286:       "weka.classifiers.bayes.NaiveBayesMultinomial",
287:       "weka.classifiers.functions.VotedPerceptron",
288:       "weka.core.tokenizers.AlphabeticTokenizer",
289:       "weka.classifiers.trees.LMT",
290:       "weka.classifiers.meta.RegressionByDiscretization",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.Discretize",
293:       "weka.classifiers.trees.J48",
294:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
295:       "weka.classifiers.meta.CVParameterSelection",
296:       "weka.core.FastVector",
297:       "weka.attributeSelection.WrapperSubsetEval",
298:       "weka.classifiers.functions.supportVector.Kernel",
299:       "weka.classifiers.functions.supportVector.StringKernel",
300:       "weka.classifiers.lazy.LWL",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.WekaException",
303:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
304:       "weka.core.Attribute",
305:       "weka.core.ProtectedProperties",
306:       "weka.classifiers.bayes.BayesNet",
307:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
308:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
309:       "weka.classifiers.bayes.net.search.local.K2",
310:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
311:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.converters.ArffLoader$ArffReader",
315:       "weka.classifiers.CostMatrix",
316:       "weka.core.neighboursearch.BallTree",
317:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
318:       "weka.core.neighboursearch.balltrees.BallSplitter",
319:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.classifiers.MultipleClassifiersCombiner",
322:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
323:       "weka.classifiers.meta.MultiScheme",
324:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
325:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
326:       "weka.classifiers.misc.SerializedClassifier",
327:       "weka.classifiers.meta.CostSensitiveClassifier",
328:       "weka.estimators.KernelEstimator",
329:       "weka.classifiers.functions.SMO",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.UnassignedClassException",
333:       "weka.core.UnsupportedAttributeTypeException",
334:       "weka.classifiers.trees.REPTree",
335:       "weka.attributeSelection.CfsSubsetEval",
336:       "weka.filters.AllFilter",
337:       "weka.core.tokenizers.NGramTokenizer",
338:       "weka.classifiers.lazy.IBk",
339:       "weka.classifiers.rules.OneR",
340:       "weka.classifiers.trees.m5.M5Base",
341:       "weka.classifiers.rules.M5Rules",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.filters.SimpleFilter",
344:       "weka.filters.SimpleStreamFilter",
345:       "weka.filters.MultiFilter",
346:       "weka.core.matrix.Matrix",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.filters.unsupervised.attribute.NominalToBinary",
349:       "weka.classifiers.functions.neural.SigmoidUnit",
350:       "weka.classifiers.functions.neural.LinearUnit",
351:       "weka.classifiers.functions.neural.NeuralConnection",
352:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.stemmers.Stemming",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.classifiers.rules.PART",
360:       "weka.classifiers.rules.part.MakeDecList",
361:       "weka.classifiers.meta.MultiClassClassifier",
362:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
363:       "weka.classifiers.functions.Logistic",
364:       "weka.classifiers.bayes.NaiveBayesUpdateable",
365:       "weka.attributeSelection.CorrelationAttributeEval",
366:       "weka.core.FindWithCapabilities",
367:       "weka.core.SingleIndex",
368:       "weka.classifiers.trees.j48.ClassifierTree",
369:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.ASSearch",
374:       "weka.attributeSelection.GreedyStepwise",
375:       "weka.attributeSelection.BestFirst",
376:       "weka.classifiers.functions.GaussianProcesses",
377:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
378:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
379:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
380:       "weka.classifiers.meta.RandomCommittee",
381:       "weka.classifiers.trees.RandomTree",
382:       "weka.estimators.DiscreteEstimator",
383:       "weka.classifiers.meta.Bagging",
384:       "weka.classifiers.functions.supportVector.Puk",
385:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.trees.RandomForest",
388:       "weka.classifiers.rules.DecisionTable",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.SimpleLogistic",
391:       "weka.classifiers.meta.AdaBoostM1",
392:       "weka.classifiers.meta.ClassificationViaRegression",
393:       "weka.classifiers.trees.M5P",
394:       "weka.core.SelectedTag",
395:       "weka.classifiers.functions.SMOreg",
396:       "weka.classifiers.functions.supportVector.RegOptimizer",
397:       "weka.classifiers.functions.supportVector.RegSMO",
398:       "weka.classifiers.functions.supportVector.RegSMOImproved",
399:       "weka.classifiers.functions.SimpleLinearRegression",
400:       "weka.core.AttributeStats",
401:       "weka.classifiers.meta.AttributeSelectedClassifier",
402:       "weka.attributeSelection.GainRatioAttributeEval",
403:       "weka.estimators.PoissonEstimator",
404:       "weka.core.Javadoc",
405:       "weka.core.ClassDiscovery",
406:       "weka.core.ClassCache",
407:       "weka.core.AllJavadoc",
408:       "weka.classifiers.meta.Vote",
409:       "weka.classifiers.functions.supportVector.RBFKernel",
410:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.attributeSelection.OneRAttributeEval",
413:       "weka.classifiers.rules.JRip",
414:       "weka.core.ListOptions",
415:       "weka.experiment.Stats",
416:       "weka.classifiers.functions.SGD",
417:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
418:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.Stacking",
421:       "weka.core.MinkowskiDistance",
422:       "weka.attributeSelection.ReliefFAttributeEval",
423:       "weka.estimators.Estimator$Builder"
424:     );
425:   }
426: }

[MASTER] 03:45:01.823 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
MultilayerPerceptron multilayerPerceptron0 = new MultilayerPerceptron();
Capabilities.Capability capabilities_Capability0 = Capabilities.Capability.NO_CLASS;
capabilities0.enable(capabilities_Capability0);
testInstances0.setNumNominalValues(35);
Capabilities capabilities1 = multilayerPerceptron0.getCapabilities();
capabilities0.or(capabilities1);
Instances instances0 = testInstances0.generate();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.buildClassifier(instances0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText1.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText1.toString();

[MASTER] 03:45:04.717 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:45:04.910 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 03:45:05.015 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 03:45:05.773 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:51:12.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:51:12.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:51:12.216 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:51:12.278 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
* Search finished after 300s and 49 generations, 43558 statements, best individual has fitness: 1880.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 635
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 441
* Number of covered goals: 429
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 678
* Number of covered goals: 635
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 110
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Generated 210 tests with total length 4055
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 04:01:50.714 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.66851875% of time used, but only 66/210 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
[MASTER] 04:03:24.698 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14213
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:04:12.471 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:04:12.491 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:04:12.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:04:15.433 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:04:16.221 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:04:16.223 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 04:04:23.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1149
[MASTER] 04:04:23.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1152
[MASTER] 04:04:23.968 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true
[MASTER] 04:04:23.968 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true
[MASTER] 04:04:23.969 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 449: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1149 - ReplaceComparisonOperator != null -> = null
[MASTER] 04:04:23.969 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 453: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceComparisonOperator <= -> <
[MASTER] 04:04:23.969 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 455: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceConstant - 0 -> 1
[MASTER] 04:04:23.971 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 04:04:23.972 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 04:04:23.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true in context: 
[MASTER] 04:04:23.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true in context: 
[MASTER] 04:07:10.778 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 257s and 262 generations, 154380 statements, best individual has fitness: 12312.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 116
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 565
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 116
* Generated 78 tests with total length 778
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 04:09:41.191 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:09:41.302 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:09:41.430 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:09:41.431 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14216
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1005
* Starting evolution
* Search finished after 202s and 243 generations, 104274 statements, best individual has fitness: 2800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Generated 87 tests with total length 224
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
