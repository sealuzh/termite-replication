* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 12623
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 157s and 69 generations, 57882 statements, best individual has fitness: 544.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 239
* Number of covered goals: 220
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 202
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 974
* Number of covered goals: 957
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 36
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 202
* Generated 160 tests with total length 1086
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 42%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/rmosa/tests/s1015/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 12623
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:51:09.892 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:51:09.914 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:51:09.915 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:51:09.954 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1015
* Starting evolution
[MASTER] 16:51:43.304 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 8184: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.SwitchTo(I)V:1553 - ReplaceComparisonOperator >= -> >
* Search finished after 299s and 71 generations, 49538 statements, best individual has fitness: 15112.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 981
* Number of covered goals: 572
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 1707
* Number of covered goals: 1077
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 434
* Number of covered goals: 217
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 1707
* Number of covered goals: 1076
* Generated 190 tests with total length 1467
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 16:57:54.681 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 16:57:54.682 [logback-1] WARN  JUnitAnalyzer - Failing test:
 PipedInputStream pipedInputStream0 = new PipedInputStream();
StringReader stringReader0 = new StringReader("zSuN]4[");
StringReader stringReader1 = new StringReader("0r\"C\"9l~HY$ttzuiu4a");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 8, 23);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 43, (-1859));
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
Token token0 = javaParserTokenManager1.getNextToken();
javaParserTokenManager0.SkipLexicalActions(token0);
assertEquals(1, javaCharStream1.bufpos);
assertEquals(74, token0.kind);


[MASTER] 16:57:55.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<0>
[MASTER] 16:57:55.318 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("4T0$+>AwQzE%%)Cg|");
StringReader stringReader1 = new StringReader("df_t");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 12, 2);
JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), 100);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
javaParserTokenManager0.getNextToken();
Token.GTToken token_GTToken0 = new Token.GTToken();
javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
assertEquals(3, javaCharStream2.bufpos);
assertEquals(103, javaCharStream2.getEndColumn());


[MASTER] 16:57:57.851 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<7> but was:<0>
[MASTER] 16:57:57.852 [logback-1] WARN  JUnitAnalyzer - Failing test:
 PipedInputStream pipedInputStream0 = new PipedInputStream();
StringBuffer stringBuffer0 = new StringBuffer(27);
StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
StringReader stringReader0 = new StringReader("false");
StringReader stringReader1 = new StringReader("5$lvfYpg}");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 27, 114, 114);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
assertEquals(7, javaCharStream0.bufpos);
assertEquals(121, javaCharStream0.getColumn());


[MASTER] 16:57:59.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 16:57:59.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("*m,vo>ELG,RB*.M");
StringReader stringReader1 = new StringReader("2B1");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 610, (-2295), 45);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 124, 3);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
assertEquals(2, javaCharStream0.bufpos);
assertEquals((-2293), javaCharStream0.getEndColumn());


[MASTER] 16:57:59.764 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<0>
[MASTER] 16:57:59.764 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
StringReader stringReader0 = new StringReader("9PeZ>MohBfIhr`>kM");
stringReader0.reset();
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1384), 100, 1453);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = javaParserTokenManager0.getNextToken();
javaParserTokenManager0.SkipLexicalActions(token0);
assertEquals(3, javaCharStream0.bufpos);
assertEquals(103, javaCharStream0.getEndColumn());


[MASTER] 16:58:00.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 16:58:00.347 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("*35_O?'+_JCg ");
stringReader0.reset();
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 66, 28);
javaCharStream0.BeginToken();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = javaParserTokenManager0.getNextToken();
assertEquals(2, javaCharStream0.bufpos);
assertEquals("35_", token0.toString());


[MASTER] 16:58:00.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<-1>
[MASTER] 16:58:00.432 [logback-1] WARN  JUnitAnalyzer - Failing test:
 PipedInputStream pipedInputStream0 = new PipedInputStream();
StringReader stringReader0 = new StringReader("zSuN]4[");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 1449, 68);
StringReader stringReader1 = new StringReader("~]'b");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-267), (-4372));
JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 27, 1449, 68);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
javaParserTokenManager0.getNextToken();
javaCharStream2.bufcolumn = javaParserTokenManager0.jjnewLexState;
assertEquals(3, javaCharStream2.getBeginColumn());

Token token0 = javaParserTokenManager0.getNextToken();
assertEquals(82, token0.kind);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/rmosa/tests/s1015/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 12625
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:19:33.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:19:33.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:19:33.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:19:33.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 203s and 256 generations, 277903 statements, best individual has fitness: 144.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 121
* Number of covered goals: 110
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Generated 47 tests with total length 411
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 86%
* Compiling and checking tests
[MASTER] 17:23:33.844 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test34 -> class java.lang.StackOverflowError: null
[MASTER] 17:23:33.846 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
SimpleNode simpleNode0 = new SimpleNode(0);
simpleNode0.jjtAddChild(simpleNode0, 0);
String string0 = ">=";
StringWriter stringWriter0 = new StringWriter(0);
simpleNode0.dump(string0, stringWriter0);

* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/rmosa/tests/s1015/19_jmca/evosuite-tests
* Done!

* Computation finished
