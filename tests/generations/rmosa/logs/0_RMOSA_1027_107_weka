* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18444
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:19:59.112 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:19:59.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:19:59.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:19:59.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:19:59.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:19:59.273 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 08:20:09.903 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 08:20:09.903 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 08:20:09.903 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: Line 676
[MASTER] 08:20:09.904 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 08:20:09.904 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 08:20:09.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 08:20:09.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 08:20:09.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch
[MASTER] 08:20:09.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 08:20:09.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 08:20:09.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 08:20:09.911 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 08:20:09.911 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 08:20:09.911 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:676 - ReplaceConstant - Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value -> 
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 08:20:09.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 08:20:09.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 08:20:09.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 08:20:09.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Positive
[MASTER] 08:20:09.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 08:20:09.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 08:20:09.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 08:20:09.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 08:20:09.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 08:20:09.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 08:20:09.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 08:20:09.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 08:20:09.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 08:20:09.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 08:20:09.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 08:20:09.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 08:20:09.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 08:20:09.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getNorm()D
[MASTER] 08:20:09.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 08:20:09.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 08:20:09.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 08:20:28.721 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 08:20:28.721 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 08:21:37.175 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 282s and 315 generations, 191600 statements, best individual has fitness: 1448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 307
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 163
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 112
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 160
* Generated 91 tests with total length 947
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 08:31:05.903 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1575361865864/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1575361865864/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.java]]
[MASTER] 08:31:05.903 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:31:05.903 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:31:05.908 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 08:31:05.908 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 08:31:05.909 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1575361865864/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 08:31:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.AbstractClassifier;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.misc.InputMappedClassifier;
18: import weka.core.DenseInstance;
19: import weka.core.Instance;
20: import weka.core.tokenizers.AlphabeticTokenizer;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_24_tmp__ESTest extends NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=1.8408398156653452
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       double[] doubleArray0 = new double[9];
33:       doubleArray0[1] = 3.0;
34:       AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
35:       doubleArray0[2] = 350.505771647142;
36:       doubleArray0[3] = 0.0;
37:       doubleArray0[4] = 0.0;
38:       doubleArray0[5] = (-630.68);
39:       doubleArray0[6] = (-1662.6070782);
40:       doubleArray0[7] = (-1049.921);
41:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
42:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
43:       naiveBayesMultinomialText0.reset();
44:       doubleArray0[8] = 5589.65;
45:       naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
46:       naiveBayesMultinomialText0.reset();
47:       naiveBayesMultinomialText0.setUseStopList(true);
48:       AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
49:       alphabeticTokenizer0.getRevision();
50:       naiveBayesMultinomialText0.getLowercaseTokens();
51:       InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
52:       DenseInstance denseInstance0 = new DenseInstance(0);
53:       try { 
54:         inputMappedClassifier0.constructMappedInstance(denseInstance0);
55:         fail("Expecting exception: NullPointerException");
56:       
57:       } catch(NullPointerException e) {
58:          //
59:          // no message in exception (getMessage() returned null)
60:          //
61:          verifyException("weka.classifiers.misc.InputMappedClassifier", e);
62:       }
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_24_1575361865864/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 08:31:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.trees.m5.M5Base",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.attributeSelection.CfsSubsetEval",
100:       "weka.core.DenseInstance",
101:       "weka.classifiers.trees.J48",
102:       "weka.classifiers.functions.LinearRegression",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.trees.m5.RuleNode",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.filters.supervised.attribute.NominalToBinary",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.attributeSelection.BestFirst",
130:       "weka.core.Summarizable",
131:       "weka.classifiers.trees.j48.ModelSelection",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
144:       "weka.core.Version",
145:       "weka.filters.unsupervised.attribute.RemoveUseless",
146:       "weka.core.Tag",
147:       "weka.classifiers.trees.j48.BinC45ModelSelection",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.core.scripting.JythonSerializableObject",
156:       "weka.classifiers.Classifier",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.WekaEnumeration",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.trees.j48.ClassifierTree",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.classifiers.trees.j48.PruneableClassifierTree",
167:       "weka.core.stemmers.LovinsStemmer",
168:       "weka.classifiers.Evaluation",
169:       "weka.classifiers.functions.supportVector.Kernel",
170:       "weka.attributeSelection.ASSearch",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.attributeSelection.StartSetHandler",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.core.Option",
178:       "weka.core.neighboursearch.PerformanceStats",
179:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.Matchable",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.classifiers.rules.M5Rules",
199:       "weka.core.EuclideanDistance",
200:       "weka.classifiers.meta.AttributeSelectedClassifier",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.AbstractInstance",
244:       "weka.core.SparseInstance",
245:       "weka.core.BinarySparseInstance",
246:       "weka.core.stemmers.LovinsStemmer",
247:       "weka.core.RevisionUtils",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.BIFReader",
251:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.NearestNeighbourSearch",
257:       "weka.core.neighboursearch.BallTree",
258:       "weka.core.NormalizableDistance",
259:       "weka.core.EuclideanDistance",
260:       "weka.core.Range",
261:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
262:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
263:       "weka.core.neighboursearch.balltrees.BallSplitter",
264:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
265:       "weka.core.DenseInstance",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.classifiers.bayes.NaiveBayesMultinomial",
269:       "weka.core.TestInstances",
270:       "weka.core.Instances",
271:       "weka.core.UnassignedClassException",
272:       "weka.core.SelectedTag",
273:       "weka.classifiers.bayes.NaiveBayes",
274:       "weka.core.tokenizers.NGramTokenizer",
275:       "weka.core.UnassignedDatasetException",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.WrapperSubsetEval",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.misc.SerializedClassifier",
283:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
284:       "weka.attributeSelection.PrincipalComponents",
285:       "weka.core.tokenizers.AlphabeticTokenizer",
286:       "weka.classifiers.SingleClassifierEnhancer",
287:       "weka.classifiers.misc.InputMappedClassifier",
288:       "weka.filters.Filter",
289:       "weka.core.Stopwords",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.filters.SimpleFilter",
292:       "weka.filters.SimpleStreamFilter",
293:       "weka.filters.MultiFilter",
294:       "weka.filters.AllFilter",
295:       "weka.classifiers.MultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.MultiScheme",
298:       "weka.classifiers.functions.supportVector.CachedKernel",
299:       "weka.classifiers.functions.supportVector.PolyKernel",
300:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
301:       "weka.filters.supervised.attribute.Discretize",
302:       "weka.classifiers.CostMatrix",
303:       "weka.classifiers.functions.GaussianProcesses",
304:       "weka.classifiers.rules.DecisionTable",
305:       "weka.attributeSelection.ASSearch",
306:       "weka.attributeSelection.BestFirst",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.core.WekaEnumeration",
310:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
311:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
312:       "weka.classifiers.trees.J48",
313:       "weka.classifiers.trees.j48.ClassifierTree",
314:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
315:       "weka.classifiers.meta.Vote",
316:       "weka.core.WekaException",
317:       "weka.core.UnsupportedAttributeTypeException",
318:       "weka.core.neighboursearch.balltrees.BallNode",
319:       "weka.estimators.Estimator",
320:       "weka.classifiers.IteratedSingleClassifierEnhancer",
321:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
322:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.meta.RandomSubSpace",
324:       "weka.classifiers.trees.REPTree",
325:       "weka.core.converters.ArffLoader$ArffReader",
326:       "weka.classifiers.lazy.LWL",
327:       "weka.core.neighboursearch.LinearNNSearch",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.trees.RandomForest",
330:       "weka.classifiers.trees.RandomTree",
331:       "weka.core.neighboursearch.PerformanceStats",
332:       "weka.estimators.PoissonEstimator",
333:       "weka.classifiers.meta.ClassificationViaRegression",
334:       "weka.classifiers.trees.m5.M5Base",
335:       "weka.classifiers.trees.M5P",
336:       "weka.classifiers.functions.LinearRegression",
337:       "weka.classifiers.functions.Logistic",
338:       "weka.classifiers.functions.SGD",
339:       "weka.core.neighboursearch.KDTree",
340:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
341:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
342:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
343:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
344:       "weka.core.stemmers.SnowballStemmer",
345:       "weka.classifiers.lazy.IBk",
346:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.attributeSelection.ReliefFAttributeEval",
349:       "weka.classifiers.functions.supportVector.Puk",
350:       "weka.estimators.KernelEstimator",
351:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
353:       "weka.classifiers.meta.Stacking",
354:       "weka.core.TechnicalInformation",
355:       "weka.core.TechnicalInformation$Type",
356:       "weka.core.TechnicalInformation$Field",
357:       "weka.classifiers.functions.SimpleLinearRegression",
358:       "weka.classifiers.meta.FilteredClassifier",
359:       "weka.filters.supervised.attribute.AttributeSelection",
360:       "weka.attributeSelection.AttributeSelection",
361:       "weka.attributeSelection.CfsSubsetEval",
362:       "weka.attributeSelection.GreedyStepwise",
363:       "weka.classifiers.rules.M5Rules",
364:       "weka.estimators.NormalEstimator",
365:       "weka.attributeSelection.GainRatioAttributeEval",
366:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
367:       "weka.classifiers.lazy.KStar",
368:       "weka.classifiers.meta.CVParameterSelection",
369:       "weka.core.FastVector",
370:       "weka.classifiers.meta.Bagging",
371:       "weka.classifiers.meta.AdaBoostM1",
372:       "weka.classifiers.functions.supportVector.RBFKernel",
373:       "weka.classifiers.meta.RandomCommittee",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.attributeSelection.OneRAttributeEval",
376:       "weka.core.FindWithCapabilities",
377:       "weka.core.SingleIndex",
378:       "weka.classifiers.rules.PART",
379:       "weka.classifiers.rules.part.MakeDecList",
380:       "weka.attributeSelection.CorrelationAttributeEval",
381:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
382:       "weka.classifiers.rules.OneR",
383:       "weka.core.Attribute$1",
384:       "weka.classifiers.functions.SMO",
385:       "weka.classifiers.trees.LMT",
386:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
387:       "weka.classifiers.bayes.net.ADNode",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.MultilayerPerceptron",
391:       "weka.filters.unsupervised.attribute.NominalToBinary",
392:       "weka.classifiers.functions.neural.SigmoidUnit",
393:       "weka.classifiers.functions.neural.LinearUnit",
394:       "weka.classifiers.functions.SMOreg",
395:       "weka.classifiers.functions.supportVector.RegOptimizer",
396:       "weka.classifiers.functions.supportVector.RegSMO",
397:       "weka.classifiers.functions.supportVector.RegSMOImproved",
398:       "weka.classifiers.bayes.NaiveBayesUpdateable",
399:       "weka.core.Queue",
400:       "weka.core.AttributeLocator",
401:       "weka.core.StringLocator",
402:       "weka.core.RelationalLocator",
403:       "weka.core.ContingencyTables",
404:       "weka.core.Queue$QueueNode",
405:       "weka.classifiers.rules.JRip",
406:       "weka.classifiers.meta.RegressionByDiscretization",
407:       "weka.filters.unsupervised.attribute.Discretize",
408:       "weka.core.SerializationHelper",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.core.matrix.Matrix",
411:       "weka.classifiers.meta.AttributeSelectedClassifier",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.functions.supportVector.StringKernel",
414:       "weka.classifiers.functions.VotedPerceptron",
415:       "weka.core.stemmers.Stemming",
416:       "weka.classifiers.meta.MultiClassClassifier",
417:       "weka.classifiers.functions.neural.NeuralConnection",
418:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
419:       "weka.core.AttributeStats",
420:       "weka.experiment.Stats",
421:       "weka.estimators.MahalanobisEstimator",
422:       "weka.core.Check",
423:       "weka.core.CheckOptionHandler",
424:       "weka.core.CheckGOE",
425:       "weka.core.ClassDiscovery",
426:       "weka.core.SpecialFunctions",
427:       "weka.core.Statistics",
428:       "weka.classifiers.meta.MultiClassClassifierUpdateable"
429:     );
430:   }
431: }

[MASTER] 08:31:05.911 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[1] = 3.0;
AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
doubleArray0[2] = 350.505771647142;
doubleArray0[3] = 0.0;
doubleArray0[4] = 0.0;
doubleArray0[5] = (-630.68);
doubleArray0[6] = (-1662.6070782);
doubleArray0[7] = (-1049.921);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.reset();
doubleArray0[8] = 5589.65;
naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
naiveBayesMultinomialText0.reset();
naiveBayesMultinomialText0.setUseStopList(true);
AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
alphabeticTokenizer0.getRevision();
naiveBayesMultinomialText0.getLowercaseTokens();
InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
DenseInstance denseInstance0 = new DenseInstance(0);
inputMappedClassifier0.constructMappedInstance(denseInstance0);

[MASTER] 08:31:06.401 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1575361866363/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1575361866363/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 08:31:06.401 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:31:06.401 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 08:31:06.402 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 08:31:06.402 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 08:31:06.404 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1575361866363/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 08:31:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.BinarySparseInstance;
21: import weka.core.Instance;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=0.4
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       double[] doubleArray0 = new double[0];
34:       naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
35:       boolean boolean0 = false;
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
38:       double[] doubleArray1 = new double[9];
39:       doubleArray1[0] = 16.0;
40:       doubleArray1[1] = 7.0;
41:       doubleArray1[2] = (-1254.5571);
42:       doubleArray1[3] = 16.0;
43:       doubleArray1[4] = 16.0;
44:       doubleArray1[5] = 16.0;
45:       doubleArray1[6] = 16.0;
46:       doubleArray1[7] = 16.0;
47:       doubleArray1[8] = 16.0;
48:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(16.0, doubleArray1);
49:       // Undeclared exception!
50:       try { 
51:         naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, false);
52:         fail("Expecting exception: RuntimeException");
53:       
54:       } catch(RuntimeException e) {
55:          //
56:          // DenseInstance doesn't have access to a dataset!
57:          //
58:          verifyException("weka.core.AbstractInstance", e);
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_35_1575361866363/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 08:31:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.trees.m5.M5Base",
95:       "weka.attributeSelection.SubsetEvaluator",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.attributeSelection.CfsSubsetEval",
100:       "weka.core.DenseInstance",
101:       "weka.classifiers.trees.J48",
102:       "weka.classifiers.functions.LinearRegression",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.trees.m5.RuleNode",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.filters.supervised.attribute.NominalToBinary",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.attributeSelection.BestFirst",
130:       "weka.core.Summarizable",
131:       "weka.classifiers.trees.j48.ModelSelection",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
144:       "weka.core.Version",
145:       "weka.filters.unsupervised.attribute.RemoveUseless",
146:       "weka.core.Tag",
147:       "weka.classifiers.trees.j48.BinC45ModelSelection",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.Range",
153:       "weka.core.Attribute$1",
154:       "weka.core.PartitionGenerator",
155:       "weka.core.scripting.JythonSerializableObject",
156:       "weka.classifiers.Classifier",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.estimators.PoissonEstimator",
161:       "weka.core.WekaEnumeration",
162:       "weka.core.tokenizers.WordTokenizer",
163:       "weka.classifiers.trees.j48.ClassifierTree",
164:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.classifiers.trees.j48.PruneableClassifierTree",
167:       "weka.core.stemmers.LovinsStemmer",
168:       "weka.classifiers.Evaluation",
169:       "weka.classifiers.functions.supportVector.Kernel",
170:       "weka.attributeSelection.ASSearch",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.attributeSelection.StartSetHandler",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.core.Option",
178:       "weka.core.neighboursearch.PerformanceStats",
179:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
180:       "weka.filters.Sourcable",
181:       "weka.core.Attribute",
182:       "weka.core.Stopwords",
183:       "weka.core.tokenizers.AlphabeticTokenizer",
184:       "weka.core.FastVector",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.Matchable",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.core.Randomizable",
197:       "weka.classifiers.functions.SGD",
198:       "weka.classifiers.rules.M5Rules",
199:       "weka.core.EuclideanDistance",
200:       "weka.classifiers.meta.AttributeSelectedClassifier",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.stemmers.Stemming",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.AbstractInstance",
244:       "weka.core.SparseInstance",
245:       "weka.core.BinarySparseInstance",
246:       "weka.core.stemmers.LovinsStemmer",
247:       "weka.core.RevisionUtils",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.bayes.BayesNet",
250:       "weka.classifiers.bayes.net.BIFReader",
251:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
252:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
253:       "weka.classifiers.bayes.net.search.local.K2",
254:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
255:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
256:       "weka.core.neighboursearch.NearestNeighbourSearch",
257:       "weka.core.neighboursearch.BallTree",
258:       "weka.core.NormalizableDistance",
259:       "weka.core.EuclideanDistance",
260:       "weka.core.Range",
261:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
262:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
263:       "weka.core.neighboursearch.balltrees.BallSplitter",
264:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
265:       "weka.core.DenseInstance",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.classifiers.bayes.NaiveBayesMultinomial",
269:       "weka.core.TestInstances",
270:       "weka.core.Instances",
271:       "weka.core.UnassignedClassException",
272:       "weka.core.SelectedTag",
273:       "weka.classifiers.bayes.NaiveBayes",
274:       "weka.core.tokenizers.NGramTokenizer",
275:       "weka.core.UnassignedDatasetException",
276:       "weka.attributeSelection.ASEvaluation",
277:       "weka.attributeSelection.WrapperSubsetEval",
278:       "weka.classifiers.rules.ZeroR",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.misc.SerializedClassifier",
283:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
284:       "weka.attributeSelection.PrincipalComponents",
285:       "weka.core.tokenizers.AlphabeticTokenizer",
286:       "weka.classifiers.SingleClassifierEnhancer",
287:       "weka.classifiers.misc.InputMappedClassifier",
288:       "weka.filters.Filter",
289:       "weka.core.Stopwords",
290:       "weka.core.neighboursearch.CoverTree",
291:       "weka.filters.SimpleFilter",
292:       "weka.filters.SimpleStreamFilter",
293:       "weka.filters.MultiFilter",
294:       "weka.filters.AllFilter",
295:       "weka.classifiers.MultipleClassifiersCombiner",
296:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
297:       "weka.classifiers.meta.MultiScheme",
298:       "weka.classifiers.functions.supportVector.CachedKernel",
299:       "weka.classifiers.functions.supportVector.PolyKernel",
300:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
301:       "weka.filters.supervised.attribute.Discretize",
302:       "weka.classifiers.CostMatrix",
303:       "weka.classifiers.functions.GaussianProcesses",
304:       "weka.classifiers.rules.DecisionTable",
305:       "weka.attributeSelection.ASSearch",
306:       "weka.attributeSelection.BestFirst",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.core.WekaEnumeration",
310:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
311:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
312:       "weka.classifiers.trees.J48",
313:       "weka.classifiers.trees.j48.ClassifierTree",
314:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
315:       "weka.classifiers.meta.Vote",
316:       "weka.core.WekaException",
317:       "weka.core.UnsupportedAttributeTypeException",
318:       "weka.core.neighboursearch.balltrees.BallNode",
319:       "weka.estimators.Estimator",
320:       "weka.classifiers.IteratedSingleClassifierEnhancer",
321:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
322:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.meta.RandomSubSpace",
324:       "weka.classifiers.trees.REPTree",
325:       "weka.core.converters.ArffLoader$ArffReader",
326:       "weka.classifiers.lazy.LWL",
327:       "weka.core.neighboursearch.LinearNNSearch",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.trees.RandomForest",
330:       "weka.classifiers.trees.RandomTree",
331:       "weka.core.neighboursearch.PerformanceStats",
332:       "weka.estimators.PoissonEstimator",
333:       "weka.classifiers.meta.ClassificationViaRegression",
334:       "weka.classifiers.trees.m5.M5Base",
335:       "weka.classifiers.trees.M5P",
336:       "weka.classifiers.functions.LinearRegression",
337:       "weka.classifiers.functions.Logistic",
338:       "weka.classifiers.functions.SGD",
339:       "weka.core.neighboursearch.KDTree",
340:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
341:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
342:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
343:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
344:       "weka.core.stemmers.SnowballStemmer",
345:       "weka.classifiers.lazy.IBk",
346:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
347:       "weka.classifiers.meta.LogitBoost",
348:       "weka.attributeSelection.ReliefFAttributeEval",
349:       "weka.classifiers.functions.supportVector.Puk",
350:       "weka.estimators.KernelEstimator",
351:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
353:       "weka.classifiers.meta.Stacking",
354:       "weka.core.TechnicalInformation",
355:       "weka.core.TechnicalInformation$Type",
356:       "weka.core.TechnicalInformation$Field",
357:       "weka.classifiers.functions.SimpleLinearRegression",
358:       "weka.classifiers.meta.FilteredClassifier",
359:       "weka.filters.supervised.attribute.AttributeSelection",
360:       "weka.attributeSelection.AttributeSelection",
361:       "weka.attributeSelection.CfsSubsetEval",
362:       "weka.attributeSelection.GreedyStepwise",
363:       "weka.classifiers.rules.M5Rules",
364:       "weka.estimators.NormalEstimator",
365:       "weka.attributeSelection.GainRatioAttributeEval",
366:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
367:       "weka.classifiers.lazy.KStar",
368:       "weka.classifiers.meta.CVParameterSelection",
369:       "weka.core.FastVector",
370:       "weka.classifiers.meta.Bagging",
371:       "weka.classifiers.meta.AdaBoostM1",
372:       "weka.classifiers.functions.supportVector.RBFKernel",
373:       "weka.classifiers.meta.RandomCommittee",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.attributeSelection.OneRAttributeEval",
376:       "weka.core.FindWithCapabilities",
377:       "weka.core.SingleIndex",
378:       "weka.classifiers.rules.PART",
379:       "weka.classifiers.rules.part.MakeDecList",
380:       "weka.attributeSelection.CorrelationAttributeEval",
381:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
382:       "weka.classifiers.rules.OneR",
383:       "weka.core.Attribute$1",
384:       "weka.classifiers.functions.SMO",
385:       "weka.classifiers.trees.LMT",
386:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
387:       "weka.classifiers.bayes.net.ADNode",
388:       "weka.classifiers.functions.SimpleLogistic",
389:       "weka.attributeSelection.InfoGainAttributeEval",
390:       "weka.classifiers.functions.MultilayerPerceptron",
391:       "weka.filters.unsupervised.attribute.NominalToBinary",
392:       "weka.classifiers.functions.neural.SigmoidUnit",
393:       "weka.classifiers.functions.neural.LinearUnit",
394:       "weka.classifiers.functions.SMOreg",
395:       "weka.classifiers.functions.supportVector.RegOptimizer",
396:       "weka.classifiers.functions.supportVector.RegSMO",
397:       "weka.classifiers.functions.supportVector.RegSMOImproved",
398:       "weka.classifiers.bayes.NaiveBayesUpdateable",
399:       "weka.core.Queue",
400:       "weka.core.AttributeLocator",
401:       "weka.core.StringLocator",
402:       "weka.core.RelationalLocator",
403:       "weka.core.ContingencyTables",
404:       "weka.core.Queue$QueueNode",
405:       "weka.classifiers.rules.JRip",
406:       "weka.classifiers.meta.RegressionByDiscretization",
407:       "weka.filters.unsupervised.attribute.Discretize",
408:       "weka.core.SerializationHelper",
409:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
410:       "weka.core.matrix.Matrix",
411:       "weka.classifiers.meta.AttributeSelectedClassifier",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.classifiers.functions.supportVector.StringKernel",
414:       "weka.classifiers.functions.VotedPerceptron",
415:       "weka.core.stemmers.Stemming",
416:       "weka.classifiers.meta.MultiClassClassifier",
417:       "weka.classifiers.functions.neural.NeuralConnection",
418:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
419:       "weka.core.AttributeStats",
420:       "weka.experiment.Stats",
421:       "weka.estimators.MahalanobisEstimator",
422:       "weka.core.Check",
423:       "weka.core.CheckOptionHandler",
424:       "weka.core.CheckGOE",
425:       "weka.core.ClassDiscovery",
426:       "weka.core.SpecialFunctions",
427:       "weka.core.Statistics",
428:       "weka.classifiers.meta.MultiClassClassifierUpdateable"
429:     );
430:   }
431: }

[MASTER] 08:31:06.404 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[0];
naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
boolean boolean0 = false;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
double[] doubleArray1 = new double[9];
doubleArray1[0] = 16.0;
doubleArray1[1] = 7.0;
doubleArray1[2] = (-1254.5571);
doubleArray1[3] = 16.0;
doubleArray1[4] = 16.0;
doubleArray1[5] = 16.0;
doubleArray1[6] = 16.0;
doubleArray1[7] = 16.0;
doubleArray1[8] = 16.0;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(16.0, doubleArray1);
naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, false);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18443
* Connecting to master process on port 18442
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:43:22.308 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:43:22.331 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:43:22.345 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:43:22.446 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:43:22.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:43:22.476 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:43:34.868 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:43:34.883 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:43:34.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:43:34.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 08:43:38.693 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 08:43:41.456 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.attributeIndicesTipText()Ljava/lang/String;: Line 686
[MASTER] 08:43:41.457 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.attributeIndicesTipText()Ljava/lang/String;: root-Branch
[MASTER] 08:43:41.461 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 268: weka.filters.unsupervised.attribute.Discretize.attributeIndicesTipText()Ljava/lang/String;:686 - ReplaceConstant - Specify range of attributes to act on. This is a comma separated list of attribute indices, with "first" and "last" valid values. Specify an inclusive range with "-". E.g: "first-3,5,6-10,last". -> 
[MASTER] 08:43:41.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.filters.unsupervised.attribute.Discretize.attributeIndicesTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 08:43:41.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.attributeIndicesTipText()Ljava/lang/String;
[MASTER] 08:43:41.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.attributeIndicesTipText()Ljava/lang/String;
[MASTER] 08:43:41.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.attributeIndicesTipText()Ljava/lang/String;: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:attributeIndicesTipText()Ljava/lang/String;
[MASTER] 08:45:41.773 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 226s and 128 generations, 90382 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 20 tests with total length 149
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 247s and 369 generations, 180624 statements, best individual has fitness: 3832.0
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 370
* Number of covered goals: 273
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 147
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 78%
* Total number of goals: 713
* Number of covered goals: 555
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 147
* Generated 87 tests with total length 748
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 08:50:25.972 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 08:50:26.725 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 08:50:52.135 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:50:52.136 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Attribute attribute0 = new Attribute((String) null);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("5.70001 == 5.7 ? ", arrayList0, 0);
attribute0.addRelation(instances0);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
ProtectedProperties protectedProperties1 = new ProtectedProperties(protectedProperties0);
Attribute attribute1 = new Attribute((String) null, instances0, protectedProperties1);
arrayList0.add(attribute1);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances0);

[MASTER] 08:50:52.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:50:52.496 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
Instances instances0 = new Instances("MV0[QJ46.N", arrayList1, 1370);
Attribute attribute0 = new Attribute("D[Z-9[6~");
attribute0.addRelation(instances0);
arrayList1.add(attribute0);
Discretize discretize1 = new Discretize();
double[] doubleArray0 = new double[0];
SparseInstance sparseInstance0 = new SparseInstance(2, doubleArray0);
Attribute attribute1 = new Attribute("@end", instances0, 12);
arrayList1.add(attribute1);
instances0.add((Instance) sparseInstance0);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18442
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:13:47.366 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:13:47.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:13:47.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:13:50.583 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:13:51.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:13:51.108 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 09:13:56.785 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 09:14:27.093 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 252s and 262 generations, 145185 statements, best individual has fitness: 12920.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 243
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 993
* Number of covered goals: 532
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Generated 71 tests with total length 600
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 09:19:15.829 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:19:16.939 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18443
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18446
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:27:01.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:27:01.981 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:27:01.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:27:02.548 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:27:03.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:27:03.457 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:27:05.660 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 09:27:05.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 09:27:05.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 09:27:05.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 09:27:05.719 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 09:27:05.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 09:27:05.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 09:27:05.721 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 09:27:05.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 09:27:05.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 09:27:05.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 09:27:11.095 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 09:27:31.011 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 260s and 243 generations, 108945 statements, best individual has fitness: 2488.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 217
* Number of covered goals: 193
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 70%
* Total number of goals: 428
* Number of covered goals: 300
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 70%
* Total number of goals: 428
* Number of covered goals: 299
* Generated 101 tests with total length 233
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 246s and 118 generations, 76428 statements, best individual has fitness: 15520.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 798
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 343
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 251
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 320
* Generated 165 tests with total length 1665
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 82%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 7%
[MASTER] 09:39:24.656 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 09:39:34.292 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:39:34.758 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:39:34.758 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 09:39:35.683 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:39:35.696 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 09:39:36.206 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 11
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18438
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:40:38.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:40:38.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:40:38.559 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:40:38.634 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Search finished after 328s and 49 generations, 49587 statements, best individual has fitness: 2000.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 637
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 441
* Number of covered goals: 425
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 624
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 244
* Number of covered goals: 107
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 411
* Generated 191 tests with total length 3824
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 09:51:50.307 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6739145833333333% of time used, but only 35/191 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
