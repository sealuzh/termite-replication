* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19152
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19153
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:28:16.528 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:28:16.546 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:28:16.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:28:16.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:28:16.734 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
[MASTER] 18:28:16.913 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:28:16.914 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 18:28:16.949 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Using seed 1016
* Starting evolution
[MASTER] 18:28:18.010 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 18:28:18.011 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 18:29:53.086 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:30:41.405 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 239s and 959 generations, 382868 statements, best individual has fitness: 600.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 74
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Generated 39 tests with total length 381
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Search finished after 390s and 436 generations, 586075 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 99 tests with total length 633
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 65%
* Compiling and checking tests
[MASTER] 18:35:45.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 18:35:45.909 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte byte0 = (byte)112;
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)112;
byteArray0[1] = (byte)112;
byteArray0[2] = (byte)112;
defaultNucleotideCodec0.toString(byteArray0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19148
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:50:40.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:50:40.511 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:50:40.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 18:50:40.539 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 18:50:40.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 18:50:40.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:50:40.781 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 18:51:08.474 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 242: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:525 - ReplaceComparisonOperator > -> >=
[MASTER] 18:51:11.988 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 538
[MASTER] 18:51:11.989 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: Line 625
[MASTER] 18:51:11.989 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.convertIntoRange(Ljava/util/regex/Matcher;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: Line 658
[MASTER] 18:51:11.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1932
[MASTER] 18:51:11.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1935
[MASTER] 18:51:11.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1938
[MASTER] 18:51:11.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1939
[MASTER] 18:51:11.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.<init>(IJ)V: Line 1800
[MASTER] 18:51:11.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.<init>(IJ)V: Line 1801
[MASTER] 18:51:11.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.<init>(IJ)V: Line 1802
[MASTER] 18:51:11.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.<init>(IJ)V: Line 1803
[MASTER] 18:51:11.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getLength()J: Line 1807
[MASTER] 18:51:11.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getBegin()J: Line 1820
[MASTER] 18:51:11.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J: Line 1831
[MASTER] 18:51:11.994 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 291: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:535 - ReplaceComparisonOperator > -> -2
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1371: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator + -> %
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1372: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator + -> -
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1373: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator + -> *
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1374: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator + -> /
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1378: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator - -> +
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1379: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator - -> %
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1380: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator - -> *
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1381: org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J:1831 - ReplaceArithmeticOperator - -> /
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1526: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z:1932 - ReplaceComparisonOperator != -> ==
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1528: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z:1935 - ReplaceComparisonOperator != null -> = null
[MASTER] 18:51:11.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1530: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z:1938 - ReplaceComparisonOperator == -> !=
[MASTER] 18:51:11.997 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;
[MASTER] 18:51:11.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: I4 Branch 113 IF_ACMPNE L1932 - true in context: 
[MASTER] 18:51:11.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: I23 Branch 115 IF_ACMPEQ L1938 - false in context: 
[MASTER] 18:51:11.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 18:51:11.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.convertIntoRange(Ljava/util/regex/Matcher;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: root-Branch in context: 
[MASTER] 18:51:11.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getLength()J: root-Branch in context: 
[MASTER] 18:51:11.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 18:51:12.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: I10 Branch 32 IFEQ L624 - false in context: org.jcvi.jillion.core.Range:parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;
[MASTER] 18:51:12.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: I12 Branch 114 IFNONNULL L1935 - true in context: 
[MASTER] 18:51:12.000 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I80 Branch 22 IFGT L535 - true in context: 
[MASTER] 18:51:20.620 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;)Lorg/jcvi/jillion/core/Range;
[MASTER] 18:51:30.261 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;
[MASTER] 18:51:30.265 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;
* Search finished after 183s and 91 generations, 41285 statements, best individual has fitness: 7464.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 632
* Number of covered goals: 454
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 426
* Number of covered goals: 319
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 802
* Number of covered goals: 436
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 426
* Number of covered goals: 316
* Generated 173 tests with total length 1118
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 18:55:09.579 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775788 would make range [4489 - ? ] beyond max allowed end offset
[MASTER] 18:55:09.580 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
long long0 = 4489L;
Range.of(range_CoordinateSystem0, 4489L, (-9223372036854775787L));

[MASTER] 18:55:10.617 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:55:10.618 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder();
Range range0 = range_Builder0.build();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
long long0 = range0.getBegin(range_CoordinateSystem0);
assertEquals(1L, long0);
assertFalse(range0.isEmpty());


[MASTER] 18:55:14.207 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:55:14.208 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-128L), 1L);
Range range0 = range_Builder0.build();
range0.intersection(range0);
assertTrue(range0.isEmpty());


[MASTER] 18:55:14.322 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 18:55:14.323 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder(9223372036854775807L, 9223372036854775807L);
Range range0 = range_Builder0.build();
List<Range> list0 = range0.complement(range0);
assertEquals(1, list0.size());
assertFalse(list0.contains(range0));


[MASTER] 18:55:20.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 18:55:20.449 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036854775807L);
range0.split(9223372036854775807L);

[MASTER] 18:55:21.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:55:21.315 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
long long0 = range0.getBegin(range_CoordinateSystem0);
assertEquals(2147483647L, long0);

range0.equals(range_CoordinateSystem1);
Range range1 = Range.of((-4439L));
long long1 = range1.getBegin();
assertEquals((-4439L), long1);

List<Range> list0 = range0.complement(range1);
assertFalse(range0.isEmpty());
assertEquals(1, list0.size());


[MASTER] 18:55:22.557 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:55:22.558 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(4294967295L);
Object object0 = new Object();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 2022L, 4294967295L);
boolean boolean0 = range0.equals(range1);
assertTrue(range0.isEmpty());

Long long0 = new Long(127L);
Range range2 = Range.of(range_CoordinateSystem0, 390L, 4294965273L);
boolean boolean1 = range1.equals(range2);
assertTrue(boolean1 == boolean0);
assertFalse(boolean1);


[MASTER] 18:55:22.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:55:22.916 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 32767L, 32767L);
Long long0 = new Long(32767L);
Object object0 = new Object();
Range range1 = Range.of(32767L);
boolean boolean0 = range1.intersects(range0);
assertTrue(range1.equals((Object)range0));
assertNotSame(range1, range0);
assertFalse(boolean0);


[MASTER] 18:55:23.761 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:55:23.762 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(4294967295L);
Object object0 = new Object();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 2022L, 4294967295L);
boolean boolean0 = range0.equals(range1);
assertFalse(boolean0);
assertTrue(range0.isEmpty());

long long0 = range1.getBegin(range_CoordinateSystem0);
assertEquals(2022L, long0);

Long long1 = new Long(127L);
range1.equals(range1);
assertFalse(range1.equals((Object)range0));


[MASTER] 18:55:24.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:55:24.102 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 9223372036854775807L, 9223372036854775807L);
String string0 = range1.toString(range_CoordinateSystem0);
assertEquals("[ 9223372036854775807 .. 9223372036854775807 ]/RB", string0);

range0.equals((Object) null);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.ZERO_BASED;
long long0 = range1.getBegin(range_CoordinateSystem1);
assertTrue(range1.equals((Object)range0));
assertEquals(9223372036854775806L, long0);


* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19146
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:56:13.345 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:56:13.418 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:56:13.435 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:56:13.520 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:56:13.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:56:13.562 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:56:13.777 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:56:13.778 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:56:13.780 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:56:13.780 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:56:13.787 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:56:13.788 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:56:13.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:56:13.804 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:56:13.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Search finished after 207s and 1172 generations, 160346 statements, best individual has fitness: 128.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 93
* Number of covered goals: 88
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Generated 29 tests with total length 118
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/rmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
