* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 10600
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:12:02.598 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:12:02.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:12:02.852 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:12:02.857 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 22:13:56.927 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 209s and 959 generations, 408859 statements, best individual has fitness: 592.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 74
* Number of covered goals: 41
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Generated 36 tests with total length 303
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 10601
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:26:29.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:26:29.459 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:26:29.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:26:29.559 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:26:29.572 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:26:29.573 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:26:29.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 22:26:29.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 22:26:29.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 22:26:29.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 22:26:29.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 22:26:29.765 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 22:26:29.766 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 22:26:29.795 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 22:26:29.797 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
* Search finished after 490s and 1172 generations, 1457975 statements, best individual has fitness: 64.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Generated 29 tests with total length 150
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 22:34:51.236 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 22:34:51.237 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NucleotideSequence nucleotideSequence0 = mock(NucleotideSequence.class, new ViolatedAssumptionAnswer());
doReturn(2147483647L).when(nucleotideSequence0).getLength();
QualitySequence qualitySequence0 = mock(QualitySequence.class, new ViolatedAssumptionAnswer());
ArtificialPhd artificialPhd0 = ArtificialPhd.createNewbler454Phd("O", nucleotideSequence0, qualitySequence0);
PhdBuilder phdBuilder0 = new PhdBuilder(artificialPhd0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 10599
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 10606
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:49:19.236 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:49:19.328 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:49:19.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:49:19.445 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 22:49:21.084 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:49:21.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:49:21.130 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 22:49:21.130 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 22:49:21.131 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 22:49:21.244 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:49:21.245 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 22:49:33.662 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 22:49:33.662 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 22:50:00.633 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z: Line 898
[MASTER] 22:50:00.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 541: org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z:898 - ReplaceComparisonOperator >= -> ==
[MASTER] 22:50:00.642 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z
[MASTER] 22:50:00.643 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z: I31 Branch 58 IFGE L898 - true in context: org.jcvi.jillion.core.Range:endsBefore(Lorg/jcvi/jillion/core/Range;)Z
[MASTER] 22:50:00.643 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z: I3 Branch 57 IFNONNULL L894 - true in context: org.jcvi.jillion.core.Range:endsBefore(Lorg/jcvi/jillion/core/Range;)Z
[MASTER] 22:50:01.390 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 22:50:29.540 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 544
[MASTER] 22:50:29.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.<init>(JJ)V: Line 1974
[MASTER] 22:50:29.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.<init>(JJ)V: Line 1975
[MASTER] 22:50:29.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.<init>(JJ)V: Line 1976
[MASTER] 22:50:29.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.<init>(JJ)V: Line 1977
[MASTER] 22:50:29.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getLength()J: Line 1981
[MASTER] 22:50:29.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getBegin()J: Line 1994
[MASTER] 22:50:29.542 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J: Line 2005
[MASTER] 22:50:29.544 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 325: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:541 - ReplaceComparisonOperator > -> -2
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1559: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator + -> %
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1560: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator + -> -
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1561: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator + -> *
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1562: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator + -> /
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1566: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator - -> +
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1567: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator - -> %
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1568: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator - -> *
[MASTER] 22:50:29.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1569: org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J:2005 - ReplaceArithmeticOperator - -> /
[MASTER] 22:50:29.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 22:50:29.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 22:50:29.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getLength()J: root-Branch in context: 
[MASTER] 22:50:29.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I112 Branch 24 IFGT L541 - true in context: 
[MASTER] 22:50:38.910 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: Line 1007
[MASTER] 22:50:38.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2205: org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z:1000 - ReplaceComparisonOperator != -> -1
[MASTER] 22:50:38.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2212: org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z:1007 - ReplaceComparisonOperator <= -> <
[MASTER] 22:50:38.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: I14 Branch 154 IFLE L1007 - true in context: 
[MASTER] 22:50:38.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: I6 Branch 153 IFNE L1000 - false in context: 
[MASTER] 22:50:49.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:532 - ReplaceComparisonOperator > -> >=
[MASTER] 22:51:04.651 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 565: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:947 - ReplaceComparisonOperator >= -> >
* Search finished after 192s and 91 generations, 41106 statements, best individual has fitness: 7216.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 632
* Number of covered goals: 461
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 426
* Number of covered goals: 327
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 802
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 36%
* Total number of goals: 107
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 36%
* Total number of goals: 107
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 426
* Number of covered goals: 325
* Generated 180 tests with total length 1160
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 317s and 436 generations, 495405 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 92 tests with total length 481
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 71%
* Compiling and checking tests
[MASTER] 22:55:23.488 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 22:55:23.488 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[10];
DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
Range range0 = Range.ofLength(0L);
defaultNucleotideCodec0.iterator(byteArray0, range0);
byte[] byteArray1 = new byte[8];
byteArray1[0] = (byte)102;
byteArray1[1] = (byte)12;
byteArray1[2] = (byte)64;
byteArray1[3] = (byte)102;
byteArray1[4] = (byte)3;
byteArray1[5] = (byte) (-98);
byteArray1[7] = (byte) (-39);
defaultNucleotideCodec0.toString(byteArray1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 22:56:11.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 22:56:11.541 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Comparators.values();
Long long0 = new Long(5L);
Range range0 = Range.ofLength(9223372036854772253L);
range0.split(9223372036854772253L);

[MASTER] 22:56:12.351 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775800 would make range [313 - ? ] beyond max allowed end offset
[MASTER] 22:56:12.352 [logback-1] WARN  JUnitAnalyzer - Failing test:
 long long0 = (-9223372036854775799L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range.of(range_CoordinateSystem0, 314L, (-9223372036854775799L));

[MASTER] 22:56:12.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:56:12.427 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder();
Range range0 = range_Builder0.build();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
long long0 = range0.getEnd(range_CoordinateSystem1);
assertEquals(0L, long0);

String string0 = range0.toString(range_CoordinateSystem0);
assertEquals("[ 0 .. -1 ]/0B", string0);
assertFalse(range0.isEmpty());


[MASTER] 22:56:12.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775808 would make range [255 - ? ] beyond max allowed end offset
[MASTER] 22:56:12.492 [logback-1] WARN  JUnitAnalyzer - Failing test:
 long long0 = 255L;
Range.Builder range_Builder0 = new Range.Builder(255L, (-9223372036854775808L));
range_Builder0.build();

[MASTER] 22:56:13.993 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 22:56:13.993 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775786L, 9223372036854775786L);
List<Range> list0 = range0.complement(range0);
assertFalse(list0.contains(range0));
assertEquals(1, list0.size());


[MASTER] 22:56:16.256 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:56:16.256 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(9223372034707292162L, 9223372034707292162L);
Range range1 = Range.of(9223372034707292162L);
range0.equals(range_CoordinateSystem0);
List<Range> list0 = range0.complement(range1);
assertTrue(list0.contains(range0));
assertSame(range1, range0);


[MASTER] 22:56:17.818 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:56:17.818 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372036854775781L, 9223372036854775781L);
Range range1 = Range.of(9223372036854775781L);
boolean boolean0 = range0.equals(range1);
assertTrue(boolean0);


[MASTER] 22:56:21.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:56:21.365 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 9223372034707292161L, 9223372034707292161L);
List<Range> list0 = range0.complement(range0);
assertTrue(list0.contains(range0));
assertEquals(1, list0.size());
assertFalse(range0.isEmpty());

Range range1 = Range.of(range_CoordinateSystem0, (-128L), 9223372034707292161L);
assertFalse(range1.isEmpty());


[MASTER] 22:56:23.957 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:56:23.957 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L);
List<Range> list0 = range0.complement(range0);
assertFalse(list0.contains(range0));

Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 9223372036854775807L, 9223372036854775807L);
boolean boolean0 = range0.isSubRangeOf(range1);
assertTrue(boolean0);

boolean boolean1 = range0.equals(range1);
assertFalse(range1.equals((Object)range0));
assertFalse(boolean1);


[MASTER] 22:56:24.080 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 22:56:24.080 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Long long0 = new Long(9223372036854772253L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
LinkedList<Range> linkedList0 = new LinkedList<Range>();
Range range0 = Range.of(range_CoordinateSystem0, 4294967295L, 9223372034707292161L);
range0.getLength();
linkedList0.add(range0);
linkedList0.add(range0);
assertTrue(linkedList0.contains(range0));

List<Range> list0 = range0.complementFrom(linkedList0);
assertEquals(1, list0.size());
assertFalse(list0.contains(range0));

range0.asRange();
assertFalse(range0.isEmpty());


[MASTER] 22:56:24.211 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:56:24.211 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(65559L);
Long long0 = new Long(65559L);
range0.equals("");
Object object0 = new Object();
Range range1 = Range.of(9223372036854710249L);
range0.isSubRangeOf(range1);
LinkedList<Range> linkedList0 = new LinkedList<Range>();
range0.getLength();
linkedList0.add(range1);
assertFalse(linkedList0.contains(range0));

linkedList0.add(range0);
List<Range> list0 = range0.complementFrom(linkedList0);
assertTrue(list0.contains(range0));


[MASTER] 22:56:24.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:56:24.272 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 67265L, 67265L);
Range.of(2439L);
Range range1 = Range.ofLength(67265L);
range0.equals((Object) null);
assertTrue(range0.equals((Object)range1));


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
