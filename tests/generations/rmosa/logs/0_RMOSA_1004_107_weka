* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10004
* Analyzing classpath: 
[MASTER] 01:46:09.561 [logback-2] ERROR ClientNodeImpl - Error when connecting to master via RMI
java.lang.SecurityException: Unprivileged thread "main" cannot add a privileged thread: failed to add "Statistics sender in client process"
Current privileged threads are: 
"pool-3-thread-1"
"Reference Handler"
	at org.evosuite.runtime.sandbox.MSecurityManager.addPrivilegedThread(MSecurityManager.java:396) ~[evosuite.jar:1.0.6]
	at org.evosuite.runtime.sandbox.Sandbox.addPrivilegedThread(Sandbox.java:92) ~[evosuite.jar:1.0.6]
	at org.evosuite.rmi.service.ClientNodeImpl.init(ClientNodeImpl.java:369) ~[evosuite.jar:1.0.6]
	at org.evosuite.rmi.ClientServices.registerServices(ClientServices.java:68) [evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.run(ClientProcess.java:82) [evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.main(ClientProcess.java:203) [evosuite.jar:1.0.6]
[MASTER] 01:46:09.593 [logback-2] ERROR ClientProcess - Error when generating tests for: weka.classifiers.bayes.NaiveBayesMultinomialText with seed 1004. Configuration id : RMOSA
java.lang.RuntimeException: Could not connect to master process on port 10004
	at org.evosuite.ClientProcess.run(ClientProcess.java:87) ~[evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.main(ClientProcess.java:203) ~[evosuite.jar:1.0.6]
[MASTER] 01:46:10.030 [main] ERROR ExternalProcessHandler - Class weka.classifiers.bayes.NaiveBayesMultinomialText. Lost connection with clients.
ClientNode: INITIALIZATION

java.rmi.UnmarshalException: Error unmarshaling return header; nested exception is: 
	java.io.EOFException
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:236) ~[na:1.8.0_201]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_201]
	at com.sun.proxy.$Proxy7.waitUntilFinished(Unknown Source) ~[na:na]
	at org.evosuite.utils.ExternalProcessHandler.waitForResult(ExternalProcessHandler.java:608) ~[evosuite.jar:1.0.6]
	at org.evosuite.executionmode.TestGeneration.generateTests(TestGeneration.java:498) [evosuite.jar:1.0.6]
	at org.evosuite.executionmode.TestGeneration.executeTestGeneration(TestGeneration.java:79) [evosuite.jar:1.0.6]
	at org.evosuite.EvoSuite.parseCommandLine(EvoSuite.java:269) [evosuite.jar:1.0.6]
	at org.evosuite.EvoSuite.main(EvoSuite.java:302) [evosuite.jar:1.0.6]
Caused by: java.io.EOFException: null
	at java.io.DataInputStream.readByte(DataInputStream.java:267) ~[na:1.8.0_201]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:222) ~[na:1.8.0_201]
	... 9 common frames omitted
* Computation finished
[MASTER] 01:46:10.159 [main] ERROR SearchStatistics - No statistics has been saved because EvoSuite failed to generate any test case
[MASTER] 01:46:10.259 [main] ERROR TestGeneration - failed to write statistics data
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10009
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10008
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:01:05.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:01:05.360 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:01:05.361 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:01:06.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:01:07.230 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:01:07.243 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 02:01:09.130 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 02:01:09.162 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 02:01:09.162 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 02:01:09.163 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 02:01:09.164 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 02:01:09.164 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 02:01:09.166 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 02:01:09.168 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 02:01:09.169 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 02:01:09.229 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 02:01:09.246 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 02:01:13.819 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 02:01:45.472 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 02:02:20.640 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.updateStatsForClassifier([DLweka/core/Instance;)V
[MASTER] 02:02:20.641 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateStatsForClassifier([DLweka/core/Instance;)V
[MASTER] 02:02:27.077 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 226s and 118 generations, 68220 statements, best individual has fitness: 14864.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 807
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 365
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 66
* Number of covered goals: 66
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 267
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 355
* Generated 172 tests with total length 1839
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 312s and 243 generations, 116576 statements, best individual has fitness: 2704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 192
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Generated 97 tests with total length 262
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 02:11:03.200 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_101_1575252663174/weka/classifiers/Evaluation_101_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_101_1575252663174/weka/classifiers/Evaluation_101_tmp__ESTest_scaffolding.java]]
[MASTER] 02:11:03.200 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:11:03.200 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 02:11:03.203 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_101_tmp__ESTest: 34
[MASTER] 02:11:03.204 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_101_1575252663174/weka/classifiers/Evaluation_101_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 02:11:03 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.classifiers.CostMatrix;
14: import weka.classifiers.Evaluation;
15: import weka.core.Instances;
16: import weka.core.TestInstances;
17: import weka.core.converters.C45Loader;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class Evaluation_101_tmp__ESTest extends Evaluation_101_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=0.45454545454545453
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       TestInstances testInstances0 = new TestInstances();
29:       Instances instances0 = testInstances0.generate();
30:       Evaluation evaluation0 = new Evaluation(instances0, (CostMatrix) null);
31:       evaluation0.rootRelativeSquaredError();
32:       C45Loader c45Loader0 = new C45Loader();
33:       double double0 = evaluation0.m_MinTarget;
34:       assertNotEquals(double0, double1, 0.01);
35:   }
36: }
RegularFileObject[/tmp/EvoSuite_101_1575252663174/weka/classifiers/Evaluation_101_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 02:11:03 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_101_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_101_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
91:       "weka.core.converters.TextDirectoryLoader",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.filters.UnsupervisedFilter",
95:       "weka.core.neighboursearch.BallTree",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.core.converters.DatabaseConverter",
99:       "weka.classifiers.trees.J48",
100:       "weka.classifiers.functions.SimpleLinearRegression",
101:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "weka.estimators.UnivariateIntervalEstimator",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.converters.JSONLoader",
106:       "weka.estimators.IncrementalEstimator",
107:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$11",
108:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$10",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.NormalizableDistance",
111:       "weka.core.TechnicalInformation$Type",
112:       "weka.core.Copyable",
113:       "weka.core.BinarySparseInstance",
114:       "weka.filters.supervised.attribute.NominalToBinary",
115:       "weka.core.SerializedObject",
116:       "weka.clusterers.UpdateableClusterer",
117:       "weka.core.AdditionalMeasureProducer",
118:       "weka.core.neighboursearch.balltrees.BallNode",
119:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
120:       "weka.core.OptionHandlerJavadoc",
121:       "weka.classifiers.pmml.consumer.PMMLClassifier",
122:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction$6",
123:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction$4",
124:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction$5",
125:       "weka.classifiers.misc.InputMappedClassifier",
126:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction$2",
127:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction$3",
128:       "weka.experiment.ResultProducer",
129:       "weka.classifiers.functions.neural.NeuralConnection",
130:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction$1",
131:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$1",
132:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$2",
133:       "weka.core.Version",
134:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
135:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$9",
136:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$7",
137:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$8",
138:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$5",
139:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$6",
140:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$3",
141:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$4",
142:       "weka.core.neighboursearch.CoverTree",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.core.converters.ArffLoader",
145:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.classifiers.functions.neural.NeuralNode",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Attribute$1",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.PartitionGenerator",
153:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
154:       "weka.core.SparseInstance",
155:       "weka.attributeSelection.AttributeTransformer",
156:       "weka.core.pmml.PMMLModel",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.functions.MultilayerPerceptron",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.classifiers.pmml.consumer.GeneralRegression",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.classifiers.functions.VotedPerceptron",
164:       "weka.classifiers.trees.j48.PruneableClassifierTree",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.converters.CSVLoader",
168:       "weka.classifiers.functions.neural.LinearUnit",
169:       "weka.classifiers.evaluation.ThresholdCurve",
170:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
171:       "weka.core.converters.URLSourcedLoader",
172:       "weka.core.converters.FileSourcedConverter",
173:       "weka.core.neighboursearch.LinearNNSearch",
174:       "weka.core.neighboursearch.PerformanceStats",
175:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
176:       "weka.estimators.UnivariateKernelEstimator",
177:       "weka.core.UnassignedDatasetException",
178:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
179:       "weka.core.RevisionUtils",
180:       "weka.core.converters.Loader",
181:       "weka.estimators.Estimator",
182:       "weka.core.ProtectedProperties",
183:       "weka.core.converters.C45Loader",
184:       "weka.core.StringLocator",
185:       "weka.core.AttributeStats",
186:       "weka.core.GlobalInfoJavadoc",
187:       "weka.classifiers.trees.DecisionStump",
188:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
189:       "weka.estimators.UnivariateQuantileEstimator",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.classifiers.trees.LMT",
193:       "weka.classifiers.rules.M5Rules",
194:       "weka.core.EuclideanDistance",
195:       "weka.core.Instances",
196:       "weka.core.converters.AbstractFileLoader",
197:       "weka.classifiers.bayes.NaiveBayesMultinomial",
198:       "weka.classifiers.bayes.net.BIFReader",
199:       "weka.classifiers.bayes.net.ParentSet",
200:       "weka.core.converters.DatabaseConnection",
201:       "weka.core.TechnicalInformation",
202:       "weka.core.UnsupportedAttributeTypeException",
203:       "weka.core.RevisionHandler",
204:       "weka.experiment.Stats",
205:       "weka.classifiers.pmml.consumer.GeneralRegression$ModelType",
206:       "weka.classifiers.rules.OneR$OneRRule",
207:       "weka.classifiers.xml.XMLClassifier",
208:       "weka.filters.Filter",
209:       "weka.filters.supervised.attribute.Discretize",
210:       "weka.core.TestInstances",
211:       "weka.core.DistanceFunction",
212:       "weka.attributeSelection.AttributeEvaluator",
213:       "org.pentaho.packageManagement.Package",
214:       "weka.classifiers.trees.m5.M5Base",
215:       "weka.attributeSelection.SubsetEvaluator",
216:       "weka.classifiers.CostMatrix",
217:       "weka.classifiers.bayes.net.search.local.K2",
218:       "weka.core.logging.Logger$Level",
219:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
220:       "weka.classifiers.functions.LinearRegression",
221:       "weka.core.converters.IncrementalConverter",
222:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
223:       "weka.classifiers.meta.LogitBoost",
224:       "weka.classifiers.bayes.NaiveBayes",
225:       "weka.estimators.Estimator$Builder",
226:       "weka.core.EnvironmentHandler",
227:       "weka.classifiers.trees.j48.C45ModelSelection",
228:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction",
229:       "weka.classifiers.trees.m5.RuleNode",
230:       "weka.core.RelationalLocator",
231:       "weka.core.Utils",
232:       "weka.core.tokenizers.Tokenizer",
233:       "weka.core.NoSupportForMissingValuesException",
234:       "weka.classifiers.UpdateableClassifier",
235:       "weka.core.MultiInstanceCapabilitiesHandler",
236:       "weka.core.Capabilities",
237:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
238:       "weka.core.AttributeLocator",
239:       "weka.core.converters.SVMLightLoader",
240:       "weka.classifiers.functions.supportVector.CachedKernel",
241:       "weka.classifiers.pmml.consumer.GeneralRegression$Distribution",
242:       "weka.classifiers.meta.RegressionByDiscretization",
243:       "weka.core.Summarizable",
244:       "weka.attributeSelection.BestFirst",
245:       "weka.classifiers.trees.j48.ModelSelection",
246:       "org.pentaho.packageManagement.PackageManager$1",
247:       "weka.core.Drawable",
248:       "weka.core.matrix.Matrix",
249:       "weka.classifiers.ConditionalDensityEstimator",
250:       "weka.core.CapabilitiesHandler",
251:       "weka.core.pmml.MiningSchema",
252:       "weka.classifiers.trees.REPTree",
253:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
254:       "weka.attributeSelection.ASEvaluation",
255:       "weka.core.AbstractInstance",
256:       "weka.core.scripting.JythonObject",
257:       "weka.core.SelectedTag",
258:       "org.pentaho.packageManagement.DefaultPackage",
259:       "weka.estimators.DiscreteEstimator",
260:       "weka.classifiers.bayes.NaiveBayesUpdateable",
261:       "weka.core.neighboursearch.balltrees.BallSplitter",
262:       "weka.classifiers.bayes.BayesNet",
263:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
264:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
265:       "weka.core.converters.AbstractLoader",
266:       "weka.classifiers.trees.lmt.ResidualModelSelection",
267:       "weka.filters.unsupervised.attribute.RemoveUseless",
268:       "weka.core.converters.BatchConverter",
269:       "weka.core.Tag",
270:       "weka.classifiers.IteratedSingleClassifierEnhancer",
271:       "weka.classifiers.trees.j48.BinC45ModelSelection",
272:       "weka.estimators.UnivariateDensityEstimator",
273:       "weka.core.OptionHandler",
274:       "weka.core.Range",
275:       "weka.core.scripting.JythonSerializableObject",
276:       "weka.classifiers.Classifier",
277:       "weka.core.Capabilities$Capability",
278:       "org.pentaho.packageManagement.PackageManager",
279:       "weka.core.WekaEnumeration",
280:       "weka.classifiers.meta.Bagging",
281:       "weka.attributeSelection.ASSearch",
282:       "weka.core.WekaPackageManager",
283:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
284:       "weka.filters.SupervisedFilter",
285:       "weka.core.TechnicalInformationHandler",
286:       "weka.experiment.DatabaseUtils",
287:       "weka.classifiers.lazy.LWL",
288:       "weka.attributeSelection.StartSetHandler",
289:       "weka.classifiers.meta.CostSensitiveClassifier",
290:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
291:       "weka.core.Option",
292:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
293:       "weka.estimators.NormalEstimator",
294:       "weka.classifiers.functions.neural.NeuralMethod",
295:       "weka.filters.Sourcable",
296:       "weka.classifiers.meta.RandomSubSpace",
297:       "weka.core.Attribute",
298:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
299:       "weka.classifiers.rules.DecisionTable",
300:       "weka.core.FastVector",
301:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
302:       "weka.core.BatchPredictor",
303:       "weka.classifiers.functions.neural.SigmoidUnit",
304:       "weka.classifiers.SingleClassifierEnhancer",
305:       "weka.core.Instance",
306:       "weka.classifiers.functions.supportVector.PolyKernel",
307:       "weka.classifiers.IntervalEstimator",
308:       "weka.classifiers.bayes.net.ADNode",
309:       "weka.core.Matchable",
310:       "weka.core.WeightedInstancesHandler",
311:       "weka.core.neighboursearch.NearestNeighbourSearch",
312:       "weka.classifiers.functions.GaussianProcesses",
313:       "weka.core.TechnicalInformation$Field",
314:       "weka.core.converters.DatabaseLoader",
315:       "weka.filters.unsupervised.attribute.Discretize",
316:       "weka.core.Javadoc",
317:       "weka.filters.unsupervised.attribute.Normalize",
318:       "weka.classifiers.rules.OneR",
319:       "weka.core.UnassignedClassException",
320:       "weka.classifiers.rules.ZeroR",
321:       "weka.filters.unsupervised.attribute.Standardize",
322:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
323:       "weka.classifiers.Sourcable",
324:       "weka.classifiers.evaluation.output.prediction.PlainText",
325:       "weka.core.xml.XMLSerialization",
326:       "weka.core.neighboursearch.TreePerformanceStats",
327:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer"
328:     );
329:   } 
330: 
331:   private static void resetClasses() {
332:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_101_tmp__ESTest_scaffolding.class.getClassLoader()); 
333: 
334:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
335:       "weka.classifiers.Evaluation",
336:       "weka.core.pmml.PMMLFactory$ModelType",
337:       "weka.core.pmml.PMMLFactory$1",
338:       "weka.core.xml.KOML",
339:       "weka.core.Version",
340:       "weka.core.Utils",
341:       "weka.core.TestInstances",
342:       "weka.core.Attribute",
343:       "weka.core.ProtectedProperties",
344:       "weka.core.Instances",
345:       "weka.core.AbstractInstance",
346:       "weka.core.DenseInstance",
347:       "weka.classifiers.AbstractClassifier",
348:       "weka.classifiers.bayes.BayesNet",
349:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
350:       "weka.core.Tag",
351:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
352:       "weka.classifiers.bayes.net.search.local.K2",
353:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
354:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
355:       "weka.classifiers.CostMatrix",
356:       "weka.attributeSelection.ASEvaluation",
357:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
358:       "weka.attributeSelection.PrincipalComponents",
359:       "weka.core.converters.AbstractLoader",
360:       "weka.core.converters.AbstractFileLoader",
361:       "weka.core.converters.SVMLightLoader",
362:       "weka.core.converters.ConverterUtils$DataSource",
363:       "weka.core.Environment",
364:       "weka.classifiers.SingleClassifierEnhancer",
365:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
366:       "weka.classifiers.meta.CostSensitiveClassifier",
367:       "weka.classifiers.rules.ZeroR",
368:       "weka.core.converters.ArffLoader$ArffReader",
369:       "weka.core.converters.ArffLoader",
370:       "weka.core.converters.LibSVMLoader",
371:       "weka.core.converters.MatlabLoader",
372:       "org.pentaho.packageManagement.PackageManager",
373:       "org.pentaho.packageManagement.DefaultPackageManager",
374:       "weka.core.WekaPackageManager",
375:       "weka.gui.GenericPropertiesCreator",
376:       "weka.core.ClassDiscovery",
377:       "weka.core.ClassCache",
378:       "weka.gui.GenericObjectEditor",
379:       "weka.core.converters.ConverterUtils",
380:       "weka.core.converters.DatabaseLoader",
381:       "weka.experiment.DatabaseUtils",
382:       "weka.core.converters.DatabaseConnection",
383:       "weka.classifiers.trees.DecisionStump",
384:       "weka.core.converters.CSVLoader",
385:       "weka.core.Range",
386:       "weka.core.converters.SerializedInstancesLoader",
387:       "weka.classifiers.lazy.IBk",
388:       "weka.core.neighboursearch.NearestNeighbourSearch",
389:       "weka.core.neighboursearch.LinearNNSearch",
390:       "weka.core.NormalizableDistance",
391:       "weka.core.EuclideanDistance",
392:       "weka.classifiers.functions.MultilayerPerceptron",
393:       "weka.core.FastVector",
394:       "weka.filters.Filter",
395:       "weka.filters.unsupervised.attribute.NominalToBinary",
396:       "weka.classifiers.functions.neural.SigmoidUnit",
397:       "weka.classifiers.functions.neural.LinearUnit",
398:       "weka.core.converters.TextDirectoryLoader",
399:       "weka.core.WekaEnumeration",
400:       "weka.core.Attribute$1",
401:       "weka.core.xml.XMLDocument",
402:       "weka.core.xml.XMLInstances",
403:       "weka.core.converters.XRFFLoader",
404:       "weka.core.converters.JSONLoader",
405:       "weka.classifiers.meta.RegressionByDiscretization",
406:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
407:       "weka.filters.unsupervised.attribute.Discretize",
408:       "weka.classifiers.trees.J48",
409:       "weka.filters.AllFilter",
410:       "weka.core.SparseInstance",
411:       "weka.core.BinarySparseInstance",
412:       "weka.core.Option",
413:       "weka.classifiers.functions.SimpleLogistic",
414:       "weka.classifiers.IteratedSingleClassifierEnhancer",
415:       "weka.classifiers.meta.AdditiveRegression",
416:       "weka.core.Capabilities",
417:       "weka.core.Capabilities$Capability",
418:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
419:       "weka.classifiers.evaluation.output.prediction.CSV",
420:       "weka.classifiers.meta.MultiClassClassifier",
421:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
422:       "weka.classifiers.functions.Logistic",
423:       "weka.core.neighboursearch.BallTree",
424:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
425:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
426:       "weka.core.neighboursearch.balltrees.BallSplitter",
427:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
428:       "weka.core.RevisionUtils",
429:       "weka.classifiers.lazy.LWL",
430:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
431:       "weka.classifiers.meta.AdaBoostM1",
432:       "weka.core.TechnicalInformation",
433:       "weka.core.TechnicalInformation$Type",
434:       "weka.core.TechnicalInformation$Field",
435:       "weka.filters.SimpleFilter",
436:       "weka.filters.SimpleStreamFilter",
437:       "weka.filters.MultiFilter",
438:       "weka.classifiers.evaluation.output.prediction.Null",
439:       "weka.core.neighboursearch.CoverTree",
440:       "weka.core.neighboursearch.KDTree",
441:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
442:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
443:       "weka.core.UnassignedDatasetException",
444:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
445:       "weka.core.tokenizers.Tokenizer",
446:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
447:       "weka.core.tokenizers.WordTokenizer",
448:       "weka.core.stemmers.NullStemmer",
449:       "weka.experiment.InstanceQuery",
450:       "weka.estimators.UnivariateKernelEstimator",
451:       "weka.classifiers.misc.InputMappedClassifier",
452:       "weka.core.converters.C45Loader",
453:       "weka.classifiers.rules.OneR",
454:       "weka.classifiers.rules.JRip",
455:       "weka.clusterers.AbstractClusterer",
456:       "weka.clusterers.RandomizableClusterer",
457:       "weka.clusterers.SimpleKMeans",
458:       "weka.classifiers.rules.DecisionTable",
459:       "weka.attributeSelection.ASSearch",
460:       "weka.attributeSelection.BestFirst",
461:       "weka.core.neighboursearch.balltrees.BallNode",
462:       "weka.classifiers.bayes.NaiveBayesMultinomial",
463:       "weka.core.SerializedObject",
464:       "weka.classifiers.trees.m5.M5Base",
465:       "weka.classifiers.trees.M5P",
466:       "weka.classifiers.trees.RandomTree",
467:       "weka.classifiers.functions.GaussianProcesses",
468:       "weka.classifiers.functions.supportVector.Kernel",
469:       "weka.classifiers.functions.supportVector.CachedKernel",
470:       "weka.classifiers.functions.supportVector.PolyKernel",
471:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
472:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
473:       "weka.classifiers.meta.Bagging",
474:       "weka.classifiers.trees.REPTree",
475:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
476:       "weka.classifiers.lazy.KStar",
477:       "weka.classifiers.functions.VotedPerceptron",
478:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
479:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
480:       "weka.classifiers.misc.SerializedClassifier",
481:       "weka.classifiers.functions.SimpleLinearRegression",
482:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
483:       "weka.experiment.Stats",
484:       "weka.core.UnassignedClassException",
485:       "weka.attributeSelection.OneRAttributeEval",
486:       "weka.attributeSelection.CorrelationAttributeEval",
487:       "weka.core.SelectedTag",
488:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
489:       "weka.core.Javadoc",
490:       "weka.core.OptionHandlerJavadoc",
491:       "weka.classifiers.MultipleClassifiersCombiner",
492:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
493:       "weka.classifiers.meta.MultiScheme",
494:       "weka.classifiers.meta.ClassificationViaRegression",
495:       "weka.estimators.Estimator",
496:       "weka.estimators.MahalanobisEstimator",
497:       "weka.classifiers.meta.LogitBoost",
498:       "weka.classifiers.meta.AttributeSelectedClassifier",
499:       "weka.attributeSelection.CfsSubsetEval",
500:       "weka.core.AllJavadoc",
501:       "weka.core.AttributeStats",
502:       "weka.clusterers.SingleClustererEnhancer",
503:       "weka.clusterers.FilteredClusterer",
504:       "weka.core.SpecialFunctions",
505:       "weka.core.Statistics",
506:       "weka.classifiers.functions.SMOreg",
507:       "weka.classifiers.functions.supportVector.RegOptimizer",
508:       "weka.classifiers.functions.supportVector.RegSMO",
509:       "weka.classifiers.functions.supportVector.RegSMOImproved",
510:       "weka.classifiers.meta.Vote",
511:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
512:       "weka.classifiers.pmml.consumer.PMMLClassifier",
513:       "weka.classifiers.pmml.consumer.Regression",
514:       "weka.classifiers.pmml.consumer.Regression$Normalization",
515:       "weka.core.FindWithCapabilities",
516:       "weka.core.SingleIndex",
517:       "weka.classifiers.evaluation.output.prediction.HTML",
518:       "weka.classifiers.evaluation.output.prediction.PlainText",
519:       "weka.classifiers.trees.RandomForest",
520:       "weka.classifiers.meta.FilteredClassifier",
521:       "weka.filters.supervised.attribute.AttributeSelection",
522:       "weka.attributeSelection.AttributeSelection",
523:       "weka.attributeSelection.GreedyStepwise",
524:       "weka.filters.supervised.attribute.Discretize",
525:       "weka.classifiers.trees.j48.ClassifierTree",
526:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
527:       "weka.core.tokenizers.NGramTokenizer",
528:       "weka.attributeSelection.ReliefFAttributeEval",
529:       "weka.classifiers.bayes.NaiveBayes",
530:       "weka.classifiers.bayes.NaiveBayesUpdateable",
531:       "weka.attributeSelection.WrapperSubsetEval",
532:       "weka.classifiers.rules.M5Rules",
533:       "weka.classifiers.evaluation.output.prediction.XML",
534:       "weka.clusterers.HierarchicalClusterer",
535:       "weka.classifiers.functions.LinearRegression",
536:       "weka.classifiers.meta.RandomCommittee",
537:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
538:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
539:       "weka.classifiers.meta.Stacking",
540:       "weka.classifiers.meta.CVParameterSelection",
541:       "weka.classifiers.trees.LMT",
542:       "weka.clusterers.Cobweb",
543:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
544:       "weka.classifiers.RandomizableClassifier",
545:       "weka.classifiers.functions.SGDText",
546:       "weka.estimators.DiscreteEstimator",
547:       "weka.core.WekaException",
548:       "weka.classifiers.evaluation.NumericPrediction",
549:       "weka.classifiers.evaluation.Prediction",
550:       "weka.estimators.NormalEstimator",
551:       "weka.clusterers.AbstractDensityBasedClusterer",
552:       "weka.clusterers.MakeDensityBasedClusterer",
553:       "weka.classifiers.meta.RandomSubSpace",
554:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
555:       "weka.classifiers.functions.SGD",
556:       "weka.clusterers.RandomizableDensityBasedClusterer",
557:       "weka.clusterers.EM",
558:       "weka.classifiers.functions.SMO",
559:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
560:       "weka.attributeSelection.Ranker",
561:       "weka.classifiers.functions.supportVector.Puk",
562:       "weka.core.Check",
563:       "weka.core.CheckGOE",
564:       "weka.attributeSelection.GainRatioAttributeEval",
565:       "weka.classifiers.rules.PART",
566:       "weka.classifiers.rules.part.MakeDecList",
567:       "weka.classifiers.functions.supportVector.StringKernel",
568:       "weka.core.matrix.Matrix",
569:       "weka.core.tokenizers.AlphabeticTokenizer",
570:       "weka.core.GlobalInfoJavadoc",
571:       "weka.classifiers.rules.OneR$OneRRule",
572:       "weka.estimators.PoissonEstimator",
573:       "weka.classifiers.pmml.consumer.GeneralRegression",
574:       "weka.classifiers.pmml.consumer.GeneralRegression$ModelType",
575:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction",
576:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction",
577:       "weka.classifiers.pmml.consumer.GeneralRegression$Distribution",
578:       "weka.core.UnsupportedAttributeTypeException",
579:       "weka.clusterers.FarthestFirst",
580:       "weka.core.ListOptions",
581:       "weka.attributeSelection.InfoGainAttributeEval",
582:       "weka.classifiers.evaluation.ThresholdCurve"
583:     );
584:   }
585: }

[MASTER] 02:11:03.204 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
Evaluation evaluation0 = new Evaluation(instances0, (CostMatrix) null);
evaluation0.rootRelativeSquaredError();
C45Loader c45Loader0 = new C45Loader();
double double0 = evaluation0.m_MinTarget;
assertNotEquals(double0, double1, 0.01);


[MASTER] 02:11:07.916 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 02:11:08.031 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 02:11:08.042 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 02:11:08.448 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 02:11:08.449 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 02:11:08.452 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 02:11:18.219 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 02:11:18.219 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TextDirectoryLoader textDirectoryLoader0 = new TextDirectoryLoader();
TextDirectoryLoader textDirectoryLoader1 = new TextDirectoryLoader();
Instances instances0 = textDirectoryLoader1.getDataSet();
CostMatrix costMatrix0 = null;
int[] intArray0 = new int[5];
intArray0[0] = 1111;
intArray0[1] = 499;
intArray0[2] = 499;
intArray0[3] = 499;
intArray0[4] = (-2369);
DenseInstance denseInstance0 = (DenseInstance)BallNode.calcCentroidPivot(1111, (-2369), intArray0, instances0);
BallNode.calcCentroidPivot(216, 63, intArray0, instances0);
Evaluation evaluation0 = new Evaluation(instances0, (CostMatrix) null);
denseInstance0.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10003
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10009
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:19:24.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:19:24.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:19:24.463 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:19:24.591 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:19:33.411 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:19:33.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:19:33.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:19:33.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 02:19:38.478 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 224s and 128 generations, 87423 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 117
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 330s and 49 generations, 50877 statements, best individual has fitness: 2272.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 616
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 414
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 625
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 244
* Number of covered goals: 117
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 396
* Generated 222 tests with total length 4444
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 02:30:46.325 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6899166666666666% of time used, but only 33/222 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10002
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10008
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:49:57.405 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:49:57.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:49:57.427 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:49:57.667 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:49:57.690 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:49:57.703 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 02:50:03.136 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:50:03.179 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:50:03.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:50:06.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:50:07.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:50:07.856 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 02:50:13.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 376
[MASTER] 02:50:13.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 377
[MASTER] 02:50:13.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 380
[MASTER] 02:50:13.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 382
[MASTER] 02:50:13.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 383
[MASTER] 02:50:13.169 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 386
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 388
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 389
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 392
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 394
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 395
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 398
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 400
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 401
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 402
[MASTER] 02:50:13.170 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 403
[MASTER] 02:50:13.174 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true
[MASTER] 02:50:13.175 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true
[MASTER] 02:50:13.175 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true
[MASTER] 02:50:13.175 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true
[MASTER] 02:50:13.175 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false
[MASTER] 02:50:13.175 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false
[MASTER] 02:50:13.176 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 47: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 0
[MASTER] 02:50:13.176 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 48: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 1
[MASTER] 02:50:13.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 49: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> -1
[MASTER] 02:50:13.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 50: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 69
[MASTER] 02:50:13.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 51: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 71
[MASTER] 02:50:13.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 52: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:377 - ReplaceComparisonOperator == -> -2
[MASTER] 02:50:13.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 55: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 0
[MASTER] 02:50:13.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 56: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 1
[MASTER] 02:50:13.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 57: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> -1
[MASTER] 02:50:13.178 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 58: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 2
[MASTER] 02:50:13.178 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 59: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 4
[MASTER] 02:50:13.178 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 60: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 0
[MASTER] 02:50:13.178 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 61: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 1
[MASTER] 02:50:13.178 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 62: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> -1
[MASTER] 02:50:13.178 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 63: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 77
[MASTER] 02:50:13.178 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 64: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 79
[MASTER] 02:50:13.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 66: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:383 - ReplaceComparisonOperator == -> -2
[MASTER] 02:50:13.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 70: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 0.0
[MASTER] 02:50:13.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 71: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 1.0
[MASTER] 02:50:13.180 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 72: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> -1.0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 73: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 3.0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 74: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 75: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 76: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> -1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 77: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 82
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 78: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 84
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 81: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:389 - ReplaceComparisonOperator == -> -2
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 86: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 87: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> -1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 88: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 2
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 89: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 90: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 91: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> -1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 92: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 78
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 93: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 80
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 97: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceComparisonOperator == -> -2
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 103: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 104: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 105: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> -1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 106: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 3
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 107: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 108: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 109: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> -1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 110: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 67
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 111: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 69
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 112: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 0
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 113: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 114: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> -1
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 115: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 68
[MASTER] 02:50:13.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 116: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 70
[MASTER] 02:50:13.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 117: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceComparisonOperator != -> ==
[MASTER] 02:50:13.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 118: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 1 -> 0
[MASTER] 02:50:13.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 120: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 0
[MASTER] 02:50:13.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 121: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 1
[MASTER] 02:50:13.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 122: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> -1
[MASTER] 02:50:13.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 123: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 79
[MASTER] 02:50:13.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 124: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 81
[MASTER] 02:50:13.191 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 02:50:13.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 02:50:13.194 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 02:50:13.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 02:50:13.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 02:50:13.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 02:50:13.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 02:50:13.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 02:51:03.693 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 214s and 262 generations, 102581 statements, best individual has fitness: 12960.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 247
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 993
* Number of covered goals: 515
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Generated 75 tests with total length 679
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 236s and 369 generations, 178272 statements, best individual has fitness: 4016.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 268
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 147
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 713
* Number of covered goals: 537
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 147
* Generated 87 tests with total length 726
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 02:56:35.684 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 02:56:36.455 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 02:56:59.364 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 02:56:59.365 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
double[][] doubleArray0 = new double[20][6];
discretize0.m_CutPoints = doubleArray0;
discretize0.m_ClassIndex = 0;
discretize0.getBinRangesString(0);
discretize0.m_DesiredWeightOfInstancesPerInterval = (double) 0;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("(-inf-0],(0-0],(0-0],(0-0],(0-0],(0-0],(0-inf)", arrayList0, 0);
Attribute attribute0 = new Attribute("@relation", instances0, (-3372));
arrayList0.add(attribute0);
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
discretize0.setInputFormat(instances0);

[MASTER] 02:56:59.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 02:56:59.956 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute("-B");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.add(attribute0);
Instances instances0 = new Instances(";Hu", arrayList0, 1);
Attribute attribute1 = new Attribute(";Hu", instances0);
arrayList0.add(attribute1);
ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
